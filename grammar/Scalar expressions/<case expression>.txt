<case expression> ::=
<case abbreviation>
| <case specification>
<case abbreviation> ::=
NULLIF <left paren> <value expression> <comma> <value expression> <right paren>
| COALESCE <left paren> <value expression>
 { <comma> <value expression> }... <right paren>
<case specification> ::=
<simple case>
| <searched case>
<simple case> ::=
CASE <case operand> <simple when clause>... [ <else clause> ] END
<searched case> ::=
CASE <searched when clause>... [ <else clause> ] END
<simple when clause> ::=
WHEN <when operand list> THEN <result>
<searched when clause> ::=
WHEN <search condition> THEN <result>
<else clause> ::=
ELSE <result>
<case operand> ::=
<row value predicand>
| <overlaps predicate part 1>
<when operand list> ::=
<when operand> [ { <comma> <when operand> }... ]
<when operand> ::=
<row value predicand>
| <comparison predicate part 2>
| <between predicate part 2>
| <in predicate part 2>
| <character like predicate part 2>
| <octet like predicate part 2>
| <similar predicate part 2>
| <regex like predicate part 2>
| <null predicate part 2>
| <quantified comparison predicate part 2>
| <normalized predicate part 2>
| <match predicate part 2>
| <overlaps predicate part 2>
| <distinct predicate part 2>
| <member predicate part 2>
| <submultiset predicate part 2>
| <set predicate part 2>
| <type predicate part 2>
<result> ::=
<result expression>
| NULL
<result expression> ::=
<value expression>