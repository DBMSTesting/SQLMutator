<numeric value function> ::=
<position expression>
| <regex occurrences function>
| <regex position expression>
| <extract expression>
| <length expression>
| <cardinality expression>
| <max cardinality expression>
| <absolute value expression>
| <modulus expression>
| <natural logarithm>
| <exponential function>
| <power function>
| <square root>
| <floor function>
| <ceiling function>
| <width bucket function>
<position expression> ::=
<character position expression>
| <binary position expression>
<regex occurrences function> ::=
OCCURRENCES_REGEX <left paren>
<XQuery pattern> [ FLAG <XQuery option flag> ]
IN <regex subject string>
 [ FROM <start position> ]
 [ USING <char length units> ]
<right paren>
<XQuery pattern> ::=
<character value expression>
<XQuery option flag> ::=
<character value expression>
<regex subject string> ::=
<character value expression>
<regex position expression> ::=
POSITION_REGEX <left paren>
 [ <regex position start or after> ]
<XQuery pattern> [ FLAG <XQuery option flag> ]
IN <regex subject string>
 [ FROM <start position> ]
 [ USING <char length units> ]
 [ OCCURRENCE <regex occurrence> ]
  [ GROUP <regex capture group> ]
<right paren>
<regex position start or after> ::=
START
| AFTER
<regex occurrence> ::=
<numeric value expression>
<regex capture group> ::=
<numeric value expression>
<character position expression> ::=
POSITION <left paren> <character value expression 1> IN <character value expression 2>
 [ USING <char length units> ] <right paren>
<character value expression 1> ::=
<character value expression>
<character value expression 2> ::=
<character value expression>
<binary position expression> ::=
POSITION <left paren> <binary value expression> IN <binary value expression> <right paren>
<length expression> ::=
<char length expression>
| <octet length expression>
<char length expression> ::=
{ CHAR_LENGTH | CHARACTER_LENGTH } <left paren> <character value expression>
 [ USING <char length units> ] <right paren>
<octet length expression> ::=
OCTET_LENGTH <left paren> <string value expression> <right paren>
<extract expression> ::=
EXTRACT <left paren> <extract field> FROM <extract source> <right paren>
<extract field> ::=
<primary datetime field>
| <time zone field>
<time zone field> ::=
TIMEZONE_HOUR
| TIMEZONE_MINUTE
<extract source> ::=
<datetime value expression>
| <interval value expression>
<cardinality expression> ::=
CARDINALITY <left paren> <collection value expression> <right paren>
<max cardinality expression> ::=
ARRAY_MAX_CARDINALITY <left paren> <array value expression> <right paren>
<absolute value expression> ::=
ABS <left paren> <numeric value expression> <right paren>
<modulus expression> ::=
MOD <left paren> <numeric value expression dividend> <comma>
<numeric value expression divisor> <right paren>
<numeric value expression dividend> ::=
<numeric value expression>
<numeric value expression divisor> ::=
<numeric value expression>
<natural logarithm> ::=
LN <left paren> <numeric value expression> <right paren>
<exponential function> ::=
EXP <left paren> <numeric value expression> <right paren>
<power function> ::=
POWER <left paren> <numeric value expression base> <comma>
<numeric value expression exponent> <right paren>
<numeric value expression base> ::=
<numeric value expression>
<numeric value expression exponent> ::=
<numeric value expression>
<square root> ::=
SQRT <left paren> <numeric value expression> <right paren>
<floor function> ::=
FLOOR <left paren> <numeric value expression> <right paren>
<ceiling function> ::=
{ CEIL | CEILING } <left paren> <numeric value expression> <right paren>
<width bucket function> ::=
WIDTH_BUCKET <left paren> <width bucket operand> <comma> <width bucket bound 1> <comma>
<width bucket bound 2> <comma> <width bucket count> <right paren>
<width bucket operand> ::=
<numeric value expression>
<width bucket bound 1> ::=
<numeric value expression>
<width bucket bound 2> ::=
<numeric value expression>
<width bucket count> ::=
<numeric value expression>