<embedded SQL Ada program> ::=
!! See the Syntax Rules.
<Ada variable definition> ::=
<Ada host identifier> [ { <comma> <Ada host identifier> }... ] <colon>
<Ada type specification> [ <Ada initial value> ]
<Ada initial value> ::=
<Ada assignment operator> <character representation>...
<Ada assignment operator> ::=
<colon> <equals operator>
<Ada host identifier> ::=
!! See the Syntax Rules.
<Ada type specification> ::=
<Ada qualified type specification>
| <Ada unqualified type specification>
| <Ada derived type specification>
<Ada qualified type specification> ::=
Interfaces.SQL.CHAR
 [ CHARACTER SET [ IS ] <character set specification> ]
<left paren> 1 <double period> <character length> <right paren>
| Interfaces.SQL.SMALLINT
| Interfaces.SQL.INT
| Interfaces.SQL.BIGINT
| Interfaces.SQL.REAL
| Interfaces.SQL.DOUBLE_PRECISION
| Interfaces.SQL.BOOLEAN
| Interfaces.SQL.SQLSTATE_TYPE
| Interfaces.SQL.INDICATOR_TYPE
<Ada unqualified type specification> ::=
CHAR <left paren> 1 <double period> <character length> <right paren>
| SMALLINT
| INT
| BIGINT
| REAL
| DOUBLE_PRECISION
| BOOLEAN
| SQLSTATE_TYPE
| INDICATOR_TYPE
<Ada derived type specification> ::=
<Ada CLOB variable>
| <Ada CLOB locator variable>
| <Ada BINARY variable>
| <Ada VARBINARY variable>
| <Ada BLOB variable>
| <Ada BLOB locator variable>
| <Ada user-defined type variable>
| <Ada user-defined type locator variable>
| <Ada REF variable>
| <Ada array locator variable>
| <Ada multiset locator variable>
<Ada CLOB variable> ::=
SQL TYPE IS CLOB <left paren> <character large object length> <right paren>
 [ CHARACTER SET [ IS ] <character set specification> ]
<Ada CLOB locator variable> ::=
SQL TYPE IS CLOB AS LOCATOR
<Ada BINARY variable> ::=
SQL TYPE IS BINARY <left paren> <length> <right paren>
<Ada VARBINARY variable> ::=
SQL TYPE IS VARBINARY <left paren> <length> <right paren>
<Ada BLOB variable> ::=
SQL TYPE IS BLOB <left paren> <large object length> <right paren>
<Ada BLOB locator variable> ::=
SQL TYPE IS BLOB AS LOCATOR
<Ada user-defined type variable> ::=
SQL TYPE IS <path-resolved user-defined type name> AS <predefined type>
<Ada user-defined type locator variable> ::=
SQL TYPE IS <path-resolved user-defined type name> AS LOCATOR
<Ada REF variable> ::=
SQL TYPE IS <reference type>
<Ada array locator variable> ::=
SQL TYPE IS <array type> AS LOCATOR
<Ada multiset locator variable> ::=
SQL TYPE IS <multiset type> AS LOCATOR