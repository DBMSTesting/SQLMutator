<embedded SQL Pascal program> ::=
!! See the Syntax Rules.
<Pascal variable definition> ::=
<Pascal host identifier> [ { <comma> <Pascal host identifier> }... ] <colon>
<Pascal type specification> <semicolon>
<Pascal host identifier> ::=
!! See the Syntax Rules.
<Pascal type specification> ::=
PACKED ARRAY <left bracket> 1 <double period> <character length> <right bracket>
OF CHAR [ CHARACTER SET [ IS ] <character set specification> ]
| INTEGER
| REAL
| CHAR [ CHARACTER SET [ IS ] <character set specification> ]
| BOOLEAN
| <Pascal derived type specification>
<Pascal derived type specification> ::=
<Pascal CLOB variable>
| <Pascal BINARY variable>
| <Pascal BLOB variable>
| <Pascal user-defined type variable>
| <Pascal CLOB locator variable>
| <Pascal BLOB locator variable>
| <Pascal user-defined type locator variable>
| <Pascal array locator variable>
| <Pascal multiset locator variable>
| <Pascal REF variable>
<Pascal CLOB variable> ::=
SQL TYPE IS CLOB <left paren> <character large object length> <right paren>
 [ CHARACTER SET [ IS ] <character set specification> ]
<Pascal BINARY variable> ::=
SQL TYPE IS BINARY <left paren> <length> <right paren>
<Pascal BLOB variable> ::=
SQL TYPE IS BLOB <left paren> <large object length> <right paren>
<Pascal CLOB locator variable> ::=
SQL TYPE IS CLOB AS LOCATOR
<Pascal user-defined type variable> ::=
SQL TYPE IS <path-resolved user-defined type name> AS <predefined type>
<Pascal BLOB locator variable> ::=
SQL TYPE IS BLOB AS LOCATOR
<Pascal user-defined type locator variable> ::=
SQL TYPE IS <path-resolved user-defined type name> AS LOCATOR
<Pascal array locator variable> ::=
SQL TYPE IS <array type> AS LOCATOR
<Pascal multiset locator variable> ::=
SQL TYPE IS <multiset type> AS LOCATOR
<Pascal REF variable> ::=
SQL TYPE IS <reference type>