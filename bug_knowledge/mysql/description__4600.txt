{
    "sql": "CREATE TABLE `foo` ( `i` int(11) NOT NULL AUTO_INCREMENT, `j` int(11) DEFAULT NULL, `k` int(11) DEFAULT NULL, `l` int(11) DEFAULT NULL, PRIMARY KEY (`i`), KEY `xj` (`j`), KEY `xjk` (`j`,`k`) ) ENGINE=MEMORY; INSERT INTO foo VALUES (null,0,0,0),(null,0,0,0),(null,0,0,0),(null,0,0,0),(null,0,0,0),(null,0,0,0),(null,0,0,0),(null,0,0,0),(null,0,0,0),(null,0,0,0); INSERT INTO foo SELECT null,0,0,0 FROM foo; INSERT INTO foo SELECT null,0,0,0 FROM foo; INSERT INTO foo SELECT null,0,0,0 FROM foo; INSERT INTO foo SELECT null,0,0,0 FROM foo; INSERT INTO foo SELECT null,0,0,0 FROM foo; INSERT INTO foo SELECT null,0,0,0 FROM foo; UPDATE foo SET j=i, k=i; SELECT k FROM foo WHERE j = 100; SELECT k FROM foo FORCE INDEX(`xjk`) WHERE j = 100;",
    "Affected Elements": "FORCE INDEX, MEMORY storage engine behavior",
    "Root Cause Analysis": "Using a HASH index for a multi-column index causes it to be unusable when querying with only one of the indexed columns, leading to a full table scan."
}