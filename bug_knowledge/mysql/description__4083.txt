{
    "sql": "DROP TABLE IF EXISTS t1; DROP TABLE IF EXISTS t1_hist; DROP TABLE IF EXISTS t1_trig; CREATE TABLE t1 (id INT PRIMARY KEY AUTO_INCREMENT, updated_at DATETIME); CREATE TABLE t1_hist (id INT PRIMARY KEY AUTO_INCREMENT, t1_id INT, updated_at DATETIME, KEY (t1_id)); CREATE TABLE t1_trig (id INT PRIMARY KEY AUTO_INCREMENT); INSERT INTO t1 (updated_at) VALUES (NOW()); INSERT INTO t1_hist (t1_id, updated_at) SELECT id, updated_at FROM t1 WHERE id = 1; DROP TRIGGER IF EXISTS t1_trig_ins; DELIMITER // CREATE TRIGGER t1_trig_ins AFTER INSERT ON t1_trig FOR EACH ROW BEGIN INSERT INTO t1_hist (t1_id, updated_at) SELECT id, updated_at FROM t1 WHERE id = 1; END // DELIMITER ; SET SESSION tx_isolation = 'READ-COMMITTED'; BEGIN; UPDATE t1 SET updated_at = NOW() WHERE id = 1; SET SESSION tx_isolation = 'READ-COMMITTED'; BEGIN; UPDATE t1_hist SET updated_at = NOW() WHERE t1_id = 1; INSERT INTO t1_trig VALUES (DEFAULT); -- blocked; UPDATE t1_hist SET updated_at = NOW() WHERE t1_id = 1; -- deadlock",
    "Affected Elements": "INSERT-SELECT statement, transaction isolation level, trigger",
    "Root Cause Analysis": "The INSERT-SELECT statement in the trigger is causing shared locks to be taken on the source table, leading to deadlocks even when the isolation level is set to READ COMMITTED."
}