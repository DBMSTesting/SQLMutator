{
    "sql": "DELIMITER $$; DROP PROCEDURE IF EXISTS `sp_existsTest` $$ CREATE PROCEDURE `sp_existsTest` (IN _id BIGINT) BEGIN DROP TEMPORARY TABLE IF EXISTS tmpA; CREATE TEMPORARY TABLE tmpA (id BIGINT NOT NULL, PRIMARY KEY (id)) ENGINE=InnoDB; INSERT INTO tmpA VALUES (_id); DROP TEMPORARY TABLE IF EXISTS tmpB; CREATE TEMPORARY TABLE tmpB ( `companyId` bigint NOT NULL, `createBy` bigint NULL, PRIMARY KEY (`companyId`) ) ENGINE=InnoDB; INSERT INTO tmpB VALUES (0, 0), (1, 1), (2, 2), (3, 3), (4, 4); IF EXISTS (SELECT 1 FROM tmpB INNER JOIN tmpA ON tmpA.id = tmpB.companyId WHERE tmpB.createBy <> _id) THEN SELECT 'BROKEN'; END IF; DROP TEMPORARY TABLE IF EXISTS tmpB, tmpA; END; $$ DELIMITER ; CALL sp_existsTest(3);",
    "Affected Elements": "IF EXISTS, SELECT, INNER JOIN, WHERE",
    "Root Cause Analysis": "The bug is caused by the incorrect behavior of the IF EXISTS clause in conjunction with temporary tables, leading to inconsistent results on subsequent executions of the stored procedure."
}