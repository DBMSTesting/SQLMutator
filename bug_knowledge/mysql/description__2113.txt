{
    "sql": "create table casRecord (Id integer not null auto_increment, Uuid binary(16) not null, RecordDefinitionName varchar(64) not null, RecordName varchar(255) not null, Active tinyint not null default 1, RecordType tinyint not null default 0, constraint pk_casRecord primary key (Id), constraint ix_casRecord_2 unique index (Uuid), index ix_casRecord_3 (RecordName)); create table casRecordField (Id integer not null auto_increment, RecordId integer not null, Uuid binary(16) not null, GroupNumber integer not null default 0, ShortName varchar(64) not null, Value longtext null, constraint pk_casRecordField primary key (Id), constraint fk_casRecordField_to_casRecord foreign key (RecordId) references casRecord (Id), constraint ix_casRecordField_1 unique index (RecordId, GroupNumber, ShortName), constraint ix_casRecordField_2 unique index (RecordId, Id), constraint ix_casRecordField_3 unique index (Uuid)); select rf.* from casRecordField rf where rf.RecordId = 578 order by rf.RecordId, rf.Id; select rf.* from casRecordField rf force index(ix_casRecordField_2) where rf.RecordId = 257 order by rf.RecordId, rf.Id;",
    "Affected Elements": "EXPLAIN, SELECT, FORCE INDEX, ORDER BY, WHERE",
    "Root Cause Analysis": "The optimizer incorrectly chooses a less optimal index instead of the one that covers both the WHERE clause and the ORDER BY clause, leading to performance issues."
}