{
    "sql": "create table testi(id int auto_increment primary key, c1 int, c2 int, key(c1)) engine=MyISAM; insert into testi(c1, c2) values (1,1); insert into testi(c1, c2) select rand()*1000, rand()*1000 from testi; insert into testi(c1, c2) select rand()*1000, rand()*1000 from testi; insert into testi(c1, c2) select rand()*1000, rand()*1000 from testi; insert into testi(c1, c2) select rand()*1000, rand()*1000 from testi; insert into testi(c1, c2) select rand()*1000, rand()*1000 from testi; insert into testi(c1, c2) select rand()*1000, rand()*1000 from testi; insert into testi(c1, c2) select rand()*1000, rand()*1000 from testi; insert into testi(c1, c2) select rand()*1000, rand()*1000 from testi; insert into testi(c1, c2) select rand()*1000, rand()*1000 from testi; insert into testi(c1, c2) select rand()*1000, rand()*1000 from testi; insert into testi(c1, c2) select rand()*1000, rand()*1000 from testi; insert into testi(c1, c2) select rand()*1000, rand()*1000 from testi; insert into testi(c1, c2) select rand()*1000, rand()*1000 from testi; analyze table testi; explain select t1.id, count(*) from testi t1 join testi t2 on t2.c1 between t1.c1 and t1.c1 + 30 group by t1.id; alter table testi engine=InnoDB; explain select t1.id, count(*) from testi t1 join testi t2 on t2.c1 between t1.c1 and t1.c1 + 30 group by t1.id; explain select t1.id, count(*) from testi t1 straight_join testi t2 on t2.c1 between t1.c1 and t1.c1 + 30 group by t1.id; select t1.id, count(*) from testi t1 straight_join testi t2 on t2.c1 between t1.c1 and t1.c1 + 30 group by t1.id;",
    "Affected Elements": "join, between, explain, straight_join",
    "Root Cause Analysis": "The optimizer fails to efficiently use range checks for self-joins on InnoDB tables, leading to performance issues."
}