{
    "sql": "CREATE TABLE `mvi` ( `id` bigint NOT NULL AUTO_INCREMENT, `f1` int NOT NULL, `f2` int NOT NULL, `f3` int DEFAULT NULL, `f4` int NOT NULL, `f5` int DEFAULT NULL, `j` json NOT NULL, PRIMARY KEY (`id`), KEY `ix1` (`f1`,`f3`,(cast(`j` as signed array))), KEY `ix3` (`f1`,`f4`,`f3`,(cast(`j` as signed array))), KEY `ix5` (`f1`,`f4`,`f3`,`f5`,(cast(`j` as signed array))); EXPLAIN ANALYZE SELECT id FROM mvi WHERE (f1 = 1 AND f3 = 1 AND f4 = 1 AND f5 IN (963474745,963474787,963474788,963474789) AND 2 MEMBER OF(j)); EXPLAIN ANALYZE SELECT id FROM mvi FORCE INDEX (ix5) WHERE (f1 = 1 AND f3 = 1 AND f4 = 1 AND f5 IN (963474745,963474787,963474788,963474789) AND 2 MEMBER OF(j)); ALTER TABLE mvi RENAME INDEX ix5 TO ix6; EXPLAIN ANALYZE SELECT id FROM mvi WHERE (f1 = 1 AND f3 = 1 AND f4 = 1 AND f5 IN (963474745,963474787,963474788,963474789) AND 2 MEMBER OF(j)); ALTER TABLE mvi RENAME INDEX ix1 TO ix2; EXPLAIN ANALYZE SELECT id FROM mvi WHERE (f1 = 1 AND f3 = 1 AND f4 = 1 AND f5 IN (963474745,963474787,963474788,963474789) AND 2 MEMBER OF(j));",
    "Affected Elements": "EXPLAIN, FORCE INDEX, MEMBER OF, json, ALTER TABLE",
    "Root Cause Analysis": "The optimizer incorrectly chooses to ignore the multi-valued index during range scans due to the presence of multiple composite keys, which can lead to performance issues."
}