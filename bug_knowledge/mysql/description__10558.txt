{
    "sql": "CREATE SCHEMA IF NOT EXISTS test; DELIMITER $$ CREATE PROCEDURE IF NOT EXISTS test.cte_bug() BEGIN WITH RECURSIVE tran(batch_uid, guid, type, trantime, refguid) AS ( SELECT 549285, 'W5PT9A5F3D2WF57', 13, '2023-04-07 09:19:04', NULL UNION ALL SELECT 549286, 'W5PTVYU84715VJ7', 13, '2023-04-07 09:31:20', 'W5PT9A5F3D2WF57' ), t(init_dataset, batch_uid, guid, type, trantime) AS ( SELECT TRUE AS init_dataset, batch_uid, guid, type, trantime FROM tran WHERE batch_uid = 549285 UNION ALL SELECT FALSE, wt.batch_uid, wt.guid, wt.type, wt.trantime FROM tran wt JOIN t ts ON wt.refguid = ts.guid WHERE wt.batch_uid != 549285 AND init_dataset ) SELECT t2.count FROM t LEFT JOIN ( SELECT type, COUNT(*) AS count FROM t t2 WHERE batch_uid = 549285 GROUP BY type ) t2 ON t2.type = t.type; END $$ DELIMITER ;",
    "Affected Elements": "WITH RECURSIVE, UNION ALL, LEFT JOIN, GROUP BY",
    "Root Cause Analysis": "The stored procedure is not consistently producing the expected results due to potential issues with the optimizer's handling of recursive CTEs combined with the GROUP BY clause."
}