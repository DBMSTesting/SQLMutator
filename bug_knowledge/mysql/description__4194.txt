{
    "sql": "DROP TABLE IF EXISTS `t1`, `t2`, `seed`; CREATE TABLE `t1`(`id` INT AUTO_INCREMENT PRIMARY KEY, `a` TINYINT, UNIQUE KEY(`a`)) ENGINE=InnoDB; CREATE TABLE `t2`(`id` INT AUTO_INCREMENT PRIMARY KEY, `a` TINYINT, UNIQUE KEY(`a`)) ENGINE=MyISAM; CREATE TABLE `seed` (id INT AUTO_INCREMENT PRIMARY KEY, a TINYINT) ENGINE=MyISAM; INSERT INTO `seed`(`a`) VALUES (7), (7), (7), (7), (7), (7), (7), (7); INSERT INTO `seed`(`a`) SELECT `seed`.`a` FROM `seed`, `seed` `t2`, `seed` `t3`, `seed` `t4`, `seed` `t5` LIMIT 5000; REPLACE INTO `t1`(`a`) SELECT `a` FROM `seed`; REPLACE INTO `t2`(`a`) SELECT `a` FROM `seed`; SELECT VERSION();",
    "Affected Elements": "REPLACE INTO, UNIQUE KEY, INSERT INTO, SELECT",
    "Root Cause Analysis": "InnoDB's handling of duplicate keys relies on undo logging and rollback, leading to performance degradation when replacing duplicates due to multiple locking and logging operations."
}