{
    "sql": "DROP TABLE IF EXISTS `posts_translations_copy2`; CREATE TABLE `posts_translations_copy2` ( `id` int(11) unsigned NOT NULL, `content` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin, PRIMARY KEY (`id`), FULLTEXT KEY `searchablepc` (`content`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4; INSERT INTO `posts_translations_copy2` (`id`, `content`) VALUES (1,'content Spring fling'); SELECT count(*) FROM `test`.`posts_translations_copy2` `PostsTranslations` USE INDEX (searchablepc) WHERE ((MATCH(PostsTranslations.content) AGAINST('\"Spring fling\"' in boolean mode))) ORDER BY `PostsTranslations`.`id` DESC LIMIT 20 OFFSET 0; DROP TABLE IF EXISTS `posts_translations_copy2`; CREATE TABLE `posts_translations_copy2` ( `id` int(11) unsigned NOT NULL, `content` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin, PRIMARY KEY (`id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4; INSERT INTO `posts_translations_copy2` (`id`, `content`) VALUES (1,'content Spring fling'); CREATE FULLTEXT INDEX searchablepc ON posts_translations_copy2(content); SELECT count(*) FROM `test`.`posts_translations_copy2` `PostsTranslations` USE INDEX (searchablepc) WHERE ((MATCH(PostsTranslations.content) AGAINST('\"Spring fling\"' in boolean mode))) ORDER BY `PostsTranslations`.`id` DESC LIMIT 20 OFFSET 0;",
    "Affected Elements": "FULLTEXT, MATCH, AGAINST, USE INDEX",
    "Root Cause Analysis": "The regression in behavior when using FULLTEXT index with binary collation caused discrepancies in query results, specifically affecting case sensitivity in search results."
}