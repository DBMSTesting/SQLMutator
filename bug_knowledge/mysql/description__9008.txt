{
    "sql": "CREATE SCHEMA `bug_test`; CREATE TABLE `bug_test`.`companies` (`id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT, `is_active` TINYINT(1) NOT NULL DEFAULT 0, PRIMARY KEY (`id`), INDEX `is_active_idx` (`is_active` ASC) VISIBLE); CREATE TABLE `bug_test`.`company_phrases` (`id` INT(10) UNSIGNED NOT NULL, `value` LONGTEXT NULL, `company_id` INT(10) NOT NULL, PRIMARY KEY (`id`), INDEX `company_id_idx` (`company_id` ASC) VISIBLE, FULLTEXT INDEX `value_ft_idx` (`value`) VISIBLE); INSERT INTO `bug_test`.`companies` (`id`, `is_active`) VALUES (1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (7, 1), (8, 1), (9, 1), (10, 1); INSERT INTO `bug_test`.`company_phrases` (`id`, `value`, `company_id`) VALUES (1, 'something random first phrase something else', 1), (2, 'something random second phrase something else', 1), (3, 'something random third phrase something else', 1), (4, 'something random second phrase something else', 1), (5, 'something random second phrase something else', 2), (6, 'something random first phrase something else', 2), (7, 'something random first phrase something else', 2), (8, 'something random first phrase something else', 10), (9, 'something random first phrase something else', 7), (10, 'something random second phrase something else', 7), (11, 'something random third phrase something else', 7), (12, 'something random first phrase something else', 5), (13, 'something random second phrase something else', 5), (14, 'something random third phrase something else', 5), (15, 'something random third phrase something else', 8), (16, 'second phrase', 4), (17, 'third phrase', 4), (18, 'second phrase', 4), (19, 'second phrase', 8); USE bug_test; SELECT companies.id FROM companies WHERE companies.is_active = 1 AND EXISTS (SELECT * FROM company_phrases WHERE company_phrases.company_id = companies.id AND MATCH(company_phrases.value) AGAINST ('+second +phrase' IN BOOLEAN MODE)); SELECT companies.id FROM companies WHERE companies.is_active = 1 AND EXISTS (SELECT * FROM company_phrases WHERE company_phrases.company_id = companies.id AND MATCH(company_phrases.value) AGAINST ('+second +phrase' IN BOOLEAN MODE)) ORDER BY companies.id DESC; SELECT DISTINCT companies.id FROM companies INNER JOIN company_phrases ON company_phrases.company_id = companies.id WHERE companies.is_active = 1 AND MATCH(company_phrases.value) AGAINST ('+second +phrase' IN BOOLEAN MODE) ORDER BY companies.id DESC; SELECT DISTINCT companies.id FROM companies STRAIGHT_JOIN company_phrases ON company_phrases.company_id = companies.id WHERE companies.is_active = 1 AND MATCH(company_phrases.value) AGAINST ('+second +phrase' IN BOOLEAN MODE) ORDER BY companies.id DESC;",
    "Affected Elements": "MATCH, AGAINST, EXISTS, ORDER BY, INNER JOIN, STRAIGHT_JOIN",
    "Root Cause Analysis": "The execution plan's choice between different indexing strategies leads to discrepancies in the results of the fulltext search queries."
}