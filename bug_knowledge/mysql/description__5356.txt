{
    "sql": "CREATE TABLE test (id int(3) auto_increment primary key, name varchar(10)) ENGINE=InnoDB; CREATE TABLE test_log (id int(3) auto_increment primary key, name varchar(10)) ENGINE=InnoDB; INSERT INTO test (id, name) VALUES (1, 'test1-1'); INSERT INTO test (id, name) VALUES (2, 'test2-1'); DROP TRIGGER IF EXISTS test_trg; DELIMITER // CREATE TRIGGER test_trg BEFORE UPDATE ON test FOR EACH ROW BEGIN IF EXISTS(SELECT 1 FROM test_log WHERE id = OLD.id) THEN SIGNAL SQLSTATE VALUE '99999'; END IF; INSERT INTO test_log (id, name) VALUES (OLD.id, OLD.name); END; // DELIMITER ; BEGIN; UPDATE test SET name = 'test1-2' WHERE id = 1; SHOW ENGINE INNODB STATUS;",
    "Affected Elements": "SELECT, INSERT, TRIGGER, SIGNAL, IF EXISTS",
    "Root Cause Analysis": "The trigger's behavior causes a gap lock due to the nature of the BEFORE UPDATE operation, which is not documented."
}