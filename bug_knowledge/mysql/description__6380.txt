{
    "sql": "CREATE DATABASE bug_mysql; USE bug_mysql; DROP TABLE IF EXISTS accounts; CREATE TABLE IF NOT EXISTS accounts ( id INT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(500) DEFAULT '' NOT NULL, name VARCHAR(500) NULL ); INSERT INTO accounts (id, username, name) VALUES (1, 'username1', 'Name1'); INSERT INTO accounts (id, username, name) VALUES (2, 'username2', 'Name2'); INSERT INTO accounts (id, username, name) VALUES (3, 'username3', 'Name3'); INSERT INTO accounts (id, username, name) VALUES (4, 'username4', 'Name4'); INSERT INTO accounts (id, username, name) VALUES (5, 'username5', 'Name5'); INSERT INTO accounts (id, username, name) VALUES (6, 'username6', 'Name6'); INSERT INTO accounts (id, username, name) VALUES (7, 'username7', 'Name7'); DROP TABLE IF EXISTS custom_fields; CREATE TABLE IF NOT EXISTS custom_fields ( id INT AUTO_INCREMENT PRIMARY KEY, field_type VARCHAR(50) NOT NULL, properties VARCHAR(4000) NULL, strict_name VARCHAR(250) NULL ); INSERT INTO custom_fields (id, field_type, properties, strict_name) VALUES (1, 'isMemberOfTeam', '{\"id\": 1}', 'memberOfTeam'); DROP TABLE IF EXISTS custom_field_values; CREATE TABLE IF NOT EXISTS custom_field_values ( id INT AUTO_INCREMENT PRIMARY KEY, custom_fields_id INT NOT NULL, owner_id INT NOT NULL, value VARCHAR(4000) NULL ); DROP TABLE IF EXISTS team_definitions; CREATE TABLE IF NOT EXISTS team_definitions ( id INT AUTO_INCREMENT PRIMARY KEY, strict_name VARCHAR(250) NULL ); INSERT INTO team_definitions (id, strict_name) VALUES (1, 'team1'); DROP TABLE IF EXISTS team_entries; CREATE TABLE IF NOT EXISTS team_entries ( id INT AUTO_INCREMENT PRIMARY KEY, type VARCHAR(50), member_id INT NOT NULL, team_definition_id INT NOT NULL ); INSERT INTO team_entries (id, type, member_id, team_definition_id) VALUES (1, 'account', 1, 1); INSERT INTO team_entries (id, type, member_id, team_definition_id) VALUES (2, 'account', 2, 1); INSERT INTO team_entries (id, type, member_id, team_definition_id) VALUES (3, 'account', 3, 1); CREATE OR REPLACE VIEW team_definitions_to_accounts AS SELECT td2a.id AS id, td2a.account_id AS account_id FROM ( SELECT td.id AS id, ( CASE te.type WHEN 'account' THEN te.member_id WHEN 'exclude_account' THEN te.member_id ELSE NULL END ) AS account_id, if((te.type = 'exclude_account'), 0, 1) AS include_in_result FROM team_definitions td JOIN team_entries te ON te.team_definition_id = td.id ) td2a GROUP BY td2a.id, td2a.account_id HAVING (bit_and(td2a.include_in_result) <> 0); DROP FUNCTION IF EXISTS IsMemberOfTeam; CREATE FUNCTION IsMemberOfTeam(accountId INT, teamDefinitionId INT) RETURNS VARCHAR(4000) BEGIN IF exists( SELECT id FROM team_definitions_to_accounts td2a WHERE td2a.id = teamDefinitionId AND td2a.account_id = accountId ) THEN RETURN 'true'; ELSE RETURN 'false'; END IF ; END; CREATE OR REPLACE VIEW bugged_db_view AS SELECT a.id AS a_id, a.username AS username, cf.id AS id, cf.strict_name AS strict_name, cfv.owner_id AS value_owner_id, ( CASE cf.field_type WHEN 'isMemberOfTeam' THEN IsMemberOfTeam(a.id, cf.properties->>'$.id') ELSE cfv.value END ) AS value FROM accounts a JOIN custom_fields cf LEFT JOIN custom_field_values cfv ON cf.id = cfv.custom_fields_id AND a.id = cfv.owner_id; SELECT * FROM accounts a WHERE id IN ( SELECT bv.a_id FROM bugged_db_view bv WHERE bv.strict_name = 'memberOfTeam' AND bv.value = 'true' );",
    "Affected Elements": "Stored Function, View, CASE Statement",
    "Root Cause Analysis": "The stored function IsMemberOfTeam was not declared as DETERMINISTIC, leading to incorrect query execution and results due to optimizer behavior."
}