{
    "sql": "CREATE TABLE `a` ( `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'The id', `f` char(1) NOT NULL DEFAULT 'A' COMMENT 'Flag', PRIMARY KEY (`id`), KEY `IDX_A_F` (`f`)) ENGINE=InnoDB; CREATE TABLE `b` ( `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'Primary key', `a_id` int(10) unsigned DEFAULT NULL, `ts` datetime NOT NULL COMMENT 'Timestamp', `f` char(1) NOT NULL COMMENT 'Flag', PRIMARY KEY (`id`), KEY `B_FK` (`a_id`), KEY `IDX_B_F` (`f`), CONSTRAINT `B_FK` FOREIGN KEY (`a_id`) REFERENCES `a` (`id`)) ENGINE=InnoDB; INSERT INTO a(id,f) VALUES (1, 'A'), (2, 'B'), (3, 'A'), (4, 'B'), (5, 'A'), (6, 'B'), (7, 'A'), (8, 'B'), (9, 'A'), (10, 'B'), (11, 'A'), (12, 'B'), (13, 'A'), (14, 'B'), (15, 'A'), (16, 'B'), (17, 'A'), (18, 'B'), (19, 'A'), (20, 'B'), (21, 'A'), (22, 'B'), (23, 'A'), (24, 'B'), (25, 'A'), (26, 'B'), (27, 'A'), (28, 'B'), (29, 'A'), (30, 'B'); INSERT INTO b(a_id,ts,f) VALUES (30, DATE(SYSDATE() - INTERVAL 100 DAY), 'A'), (20, DATE(SYSDATE() - INTERVAL 100 DAY), 'A'), (19, DATE(SYSDATE() - INTERVAL 99 DAY), 'B'), (29, DATE(SYSDATE() - INTERVAL 99 DAY), 'B'), (28, DATE(SYSDATE() - INTERVAL 98 DAY), 'B'), (18, DATE(SYSDATE() - INTERVAL 98 DAY), 'B'), (17, DATE(SYSDATE() - INTERVAL 97 DAY), 'A'), (27, DATE(SYSDATE() - INTERVAL 97 DAY), 'A'), (16, DATE(SYSDATE() - INTERVAL 96 DAY), 'B'), (26, DATE(SYSDATE() - INTERVAL 96 DAY), 'B'), (15, DATE(SYSDATE() - INTERVAL 95 DAY), 'A'), (25, DATE(SYSDATE() - INTERVAL 95 DAY), 'A'), (18, DATE(SYSDATE() - INTERVAL 58 DAY), 'A'), (28, DATE(SYSDATE() - INTERVAL 58 DAY), 'A'), (17, DATE(SYSDATE() - INTERVAL 57 DAY), 'B'), (27, DATE(SYSDATE() - INTERVAL 57 DAY), 'B'), (16, DATE(SYSDATE() - INTERVAL 56 DAY), 'A'), (26, DATE(SYSDATE() - INTERVAL 56 DAY), 'A'), (15, DATE(SYSDATE() - INTERVAL 55 DAY), 'B'), (25, DATE(SYSDATE() - INTERVAL 55 DAY), 'B'), (24, DATE(SYSDATE() - INTERVAL 54 DAY), 'A'), (14, DATE(SYSDATE() - INTERVAL 54 DAY), 'A'), (23, DATE(SYSDATE() - INTERVAL 53 DAY), 'B'), (13, DATE(SYSDATE() - INTERVAL 53 DAY), 'B'), (22, DATE(SYSDATE() - INTERVAL 52 DAY), 'B'), (12, DATE(SYSDATE() - INTERVAL 52 DAY), 'B'), (21, DATE(SYSDATE() - INTERVAL 51 DAY), 'A'), (11, DATE(SYSDATE() - INTERVAL 51 DAY), 'A'), (30, DATE(SYSDATE() - INTERVAL 50 DAY), 'B'), (20, DATE(SYSDATE() - INTERVAL 50 DAY), 'B'), (10, DATE(SYSDATE() - INTERVAL 50 DAY), 'B'), (19, DATE(SYSDATE() - INTERVAL 49 DAY), 'A'), (9, DATE(SYSDATE() - INTERVAL 49 DAY), 'A'), (29, DATE(SYSDATE() - INTERVAL 49 DAY), 'A'), (6, DATE(SYSDATE() - INTERVAL 46 DAY), 'A'), (5, DATE(SYSDATE() - INTERVAL 45 DAY), 'B'), (8, DATE(SYSDATE() - INTERVAL 28 DAY), 'A'), (7, DATE(SYSDATE() - INTERVAL 27 DAY), 'B'), (17, DATE(SYSDATE() - INTERVAL 17 DAY), 'A'), (27, DATE(SYSDATE() - INTERVAL 17 DAY), 'A'), (26, DATE(SYSDATE() - INTERVAL 16 DAY), 'B'), (16, DATE(SYSDATE() - INTERVAL 16 DAY), 'B'), (15, DATE(SYSDATE() - INTERVAL 15 DAY), 'A'), (25, DATE(SYSDATE() - INTERVAL 15 DAY), 'A'), (24, DATE(SYSDATE() - INTERVAL 14 DAY), 'B'), (14, DATE(SYSDATE() - INTERVAL 14 DAY), 'B'), (13, DATE(SYSDATE() - INTERVAL 13 DAY), 'A'), (23, DATE(SYSDATE() - INTERVAL 13 DAY), 'A'), (28, DATE(SYSDATE() - INTERVAL 8 DAY), 'B'), (8, DATE(SYSDATE() - INTERVAL 8 DAY), 'B'), (18, DATE(SYSDATE() - INTERVAL 8 DAY), 'B'), (7, DATE(SYSDATE() - INTERVAL 7 DAY), 'A'), (6, DATE(SYSDATE() - INTERVAL 6 DAY), 'B'), (5, DATE(SYSDATE() - INTERVAL 5 DAY), 'A'), (4, DATE(SYSDATE() - INTERVAL 4 DAY), 'B'), (3, DATE(SYSDATE() - INTERVAL 3 DAY), 'A'); SELECT * FROM a WHERE a.f = 'B' AND a.id IN (SELECT a_id FROM b WHERE b.f = 'B' AND DATE(ts) > (DATE(SYSDATE()) - INTERVAL 30 DAY)); SELECT * FROM a WHERE a.f = 'B' AND EXISTS (SELECT a_id FROM b WHERE b.f = 'B' AND DATE(ts) > (DATE(SYSDATE()) - INTERVAL 30 DAY) AND b.a_id = a.id); SELECT * FROM a USE INDEX (PRIMARY) WHERE a.f = 'B' AND a.id IN (SELECT a_id FROM b WHERE b.f = 'B' AND DATE(ts) > (DATE(SYSDATE()) - INTERVAL 30 DAY)); SELECT * FROM a USE INDEX (IDX_A_F) WHERE a.f = 'B' AND EXISTS (SELECT a_id FROM b WHERE b.f = 'B' AND DATE(ts) > (DATE(SYSDATE()) - INTERVAL 30 DAY) AND b.a_id = a.id);",
    "Affected Elements": "IN clause, EXISTS clause, USE INDEX clause",
    "Root Cause Analysis": "The optimizer's behavior changes based on the enforced index, leading to different result sets for logically identical queries."
}