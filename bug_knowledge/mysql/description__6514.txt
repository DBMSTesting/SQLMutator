{
    "sql": "USE bench; DROP TABLE IF EXISTS bench.table1; CREATE TABLE bench.table1 (id BIGINT(20) UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT, char1 VARCHAR(64) NOT NULL DEFAULT '', char2 VARCHAR(64) NOT NULL DEFAULT '', char3 VARCHAR(64) DEFAULT NULL, date1 DATETIME DEFAULT NULL, date2 DATETIME NOT NULL, PRIMARY KEY (id), KEY char1_char2_INDEX (char1,char2)) ENGINE=InnoDB DEFAULT CHARSET=utf8; DROP TABLE IF EXISTS bench.table1_replica; CREATE TABLE bench.table1_replica (id BIGINT(20) UNSIGNED ZEROFILL NOT NULL, char1 VARCHAR(64) NOT NULL DEFAULT '', char2 VARCHAR(64) NOT NULL DEFAULT '', char3 VARCHAR(64) DEFAULT NULL, date1 DATETIME NOT NULL DEFAULT '2017-01-01 00:00:00', date2 DATETIME NOT NULL, PRIMARY KEY (id), KEY char1_char2_INDEX (char1,char2,date1), KEY char3 (char3)) ENGINE=InnoDB DEFAULT CHARSET=utf8; DROP TABLE IF EXISTS bench.table1_info; CREATE TABLE bench.table1_info (id BIGINT(20) UNSIGNED ZEROFILL NOT NULL AUTO_INCREMENT, char1 VARCHAR(255) NOT NULL, char2 VARCHAR(64) DEFAULT NULL, char3 VARCHAR(255) DEFAULT NULL, char4 VARCHAR(45) DEFAULT NULL, data TEXT COMMENT 'This holds the additional comments', bingint1 BIGINT(20) DEFAULT NULL, char5 VARCHAR(10) DEFAULT NULL, char6 VARCHAR(16) DEFAULT NULL, date1 DATETIME DEFAULT NULL, date2 DATETIME NOT NULL, PRIMARY KEY (id), KEY bingint1 (bingint1), KEY char2_date1 (char2,date1)) ENGINE=InnoDB DEFAULT CHARSET=utf8; DROP TABLE IF EXISTS bench.table1_info_replica; CREATE TABLE bench.table1_info_replica (id BIGINT(20) UNSIGNED ZEROFILL NOT NULL, char1 VARCHAR(255) NOT NULL, char2 VARCHAR(16) DEFAULT NULL, char3 VARCHAR(255) DEFAULT NULL, char4 VARCHAR(45) DEFAULT NULL, data TEXT COMMENT 'This holds the additional comments', bingint1 BIGINT(20) DEFAULT NULL, char5 VARCHAR(10) DEFAULT NULL, char6 VARCHAR(16) DEFAULT NULL, date1 DATETIME NOT NULL DEFAULT '2017-01-01 00:00:00', date2 DATETIME NOT NULL, PRIMARY KEY (id), KEY permanent_user_id_INDEX (char1), KEY credentials_id_indx (bingint1)) ENGINE=InnoDB DEFAULT CHARSET=utf8; DROP TRIGGER IF EXISTS bench.tmp_table1_ins_trig; DELIMITER $$ CREATE TRIGGER bench.tmp_table1_ins_trig AFTER INSERT ON bench.table1 FOR EACH ROW BEGIN INSERT INTO bench.table1_replica (id, char1, char2, char3, date1, date2) VALUES (NEW.id, NEW.char1, NEW.char2, NEW.char3, NEW.date1, NEW.date2); END$$ DELIMITER ; DROP TRIGGER IF EXISTS bench.table1_info_ins_trig; DELIMITER $$ CREATE TRIGGER bench.table1_info_ins_trig AFTER INSERT ON bench.table1_info FOR EACH ROW BEGIN INSERT IGNORE INTO bench.table1_info_replica (id, char1, char2, char3, char4, data, bingint1, char5, char6, date1, date2) VALUES (NEW.id, NEW.char1, NEW.char2, NEW.char3, NEW.char4, NEW.data, NEW.bingint1, NEW.char5, NEW.char6, NEW.date1, NEW.date2); END$$ DELIMITER ;",
    "Affected Elements": "DROP TABLE, CREATE TABLE, INSERT INTO, TRIGGER, DELIMITER",
    "Root Cause Analysis": "The deadlock in the binary log is likely caused by concurrent write operations and the interaction of triggers, leading to contention when flushing logs."
}