{
    "sql": "CREATE TABLE IF NOT EXISTS `container` ( `container_id` decimal(38,0) unsigned NOT NULL, `container_name` varchar(80) NOT NULL, `container_id_snr` decimal(38,0) unsigned DEFAULT NULL, PRIMARY KEY (`container_id`), KEY `container_id_snr` (`container_id_snr`) ) ENGINE=InnoDB; INSERT INTO `container` values (10101000000000000000000000000001,'Cabinet #1',null), (10101000000000000000000000000002,'Cabinet #2',null), (10101000000000000000000000000003,'Shelf #1',10101000000000000000000000000001), (10101000000000000000000000000004,'Shelf #2',10101000000000000000000000000002), (10101000000000000000000000000005,'Box #1',10101000000000000000000000000003), (10101000000000000000000000000006,'Box #2',10101000000000000000000000000004); WITH RECURSIVE cte (level, container_id, container_name, container_id_snr, path) AS ( SELECT 1 AS level, container_id, container_name, container_id_snr, CAST(container.container_name AS CHAR(4000)) AS path FROM container WHERE container_id_snr IS NULL UNION ALL SELECT level+1, container.container_id, container.container_name, container.container_id_snr, CONCAT(cte.path, '/', container.container_name) AS path FROM cte LEFT JOIN container ON (cte.container_id = container.container_id_snr) WHERE container.container_id_snr IN (10101000000000000000000000000001,10101000000000000000000000000003) ) SELECT SQL_CALC_FOUND_ROWS cte.* FROM cte ORDER BY path;",
    "Affected Elements": "IN clause with decimal(38,0) values",
    "Root Cause Analysis": "MySQL's type conversion rules treat quoted numbers as strings, leading to inconsistent behavior when using IN with multiple values for decimal types."
}