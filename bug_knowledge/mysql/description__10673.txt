{
    "sql": "CREATE TABLE `ecattdat1` ( `sd_key` char(3) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '', `ecatt_key` char(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '', `ec_cer_no` varchar(60) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '', `ec_full_name` char(120) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL DEFAULT '', PRIMARY KEY (`ecatt_key`), KEY `idx_becdaty5` (`ec_full_name`,`ecatt_key`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin; INSERT INTO ecattdat1 VALUES ('817', '8170A100000000213850', '    ', '控制\t'); SELECT * FROM ecattdat1 WHERE ec_full_name LIKE '控制%'; SELECT * FROM ecattdat1 FORCE INDEX (PRIMARY) WHERE ec_full_name LIKE '控制%';",
    "Affected Elements": "LIKE operator, FORCE INDEX clause",
    "Root Cause Analysis": "The issue arises due to improper handling of space padding in string comparisons for specific collations, leading to unexpected query results when using the LIKE operator with certain indexed conditions."
}