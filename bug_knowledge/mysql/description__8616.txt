{
    "sql": "DROP TABLE IF EXISTS a1; CREATE TABLE a1(task_id BIGINT UNSIGNED NOT NULL, oper_id VARCHAR(64) NULL, retention_time DOUBLE NULL); INSERT INTO a1 VALUES(17463778019812451578,'a',0); COMMIT; DROP TABLE IF EXISTS b1; CREATE TABLE b1(task_id BIGINT UNSIGNED NOT NULL, consult_oper_id VARCHAR(64) NOT NULL); INSERT INTO b1 VALUES(17463778019812451578,'a'), (17463778019812451578,'a'), (17463778019812451578,'a'), (17463778019812451578,'a'); COMMIT; SELECT @row := IF(@task_id = task_id, @row + 1, 1) AS num1, aa.*, @task_id := task_id FROM (SELECT task_id, num FROM (SELECT a.task_id, @r := @r + 1 AS num FROM (SELECT t.task_id, task.oper_id, task.retention_time FROM a1 AS task WHERE 1 = 1) AS t LEFT JOIN (SELECT task_id, consult_oper_id FROM b1 WHERE 1 = 1) AS c ON t.task_id = c.task_id ORDER BY t.retention_time DESC) AS a, (SELECT @r := 0) AS b) AS gg ORDER BY task_id ASC, num ASC) AS aa, (SELECT @row := 0) AS bb, (SELECT @task_id := 0) AS ccc LIMIT 0, 20;",
    "Affected Elements": "IF clause, variable assignment (@row, @task_id), nested SELECT statements, ORDER BY clause",
    "Root Cause Analysis": "The bug arises from the use of user-defined variables in a complex SQL query that leads to inconsistent result sets on subsequent executions."
}