{
    "sql": "DROP TABLE IF EXISTS test_1; DROP TABLE IF EXISTS test_2; CREATE TABLE test_1 (col_pk INTEGER NOT NULL, col_test INTEGER); ALTER TABLE test_1 ADD PRIMARY KEY (col_pk); CREATE TABLE test_2 (col_pk_join INTEGER NOT NULL, col_test_new INTEGER); INSERT INTO test_1 (col_pk, col_test) VALUES (1, NULL); INSERT INTO test_1 (col_pk, col_test) VALUES (2, NULL); COMMIT; INSERT INTO test_2 (col_pk_join, col_test_new) VALUES (1, 23); INSERT INTO test_2 (col_pk_join, col_test_new) VALUES (1, 34); INSERT INTO test_2 (col_pk_join, col_test_new) VALUES (2, 45); COMMIT; SELECT * FROM test_1; SELECT * FROM test_2; UPDATE test_1 t, test_2 tmp SET t.col_test = tmp.col_test_new WHERE t.col_pk = tmp.col_pk_join; COMMIT; SELECT * FROM test_1;",
    "Affected Elements": "UPDATE, COMMIT, JOIN",
    "Root Cause Analysis": "The multi-table UPDATE does not handle cases where the join condition results in multiple matching rows, leading to incorrect data being written to the destination table."
}