{
    "sql": "set @ori_val = @@innodb_ddl_buffer_size; create table a(a int, b int, primary key(a)); delimiter $$; CREATE PROCEDURE insert_into_tables(IN num INTEGER) BEGIN declare x INT; set x = 1; while x < num do INSERT INTO `a` (`a`, `b`) VALUES (x, x); set x = x + 1; end while; end$$ delimiter ;$$ call insert_into_tables(10000); alter table a add column `id` bigint UNSIGNED NOT NULL AUTO_INCREMENT, ADD KEY (`id`); select max(a), max(b), max(id) from a; set session innodb_ddl_buffer_size = 104857600; alter table a drop column id, drop index id; alter table a add column `id` bigint UNSIGNED NOT NULL AUTO_INCREMENT, ADD KEY (`id`); select max(a), max(b), max(id) from a; drop table a; drop PROCEDURE insert_into_tables; set session innodb_ddl_buffer_size = @ori_val;",
    "Affected Elements": "AUTO_INCREMENT, INSERT, ALTER TABLE, SELECT",
    "Root Cause Analysis": "The gap in auto-increment values occurs due to the way InnoDB reserves values during the insertion process, especially when the DDL buffer size affects the handling of auto-increment keys."
}