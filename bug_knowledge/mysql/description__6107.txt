{
    "sql": "drop table if exists foo; create table foo ( id varchar(255)); insert into foo values('bar%'); insert into foo values('bar%1'); insert into foo values('bart'); insert into foo values('bar\\t'); insert into foo values('bar\\%'); select id from foo where id like 'bar\\%'; select id from foo where id like 'bar\\\\%'; select id from foo where id like 'bar\\\\\\%'; select id from foo where id like 'bar\\\\\\\\%';",
    "Affected Elements": "LIKE, escape clause, backslash escaping",
    "Root Cause Analysis": "The issue lies in the inconsistent handling of backslashes in escape sequences by MySQL 5.x, leading to unexpected matching behavior with wildcard characters."
}