{
    "sql": "CREATE TABLE `t1` (`sys_doc` decimal(12,0) NOT NULL, `sys_del` decimal(1,0) NOT NULL DEFAULT '0', `a_s` decimal(2,0) DEFAULT '0', `a_p` datetime DEFAULT NULL, `a_h` decimal(3,0) DEFAULT '0', `class_1` decimal(38,0) DEFAULT NULL, KEY `IDX01_T` (`class_1`) USING BTREE, KEY `IDX02_T` (`class_1`,`sys_del`) USING BTREE, KEY `IDX03_T` (`sys_doc`) USING BTREE, KEY `IDX04_T` (`a_s`) USING BTREE) ENGINE=InnoDB; CREATE TABLE `t2` (`sys_doc` decimal(12,0) NOT NULL, `sys_del` decimal(1,0) NOT NULL DEFAULT '0', `a_s` decimal(2,0) DEFAULT '0', `a_p` datetime DEFAULT NULL, `a_c` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL, `a_h` decimal(3,0) DEFAULT '0', PRIMARY KEY (`sys_doc`) USING BTREE, KEY `IDX01_T` (`a_p`) USING BTREE, KEY `IDX02_T` (`sys_del`) USING BTREE) ENGINE=InnoDB; CREATE TRIGGER auto_syn_update1 AFTER UPDATE ON t2 FOR EACH ROW BEGIN IF (OLD.a_c = NEW.a_c) THEN IF (OLD.a_s <> NEW.a_s OR OLD.a_p <> NEW.a_p OR OLD.sys_del <> NEW.sys_del OR OLD.a_h <> NEW.a_h) THEN UPDATE t1 SET a_s=NEW.a_s, a_p=NEW.a_p, sys_del=NEW.sys_del, a_h=NEW.a_h WHERE sys_doc=NEW.sys_doc; END IF; END IF; END; CALL insert_data(1000); CALL update_data(1,250); CALL update_data(251,500); CALL update_data(501,750); CALL update_data(751,1000);",
    "Affected Elements": "UPDATE, Trigger, WHERE clause",
    "Root Cause Analysis": "The bug is likely caused by the inability of the slave to find the corresponding records in the `t1` table due to missing entries or mismatched keys during replication when `slave_preserve_commit_order=ON`."
}