{
    "sql": "CREATE TABLE IF NOT EXISTS test (i INT PRIMARY KEY); DROP PROCEDURE IF EXISTS fill_test; delimiter // CREATE PROCEDURE fill_test(e INT) BEGIN DECLARE c INT DEFAULT 1; WHILE c <= e DO INSERT INTO test VALUES (c); SET c := c + 1; END WHILE; END // delimiter ; CALL fill_test(1000000); EXPLAIN SELECT MIN(i) FROM test WHERE i > 50; EXPLAIN SELECT o1.i AS o1, o2.i AS o2 FROM test AS o1 INNER JOIN test AS o2 ON (SELECT MIN(i) FROM test WHERE i > o1.i) = o2.i WHERE o1.i = 50; EXPLAIN SELECT o1.i AS o1, o2.i AS o2 FROM test AS o1 INNER JOIN test AS o2 ON (SELECT MIN(i) FROM test WHERE i > o1.i) = o2.i WHERE o1.i BETWEEN 50 AND 51; EXPLAIN SELECT MIN(i) FROM test WHERE i > 50; EXPLAIN SELECT o1.i AS o1, o2.i AS o2 FROM test AS o1 INNER JOIN test AS o2 ON (SELECT MIN(i) FROM test WHERE i > o1.i) = o2.i WHERE o1.i = 50; EXPLAIN SELECT o1.i AS o1, o2.i AS o2 FROM test AS o1 INNER JOIN test AS o2 ON (SELECT MIN(i) FROM test WHERE i > o1.i) = o2.i WHERE o1.i BETWEEN 50 AND 51; DROP PROCEDURE fill_test; DROP TABLE test;",
    "Affected Elements": "DEPENDENT SUBQUERY, INNER JOIN, WHERE clause",
    "Root Cause Analysis": "The optimizer fails to recognize constant values from the outer query in dependent subqueries, leading to unnecessary full table scans."
}