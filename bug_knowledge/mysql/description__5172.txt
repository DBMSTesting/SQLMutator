{
    "sql": "CREATE DATABASE test_handler_bug; USE test_handler_bug; DROP TABLE IF EXISTS test_handler_bug.t1; CREATE TABLE test_handler_bug.t1 (s1 INT, PRIMARY KEY (s1)); INSERT INTO test_handler_bug.t1 (s1) VALUES (1); INSERT INTO test_handler_bug.t1 (s1) VALUES (2); DROP TABLE IF EXISTS test_handler_bug.t2; CREATE TABLE test_handler_bug.t2 (s1 INT, s2 INT); INSERT INTO test_handler_bug.t2 (s1, s2) VALUES (1, 2); DROP PROCEDURE IF EXISTS handlerdemo; DELIMITER // CREATE PROCEDURE handlerdemo () BEGIN DECLARE CONTINUE HANDLER FOR SQLSTATE '23000' SET @message = 'The handler has been triggered, no problems found'; SET @message = 'The handler has NOT been triggered, something is wrong'; UPDATE test_handler_bug.t1 INNER JOIN test_handler_bug.t2 ON test_handler_bug.t1.s1 = test_handler_bug.t2.s1 SET test_handler_bug.t1.s1 = test_handler_bug.t2.s2; END// DELIMITER ; CALL handlerdemo(); SELECT @message;",
    "Affected Elements": "UPDATE statement with INNER JOIN, DECLARE CONTINUE HANDLER, SQLSTATE '23000'",
    "Root Cause Analysis": "The error handler in the stored procedure is not being triggered for multi-table UPDATE statements that cause duplicate-key errors, leading to incorrect behavior."
}