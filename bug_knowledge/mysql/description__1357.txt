{
    "sql": "drop table if exists t1; drop table if exists t2; drop procedure if exists p1; drop function if exists f1; create table t1 (s1 int); create table t2 (s1 int unique); insert into t1 values (1); delimiter $$; create procedure p1() begin declare a int; declare c cursor for select f1() from t1; declare continue handler for sqlexception select 'caught an exception'; declare continue handler for 1326 select 'caught cursor is not open'; select 'Before open'; open c; select 'Before fetch'; fetch c into a; select 'Before close'; close c; end $$; create function f1() returns int begin insert into t2 values (2), (2); return 5; end $$; delimiter ;$$; call p1(); drop table t1; drop procedure p1; drop function f1;",
    "Affected Elements": "cursor, declare, open, fetch, close, handler for sqlexception, handler for 1326",
    "Root Cause Analysis": "The cursor state is not fully cleaned up after an exception, leading to reference count leaks in the MEMORY storage engine."
}