{
    "sql": "DROP TABLE IF EXISTS test_tab; CREATE TABLE test_tab (ID int primary key, Value int, Name varchar(20), index(Value, Name)) ENGINE=pbxt; INSERT test_tab values(1, 1, 'A'); INSERT test_tab values(2, 1, 'B'); INSERT test_tab values(3, 1, 'C'); INSERT test_tab values(4, 2, 'D'); INSERT test_tab values(5, 2, 'E'); INSERT test_tab values(6, 2, 'F'); INSERT test_tab values(7, 2, 'G'); SELECT * FROM test_tab; BEGIN; SELECT * FROM test_tab WHERE id = 5 FOR UPDATE; BEGIN; SELECT * FROM test_tab WHERE value >= 2 ORDER BY value, name FOR UPDATE; UPDATE test_tab SET value = 3 WHERE id = 6; COMMIT; SELECT * FROM test_tab;",
    "Affected Elements": "SELECT, ORDER BY, FOR UPDATE, COMMIT",
    "Root Cause Analysis": "The issue arises from the PBXT storage engine not properly handling the HA_READ_ORDER flag on a per-query basis, leading to inconsistent row ordering when using index scans with concurrent updates."
}