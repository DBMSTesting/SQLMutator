{
    "sql": "CREATE TABLE t0 ( c30 TINYBLOB , INDEX i0 ( ( c30 + -77 ) ) ); INSERT INTO t0 VALUES ( -29 ) , ( 84 ); ALTER TABLE t0 RENAME TO t1; INSERT INTO t1 VALUES ( -99 ) , ( -12 ); SELECT BIT_OR( t2.c44 ) AS c50, CONVERT( NOT RAND() IN ( ( SELECT t3.* FROM ( SELECT RPAD( t2.c44, ASIN( ( SELECT COUNT(*) FROM t1 WHERE t1.c30 IS NOT NULL ) ) ) , 'e[19729%0>k]@5[=%&-U8BgD4!`:`}qG18M0Vl' ) | ACOS( -47 ) NOT REGEXP ROW_NUMBER() OVER () >> SQRT( ( SELECT MAX(c30) FROM t1 ) ) + FORMAT( -1, -73 ) & NTH_VALUE( -41 IN ( 102, -29, 123 ), 1036942576391486611 ) FROM FIRST RESPECT NULLS OVER () AS c30 FROM t1 ) AS t3 GROUP BY c30, c44 WITH ROLLUP HAVING ~ LPAD( t2.c44, '+~w~7@]x.J$c;~', BIT_XOR(c44) & BIT_OR( 113 ) ) = 108 WINDOW w0 AS ( PARTITION BY t3.c30 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) ) ) , UNSIGNED ) AS c16 FROM ( SELECT c30 AS c44 FROM t1 GROUP BY c30 WITH ROLLUP ) AS t2 JOIN t1 ON t1.c30 = t1.c30 GROUP BY c44, c44;",
    "Affected Elements": "BIT_OR, CONVERT, RAND, RPAD, ASIN, ACOS, ROW_NUMBER, SQRT, FORMAT, NTH_VALUE, FIRST RESPECT NULLS, GROUP BY, HAVING, JOIN",
    "Root Cause Analysis": "The assertion failure is likely caused by the manipulation of data types (e.g., TINYBLOB and the use of mathematical operations on them), leading to an empty value buffer when performing operations in the aggregate functions."
}