{
    "sql": "CREATE TABLE t1 ( id int PRIMARY KEY, col1 int ); CREATE TABLE t2 ( id int PRIMARY KEY, col1 int, col2 varchar(1000), col3 varchar(1000), col4 varchar(1000), KEY index_col1 (col1) ); CREATE TABLE t3 ( id int PRIMARY KEY, col1 int, col2 varchar(1000), col3 varchar(1000), col4 varchar(1000), KEY index_col1 (col1) ); CREATE TABLE t4 ( id int PRIMARY KEY, col1 int, col2 varchar(1000), col3 varchar(1000), col4 varchar(1000), KEY index_col1 (col1) ); CREATE PROCEDURE insert_data () BEGIN DECLARE num int; SET num = 1; WHILE num < 10000 DO INSERT INTO t1 VALUES (num, num / 100); IF num < 1000 THEN INSERT INTO t2 VALUES (num, num / 10, repeat('a', 1000), repeat('a', 1000), repeat('a', 1000)); INSERT INTO t3 VALUES (num, num / 10, repeat('a', 1000), repeat('a', 1000), repeat('a', 1000)); INSERT INTO t4 VALUES (num, num / 10, repeat('a', 1000), repeat('a', 1000), repeat('a', 1000)); END IF; SET num = num + 1; END WHILE; END; CALL insert_data(); SELECT DISTINCT t1.* FROM t1 LEFT JOIN t2 ON t1.col1 = t2.col1 LEFT JOIN t3 ON t1.col1 = t3.col1 LEFT JOIN t4 ON t1.col1 = t4.col1;",
    "Affected Elements": "DISTINCT operator, LEFT JOIN clause",
    "Root Cause Analysis": "Performance regression in the DISTINCT operator between MySQL versions 5.7 and 8.0, likely due to changes in the query optimizer or execution plan."
}