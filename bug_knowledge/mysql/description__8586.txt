{
    "sql": "DROP TABLE IF EXISTS vs_server; CREATE TABLE vs_server (nGroupId INT); INSERT INTO vs_server(nGroupId) VALUES (15), (21); DROP PROCEDURE IF EXISTS test_proc; CREATE PROCEDURE test_proc (OUT nVal INT) BEGIN DROP TEMPORARY TABLE IF EXISTS tmp_table; CREATE TEMPORARY TABLE IF NOT EXISTS tmp_table (group_id INT) ENGINE=MEMORY DEFAULT CHARACTER SET `ascii` COLLATE `ascii_general_ci`; INSERT INTO tmp_table (group_id) VALUES (199); SET nVal = 0; IF (EXISTS (SELECT * FROM vs_server INNER JOIN tmp_table ON vs_server.nGroupId = tmp_table.group_id)) THEN SET nVal = 1; END IF; DROP TEMPORARY TABLE IF EXISTS tmp_table; END; SET @arg = NULL; CALL test_proc(@arg); SELECT @arg; SET @arg = NULL; CALL test_proc(@arg); SELECT @arg;",
    "Affected Elements": "EXISTS, IF, TEMPORARY TABLE",
    "Root Cause Analysis": "The issue arises from the misuse of temporary tables and the EXISTS condition within the stored procedure, leading to inconsistent output for the OUT parameter."
}