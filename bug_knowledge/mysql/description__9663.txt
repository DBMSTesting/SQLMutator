{
    "sql": "select portal_id, id from file_metadata where ( (portal_id > 2459647) or ( ((portal_id = 2459647)) AND (id > 1459) ) ) order by portal_id asc, id asc limit 1 offset 99; select portal_id, id from file_metadata ignore index(file_updated,file_deleted,file_name,type_name_deleted_updated,archive_hidden,frequent_search,frequent_search2,files_by_type_and_visibility,file_md5) where ( (portal_id > 2459647) or ( ((portal_id = 2459647)) AND (id > 1459) ) ) order by portal_id asc, id asc limit 1 offset 99; select portal_id, id from file_metadata force index(PRIMARY) where ( (portal_id > 2459647) or ( ((portal_id = 2459647)) AND (id > 1459) ) ) order by portal_id asc, id asc limit 1 offset 99; select /*+ MAX_EXECUTION_TIME(5000) */ portal_id, id from file_metadata force index(PRIMARY) where ( (portal_id > 2459647) or ( ((portal_id = 2459647)) AND (id > 1459) ) ) order by portal_id asc, id asc limit 1 offset 99;",
    "Affected Elements": "OFFSET, LIMIT, ORDER BY, FORCE INDEX, IGNORE INDEX",
    "Root Cause Analysis": "The query optimizer is choosing an inefficient execution plan due to the use of compound primary keys and the combination of conditions in the WHERE clause, leading to a full index scan instead of a range scan."
}