{
    "sql": "CREATE TABLE test1 ( uid int NOT NULL AUTO_INCREMENT, block_id int NOT NULL DEFAULT '0', bin_data mediumblob NOT NULL, extra_bin_data blob, data_version int unsigned NOT NULL DEFAULT 0, tag_list varchar(128) NOT NULL DEFAULT '', before_login_bin_data blob, last_save_time timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (uid) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci ROW_FORMAT=COMPACT; INSERT INTO test1 (block_id, bin_data, extra_bin_data, before_login_bin_data) VALUES (ROUND(1.0 + 1048.0 * RAND()), repeat(md5(rand()),8192), md5(rand()), repeat(md5(rand()),20)); SELECT now(), name, COUNT FROM information_schema.innodb_metrics WHERE name IN ('trx_rseg_history_len'); UPDATE test1 SET bin_data = repeat(md5(rand()),9600), extra_bin_data='', data_version=506 WHERE uid=1;",
    "Affected Elements": "UPDATE statements on BLOB columns, use of large BLOB sizes, high transaction segment history length",
    "Root Cause Analysis": "Frequent updates to BLOB columns with varying sizes lead to inefficient purging and accumulation of transaction segment history, causing performance degradation."
}