{
    "sql": "CREATE TABLE t_left (id INT NOT NULL PRIMARY KEY, value INT, KEY ix_left_value (value)); CREATE TABLE t_right (id INT NOT NULL PRIMARY KEY, nvalue INT, nnvalue INT NOT NULL, KEY ix_right_nvalue (nvalue), KEY ix_right_nnvalue (nnvalue)); INSERT INTO t_left VALUES (1, 1), (2, 2), (3, 3), (4, NULL); INSERT INTO t_right VALUES (1, 1, 1), (3, 3, 3), (4, NULL, 4); EXPLAIN SELECT l.* FROM t_left l LEFT JOIN t_right r ON l.value = r.nnvalue WHERE r.nnvalue IS NULL; EXPLAIN SELECT l.* FROM t_left l LEFT JOIN t_right r ON l.value = r.nvalue WHERE r.nvalue IS NULL;",
    "Affected Elements": "LEFT JOIN, ON clause, WHERE clause",
    "Root Cause Analysis": "The optimizer fails to apply the NOT EXISTS optimization for nullable columns in the right table when they are part of the equality condition in the LEFT JOIN."
}