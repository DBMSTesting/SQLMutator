{
    "sql": "CREATE TABLE t (a INT) ENGINE=innodb; DECLARE @prepared_trx_number INT = 1000; DECLARE @k INT = 0; WHILE @k < @prepared_trx_number DO XA START 'prepared_trx_' + CAST(@k AS VARCHAR); INSERT INTO t SET a=@k; XA END 'prepared_trx_' + CAST(@k AS VARCHAR); XA PREPARE 'prepared_trx_' + CAST(@k AS VARCHAR); SET @k = @k + 1; END WHILE; WHILE @k < @prepared_trx_number DO XA COMMIT 'prepared_trx_' + CAST(@k AS VARCHAR); SET @k = @k + 1; END WHILE; DROP TABLE t;",
    "Affected Elements": "XA transactions, memory allocation logic in transaction recovery",
    "Root Cause Analysis": "The bug is caused by insufficient memory allocation handling in transaction recovery, leading to a situation where recovery cannot proceed due to an excessive number of external prepared transactions."
}