{
    "sql": "DROP DATABASE IF EXISTS A; DROP DATABASE IF EXISTS B; CREATE DATABASE A; CREATE DATABASE B; CREATE TABLE A.`A` ( `id` INT UNSIGNED NOT NULL AUTO_INCREMENT, `prospect_id` VARCHAR(50) NULL DEFAULT NULL, PRIMARY KEY (`id`), INDEX `prospect_id` (`prospect_id`)); CREATE TABLE B.`B` ( `uuid` VARCHAR(50) NOT NULL, PRIMARY KEY (`uuid`)); INSERT INTO A.A (`id`, `prospect_id`) VALUES (1, '1'); INSERT INTO A.A (`id`, `prospect_id`) VALUES (2, '2'); INSERT INTO B.B (`uuid`) VALUES ('1'); DROP PROCEDURE IF EXISTS A.`Group_test`; DELIMITER \\ CREATE PROCEDURE A.`Group_test`( IN `oid_` INT) BEGIN SELECT NOW(), oid_, GROUP_CONCAT(CONCAT('{\"id\": \"',oid_, '\",\"timestamp\":\"', NOW(), '\"}')) FROM A.A INNER JOIN B.B ON B.uuid = A.prospect_id WHERE A.id = oid_; END\\ DELIMITER ; USE A; CALL Group_test(1); DO SLEEP(2); CALL Group_test(2);",
    "Affected Elements": "GROUP_CONCAT, INNER JOIN, procedure calls",
    "Root Cause Analysis": "The GROUP_CONCAT function is returning cached results due to improper handling of temporary results or state in stored procedures when querying across different databases."
}