{
    "sql": "CREATE DATABASE sandpit; CREATE TABLE sandpit.parents (id INT NOT NULL AUTO_INCREMENT, name VARCHAR(255) NOT NULL, PRIMARY KEY (id)); INSERT INTO sandpit.parents (name) VALUES ('A'); INSERT INTO sandpit.parents (name) VALUES ('B'); INSERT INTO sandpit.parents (name) VALUES ('C'); CREATE TABLE sandpit.children (id INT NOT NULL AUTO_INCREMENT, name VARCHAR(255) NOT NULL, parentId INT NOT NULL, PRIMARY KEY (id), FOREIGN KEY (parentId) REFERENCES sandpit.parents(id)); INSERT INTO sandpit.children (parentId, name) VALUES (1, '1'); INSERT INTO sandpit.children (parentId, name) VALUES (2, '1'); INSERT INTO sandpit.children (parentId, name) VALUES (2, '2'); INSERT INTO sandpit.children (parentId, name) VALUES (2, '3'); INSERT INTO sandpit.children (parentId, name) VALUES (2, '4'); INSERT INTO sandpit.children (parentId, name) VALUES (2, '5'); DELIMITER $$ DROP FUNCTION IF EXISTS `expensive`$$ CREATE FUNCTION `expensive`(pParentId INT) RETURNS INT DETERMINISTIC BEGIN DO SLEEP(1); RETURN 0; END$$ DELIMITER ; SET @pParentId = 2; WITH cte AS (SELECT id, sandpit.expensive(id) AS result FROM sandpit.parents WHERE id = @pParentId) SELECT p.*, c.*, cte.result FROM sandpit.parents p LEFT OUTER JOIN sandpit.children c ON c.parentId = p.id JOIN cte ON cte.id = p.id WHERE p.id = @pParentId;",
    "Affected Elements": "CTE, function calls, JOIN clauses",
    "Root Cause Analysis": "The function is being called multiple times instead of once due to the way MySQL handles CTEs and user-defined functions, leading to performance issues."
}