{
    "sql": "CREATE TABLE t1 (c1 INT); INSERT INTO t1 VALUES(1); SET GLOBAL max_connections = 100000; SELECT * FROM t1; SET TRANSACTION ISOLATION LEVEL REPEATABLE READ; BEGIN; SELECT * FROM t1; SELECT count(*) FROM information_schema.innodb_trx; SELECT count(*) FROM performance_schema.data_lock_waits; SELECT now(); SELECT t.trx_id AS trxId, t.trx_mysql_thread_id AS trxMySqlThreadId, t.trx_state AS trxStatus, left(t.trx_query, 5000) AS trxQuery, t.trx_rows_locked AS trxRowsLocked, t.trx_rows_modified AS trxRowsModified, timestampdiff(SECOND, t.trx_wait_started, convert_tz(now(), @@time_zone, 'SYSTEM')) AS trxWaitLockTime, timestampdiff(SECOND, t.trx_started, convert_tz(now(), @@time_zone, 'SYSTEM')) AS trxDurationTime, wb.REQUESTING_ENGINE_TRANSACTION_ID AS blockedTrx, wb.REQUESTING_ENGINE_LOCK_ID AS blockedLock, w.BLOCKING_ENGINE_TRANSACTION_ID AS blockedByTrx, w.BLOCKING_ENGINE_LOCK_ID AS blockedByLock, p.id AS sessionId, p.user AS loginUser, p.host AS host, p.db AS db, p.command AS command, p.time AS sqlExecuteTime, p.state AS sessionState, left(p.info, 5000) AS sqlText FROM information_schema.innodb_trx t LEFT JOIN performance_schema.data_lock_waits w ON t.trx_id=w.REQUESTING_ENGINE_TRANSACTION_ID LEFT JOIN performance_schema.data_lock_waits wb ON t.trx_id= wb.BLOCKING_ENGINE_TRANSACTION_ID LEFT JOIN information_schema.processlist p ON t.trx_mysql_thread_id = p.id WHERE timestampdiff(SECOND, t.trx_wait_started, convert_tz(now(), @@time_zone, 'SYSTEM')) > 100 OR wb.REQUESTING_ENGINE_TRANSACTION_ID IS NOT NULL;",
    "Affected Elements": "JOIN clauses, timestampdiff function, and use of indexes in the SELECT statement.",
    "Root Cause Analysis": "The presence of 'fake indexes' on performance_schema.data_lock_waits leads to inefficient query execution plans, causing unnecessary full table scans."
}