{
    "sql": "DROP TABLE IF EXISTS `parent`; CREATE TABLE `parent` ( `id` bigint NOT NULL AUTO_INCREMENT PRIMARY KEY ) ENGINE=InnoDB; DROP TABLE IF EXISTS `child`; CREATE TABLE `child` ( `id` bigint NOT NULL AUTO_INCREMENT PRIMARY KEY, `parent_id` bigint NOT NULL, `seq` int DEFAULT NULL ) ENGINE=InnoDB; INSERT INTO `parent` VALUES (40); INSERT INTO `child` VALUES ( 1, 10, 100), ( 2, 20, 200), ( 3, 30, 200), ( 4, 40, 200), ( 5, 50, 200), ( 6, 40, 100), ( 7, 60, 200), ( 8, 70, 200), ( 9, 80, 100), (10, 10, 100); SELECT child_top.id FROM parent LEFT OUTER JOIN child child_top ON ( parent.id = child_top.parent_id AND child_top.id IN ( SELECT t.id_top FROM ( SELECT c.id AS id_top, ROW_NUMBER() OVER (PARTITION BY c.parent_id ORDER BY c.seq DESC) AS rn FROM child c ) t WHERE t.rn = 1 ) );",
    "Affected Elements": "ROW_NUMBER(), LEFT OUTER JOIN, PARTITION BY, ORDER BY",
    "Root Cause Analysis": "The use of ROW_NUMBER() in conjunction with a LEFT OUTER JOIN leads to multiple rows being returned due to the way the subquery filters child records."
}