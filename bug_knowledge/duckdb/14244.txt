{
    "sql": "create or replace function list_update(set, i, value) as ( set[1:i-1] || [value] || set[i+1:] ); create or replace function set_union(set1, set2) as ( list_sort(list_distinct((set1 || set2))) ); create or replace function merge(listofsets, i, j) as ( case when list_has_any(listofsets[i]::INTEGER[], listofsets[j]::INTEGER[]) then list_update( list_update(listofsets, i, set_union(listofsets[i], listofsets[j])), j, []) else listofsets end ); create or replace function merge_i(listofsets, i) as table ( with recursive cte(j,s) as ( select i + 1, listofsets union all select j+1, merge(s, i, j) from cte where j <= length(listofsets) ) select last(s) as s from cte limit 1 ); with recursive cte(i,s) as ( select 1 as i, [[1, 2], [2, 3], [2, 3, 4]] as s union all select i+1, (from merge_i(s, i) limit 1) as s from cte where i <= 3 ) select * from cte;",
    "Affected Elements": "with recursive, CTE name scoping",
    "Root Cause Analysis": "The issue arises from the improper scoping of CTE names within nested function definitions, causing conflicts and unexpected results."
}