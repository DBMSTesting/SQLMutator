{
    "sql": "CREATE TABLE t0(c0 BOOLEAN DEFAULT('')); INSERT INTO t0(c0) VALUES (5.97637006E8); INSERT INTO t0(c0) VALUES (true); CREATE VIEW v0(c0) AS SELECT t0.rowid FROM t0 LIMIT 1883109883; UPDATE t0 SET c0=760092610; INSERT INTO t0(c0) VALUES (0.3130780357818306); INSERT INTO t0(c0) VALUES (137682420); INSERT INTO t0(c0) VALUES (1380418026); INSERT INTO t0(c0) VALUES (-919334645); ANALYZE; UPDATE t0 SET c0='QvK!'; UPDATE t0 SET c0=-16721701; UPDATE t0 SET c0=false; INSERT INTO t0(c0) VALUES (0.4470722472408909); INSERT INTO t0(c0) VALUES (0.15665104429876675); CREATE INDEX i4 ON t0(c0); SELECT STDDEV_POP(ROWID) FROM v0, t0 GROUP BY t0.c0; SELECT STDDEV_POP(ROWID) FROM v0, t0 GROUP BY t0.c0 HAVING (t0.c0 IS NOT NULL) UNION ALL SELECT STDDEV_POP(ROWID) FROM v0, t0 GROUP BY t0.c0 HAVING (NOT (t0.c0 IS NOT NULL)) UNION ALL SELECT STDDEV_POP(ROWID) FROM v0, t0 GROUP BY t0.c0 HAVING (t0.c0 IS NULL);",
    "Affected Elements": "STDDEV_POP, HAVING, UNION ALL, NULL checks",
    "Root Cause Analysis": "Inconsistency in results due to three-valued logic handling in SQL when using STDDEV_POP with NULL values."
}