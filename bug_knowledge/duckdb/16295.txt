{
    "sql": "CREATE TABLE t0(c0 FLOAT4, PRIMARY KEY(c0)); CREATE TABLE t1(c0 TINYINT); INSERT INTO t0(c0) VALUES (828162875); ANALYZE; CREATE UNIQUE INDEX i4 ON t0(c0); INSERT INTO t0(c0) VALUES (true), (0.23844998330498623); DELETE FROM t1; UPDATE t1 SET c0=true; INSERT INTO t1(c0) VALUES (DEFAULT); INSERT INTO t1(c0) VALUES (false); INSERT INTO t0(c0) VALUES (0.008868014415201575); INSERT INTO t1(c0) VALUES (-0.0); VACUUM; INSERT INTO t1(c0) VALUES (0.1344221522427579); INSERT INTO t0(c0) VALUES (0.4213777084710949); INSERT INTO t1(c0) VALUES (true), (DEFAULT); UPDATE t1 SET c0=false; UPDATE t1 SET c0=false; CREATE INDEX i3 ON t0(c0); CREATE INDEX i2 ON t0(c0); INSERT INTO t0(c0) VALUES ('0.8077319368432945'); UPDATE t1 SET c0=0.0740568656443994; CREATE UNIQUE INDEX i0 ON t0(c0); CREATE UNIQUE INDEX i1 ON t0(c0); SELECT STRING_AGG(t1.rowid) FROM t1, t0 GROUP BY ((((0.7559241830112852) AND (((TIMESTAMP '1969-12-07 15:04:23') != (DATE '1969-12-18'))))) IS NULL); SELECT STRING_AGG(t1.rowid) FROM t1, t0 GROUP BY ((((0.7559241830112852) AND (((TIMESTAMP '1969-12-07 15:04:23') != (DATE '1969-12-18'))))) IS NULL) HAVING FIRST(t1.c0) UNION ALL SELECT STRING_AGG(t1.rowid) FROM t1, t0 GROUP BY ((((0.7559241830112852) AND (((TIMESTAMP '1969-12-07 15:04:23') != (DATE '1969-12-18'))))) IS NULL) HAVING (NOT FIRST(t1.c0)) UNION ALL SELECT STRING_AGG(t1.rowid) FROM t1, t0 GROUP BY ((((0.7559241830112852) AND (((TIMESTAMP '1969-12-07 15:04:23') != (DATE '1969-12-18'))))) IS NULL) HAVING ((FIRST(t1.c0)) IS NULL);",
    "Affected Elements": "STRING_AGG, GROUP BY, HAVING, FIRST",
    "Root Cause Analysis": "Inconsistency in results due to the use of three-valued logic in HAVING clauses combined with STRING_AGG function leading to unexpected aggregation behavior."
}