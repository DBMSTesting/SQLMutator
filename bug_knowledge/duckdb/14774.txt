{
    "sql": "create or replace function indicator(lst0, item) as ( with recursive cte as ( select 0 as ix, 0 as counter union all select ix+1, counter + if( lst0[ix+1] = item, 1, 0 ) as counter from cte where ix < length(lst0) ) select array_agg(counter order by ix)[2:] from cte); create or replace function s_(lst, item, nth, replacement, p) as ( select if( p=0, lst, if( nth=1, lst[1:p-1] || ['X'] || lst[p+1:], (with ix_t as (select list_position(indicator(lst, item), nth) as ix) select if(ix, lst[1:ix-1] || ['X'] || lst[ix+1:], lst) from ix_t) ) ) ); create or replace function s(lst, item, nth, replacement) as ( s_(lst, item, nth, replacement, coalesce(list_position(lst,item), 0)) ); select s(['a','a','a'], 'a', 2, 'X'); select s(['a','X','a'], 'a', 2, 'Y'); select s(['a','a','a'], 'a', 2, 'X').s('a', 2, 'Y') as wrong; with lst_t as (select regexp_extract_all('aaaaaaaaaaa','.') as lst) select s(lst, 'a', 1, 'A'), s(lst, 'a', 1, 'B'), s(lst, 'a', 1, 'C'), s(lst, 'a', 1, 'D') from lst_t;",
    "Affected Elements": "Function s(), Function s_(), Recursive CTE, array_agg()",
    "Root Cause Analysis": "Incorrect handling of chained function calls leading to exponential performance degradation and incorrect results."
}