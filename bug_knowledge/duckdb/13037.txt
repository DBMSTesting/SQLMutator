{
    "sql": "create table t as select * from (select * from (select * from (select * from (select * from (select * from (select * from (select * from (select * from (select * from (select * from (select * from (select * from (select * from (select * from (select * from (select * from (select * from (select * from (select * from data_slice))))) as data_slice) as data_slice) as data_slice) as data_slice) as data_slice) as data_slice) as data_slice) as data_slice) as data_slice) as data_slice) as data_slice) as data_slice) as data_slice) as data_slice) as data_slice) as data_slice) as data_slice) as data_slice) as data_slice) as data_slice) as data_slice) as data_slice) as data_slice) as data_slice) as data_slice) as data_slice) as data_slice) as data_slice) as data_slice) as data_slice) as data_slice); insert into t select * from data_slice; checkpoint(); commit();",
    "Affected Elements": "INSERT, CREATE TABLE, SELECT",
    "Root Cause Analysis": "The memory leak appears to be caused by the reuse of the dataframe in a loop without proper cleanup, leading DuckDB to retain references to the old objects, resulting in increased memory usage."
}