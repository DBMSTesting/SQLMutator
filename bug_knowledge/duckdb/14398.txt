{
    "sql": "CREATE TABLE testdata (date DATE, \"group\" INT, count INT, status STRING); INSERT INTO testdata VALUES ('2024-01-01', 1, 1000, 'ordered'), ('2024-02-01', 1, 1000, 'dispatched'), ('2024-03-01', 1, 1000, 'dispatched'), ('2024-01-01', 2, 2000, 'ordered'), ('2024-02-01', 2, 2000, 'ordered'), ('2024-03-01', 2, 2000, 'ordered'), ('2024-01-01', 3, 3000, 'ordered'), ('2024-02-01', 3, 3000, 'ordered'), ('2024-03-01', 3, 3000, 'late'), ('2024-01-01', 4, 4000, 'ordered'), ('2024-02-01', 4, 4000, 'ordered'), ('2024-03-01', 4, 4000, 'ordered'), ('2024-01-01', 5, 5000, 'ordered'), ('2024-02-01', 5, 5000, 'late'), ('2024-03-01', 5, 5000, 'ordered'), ('2024-01-01', 6, 1000, 'dispatched'), ('2024-02-01', 6, 1000, 'dispatched'), ('2024-03-01', 6, 1000, 'dispatched'); SELECT \"t0\".\"date\", \"t0\".\"group\", \"t0\".\"count\", \"t0\".\"status\", LEAD(\"t0\".\"date\", 2) OVER (PARTITION BY \"t0\".\"group\" ORDER BY \"t0\".\"date\" ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS \"end_date\", LEAD(\"t0\".\"status\", 2) OVER (PARTITION BY \"t0\".\"group\" ORDER BY \"t0\".\"date\" ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS \"end_status\" FROM \"testdata\" AS \"t0\";",
    "Affected Elements": "LEAD function, OVER clause, PARTITION BY clause, ORDER BY clause",
    "Root Cause Analysis": "The LEAD function is returning NULL for group 6 due to incorrect partitioning or ordering within the defined window frame."
}