{
    "sql": "CREATE TABLE A(Name text); CREATE TABLE Items(ItemName text, Name text); INSERT INTO Items VALUES('Item1', 'Parent'); INSERT INTO Items VALUES('Item2', 'Parent'); CREATE TABLE B(Name text); SELECT Items.ItemName FROM Items LEFT JOIN A ON (A.Name = Items.ItemName AND Items.ItemName = 'dummy') LEFT JOIN B ON (B.Name = Items.ItemName) WHERE Items.Name = 'Parent'; SELECT Items.ItemName FROM Items LEFT JOIN A ON (A.Name = Items.ItemName AND Items.ItemName = 'dummy') LEFT JOIN B ON (B.Name = Items.ItemName) WHERE Items.Name = 'Parent' ORDER BY Items.ItemName; CREATE TABLE t1(a); CREATE TABLE t2(b); INSERT INTO t1 VALUES(1); CREATE INDEX t1x ON t1(a) WHERE a=99; PRAGMA automatic_index=OFF; SELECT * FROM t1 LEFT JOIN t2 ON (a=99) ORDER BY a;",
    "Affected Elements": "LEFT JOIN, ORDER BY, WHERE clause, partial index constraints",
    "Root Cause Analysis": "The bug arises due to the incorrect handling of qualifying constraints for partial indexes located within the ON clause of LEFT JOINs, leading to unexpected results when an ORDER BY clause is applied."
}