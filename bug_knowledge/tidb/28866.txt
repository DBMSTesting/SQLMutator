{
    "sql": "set prepared-plan-cache.enabled; drop table if exists t1, t2; create table t1 (c_int int, c_str varchar(40) character set utf8 collate utf8_bin, c_datetime datetime, c_timestamp timestamp, c_double double, c_decimal decimal(12, 6), c_enum enum('blue','green','red','yellow','white','orange','purple'), primary key(c_int, c_str), key(c_int), key(c_str), key(c_decimal), unique key(c_datetime), key(c_timestamp), key(c_enum)); create table t2 (c_int int, c_str varchar(40) character set utf8 collate utf8_bin, c_datetime datetime, c_timestamp timestamp, c_double double, c_decimal decimal(12, 6), c_enum enum('blue','green','red','yellow','white','orange','purple'), primary key(c_str), unique key(c_str), key(c_decimal); prepare stmt from 'insert into t2 values (589, \"happy chatterjee\", \"2020-04-04 20:46:05\", \"2020-02-01 19:21:33\", 78.500410, 2.236, \"green\"); execute stmt; prepare stmt from 'insert into t2 values (589, \"trusting ritchie\", \"2020-03-27 20:25:46\", \"2020-06-21 22:13:33\", 78.500410, 2.236, \"green\"); execute stmt; prepare stmt from 'insert into t1 values (589, \"trusting ritchie\", \"2020-03-27 20:25:46\", \"2020-06-21 22:13:33\", 78.500410, 2.236, \"green\"); execute stmt; begin; prepare stmt from 'select /*+ INL_JOIN(t1,t2) */ * from t1 join t2 on t1.c_str <= t2.c_str where t1.c_int in (207, 104, 361)'; execute stmt; set @a=589,@b=136,@c=202; execute stmt using @a,@b,@c; commit;",
    "Affected Elements": "INL_JOIN, join, where, execute",
    "Root Cause Analysis": "The query optimizer is not correctly utilizing the prepared statement with the INL_JOIN hint, leading to an incorrect execution plan and resulting in no rows being returned."
}