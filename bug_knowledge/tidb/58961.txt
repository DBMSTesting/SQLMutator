{
    "sql": "DROP DATABASE IF EXISTS database5; CREATE DATABASE database5; USE database5; CREATE TABLE t0(c0 BLOB(496), c1 NUMERIC, c2 CHAR DEFAULT '['); CREATE TABLE t1(c0 TINYINT UNSIGNED ZEROFILL CHECK (c0)); SET @@tidb_opt_insubq_to_join_and_agg=1; INSERT INTO t0(c0) VALUES ('9g') ON DUPLICATE KEY UPDATE c1=((true) NOT LIKE(CEIL(t0.c0))); TRUNCATE t0; SET @@tidb_enable_window_function=1; REPLACE INTO t0(c2, c0, c1) VALUES ('1', '', 1174771409); REPLACE INTO t0 VALUES ('1416709513', 1167325546, '['); INSERT DELAYED INTO t0(c1, c0, c2) VALUES (533578369, '9g', '['), (275009087, '[]', '1'), (1939748196, '275009087', '-'); SET @@tidb_distsql_scan_concurrency=394; SET @@tidb_init_chunk_size=3; CREATE INDEX i0 ON t0(c2 ASC, c1 DESC, c0(148)); REPLACE INTO t0(c2, c1) VALUES ('1', 1158740954); INSERT INTO t0 VALUES ('', 275009087, '9'); INSERT IGNORE INTO t0(c2) VALUES ('F'); CREATE OR REPLACE VIEW v0(c0) AS SELECT CEILING('ﯚ\r-FDsi') FROM t0 WHERE t0.c2; SELECT t0.c0, v0.c0, t0.c1, t1.c0 FROM t0, v0 LEFT JOIN t1 ON ''; SELECT t0.c0, v0.c0, t0.c1, t1.c0 FROM t0, v0 LEFT OUTER JOIN t1 ON '' WHERE FIELD(v0.c0, (~ (((((t0.c2) AND (t0.c1))) << (t1.c0)))), 'F', '8') UNION ALL SELECT t0.c0, v0.c0, t0.c1, t1.c0 FROM t0, v0 LEFT OUTER JOIN t1 ON '' WHERE (NOT (FIELD(v0.c0, (~ (((((t0.c2) AND (t0.c1))) << (t1.c0)))), 'F', '8'))) UNION ALL SELECT t0.c0, v0.c0, t0.c1, t1.c0 FROM t0, v0 LEFT JOIN t1 ON '' WHERE ((FIELD(v0.c0, (~ (((((t0.c2) AND (t0.c1))) << (t1.c0)))), 'F', '8')) IS NULL);",
    "Affected Elements": "LEFT JOIN, LEFT OUTER JOIN, FIELD",
    "Root Cause Analysis": "使用 FIELD 函数与 LEFT OUTER JOIN 结合时，可能导致不一致的结果集，尤其是在处理 NULL 值和三值逻辑时。"
}