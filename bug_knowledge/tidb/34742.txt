{
    "sql": "CREATE TABLE IF NOT EXISTS user_test_partition (id INT UNSIGNED NOT NULL AUTO_INCREMENT, name VARCHAR(64) NOT NULL, phone VARCHAR(16) NOT NULL, gender TINYINT NOT NULL, age TINYINT UNSIGNED NOT NULL DEFAULT 0, created_at BIGINT UNSIGNED NOT NULL DEFAULT 0, PRIMARY KEY (id)) ENGINE=InnoDB DEFAULT CHARSET=utf8 PARTITION BY RANGE(id) (PARTITION p0 VALUES LESS THAN (10000), PARTITION p1 VALUES LESS THAN (20000), PARTITION p2 VALUES LESS THAN (30000)); CREATE TABLE IF NOT EXISTS user_test_no_partition (id INT UNSIGNED NOT NULL AUTO_INCREMENT, name VARCHAR(64) NOT NULL, phone VARCHAR(16) NOT NULL, gender TINYINT NOT NULL, age TINYINT UNSIGNED NOT NULL DEFAULT 0, created_at BIGINT UNSIGNED NOT NULL DEFAULT 0, PRIMARY KEY (id)) ENGINE=InnoDB DEFAULT CHARSET=utf8; INSERT INTO user_test_partition (name, phone, gender, age, created_at) VALUES ('John Doe', '1234567890', 1, 30, UNIX_TIMESTAMP()), ('Jane Doe', '0987654321', 0, 25, UNIX_TIMESTAMP()), ...; INSERT INTO user_test_no_partition (name, phone, gender, age, created_at) VALUES ('Alice', '1112223333', 1, 22, UNIX_TIMESTAMP()), ...; ALTER TABLE user_test_partition EXCHANGE PARTITION p0 WITH TABLE user_test_no_partition; EXECUTE br restore point;",
    "Affected Elements": "ALTER TABLE, EXCHANGE PARTITION, INSERT",
    "Root Cause Analysis": "The root cause of the bug appears to be a failure in the restoration process that leads to incorrect data state in the exchanged partition and the table, indicating potential issues with how partitioned tables are handled during Point-in-Time Recovery (PiTR)."
}