{
    "sql": "CREATE TABLE `A` ( `col_int` int(11) DEFAULT NULL, `col_int_key` int(11) DEFAULT NULL, PRIMARY KEY (`pk`) ); INSERT INTO `A` VALUES (1, NULL), (2, 2), (3, 3); CREATE TABLE `DD` ( `pk` int(11) NOT NULL AUTO_INCREMENT, `col_int` int(11) DEFAULT NULL, PRIMARY KEY (`pk`), KEY `col_int_key` (`col_int_key`) ); INSERT INTO `DD` VALUES (1, 9), (2, 0), (3, 8); SELECT /*+ignore_index(table2,col_varchar_10_utf8,col_int_key)*/ table2 . `col_int_key` AS field1 FROM DD AS table1 LEFT JOIN A AS table2 ON table1 . `col_int` = table2 . `col_int_key` WHERE ( table2 . `col_int` IS NULL OR table1 . `col_int` > 8 ) GROUP BY field1 HAVING field1 <= 4;",
    "Affected Elements": "HAVING clause",
    "Root Cause Analysis": "The issue arises due to incorrect handling of the HAVING clause when indexes are involved, leading to unexpected results."
}