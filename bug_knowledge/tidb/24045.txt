{
    "sql": "use test; drop table if EXISTS student; create table student(id int not null auto_increment, `name` varchar(128) not null default '', age integer not null default 0, sex tinyint not null default 0, primary key (id)); drop table if EXISTS sc; create table sc(id int not null auto_increment, student_id int not null default 0, course_id int not null default 0, score int not null default 0, primary key (id)); insert into student (`name`, `age`, `sex`) VALUES ('student_0', 22, 1), ('student_1', 22, 1), ('student_2', 22, 1), ('student_3', 22, 1), ('student_4', 22, 1), ('student_5', 22, 1), ('student_6', 22, 1), ('student_7', 22, 1), ('student_8', 22, 1); insert into sc (`student_id`, `course_id`, `score`) VALUES (1, 1, 59), (1, 2, 98), (1, 3, 76), (2, 1, 99), (2, 2, 100), (2, 3, 100), (3, 1, 10), (3, 2, 100), (3, 3, 59), (4, 1, 40), (4, 2, 25), (4, 3, 0), (5, 1, 66), (5, 2, 70), (5, 3, 62), (6, 1, 80), (6, 2, 68), (6, 3, 45), (7, 1, 33), (7, 2, 100), (7, 3, 54), (8, 1, 23), (8, 2, 0), (8, 3, 5); select `a`.`id`, `a`.`name`, avg(`b`.`score`) as avg_failed_score from student a join sc b on `a`.`id` = `b`.`student_id` where `b`.`score` < 60 group by `a`.`id` having count(distinct `b`.`course_id`) >= 2;",
    "Affected Elements": "avg, having, join, group by",
    "Root Cause Analysis": "The query causes a runtime error due to an index being accessed out of range, likely related to how the aggregation and groupings are being processed."
}