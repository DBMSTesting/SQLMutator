{
    "sql": "SET @@tidb_constraint_check_in_place_pessimistic = 0; BEGIN; SELECT * FROM your_table WHERE id = non_existent_row_id FOR UPDATE; BEGIN; INSERT INTO your_table (column1, column2) VALUES (value1, value2), (value3, value4); COMMIT; SELECT * FROM your_table WHERE id = second_row_id FOR UPDATE; UPDATE your_table SET for_update_ts = CURRENT_TIMESTAMP WHERE id = locked_row_id; COMMIT;",
    "Affected Elements": "SELECT FOR UPDATE, INSERT, UPDATE, COMMIT",
    "Root Cause Analysis": "The assertion failure occurs due to improper handling of pessimistic locks when a locked row does not exist, leading to inconsistent transaction states."
}