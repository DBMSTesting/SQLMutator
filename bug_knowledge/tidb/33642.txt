{
    "sql": "SET sql_mode = 'NO_ENGINE_SUBSTITUTION'; drop table t9; create table t9 (c1 tinyint, c2 smallint, c3 mediumint, c4 int, c5 integer, c6 bigint, c7 float, c8 double, c9 double precision, c10 real, c12 numeric(8, 4), primary key(c1)) engine = InnoDB; insert into t9 (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c12) values (127, 32767, 8388607, 2147483647, 2147483647, 9223372036854775807, 3.40282e38, 1.111111111111111e50, 1.111111111111111e50, 1.111111111111111e50, 9999.9999); select c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c12 from t9; delete from t9; insert into t9 (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c12) values (-128, -32768, -8388608, -2147483648, -2147483648, -9223372036854775808, -9.22337e18, -9.223372036854776e18, -9.223372036854776e18, -9.223372036854776e18, -9999.9999); select c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c12 from t9; delete from t9; insert into t9 (c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c12) values (1.11111111111111111111e+50, 1.11111111111111111111e+50, 1.11111111111111111111e+50, 1.11111111111111111111e+50, 1.11111111111111111111e+50, 1.11111111111111111111e+50, 1.11111111111111111111e+50, 1.11111111111111111111e+50, 1.11111111111111111111e+50, 1.11111111111111111111e+50, 1.11111111111111111111e+50); select c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c12 from t9; delete from t9;",
    "Affected Elements": "INSERT statements with large numeric values and negative boundary values",
    "Root Cause Analysis": "The issue arises from differences in how TiDB and MySQL handle data type conversions for extreme numeric values, leading to unexpected results."
}