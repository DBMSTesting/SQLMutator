{
    "sql": "SET tidb_enable_index_merge = 1; CREATE TABLE `t2` (`c_int` int(11) NOT NULL, `c_str` varchar(40) DEFAULT NULL, PRIMARY KEY (`c_int`) /*T![clustered_index] CLUSTERED */, KEY `c_int_2` (`c_int`), KEY `c_str` (`c_str`); INSERT INTO t2 VALUES (7, 'infallible feistel'); BEGIN; UPDATE t2 SET c_int = 5; SELECT * FROM t2 WHERE c_int BETWEEN 4 AND 8 OR c_str IS NULL;",
    "Affected Elements": "SET, CREATE TABLE, INSERT, UPDATE, SELECT, WHERE, BETWEEN, OR, IS NULL",
    "Root Cause Analysis": "The bug arises from an incorrect handling of the transaction isolation level, causing the query to return incorrect results during an uncommitted transaction."
}