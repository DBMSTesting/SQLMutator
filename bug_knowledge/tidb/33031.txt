{
    "sql": "use test; drop table if exists UK_RP17396; CREATE TABLE `UK_RP17396` ( `COL1` int(16) DEFAULT '29' COMMENT 'NUMERIC UNIQUE INDEX', `COL2` varchar(20) DEFAULT NULL, `COL4` datetime DEFAULT NULL, `COL3` bigint(20) DEFAULT NULL, `COL5` float DEFAULT NULL, UNIQUE KEY `UK_COL1` (`COL1`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin PARTITION BY RANGE (`COL1`) (PARTITION `P0` VALUES LESS THAN (-1964648596), PARTITION `P1` VALUES LESS THAN (-1798171365), PARTITION `P2` VALUES LESS THAN (-224353317), PARTITION `P3` VALUES LESS THAN (74739562), PARTITION `P4` VALUES LESS THAN (330180811), PARTITION `P5` VALUES LESS THAN (1267470870)); insert into UK_RP17396 values(-556906299, '竂揿蜓锌璸籾珵岄浑祿恺鮘茷拦没盬饎醱僛橉', '9269-08-13 18:36:02', 363208857940760420, -1.28355e38); set tidb_partition_prune_mode=dynamic; prepare stmt from 'select * from UK_RP17396 where col3 < ? and col1 in (?, ?, ?) and col2 != ?;'; set @a=4020185825752602279, @b=-4331, @c=-29749, @d=-13306, @e='AgHVfFsnfEO'; execute stmt using @a,@b,@c,@d,@e; set @a=2972768264503339938, @b=5150, @c=-556906299, @d=1232847360, @e='=姵犵駘鏤ⱴȴ褋韨窷晢镸辈夁沶蚩皭兩隧撬'; execute stmt using @a,@b,@c,@d,@e;",
    "Affected Elements": "prepare, execute, tidb_partition_prune_mode",
    "Root Cause Analysis": "The issue seems to stem from the interaction between dynamic partition pruning and prepared statements, leading to incorrect results when executing the statement."
}