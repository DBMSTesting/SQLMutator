{
    "sql": "drop table if exists t1; drop table if exists t2; create table t1(id bigint primary key,col1 varchar(10),col2 varchar(10),col3 varchar(10)); create table t2(id bigint primary key,col1 varchar(10),col2 varchar(10),col3 varchar(10)); insert into t1 with RECURSIVE cte as (select 1 as level,FLOOR(1 + (RAND() * 1000000)) id,substr(md5(rand()),1,10) col1,substr(md5(rand()),1,10) col2,substr(md5(rand()),1,10) col3 union all select level+1 level,FLOOR(1 + (RAND() * 1000000)) id,substr(md5(rand()),1,10) col1,substr(md5(rand()),1,10) col2,substr(md5(rand()),1,10) col3 from cte where level<10000) select level,col1,col2,col3 from cte; insert into t2 with RECURSIVE cte as (select 1 as level,FLOOR(1 + (RAND() * 1000000)) id,substr(md5(rand()),1,10) col1,substr(md5(rand()),1,10) col2,substr(md5(rand()),1,10) col3 union all select level+1 level,FLOOR(1 + (RAND() * 1000000)) id,substr(md5(rand()),1,10) col1,substr(md5(rand()),1,10) col2,substr(md5(rand()),1,10) col3 from cte where level<10000) select level,col1,col2,col3 from cte; create index t1_col1 on t1(col1,col2); create index t2_col1 on t2(col1,col2); analyze table t1,t2; explain analyze select t1.*, (select col3 from t2 where t1.col1=t2.col1 order by col2 limit 1) from t1 limit 10; explain analyze select /*+ ORDER_INDEX(t2,t2_col1)*/ col3 from t2 where 'AAA'=t2.col1 order by col2 limit 1;",
    "Affected Elements": "ORDER_INDEX hint, LIMIT clause, subquery",
    "Root Cause Analysis": "The scalar subquery does not utilize the index effectively, leading to an internal error when attempting to optimize the query plan."
}