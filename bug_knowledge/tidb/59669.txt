{
    "sql": "USE test; DROP DATABASE IF EXISTS database3; CREATE DATABASE database3; USE database3; CREATE TABLE t42(c0 CHAR); CREATE TABLE t0 LIKE t42; UPDATE t0 SET c0=''; INSERT INTO t42(c0) VALUES (NULL), ('{'); REPLACE INTO t42 VALUES ('o'); UPDATE t0 SET c0='1' WHERE (('R')=(((t0.c0)>(t0.c0)))); REPLACE INTO t42 VALUES ('0'), ('f'); SET @@tidb_enable_chunk_rpc=1; REPLACE INTO t42 VALUES ('A'); INSERT IGNORE INTO t0 VALUES (NULL); ALTER TABLE t0 DISABLE KEYS; ANALYZE TABLE t0 WITH 690 BUCKETS; ALTER TABLE t0 MODIFY c0 NUMERIC; ALTER TABLE t0 ORDER BY c0 DESC; SET @@tidb_index_join_batch_size=3260; REPLACE INTO t42(c0) VALUES ('N'), ('&'), ('<'); ALTER TABLE t42 ORDER BY c0 DESC; INSERT IGNORE INTO t0 VALUES (1447599182), (-550806702) ON DUPLICATE KEY UPDATE c0=t0.c0; REPLACE INTO t42(c0) VALUES ('*'); INSERT INTO t0 VALUES (1016270202) ON DUPLICATE KEY UPDATE c0=t0.c0; SET @@tidb_hashagg_partial_concurrency=25; REPLACE INTO t42 VALUES ('Y'); SET @@sql_mode='STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'; ANALYZE TABLE t0; ANALYZE TABLE t42; EXPLAIN SELECT t42.c0, t0.c0 FROM t42 INNER JOIN t0 ON (CASE (((CASE -877155275 WHEN '0' THEN t0.c0 ELSE NULL END)) | (false)) WHEN (~(t0.c0)) THEN false WHEN '2' THEN (('0') & (t42.c0)) ELSE FIELD(((t0.c0) < (((NULL) != (0.5851810278984321)))), t0.c0) END) WHERE 1413898330 GROUP BY t42.c0, t0.c0 HAVING ((t0.c0) LIKE (((t42.c0) NOT REGEXP (CAST(287635857 AS SIGNED))))); EXPLAIN SELECT t42.c0, t0.c0 FROM t42 LEFT JOIN t0 ON (CASE (((CASE -877155275 WHEN '0' THEN t0.c0 ELSE NULL END)) | (false)) WHEN (~(t0.c0)) THEN false WHEN '2' THEN (('0') & (t42.c0)) ELSE FIELD(((t0.c0) < (((NULL) != (0.5851810278984321)))), t0.c0) END) WHERE 1413898330 GROUP BY t42.c0, t0.c0 HAVING ((t0.c0) LIKE (((t42.c0) NOT REGEXP (CAST(287635857 AS SIGNED)))));",
    "Affected Elements": "LEFT JOIN, INNER JOIN, EXPLAIN, GROUP BY, HAVING",
    "Root Cause Analysis": "The query optimizer's estimation logic for join operations may not correctly account for the differences in cardinality between INNER JOIN and LEFT JOIN, leading to unexpected performance issues."
}