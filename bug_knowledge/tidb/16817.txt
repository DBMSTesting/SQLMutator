{
    "sql": "DROP TABLE IF EXISTS t1; CREATE TABLE t1 (a DOUBLE, b DOUBLE, c DOUBLE DEFAULT NULL, PRIMARY KEY (a, b)); INSERT INTO t1(a, b) VALUES (1, 1); INSERT INTO t1(a, b) VALUES (1, 2); INSERT INTO t1(a, b) VALUES (2, 1); INSERT INTO t1(a, b) VALUES (2, 2); INSERT INTO t1(a, b) VALUES (3, 1); INSERT INTO t1(a, b) VALUES (3, 2); DROP TABLE IF EXISTS t2; CREATE TABLE t2 (a DOUBLE, b DOUBLE DEFAULT NULL, c DOUBLE DEFAULT NULL, UNIQUE KEY idx_a (a)); INSERT INTO t2(a, b) VALUES (1, 1); INSERT INTO t2(a, b) VALUES (2, 1); INSERT INTO t2(a, b) VALUES (3, 1); SET @a = 1; PREPARE stmt FROM 'SELECT * FROM t1, t2 WHERE t1.a = t2.a AND t2.a = ? AND t2.b = 1'; EXECUTE stmt USING @a;",
    "Affected Elements": "SELECT, PREPARE, EXECUTE, JOIN, SET",
    "Root Cause Analysis": "The bug seems to stem from an invalid memory address or nil pointer dereference when executing a point get under index merge join, likely due to improper handling of prepared statements or the execution context."
}