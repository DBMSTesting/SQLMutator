{
    "sql": "CREATE TABLE `cache` (\n  `cache_key` varchar(512) NOT NULL,\n  `cache_value` json NOT NULL,\n  `created_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  `updated_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n  `expires` int(11) DEFAULT '-1' COMMENT 'cache will expire after n seconds',\n  `expired_at` datetime GENERATED ALWAYS AS (IF(`expires` > 0, DATE_ADD(`updated_at`, INTERVAL `expires` SECOND), DATE_ADD(`updated_at`, INTERVAL 99 YEAR))) VIRTUAL,\n  PRIMARY KEY (`cache_key`),\n  KEY `idx_c_on_created_at` (`created_at`),\n  KEY `idx_c_on_expired_at` (`expired_at`),\n  KEY `idx_expired_at` (`expired_at`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin; INSERT INTO `cache` (`cache_key`, `cache_value`, `created_at`, `updated_at`, `expires`) VALUES ('2023-10-01 12:00:00', '\"2023-10-01 12:00:00\"', '2023-10-01 12:00:00', '2023-10-01 12:00:00', 60) ON DUPLICATE KEY UPDATE expires = expires + 1; UPDATE `cache` SET `updated_at` = '2023-10-01 12:00:00' WHERE `cache_key` = '2023-10-01 11:59:00';",
    "Affected Elements": "CREATE TABLE, INSERT INTO, UPDATE",
    "Root Cause Analysis": "TTL table's index and data inconsistency may arise from incorrect handling of the `expires` field during concurrent updates."
}