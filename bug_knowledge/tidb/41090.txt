{
    "sql": "SELECT a.biz_acct_id, a.tenant_id, a.ranked AS show_rank FROM ( SELECT @rank:=0, @tenant_id:=NULL, @biz_acct_id:=NULL ) rk, ( SELECT p1.*, @rank:=CASE WHEN @tenant_id = p1.tenant_id AND @biz_acct_id = p1.biz_acct_id THEN @rank + 1 ELSE 1 END AS ranked, @tenant_id:=p1.tenant_id, @biz_acct_id:=p1.biz_acct_id FROM ( SELECT 1 AS tenant_id, 2 AS biz_acct_id UNION ALL SELECT 3 AS tenant_id, 4 AS biz_acct_id UNION ALL SELECT 1 AS tenant_id, 2 AS biz_acct_id UNION ALL SELECT 5 AS tenant_id, 6 AS biz_acct_id UNION ALL SELECT 1 AS tenant_id, 2 AS biz_acct_id ) p1 ORDER BY p1.tenant_id, p1.biz_acct_id ) a;",
    "Affected Elements": "ORDER BY clause, CASE statement, variable assignment",
    "Root Cause Analysis": "The bug is likely due to incorrect handling of the order of operations in the SQL execution plan, causing the ranking logic to not behave as expected."
}