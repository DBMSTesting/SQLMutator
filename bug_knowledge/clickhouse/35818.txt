{
    "sql": "CREATE TABLE IF NOT EXISTS default.test (app_id String, ts DateTime, event_id String) ENGINE = MergeTree() PARTITION BY (app_id) ORDER BY (ts); CREATE TABLE IF NOT EXISTS default.test2 (app_id String, ts DateTime, event_id String) ENGINE = MergeTree() PARTITION BY tuple() ORDER BY (ts); INSERT INTO default.test(app_id, ts, event_id) VALUES ('a', now(), generateUUIDv4()), ('b', now(), generateUUIDv4()); INSERT INTO default.test2(app_id, ts, event_id) VALUES ('a', now(), generateUUIDv4()), ('b', now(), generateUUIDv4()); CREATE ROW POLICY OR REPLACE policy_test_default ON default.test, default.test2 USING  1 TO ALL EXCEPT usr_test; CREATE ROW POLICY OR REPLACE policy_test ON default.test, default.test2 USING  app_id='a' TO usr_test; select app_id from default.test; select app_id from default.test group by app_id; select app_id from default.test where app_id='b' group by app_id;",
    "Affected Elements": "GROUP BY clause",
    "Root Cause Analysis": "The row policy is not being applied correctly due to the use of GROUP BY on a partitioned column, leading to unexpected visibility of records."
}