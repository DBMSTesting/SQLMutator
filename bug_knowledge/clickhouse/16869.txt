{
    "sql": "WITH vals AS (SELECT [200 + (2 * number), 200 - number, 200 - number] FROM numbers(11)) SELECT arrayJoin(if((number = 0) OR (number >= 10), [1, 2, 3], [(number % 3) + 1])) AS ts_id, number + 1000 AS timestamp, vals[ts_id] AS value FROM numbers(11); SET max_threads = 11; SET max_block_size = 1; SELECT timeSeriesGroupSum(toUInt64(ts_id), toInt64(timestamp), value) FROM (WITH vals AS (SELECT [200 + (2 * number), 200 - number, 200 - number] FROM numbers_mt(11)) SELECT arrayJoin(if((number = 0) OR (number >= 10), [1, 2, 3], [(number % 3) + 1])) AS ts_id, number + 1000 AS timestamp, vals[ts_id] AS value FROM numbers_mt(11)); SELECT timeSeriesGroupSum(id, ts, val) FROM values('id UInt64, ts Int64, val Float64', (1, 1, 1)); SELECT timeSeriesGroupSum(id, ts, val) FROM values('id UInt64, ts Int64, val Float64', (1, 1, 0));",
    "Affected Elements": "timeSeriesGroupSum, numbers, numbers_mt, arrayJoin, values",
    "Root Cause Analysis": "The timeSeriesGroupSum function produces incorrect results when data is processed in parallel due to state merging issues."
}