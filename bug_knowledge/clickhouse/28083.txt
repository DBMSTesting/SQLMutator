{
    "sql": "CREATE TABLE default.`for_bugging_210823` (`first` Nullable(Int32), `second` Nullable(String), `third` Nullable(String), `fourth` Nullable(String), `fifth` Nullable(Int32), `sixth` Nullable(Int32), `seventh` Nullable(UInt8), `eighth` Nullable(Int32), `ninth` Nullable(Int32), `tenth` Nullable(Int32), `time` DateTime('Europe/Moscow')) ENGINE = MergeTree() PARTITION BY toStartOfHour(time, 'Europe/Moscow') ORDER BY (ifNull(tenth, 0), sipHash64(ifNull(second, ''))) SAMPLE BY sipHash64(ifNull(second, '')) SETTINGS index_granularity = 8192; INSERT INTO default.`for_bugging_210823` (eighth, fourth, second, first, fifth, sixth, third, ninth, seventh, tenth, time) VALUES (314, 'a-b-c-d-e', 'a0b1c2d3e4f5g6', 1000000000, 8, 13, '1520', 1, 1, 10000, '2019-20-21 21:22:23'), (314, 'a-b-c-d-e', 'a0b1c2d3e4f5g6', 1000000000, 8, 13, '1520', 2, 0, 10000, '2019-20-21 21:22:23'), (314, 'a-b-c-d-e', 'a0b1c2d3e4f5g6', 1000000000, 8, 10, '1520', 0, 1, 10000, '2019-20-21 21:22:23'); select selected_cell_map, selected_cell_reduce from (with tuple(eighth, fourth, second, first) as group_cell, multiIf(fifth = 8 and sixth = 10, '1520', fifth = 8 and sixth = 13, '1599', null) as cell_operator, tuple(cell_operator, seventh, ninth) as cell_info select group_cell, groupArray(cell_info) as cell_group, arrayMap(lambda(tuple(x), tupleElement(x, 1)), cell_group) as cell_group_map, multiIf(arrayReduce('uniq', cell_group_map) = 1, tupleElement(arrayElement(cell_group, 1), 1), tupleElement(arrayElement(cell_group, (assumeNotNull(first) % length(cell_group)) + 1), 1)) as selected_operator, arrayFilter(lambda(tuple(x), ifNull((tupleElement(x, 1) = selected_operator), 0)), cell_group) as selected_cell, arrayMap(lambda(tuple(x), assumeNotNull(tupleElement(x, 3))), selected_cell) as selected_cell_map, arrayReduce('min', arrayMap(lambda(tuple(x), assumeNotNull(tupleElement(x, 3))), arrayFilter(lambda(tuple(x), ifNull(tupleElement(x, 2) = 1, 0)), selected_cell))) as selected_cell_reduce from `default`.`for_bugging_210823` as main group by group_cell);",
    "Affected Elements": "SELECT clause, multiIf function, arrayReduce function",
    "Root Cause Analysis": "The presence or absence of the selected_operator field in the SELECT clause alters the evaluation of other fields, leading to inconsistent results."
}