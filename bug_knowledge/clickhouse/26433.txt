{
    "sql": "CREATE DATABASE IF NOT EXISTS nginx; CREATE TABLE nginx.access_log_shard ( agent_major UInt32, agent_minor UInt32, agent_name LowCardinality(String), args String, body_bytes_sent UInt64, bytes_sent UInt64, client_locality Enum8('public' = 1, 'private' = 2, 'white_list' = 3) DEFAULT 'public', connection_requests UInt64, connection UInt64, content_length UInt64, content_type LowCardinality(String), device_brand LowCardinality(String), device_family LowCardinality(String), device_model LowCardinality(String), host LowCardinality(String), hostname LowCardinality(String), http_referer String, http_user_agent LowCardinality(String), ip_geo_country LowCardinality(String), is_args LowCardinality(String), msec Float64, os_major LowCardinality(String), os_minor UInt32, os_name LowCardinality(String), proxy_addr6 Nullable(IPv6), proxy_port UInt32, rating UInt8, remote_addr6 IPv6, remote_port UInt32, remote_user String, request_completion LowCardinality(String), request_id String, request_length Int64, request_method LowCardinality(String), request_time Float32, request String, response_code UInt16, server_protocol LowCardinality(String), timestamp DateTime DEFAULT toDateTime(msec), upstream_addr Array(LowCardinality(String)), upstream_response_time Array(Float64), userid String, sessionid String, url String ) ENGINE = MergeTree() PARTITION BY toDate(timestamp) PRIMARY KEY (timestamp, client_locality, http_user_agent, remote_addr6, response_code) ORDER BY (timestamp, client_locality, http_user_agent, remote_addr6, response_code); CREATE MATERIALIZED VIEW nginx.userid_arr_shard ( time_interval DateTime CODEC(Delta, LZ4), userid String CODEC(ZSTD(6)), ips AggregateFunction(groupUniqArray(5000), IPv6) CODEC(ZSTD), user_agents AggregateFunction(groupUniqArray(1000), String) CODEC(ZSTD(6)), requests_count AggregateFunction(count) CODEC(ZSTD(6)) ) ENGINE = AggregatingMergeTree() PARTITION BY toDate(time_interval) PRIMARY KEY (time_interval, userid) ORDER BY (time_interval, userid) AS SELECT toStartOfTenMinutes(timestamp) AS time_interval, userid, groupUniqArrayState(5000)(remote_addr6) AS ips, groupUniqArrayState(1000)(http_user_agent) AS user_agents, countState() AS requests_count FROM nginx.access_log_shard WHERE userid <> '' GROUP BY toStartOfTenMinutes(timestamp), userid; INSERT INTO nginx.access_log_buffer FORMAT JSONEachRow VALUES (0, 0, '', '', 0, 336, 'public', 6, 51343401, 4345, 'application/json; charset=UTF-8', '', '', '', 'www.wildberries.ru', 'ngx-site-r10-01.dp.wb.ru', 'https://www.wildberries.ru/catalog/16551765/detail.aspx?targetUrl=SG', 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36', '', '', 1626444451.471, '', 0, '', NULL, 0, 0, '::ffff:95.179.127.71', 10322, '', 'OK', '305068ca05c20425bb8e2fe504df2ed2', 8531, 'POST', 0.294, '/stats/events', 200, 'HTTP/2.0', '2021-07-16 17:07:31', ['10.10.114.189:443'], [0.008], '7a4a79fd-34be-42a4-8f59-36af0eb06b53.1596362625', '7a3a9202-330a-4982-8e16-c1fc0f554bbc.1626440693', '/stats/events');",
    "Affected Elements": "AggregateFunction, groupUniqArrayState",
    "Root Cause Analysis": "Incompatibility of AggregateFunction types between ClickHouse versions 21.6.5.37 and 21.7.3.14, specifically related to the handling of the groupUniqArrayState function."
}