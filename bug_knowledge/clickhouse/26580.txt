{
    "sql": "CREATE DATABASE IF NOT EXISTS playground; CREATE TABLE playground.events_prod ( uuid UUID, event VARCHAR, timestamp DateTime64(6, 'UTC'), distinct_id VARCHAR, team_id Int64, _timestamp DateTime ) ENGINE = ReplacingMergeTree(_timestamp) PARTITION BY toYYYYMM(timestamp) ORDER BY (team_id, toDate(timestamp), distinct_id, uuid) SAMPLE BY uuid; INSERT INTO playground.events_prod VALUES (generateUUIDv4(), 'step one', toDateTime('2021-06-08 18:00:00'), 'user a', 1, now()), (generateUUIDv4(), 'step one', toDateTime('2021-06-08 19:00:00'), 'user a', 1, now()), (generateUUIDv4(), 'step one', toDateTime('2021-06-08 21:00:00'), 'user a', 1, now()), (generateUUIDv4(), 'step one', toDateTime('2021-06-09 13:00:00'), 'user b', 1, now()), (generateUUIDv4(), 'step one', toDateTime('2021-06-09 13:37:00'), 'user b', 1, now()), (generateUUIDv4(), 'step one', toDateTime('2021-06-11 07:00:00'), 'user c', 1, now()), (generateUUIDv4(), 'step one', toDateTime('2021-06-12 06:00:00'), 'user c', 1, now()); CREATE TABLE playground.person ( id UUID, created_at DateTime64, team_id Int64, _timestamp DateTime ) ENGINE = ReplacingMergeTree(_timestamp) ORDER BY (team_id, id); INSERT INTO playground.person VALUES ('017ac40e-08de-0000-10cd-1b37fea376c4', now(), 1, now()), ('017ac40e-08ec-0000-3fc6-fe5226831996', now(), 1, now()), ('017ac40e-08ce-0000-bb19-ac0dedd370ea', now(), 1, now()); CREATE TABLE playground.person_distinct_id ( id Int64, distinct_id VARCHAR, person_id UUID, team_id Int64, _timestamp DateTime ) ENGINE = ReplacingMergeTree(_timestamp) ORDER BY (team_id, distinct_id, person_id, id); INSERT INTO playground.person_distinct_id VALUES (1, 'user a', '017ac40e-08de-0000-10cd-1b37fea376c4', 1, now()), (2, 'user c', '017ac40e-08ec-0000-3fc6-fe5226831996', 1, now()), (3, 'user b', '017ac40e-08ce-0000-bb19-ac0dedd370ea', 1, now()); SELECT person_id, timestamp, step_0, latest_0, step_1, groupArray(latest_1) OVER (PARTITION BY person_id ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING) latest_1, step_2, groupArray(latest_2) OVER (PARTITION BY person_id ORDER BY timestamp DESC ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING) latest_2 FROM ( SELECT person_id, timestamp, IF(event = 'step one', 1, 0) AS step_0, IF(step_0 = 1, timestamp, NULL) AS latest_0, IF(event = 'step one', 1, 0) AS step_1, IF(step_1 = 1, timestamp, NULL) AS latest_1, IF(event = 'step one', 1, 0) AS step_2, IF(step_2 = 1, timestamp, NULL) AS latest_2 FROM ( SELECT e.event AS event, e.team_id AS team_id, e.distinct_id AS distinct_id, e.timestamp AS timestamp, pdi.person_id AS person_id FROM playground.events_prod e INNER JOIN ( SELECT person_id, distinct_id FROM playground.person_distinct_id ) AS pdi ON e.distinct_id = pdi.distinct_id WHERE team_id = 1 AND event IN ('step one', 'step one', 'step one', 'step one', 'step one', 'step one') AND timestamp >= '2021-06-07 00:00:00' AND timestamp <= '2021-06-13 23:59:59' ) events WHERE (step_0 = 1 OR step_1 = 1 OR step_2 = 1) ) SETTINGS allow_experimental_window_functions = 1;",
    "Affected Elements": "WINDOW FUNCTIONS, PARTITION BY, GROUP BY, ORDER BY",
    "Root Cause Analysis": "The non-deterministic behavior of the window functions may stem from issues with the underlying data distribution or the order of execution when processing partitions, leading to unexpected results."
}