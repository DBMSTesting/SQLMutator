{
    "sql": "SELECT countIf(1, step0_time != toDateTime(0)) AS step_0, countIf(1, step1_time != toDateTime(0)) AS step_1, countIf(1, step2_time != toDateTime(0)) AS step_2, avg(timeToStep1) AS avgTimeToStep1, median(timeToStep1) AS medianTimeToStep1, avg(timeToStep2) AS avgTimeToStep2, median(timeToStep2) AS medianTimeToStep2, median(count_on_step0) AS medianRepetitionOnStep0, avg(count_on_step0) AS avgRepetitionOnStep0, median(count_on_step1) AS medianRepetitionOnStep1, avg(count_on_step1) AS avgRepetitionOnStep1, median(count_on_step2) AS medianRepetitionOnStep2, avg(count_on_step2) AS avgRepetitionOnStep2, avg(totalTimeDifference) AS totalTimeAvg, quantile(0.8)(count_on_step0) AS quantileCountStep0, quantile(0.8)(count_on_step1) AS quantileCountStep1, quantile(0.8)(count_on_step2) AS quantileCountStep2, quantile(0.8)(timeToStep1) AS quantileTimeStep1, quantile(0.8)(timeToStep2) AS quantileTimeStep2, quantile(0.8)(totalTimeDifference) AS quantileTotalTime, medianIf(totalTimeDifference, totalTimeDifference > 0) AS medianTotalTime FROM ( SELECT deviceId, groupArrayIf(eventTime, eventName = 'event1') AS step0_time_arr, step0_time_arr[1] AS step0_time, arrayFilter(time -> ((step0_time != toDateTime(0)) AND ((time - step0_time) >= 0)), groupArrayIf(eventTime, eventName = 'event2')) AS step1_time_arr, step1_time_arr[1] AS step1_time, arrayFilter(time -> ((step1_time != toDateTime(0)) AND ((time - step1_time) >= 0)), groupArrayIf(eventTime, eventName = 'event3')) AS step2_time_arr, step2_time_arr[1] AS step2_time, step2_time - step0_time AS totalTimeDifference, if((step1_time - step0_time) >= 0, step1_time - step0_time, 0) AS timeToStep1, if((step2_time - step0_time) >= 0, step2_time - step0_time, 0) AS timeToStep2, length(step0_time_arr) AS count_on_step0, length(step1_time_arr) AS count_on_step1, length(step2_time_arr) AS count_on_step2 FROM ( SELECT deviceId, eventTime, eventName FROM db.tbl WHERE ((eventName = 'event1') OR (eventName = 'event2') OR (eventName = 'event3')) AND ((eventTime >= 1599091200) AND (eventTime <= 1601701473)) ORDER BY eventTime ASC ) GROUP BY deviceId )",
    "Affected Elements": "arrayFilter, countIf, avg, median, groupArrayIf, if",
    "Root Cause Analysis": "The logic used in arrayFilter may not correctly account for the ordering and conditions required to ensure that step2_time >= step1_time >= step0_time, resulting in negative totalTimeDifference calculations."
}