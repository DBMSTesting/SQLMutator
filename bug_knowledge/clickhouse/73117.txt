{
    "sql": "CREATE TABLE source_table1 (a Int64, b String) ENGINE = Memory; CREATE TABLE source_table2 (c Int64, d String) ENGINE = Memory; INSERT INTO source_table1 VALUES (42, 'qwe'); INSERT INTO source_table2 VALUES (42, 'qwe'); CREATE TABLE distributed_table1 AS source_table1 ENGINE = Distributed('test_shard_localhost', currentDatabase(), 'source_table1'); CREATE TABLE distributed_table2 AS source_table2 ENGINE = Distributed('test_shard_localhost', currentDatabase(), 'source_table2'); SELECT 1 FROM distributed_table1 AS t1 GLOBAL INNER JOIN distributed_table2 AS t2 ON toUInt128(materialize(1)) = t1.a LIMIT 1048575;",
    "Affected Elements": "CREATE TABLE, INSERT INTO, SELECT, GLOBAL INNER JOIN",
    "Root Cause Analysis": "The crash occurs due to a logical error during the join operation on distributed tables, specifically related to a missing key in an unordered_map causing an std::out_of_range exception."
}