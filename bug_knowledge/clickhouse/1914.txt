{
    "sql": "create table t0 (date Date, sign Int8, id Int64, version Int64, x1 Int64, x2 Int64, x3 Int64, x4 Int64, x5 Int64, x6 Int64, x7 Int64, x8 Int64, x9 Int64, x10 Int64) engine=CollapsingMergeTree(date, id, 8192, sign); create table t1 (date Date, sign Int8, id Int64, version UInt64, x1 Int64, x2 Int64, x3 Int64, x4 Int64, x5 Int64, x6 Int64, x7 Int64, x8 Int64, x9 Int64, x10 Int64) engine=ReplacingMergeTree(date, id, 8192, version); insert into t0 select toDate('2018-02-13') as date, toInt8(1) as sign, toInt64(floor(number/1000)) as id, toInt64(modulo(number, 1000)) as version, version as x1, version as x2, version as x3, version as x4, version as x5, version as x6, version as x7, version as x8, version as x9, version as x10 from system.numbers limit 0, 100000; insert into t0 select toDate('2018-02-13') as date, toInt8(1) as sign, toInt64(floor(number/1000)) as id, toInt64(modulo(number, 1000)) as version, version as x1, version as x2, version as x3, version as x4, version as x5, version as x6, version as x7, version as x8, version as x9, version as x10 from system.numbers limit 1100000, 1200000; insert into t1 select date, sign, id, toUInt64(version) as version, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10 from t0; select countIf(version <> x1), count() from t1; optimize table t1 partition 201802 final; select countIf(version <> x1), count() from t1;",
    "Affected Elements": "CollapsingMergeTree, ReplacingMergeTree, insert, optimize table",
    "Root Cause Analysis": "Concurrent data insertion leading to race conditions in version management within the ReplacingMergeTree engine."
}