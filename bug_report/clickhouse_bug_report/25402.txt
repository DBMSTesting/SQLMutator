ID: 25402
Title: Bug report: Strange error message "Not found column c_nkt in block" while processing SELECT query
Description:
**Describe the bug**

I used my fuzzing tool to test ClickHouse (v21.5.6.6-stable), and found that it returned stange error message when processing a sql.

**Does it reproduce on recent release?**

v21.5.6.6-stable

**How to reproduce**

* ClickHouse server version: v21.5.6.6-stable
* Installation: 
```
1. mkdir build; cd build
2. cmake ..  \
        -DCMAKE_BUILD_TYPE=Debug     \
        -DENABLE_CLICKHOUSE_ALL=OFF     \
        -DENABLE_CLICKHOUSE_SERVER=ON     \
        -DENABLE_CLICKHOUSE_CLIENT=ON     \
        -DENABLE_LIBRARIES=OFF     \
        -DUSE_UNWIND=ON     \
        -DENABLE_UTILS=OFF     \
        -DENABLE_TESTS=OFF -DSANITIZE=address
3. sudo make install
```

* Test command: 
```
1. clickhouse-server &

2. clickhouse-client --query '
create table t_q1ht4gq_5 (
c_zeij INTEGER NOT NULL,
c_fehk75l TEXT ,
c_ju TEXT ,
c_wynzuek TEXT ,
c_nkt INTEGER NOT NULL,
c_g TEXT ,
c_mc2 TEXT ,
primary key(c_nkt)
) engine = MergeTree();'

3. clickhouse-client --query '
select
  case when subq_0.c3 between subq_0.c2 and subq_0.c3 then subq_0.c2 else subq_0.c2 end
     as c3
from
  (select
        ref_0.c_zeij as c0,
        ref_0.c_zeij as c2,
        case when 0<>0 then ref_0.c_nkt else ref_0.c_nkt end
           as c3
      from
        t_q1ht4gq_5 as ref_0
      where (ref_0.c_zeij <> (select c_zeij from t_q1ht4gq_5 order by c_zeij limit 1 offset 3)
              )
      limit 68) as subq_0
where subq_0.c0 <> (
  select
      subq_1.c2 as c0
    from
      (select  
            ref_4.c_nkt as c2
          from 
            t_q1ht4gq_5 as ref_4
          ) as subq_1 
    ) limit 43;'
```

**Expected behavior**

Normally run without any error message

**Error message and/or stacktrace**

```
Received exception from server (version 21.5.6):
Code: 10. DB::Exception: Received from localhost:9000. DB::Exception: Not found column c_nkt in block: while executing 'INPUT : 1 -> c_nkt Int32 : 1'.
```

**Additional context**

It seems to be a bug since c_nkt is in table t_q1ht4gq_5.