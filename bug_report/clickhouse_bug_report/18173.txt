ID: 18173
Title: DB::Exception: Existing table metadata in ZooKeeper differs in mode of merge operation.
Description:
```
:) select version();

SELECT version()

┌─version()──┐
│ 20.10.3.30 │
└────────────┘
```

Reproduce
```
:) drop table bp_campfire.user on cluster ch_cluster_all;

DROP TABLE bp_campfire.user ON CLUSTER ch_cluster_all

┌─host───────────────────────┬─port─┬─status─┬─error──────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─num_hosts_remaining─┬─num_hosts_active─┐
│ bj2-clickhouse-all-prod-04 │ 9000 │     60 │ Code: 60, e.displayText() = DB::Exception: Table bp_campfire.user doesn't exist. (version 20.10.3.30 (official build)) │                   5 │                0 │
│ bj2-clickhouse-all-prod-06 │ 9000 │     60 │ Code: 60, e.displayText() = DB::Exception: Table bp_campfire.user doesn't exist. (version 20.10.3.30 (official build)) │                   4 │                0 │
│ bj2-clickhouse-all-prod-02 │ 9000 │     60 │ Code: 60, e.displayText() = DB::Exception: Table bp_campfire.user doesn't exist. (version 20.10.3.30 (official build)) │                   3 │                0 │
│ bj2-clickhouse-all-prod-03 │ 9000 │     60 │ Code: 60, e.displayText() = DB::Exception: Table bp_campfire.user doesn't exist. (version 20.10.3.30 (official build)) │                   2 │                0 │
│ bj2-clickhouse-all-prod-05 │ 9000 │     60 │ Code: 60, e.displayText() = DB::Exception: Table bp_campfire.user doesn't exist. (version 20.10.3.30 (official build)) │                   1 │                0 │
│ bj2-clickhouse-all-prod-01 │ 9000 │     60 │ Code: 60, e.displayText() = DB::Exception: Table bp_campfire.user doesn't exist. (version 20.10.3.30 (official build)) │                   0 │                0 │
└────────────────────────────┴──────┴────────┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────────────────────┴──────────────────┘
↖ Progress: 0.00 rows, 0.00 B (0.00 rows/s., 0.00 B/s.)  0%
Received exception from server (version 20.10.3):
Code: 60. DB::Exception: Received from localhost:9000. DB::Exception: There was an error on [bj2-clickhouse-all-prod-04:9000]: Code: 60, e.displayText() = DB::Exception: Table bp_campfire.user doesn't exist. (version 20.10.3.30 (official build)). 

6 rows in set. Elapsed: 0.111 sec. 

bj2-clickhouse-all-prod-01 default@localhost:9000 [system]
:) drop table bp_campfire.user_local on cluster ch_cluster_all;

DROP TABLE bp_campfire.user_local ON CLUSTER ch_cluster_all

┌─host───────────────────────┬─port─┬─status─┬─error────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─num_hosts_remaining─┬─num_hosts_active─┐
│ bj2-clickhouse-all-prod-04 │ 9000 │     60 │ Code: 60, e.displayText() = DB::Exception: Table bp_campfire.user_local doesn't exist. (version 20.10.3.30 (official build)) │                   5 │                0 │
│ bj2-clickhouse-all-prod-06 │ 9000 │     60 │ Code: 60, e.displayText() = DB::Exception: Table bp_campfire.user_local doesn't exist. (version 20.10.3.30 (official build)) │                   4 │                0 │
│ bj2-clickhouse-all-prod-02 │ 9000 │     60 │ Code: 60, e.displayText() = DB::Exception: Table bp_campfire.user_local doesn't exist. (version 20.10.3.30 (official build)) │                   3 │                0 │
│ bj2-clickhouse-all-prod-05 │ 9000 │     60 │ Code: 60, e.displayText() = DB::Exception: Table bp_campfire.user_local doesn't exist. (version 20.10.3.30 (official build)) │                   2 │                0 │
│ bj2-clickhouse-all-prod-01 │ 9000 │     60 │ Code: 60, e.displayText() = DB::Exception: Table bp_campfire.user_local doesn't exist. (version 20.10.3.30 (official build)) │                   1 │                0 │
│ bj2-clickhouse-all-prod-03 │ 9000 │     60 │ Code: 60, e.displayText() = DB::Exception: Table bp_campfire.user_local doesn't exist. (version 20.10.3.30 (official build)) │                   0 │                0 │
└────────────────────────────┴──────┴────────┴──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────────────────────┴──────────────────┘
↑ Progress: 0.00 rows, 0.00 B (0.00 rows/s., 0.00 B/s.)  0%
Received exception from server (version 20.10.3):
Code: 60. DB::Exception: Received from localhost:9000. DB::Exception: There was an error on [bj2-clickhouse-all-prod-04:9000]: Code: 60, e.displayText() = DB::Exception: Table bp_campfire.user_local doesn't exist. (version 20.10.3.30 (official build)). 

6 rows in set. Elapsed: 0.109 sec. 

CREATE TABLE bp_campfire.user_local ON CLUSTER ch_cluster_all
(
    `I_ID` UInt64 COMMENT '主键',
    `I_UID` UInt64 COMMENT '业务主键',
    `I_VIP_ID` UInt64 COMMENT 'vip服务ID',
    `I_DISPLAY_ID` UInt64 COMMENT '显示ID',
    `CH_NICK_NAME` String COMMENT '昵称',
    `CH_AVATAR` String COMMENT '头像',
    `CH_AREA_CODE` String COMMENT '区号',
    `CH_PHONE` String COMMENT '手机号码',
    `CH_DESC` String COMMENT '简介',
    `CH_BIRTHDAY` String COMMENT '出生日期',
    `CH_CITY` String COMMENT '城市',
    `CH_PROVINCE` String COMMENT '用户所在省份',
    `I_GENDER` UInt32 COMMENT '性别 1男 2女',
    `I_STATUS` UInt32 COMMENT '用户状态 1正常 2封禁 3禁播 4禁言 ',
    `I_TYPE` UInt32 COMMENT '用户类型 1普通用户2运营用户3内部用户',
    `CH_IM_PASSWORD` String COMMENT 'IM密码',
    `I_ELEMENT2_VERIFY` UInt32 COMMENT '二要素认证 1已认证2未认证3认证失败',
    `I_FACE_VERIFY` UInt32 COMMENT '人脸认证 1已认证 2未认证 3认证失败',
    `I_USER_INFO_COMPLETE` UInt32 COMMENT '用户信息完成状态 1已完成 2未完成',
    `CH_INVITE_CODE` String COMMENT '邀请码',
    `D_CREATED_AT` DateTime COMMENT '创建时间',
    `D_UPDATED_AT` DateTime COMMENT '更新时间'
)
ENGINE = ReplicatedReplacingMergeTree('/clickhouse/bp_campfire/tables/{layer}-{shard}/user', '{replica}')
PARTITION BY toYYYYMM(D_CREATED_AT)
ORDER BY I_ID
SETTINGS index_granularity = 8192

┌─host───────────────────────┬─port─┬─status─┬─error───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─num_hosts_remaining─┬─num_hosts_active─┐
│ bj2-clickhouse-all-prod-04 │ 9000 │    342 │ Code: 342, e.displayText() = DB::Exception: Existing table metadata in ZooKeeper differs in mode of merge operation. Stored in ZooKeeper: 0, local: 5 (version 20.10.3.30 (official build)) │                   5 │                0 │
│ bj2-clickhouse-all-prod-06 │ 9000 │    342 │ Code: 342, e.displayText() = DB::Exception: Existing table metadata in ZooKeeper differs in mode of merge operation. Stored in ZooKeeper: 0, local: 5 (version 20.10.3.30 (official build)) │                   4 │                0 │
│ bj2-clickhouse-all-prod-02 │ 9000 │    342 │ Code: 342, e.displayText() = DB::Exception: Existing table metadata in ZooKeeper differs in mode of merge operation. Stored in ZooKeeper: 0, local: 5 (version 20.10.3.30 (official build)) │                   3 │                0 │
│ bj2-clickhouse-all-prod-05 │ 9000 │    342 │ Code: 342, e.displayText() = DB::Exception: Existing table metadata in ZooKeeper differs in mode of merge operation. Stored in ZooKeeper: 0, local: 5 (version 20.10.3.30 (official build)) │                   2 │                0 │
│ bj2-clickhouse-all-prod-01 │ 9000 │    342 │ Code: 342, e.displayText() = DB::Exception: Existing table metadata in ZooKeeper differs in mode of merge operation. Stored in ZooKeeper: 0, local: 5 (version 20.10.3.30 (official build)) │                   1 │                0 │
│ bj2-clickhouse-all-prod-03 │ 9000 │    342 │ Code: 342, e.displayText() = DB::Exception: Existing table metadata in ZooKeeper differs in mode of merge operation. Stored in ZooKeeper: 0, local: 5 (version 20.10.3.30 (official build)) │                   0 │                0 │
└────────────────────────────┴──────┴────────┴─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────────────────────┴──────────────────┘
↘ Progress: 0.00 rows, 0.00 B (0.00 rows/s., 0.00 B/s.)  0%
Received exception from server (version 20.10.3):
Code: 342. DB::Exception: Received from localhost:9000. DB::Exception: There was an error on [bj2-clickhouse-all-prod-04:9000]: Code: 342, e.displayText() = DB::Exception: Existing table metadata in ZooKeeper differs in mode of merge operation. Stored in ZooKeeper: 0, local: 5 (version 20.10.3.30 (official build)). 

6 rows in set. Elapsed: 0.111 sec. 

```

log
```
2020.12.17 11:44:56.160440 [ 10022 ] {29663432-8c12-45e0-a474-a73a031cc72f} <Debug> executeQuery: (from 127.0.0.1:1598) CREATE TABLE bp_campfire.user_local ON CLUSTER ch_cluster_all ( `I_ID` UInt64 COMMENT '主键', `I_UID` UInt64 COMMENT '业务主键', `I_VIP_ID` UInt64 COMMENT 'vip服务ID', `I_DISPLAY_ID` UInt64 COMMENT '显示ID', `CH_NICK_NAME` String COMMENT '昵称', `CH_AVATAR` String COMMENT '头像', `CH_AREA_CODE` String COMMENT '区号', `CH_PHONE` String COMMENT '手机号码', `CH_DESC` String COMMENT '简介', `CH_BIRTHDAY` String COMMENT '出生日期', `CH_CITY` String COMMENT '城市', `CH_PROVINCE` String COMMENT '用户所在省份', `I_GENDER` UInt32 COMMENT '性别 1男 2女', `I_STATUS` UInt32 COMMENT '用户状态 1正常 2封禁 3禁播 4禁言 ', `I_TYPE` UInt32 COMMENT '用户类型 1普通用户2运营用户3内部用户', `CH_IM_PASSWORD` String COMMENT 'IM密码', `I_ELEMENT2_VERIFY` UInt32 COMMENT '二要素认证 1已认证2未认证3认证失败', `I_FACE_VERIFY` UInt32 COMMENT '人脸认证 1已认证 2未认证 3认证失败', `I_USER_INFO_COMPLETE` UInt32 COMMENT '用户信息完成状态 1已完成 2未完成', `CH_INVITE_CODE` String COMMENT '邀请码', `D_CREATED_AT` DateTime COMMENT '创建时间', `D_UPDATED_AT` DateTime COMMENT '更新时间' ) ENGINE = ReplicatedReplacingMergeTree('/clickhouse/bp_campfire/tables/{layer}-{shard}/user', '{replica}') PARTITION BY toYYYYMM(D_CREATED_AT) ORDER BY I_ID SETTINGS index_granularity = 8192;
2020.12.17 11:44:56.165440 [ 23398 ] {} <Debug> DDLWorker: Scheduling tasks
2020.12.17 11:44:56.165456 [ 23346 ] {} <Debug> DDLWorker: Cleaning queue
2020.12.17 11:44:56.167237 [ 10022 ] {29663432-8c12-45e0-a474-a73a031cc72f} <Debug> executeQuery: Query pipeline:
DDLQueryStatusInputStream

2020.12.17 11:44:56.168244 [ 23398 ] {} <Debug> DDLWorker: Waiting a watch
2020.12.17 11:44:56.168275 [ 23283 ] {d756550d-284e-43d8-ab5c-cabf3917b275} <Debug> DDLWorker: Processing task query-0000040115 (CREATE TABLE bp_campfire.user_local UUID 'ef7e4455-f5a3-4565-aaf3-b1b35c226100' ON CLUSTER ch_cluster_all (`I_ID` UInt64 COMMENT '主键', `I_UID` UInt64 COMMENT '业务主键', `I_VIP_ID` UInt64 COMMENT 'vip服务ID', `I_DISPLAY_ID` UInt64 COMMENT '显示ID', `CH_NICK_NAME` String COMMENT '昵称', `CH_AVATAR` String COMMENT '头像', `CH_AREA_CODE` String COMMENT '区号', `CH_PHONE` String COMMENT '手机号码', `CH_DESC` String COMMENT '简介', `CH_BIRTHDAY` String COMMENT '出生日期', `CH_CITY` String COMMENT '城市', `CH_PROVINCE` String COMMENT '用户所在省份', `I_GENDER` UInt32 COMMENT '性别 1男 2女', `I_STATUS` UInt32 COMMENT '用户状态 1正常 2封禁 3禁播 4禁言 ', `I_TYPE` UInt32 COMMENT '用户类型 1普通用户2运营用户3内部用户', `CH_IM_PASSWORD` String COMMENT 'IM密码', `I_ELEMENT2_VERIFY` UInt32 COMMENT '二要素认证 1已认证2未认证3认证失败', `I_FACE_VERIFY` UInt32 COMMENT '人脸认证 1已认证 2未认证 3认证失败', `I_USER_INFO_COMPLETE` UInt32 COMMENT '用户信息完成状态 1已完成 2未完成', `CH_INVITE_CODE` String COMMENT '邀请码', `D_CREATED_AT` DateTime COMMENT '创建时间', `D_UPDATED_AT` DateTime COMMENT '更新时间') ENGINE = ReplicatedReplacingMergeTree('/clickhouse/bp_campfire/tables/{layer}-{shard}/user', '{replica}') PARTITION BY toYYYYMM(D_CREATED_AT) ORDER BY I_ID SETTINGS index_granularity = 8192)
2020.12.17 11:44:56.169821 [ 23283 ] {d756550d-284e-43d8-ab5c-cabf3917b275} <Debug> DDLWorker: Executing query: CREATE TABLE bp_campfire.user_local UUID 'ef7e4455-f5a3-4565-aaf3-b1b35c226100' (`I_ID` UInt64 COMMENT '主键', `I_UID` UInt64 COMMENT '业务主键', `I_VIP_ID` UInt64 COMMENT 'vip服务ID', `I_DISPLAY_ID` UInt64 COMMENT '显示ID', `CH_NICK_NAME` String COMMENT '昵称', `CH_AVATAR` String COMMENT '头像', `CH_AREA_CODE` String COMMENT '区号', `CH_PHONE` String COMMENT '手机号码', `CH_DESC` String COMMENT '简介', `CH_BIRTHDAY` String COMMENT '出生日期', `CH_CITY` String COMMENT '城市', `CH_PROVINCE` String COMMENT '用户所在省份', `I_GENDER` UInt32 COMMENT '性别 1男 2女', `I_STATUS` UInt32 COMMENT '用户状态 1正常 2封禁 3禁播 4禁言 ', `I_TYPE` UInt32 COMMENT '用户类型 1普通用户2运营用户3内部用户', `CH_IM_PASSWORD` String COMMENT 'IM密码', `I_ELEMENT2_VERIFY` UInt32 COMMENT '二要素认证 1已认证2未认证3认证失败', `I_FACE_VERIFY` UInt32 COMMENT '人脸认证 1已认证 2未认证 3认证失败', `I_USER_INFO_COMPLETE` UInt32 COMMENT '用户信息完成状态 1已完成 2未完成', `CH_INVITE_CODE` String COMMENT '邀请码', `D_CREATED_AT` DateTime COMMENT '创建时间', `D_UPDATED_AT` DateTime COMMENT '更新时间') ENGINE = ReplicatedReplacingMergeTree('/clickhouse/bp_campfire/tables/{layer}-{shard}/user', '{replica}') PARTITION BY toYYYYMM(D_CREATED_AT) ORDER BY I_ID SETTINGS index_granularity = 8192
2020.12.17 11:44:56.170020 [ 23283 ] {d9b88430-272b-4b07-9553-5151c8e8db28} <Debug> executeQuery: (from 0.0.0.0:0, user: ) /* ddl_entry=query-0000040115 */ CREATE TABLE bp_campfire.user_local UUID 'ef7e4455-f5a3-4565-aaf3-b1b35c226100' (`I_ID` UInt64 COMMENT '主键', `I_UID` UInt64 COMMENT '业务主键', `I_VIP_ID` UInt64 COMMENT 'vip服务ID', `I_DISPLAY_ID` UInt64 COMMENT '显示ID', `CH_NICK_NAME` String COMMENT '昵称', `CH_AVATAR` String COMMENT '头像', `CH_AREA_CODE` String COMMENT '区号', `CH_PHONE` String COMMENT '手机号码', `CH_DESC` String COMMENT '简介', `CH_BIRTHDAY` String COMMENT '出生日期', `CH_CITY` String COMMENT '城市', `CH_PROVINCE` String COMMENT '用户所在省份', `I_GENDER` UInt32 COMMENT '性别 1男 2女', `I_STATUS` UInt32 COMMENT '用户状态 1正常 2封禁 3禁播 4禁言 ', `I_TYPE` UInt32 COMMENT '用户类型 1普通用户2运营用户3内部用户', `CH_IM_PASSWORD` String COMMENT 'IM密码', `I_ELEMENT2_VERIFY` UInt32 COMMENT '二要素认证 1已认证2未认证3认证失败', `I_FACE_VERIFY` UInt32 COMMENT '人脸认证 1已认证 2未认证 3认证失败', `I_USER_INFO_COMPLETE` UInt32 COMMENT '用户信息完成状态 1已完成 2未完成', `CH_INVITE_CODE` String COMMENT '邀请码', `D_CREATED_AT` DateTime COMMENT '创建时间', `D_UPDATED_AT` DateTime COMMENT '更新时间') ENGINE = ReplicatedReplacingMergeTree('/clickhouse/bp_campfire/tables/{layer}-{shard}/user', '{replica}') PARTITION BY toYYYYMM(D_CREATED_AT) ORDER BY I_ID SETTINGS index_granularity = 8192
2020.12.17 11:44:56.170573 [ 23346 ] {} <Information> DDLWorker: Task query-0000038954 should be deleted, but it is locked. Skipping it.
2020.12.17 11:44:56.170836 [ 23346 ] {} <Warning> zkutil::Lock: Lock is lost. It is normal if session was expired. Path: /clickhouse/task_queue/ddl/query-0000038954/lock/bj2%2Dclickhouse%2Dall%2Dprod%2D01:9000
2020.12.17 11:44:56.173461 [ 23346 ] {} <Information> DDLWorker: Task query-0000038955 should be deleted, but it is locked. Skipping it.
2020.12.17 11:44:56.173687 [ 23346 ] {} <Warning> zkutil::Lock: Lock is lost. It is normal if session was expired. Path: /clickhouse/task_queue/ddl/query-0000038955/lock/bj2%2Dclickhouse%2Dall%2Dprod%2D01:9000
2020.12.17 11:44:56.176301 [ 23283 ] {d9b88430-272b-4b07-9553-5151c8e8db28} <Debug> bp_campfire.user_local (ef7e4455-f5a3-4565-aaf3-b1b35c226100): Loading data parts
2020.12.17 11:44:56.176424 [ 23283 ] {d9b88430-272b-4b07-9553-5151c8e8db28} <Debug> bp_campfire.user_local (ef7e4455-f5a3-4565-aaf3-b1b35c226100): Loaded data parts (0 items)
2020.12.17 11:44:56.177420 [ 23346 ] {} <Information> DDLWorker: Task query-0000038956 is outdated, deleting it
2020.12.17 11:44:56.181814 [ 23283 ] {d9b88430-272b-4b07-9553-5151c8e8db28} <Debug> bp_campfire.user_local (ef7e4455-f5a3-4565-aaf3-b1b35c226100): This table /clickhouse/bp_campfire/tables/01-01/user is already created, will add new replica
2020.12.17 11:44:56.183602 [ 23283 ] {d9b88430-272b-4b07-9553-5151c8e8db28} <Error> executeQuery: Code: 342, e.displayText() = DB::Exception: Existing table metadata in ZooKeeper differs in mode of merge operation. Stored in ZooKeeper: 0, local: 5 (version 20.10.3.30 (official build)) (from 0.0.0.0:0) (in query: /* ddl_entry=query-0000040115 */ CREATE TABLE bp_campfire.user_local UUID 'ef7e4455-f5a3-4565-aaf3-b1b35c226100' (`I_ID` UInt64 COMMENT '主键', `I_UID` UInt64 COMMENT '业务主键', `I_VIP_ID` UInt64 COMMENT 'vip服务ID', `I_DISPLAY_ID` UInt64 COMMENT '显示ID', `CH_NICK_NAME` String COMMENT '昵称', `CH_AVATAR` String COMMENT '头像', `CH_AREA_CODE` String COMMENT '区号', `CH_PHONE` String COMMENT '手机号码', `CH_DESC` String COMMENT '简介', `CH_BIRTHDAY` String COMMENT '出生日期', `CH_CITY` String COMMENT '城市', `CH_PROVINCE` String COMMENT '用户所在省份', `I_GENDER` UInt32 COMMENT '性别 1男 2女', `I_STATUS` UInt32 COMMENT '用户状态 1正常 2封禁 3禁播 4禁言 ', `I_TYPE` UInt32 COMMENT '用户类型 1普通用户2运营用户3内部用户', `CH_IM_PASSWORD` String COMMENT 'IM密码', `I_ELEMENT2_VERIFY` UInt32 COMMENT '二要素认证 1已认证2未认证3认证失败', `I_FACE_VERIFY` UInt32 COMMENT '人脸认证 1已认证 2未认证 3认证失败', `I_USER_INFO_COMPLETE` UInt32 COMMENT '用户信息完成状态 1已完成 2未完成', `CH_INVITE_CODE` String COMMENT '邀请码', `D_CREATED_AT` DateTime COMMENT '创建时间', `D_UPDATED_AT` DateTime COMMENT '更新时间') ENGINE = ReplicatedReplacingMergeTree('/clickhouse/bp_campfire/tables/{layer}-{shard}/user', '{replica}') PARTITION BY toYYYYMM(D_CREATED_AT) ORDER BY I_ID SETTINGS index_granularity = 8192), Stack trace (when copying this message, always include the lines below):

0. DB::ReplicatedMergeTreeTableMetadata::checkImmutableFieldsEquals(DB::ReplicatedMergeTreeTableMetadata const&) const @ 0xe49fe88 in /usr/bin/clickhouse
1. DB::ReplicatedMergeTreeTableMetadata::checkEquals(DB::ReplicatedMergeTreeTableMetadata const&, DB::ColumnsDescription const&, DB::Context const&) const @ 0xe4a03d2 in /usr/bin/clickhouse
2. DB::StorageReplicatedMergeTree::checkTableStructure(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&) @ 0xe0fcc71 in /usr/bin/clickhouse
3. DB::StorageReplicatedMergeTree::StorageReplicatedMergeTree(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, DB::StorageID const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::StorageInMemoryMetadata const&, DB::Context&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::MergeTreeData::MergingParams const&, std::__1::unique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings> >, bool, bool) @ 0xe0f5cd8 in /usr/bin/clickhouse
4. std::__1::shared_ptr<DB::StorageReplicatedMergeTree> ext::shared_ptr_helper<DB::StorageReplicatedMergeTree>::create<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, bool const&, DB::StorageID const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::StorageInMemoryMetadata&, DB::Context&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, DB::MergeTreeData::MergingParams&, std::__1::unique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings> >, bool const&, bool&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, bool const&, DB::StorageID const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::StorageInMemoryMetadata&, DB::Context&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, DB::MergeTreeData::MergingParams&, std::__1::unique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings> >&&, bool const&, bool&) @ 0xe4d0393 in /usr/bin/clickhouse
5. ? @ 0xe4c9022 in /usr/bin/clickhouse
6. std::__1::__function::__func<std::__1::shared_ptr<DB::IStorage> (*)(DB::StorageFactory::Arguments const&), std::__1::allocator<std::__1::shared_ptr<DB::IStorage> (*)(DB::StorageFactory::Arguments const&)>, std::__1::shared_ptr<DB::IStorage> (DB::StorageFactory::Arguments const&)>::operator()(DB::StorageFactory::Arguments const&) @ 0xe4d2e9d in /usr/bin/clickhouse
7. DB::StorageFactory::get(DB::ASTCreateQuery const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, DB::Context&, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, bool) const @ 0xe02a13a in /usr/bin/clickhouse
8. DB::InterpreterCreateQuery::doCreateTable(DB::ASTCreateQuery&, DB::InterpreterCreateQuery::TableProperties const&) @ 0xdabee13 in /usr/bin/clickhouse
9. DB::InterpreterCreateQuery::createTable(DB::ASTCreateQuery&) @ 0xdabdf9a in /usr/bin/clickhouse
10. DB::InterpreterCreateQuery::execute() @ 0xdac0ff7 in /usr/bin/clickhouse
11. ? @ 0xdec8f18 in /usr/bin/clickhouse
12. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, DB::Context&, std::__1::function<void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>) @ 0xdecbbcf in /usr/bin/clickhouse
13. DB::DDLWorker::tryExecuteQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DDLTask const&, DB::ExecutionStatus&) @ 0xd8c78e7 in /usr/bin/clickhouse
14. DB::DDLWorker::processTask(DB::DDLTask&) @ 0xd8c9b26 in /usr/bin/clickhouse
15. DB::DDLWorker::enqueueTask(std::__1::unique_ptr<DB::DDLTask, std::__1::default_delete<DB::DDLTask> >) @ 0xd8c8282 in /usr/bin/clickhouse
16. ? @ 0xd8d7d6d in /usr/bin/clickhouse
17. ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0x7b8c17d in /usr/bin/clickhouse
18. std::__1::__function::__func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()&&...)::'lambda'(), std::__1::allocator<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()&&...)::'lambda'()>, void ()>::operator()() @ 0x7b8e67a in /usr/bin/clickhouse
19. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x7b8963d in /usr/bin/clickhouse
20. ? @ 0x7b8d153 in /usr/bin/clickhouse
21. start_thread @ 0x7e65 in /usr/lib64/libpthread-2.17.so
22. __clone @ 0xfe88d in /usr/lib64/libc-2.17.so

2020.12.17 11:44:56.183844 [ 23283 ] {d9b88430-272b-4b07-9553-5151c8e8db28} <Error> DDLWorker: Query CREATE TABLE bp_campfire.user_local UUID 'ef7e4455-f5a3-4565-aaf3-b1b35c226100' (`I_ID` UInt64 COMMENT '主键', `I_UID` UInt64 COMMENT '业务主键', `I_VIP_ID` UInt64 COMMENT 'vip服务ID', `I_DISPLAY_ID` UInt64 COMMENT '显示ID', `CH_NICK_NAME` String COMMENT '昵称', `CH_AVATAR` String COMMENT '头像', `CH_AREA_CODE` String COMMENT '区号', `CH_PHONE` String COMMENT '手机号码', `CH_DESC` String COMMENT '简介', `CH_BIRTHDAY` String COMMENT '出生日期', `CH_CITY` String COMMENT '城市', `CH_PROVINCE` String COMMENT '用户所在省份', `I_GENDER` UInt32 COMMENT '性别 1男 2女', `I_STATUS` UInt32 COMMENT '用户状态 1正常 2封禁 3禁播 4禁言 ', `I_TYPE` UInt32 COMMENT '用户类型 1普通用户2运营用户3内部用户', `CH_IM_PASSWORD` String COMMENT 'IM密码', `I_ELEMENT2_VERIFY` UInt32 COMMENT '二要素认证 1已认证2未认证3认证失败', `I_FACE_VERIFY` UInt32 COMMENT '人脸认证 1已认证 2未认证 3认证失败', `I_USER_INFO_COMPLETE` UInt32 COMMENT '用户信息完成状态 1已完成 2未完成', `CH_INVITE_CODE` String COMMENT '邀请码', `D_CREATED_AT` DateTime COMMENT '创建时间', `D_UPDATED_AT` DateTime COMMENT '更新时间') ENGINE = ReplicatedReplacingMergeTree('/clickhouse/bp_campfire/tables/{layer}-{shard}/user', '{replica}') PARTITION BY toYYYYMM(D_CREATED_AT) ORDER BY I_ID SETTINGS index_granularity = 8192 wasn't finished successfully: Code: 342, e.displayText() = DB::Exception: Existing table metadata in ZooKeeper differs in mode of merge operation. Stored in ZooKeeper: 0, local: 5, Stack trace (when copying this message, always include the lines below):

0. DB::ReplicatedMergeTreeTableMetadata::checkImmutableFieldsEquals(DB::ReplicatedMergeTreeTableMetadata const&) const @ 0xe49fe88 in /usr/bin/clickhouse
1. DB::ReplicatedMergeTreeTableMetadata::checkEquals(DB::ReplicatedMergeTreeTableMetadata const&, DB::ColumnsDescription const&, DB::Context const&) const @ 0xe4a03d2 in /usr/bin/clickhouse
2. DB::StorageReplicatedMergeTree::checkTableStructure(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&) @ 0xe0fcc71 in /usr/bin/clickhouse
3. DB::StorageReplicatedMergeTree::StorageReplicatedMergeTree(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, DB::StorageID const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::StorageInMemoryMetadata const&, DB::Context&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::MergeTreeData::MergingParams const&, std::__1::unique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings> >, bool, bool) @ 0xe0f5cd8 in /usr/bin/clickhouse
4. std::__1::shared_ptr<DB::StorageReplicatedMergeTree> ext::shared_ptr_helper<DB::StorageReplicatedMergeTree>::create<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, bool const&, DB::StorageID const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::StorageInMemoryMetadata&, DB::Context&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, DB::MergeTreeData::MergingParams&, std::__1::unique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings> >, bool const&, bool&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, bool const&, DB::StorageID const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::StorageInMemoryMetadata&, DB::Context&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, DB::MergeTreeData::MergingParams&, std::__1::unique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings> >&&, bool const&, bool&) @ 0xe4d0393 in /usr/bin/clickhouse
5. ? @ 0xe4c9022 in /usr/bin/clickhouse
6. std::__1::__function::__func<std::__1::shared_ptr<DB::IStorage> (*)(DB::StorageFactory::Arguments const&), std::__1::allocator<std::__1::shared_ptr<DB::IStorage> (*)(DB::StorageFactory::Arguments const&)>, std::__1::shared_ptr<DB::IStorage> (DB::StorageFactory::Arguments const&)>::operator()(DB::StorageFactory::Arguments const&) @ 0xe4d2e9d in /usr/bin/clickhouse
7. DB::StorageFactory::get(DB::ASTCreateQuery const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, DB::Context&, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, bool) const @ 0xe02a13a in /usr/bin/clickhouse
8. DB::InterpreterCreateQuery::doCreateTable(DB::ASTCreateQuery&, DB::InterpreterCreateQuery::TableProperties const&) @ 0xdabee13 in /usr/bin/clickhouse
9. DB::InterpreterCreateQuery::createTable(DB::ASTCreateQuery&) @ 0xdabdf9a in /usr/bin/clickhouse
10. DB::InterpreterCreateQuery::execute() @ 0xdac0ff7 in /usr/bin/clickhouse
11. ? @ 0xdec8f18 in /usr/bin/clickhouse
12. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, DB::Context&, std::__1::function<void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>) @ 0xdecbbcf in /usr/bin/clickhouse
13. DB::DDLWorker::tryExecuteQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::DDLTask const&, DB::ExecutionStatus&) @ 0xd8c78e7 in /usr/bin/clickhouse
14. DB::DDLWorker::processTask(DB::DDLTask&) @ 0xd8c9b26 in /usr/bin/clickhouse
15. DB::DDLWorker::enqueueTask(std::__1::unique_ptr<DB::DDLTask, std::__1::default_delete<DB::DDLTask> >) @ 0xd8c8282 in /usr/bin/clickhouse
16. ? @ 0xd8d7d6d in /usr/bin/clickhouse
17. ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0x7b8c17d in /usr/bin/clickhouse
18. std::__1::__function::__func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()&&...)::'lambda'(), std::__1::allocator<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()&&...)::'lambda'()>, void ()>::operator()() @ 0x7b8e67a in /usr/bin/clickhouse
19. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x7b8963d in /usr/bin/clickhouse
20. ? @ 0x7b8d153 in /usr/bin/clickhouse
21. start_thread @ 0x7e65 in /usr/lib64/libpthread-2.17.so
22. __clone @ 0xfe88d in /usr/lib64/libc-2.17.so
 (version 20.10.3.30 (official build))
2020.12.17 11:44:56.192154 [ 23398 ] {} <Debug> DDLWorker: Scheduling tasks
2020.12.17 11:44:56.193140 [ 23398 ] {} <Debug> DDLWorker: Waiting a watch
2020.12.17 11:44:56.193308 [ 23398 ] {} <Debug> DDLWorker: Scheduling tasks
2020.12.17 11:44:56.193967 [ 23398 ] {} <Debug> DDLWorker: Waiting a watch
2020.12.17 11:44:56.193981 [ 23398 ] {} <Debug> DDLWorker: Scheduling tasks
2020.12.17 11:44:56.194547 [ 23398 ] {} <Debug> DDLWorker: Waiting a watch
2020.12.17 11:44:56.195739 [ 23398 ] {} <Debug> DDLWorker: Scheduling tasks
2020.12.17 11:44:56.196719 [ 23398 ] {} <Debug> DDLWorker: Waiting a watch
2020.12.17 11:44:56.200069 [ 23398 ] {} <Debug> DDLWorker: Scheduling tasks
2020.12.17 11:44:56.200303 [ 23346 ] {} <Warning> zkutil::Lock: Lock is lost. It is normal if session was expired. Path: /clickhouse/task_queue/ddl/query-0000038956/lock/bj2%2Dclickhouse%2Dall%2Dprod%2D01:9000
2020.12.17 11:44:56.200650 [ 23398 ] {} <Debug> DDLWorker: Waiting a watch
2020.12.17 11:44:56.270147 [ 10022 ] {29663432-8c12-45e0-a474-a73a031cc72f} <Error> executeQuery: Code: 342, e.displayText() = DB::Exception: There was an error on [bj2-clickhouse-all-prod-04:9000]: Code: 342, e.displayText() = DB::Exception: Existing table metadata in ZooKeeper differs in mode of merge operation. Stored in ZooKeeper: 0, local: 5 (version 20.10.3.30 (official build)) (version 20.10.3.30 (official build)) (from 127.0.0.1:1598) (in query: CREATE TABLE bp_campfire.user_local ON CLUSTER ch_cluster_all ( `I_ID` UInt64 COMMENT '主键', `I_UID` UInt64 COMMENT '业务主键', `I_VIP_ID` UInt64 COMMENT 'vip服务ID', `I_DISPLAY_ID` UInt64 COMMENT '显示ID', `CH_NICK_NAME` String COMMENT '昵称', `CH_AVATAR` String COMMENT '头像', `CH_AREA_CODE` String COMMENT '区号', `CH_PHONE` String COMMENT '手机号码', `CH_DESC` String COMMENT '简介', `CH_BIRTHDAY` String COMMENT '出生日期', `CH_CITY` String COMMENT '城市', `CH_PROVINCE` String COMMENT '用户所在省份', `I_GENDER` UInt32 COMMENT '性别 1男 2女', `I_STATUS` UInt32 COMMENT '用户状态 1正常 2封禁 3禁播 4禁言 ', `I_TYPE` UInt32 COMMENT '用户类型 1普通用户2运营用户3内部用户', `CH_IM_PASSWORD` String COMMENT 'IM密码', `I_ELEMENT2_VERIFY` UInt32 COMMENT '二要素认证 1已认证2未认证3认证失败', `I_FACE_VERIFY` UInt32 COMMENT '人脸认证 1已认证 2未认证 3认证失败', `I_USER_INFO_COMPLETE` UInt32 COMMENT '用户信息完成状态 1已完成 2未完成', `CH_INVITE_CODE` String COMMENT '邀请码', `D_CREATED_AT` DateTime COMMENT '创建时间', `D_UPDATED_AT` DateTime COMMENT '更新时间' ) ENGINE = ReplicatedReplacingMergeTree('/clickhouse/bp_campfire/tables/{layer}-{shard}/user', '{replica}') PARTITION BY toYYYYMM(D_CREATED_AT) ORDER BY I_ID SETTINGS index_granularity = 8192;), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned short&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&>(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned short&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&) @ 0xd8dd50d in /usr/bin/clickhouse
1. DB::DDLQueryStatusInputStream::readImpl() @ 0xd8dc0bb in /usr/bin/clickhouse
2. DB::IBlockInputStream::read() @ 0xd71b1a5 in /usr/bin/clickhouse
3. DB::AsynchronousBlockInputStream::calculate() @ 0xd71761d in /usr/bin/clickhouse
4. ? @ 0xd717db8 in /usr/bin/clickhouse
5. ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0x7b8c17d in /usr/bin/clickhouse
6. std::__1::__function::__func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()&&...)::'lambda'(), std::__1::allocator<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()&&...)::'lambda'()>, void ()>::operator()() @ 0x7b8e67a in /usr/bin/clickhouse
7. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x7b8963d in /usr/bin/clickhouse
8. ? @ 0x7b8d153 in /usr/bin/clickhouse
9. start_thread @ 0x7e65 in /usr/lib64/libpthread-2.17.so
10. __clone @ 0xfe88d in /usr/lib64/libc-2.17.so

2020.12.17 11:44:56.270302 [ 10022 ] {29663432-8c12-45e0-a474-a73a031cc72f} <Error> TCPHandler: Code: 342, e.displayText() = DB::Exception: There was an error on [bj2-clickhouse-all-prod-04:9000]: Code: 342, e.displayText() = DB::Exception: Existing table metadata in ZooKeeper differs in mode of merge operation. Stored in ZooKeeper: 0, local: 5 (version 20.10.3.30 (official build)), Stack trace:

0. DB::Exception::Exception<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned short&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&>(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned short&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&) @ 0xd8dd50d in /usr/bin/clickhouse
1. DB::DDLQueryStatusInputStream::readImpl() @ 0xd8dc0bb in /usr/bin/clickhouse
2. DB::IBlockInputStream::read() @ 0xd71b1a5 in /usr/bin/clickhouse
3. DB::AsynchronousBlockInputStream::calculate() @ 0xd71761d in /usr/bin/clickhouse
4. ? @ 0xd717db8 in /usr/bin/clickhouse
5. ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0x7b8c17d in /usr/bin/clickhouse
6. std::__1::__function::__func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()&&...)::'lambda'(), std::__1::allocator<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()&&...)::'lambda'()>, void ()>::operator()() @ 0x7b8e67a in /usr/bin/clickhouse
7. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x7b8963d in /usr/bin/clickhouse
8. ? @ 0x7b8d153 in /usr/bin/clickhouse
9. start_thread @ 0x7e65 in /usr/lib64/libpthread-2.17.so
10. __clone @ 0xfe88d in /usr/lib64/libc-2.17.so

```

The magic is that after waiting for a while, and then execute the table creation statement, you can create successfully again
```
2020.12.17 11:48:09.888516 [ 10022 ] {b71e07bb-3e56-4ab3-8f05-dced37c78fee} <Debug> executeQuery: (from 127.0.0.1:1598) CREATE TABLE bp_campfire.user_local on cluster ch_cluster_all ( I_ID UInt64 COMMENT '主键', I_UID UInt64 COMMENT '业务主键', I_VIP_ID UInt64 COMMENT 'vip服务I
D', I_DISPLAY_ID UInt64 COMMENT '显示ID', CH_NICK_NAME String COMMENT '昵称', CH_AVATAR String COMMENT '头像', CH_AREA_CODE String COMMENT '区号', CH_PHONE String COMMENT '手机号码', CH_DESC String COMMENT '简介', CH_BIRTHDAY String COMMENT '出生日期', CH_CITY String COMMENT '
城市', CH_PROVINCE String COMMENT '用户所在省份', I_GENDER UInt32 COMMENT '性别 1男 2女', I_STATUS UInt32 COMMENT '用户状态 1正常 2封禁 3禁播 4禁言 ', I_TYPE UInt32 COMMENT '用户类型 1普通用户2运营用户3内部用户', CH_IM_PASSWORD String COMMENT 'IM密码', I_ELEMENT2_VERIFY UInt32 
COMMENT '二要素认证 1已认证2未认证3认证失败', I_FACE_VERIFY UInt32 COMMENT '人脸认证 1已认证 2未认证 3认证失败', I_USER_INFO_COMPLETE UInt32 COMMENT '用户信息完成状态 1已完成 2未完成', CH_INVITE_CODE String COMMENT '邀请码', D_CREATED_AT DateTime COMMENT '创建时间', D_UPDATED_A
T DateTime COMMENT '更新时间' ) ENGINE = ReplicatedReplacingMergeTree( '/clickhouse/bp_campfire/tables/{layer}-{shard}/user', '{replica}' ) PARTITION BY toYYYYMM(D_CREATED_AT) ORDER BY (I_ID) SETTINGS index_granularity = 8192;
2020.12.17 11:48:09.895443 [ 23398 ] {} <Debug> DDLWorker: Scheduling tasks
2020.12.17 11:48:09.895458 [ 23346 ] {} <Debug> DDLWorker: Cleaning queue
2020.12.17 11:48:09.896690 [ 10022 ] {b71e07bb-3e56-4ab3-8f05-dced37c78fee} <Debug> executeQuery: Query pipeline:
DDLQueryStatusInputStream

2020.12.17 11:48:09.897799 [ 23398 ] {} <Debug> DDLWorker: Waiting a watch
2020.12.17 11:48:09.897802 [ 23283 ] {d9b88430-272b-4b07-9553-5151c8e8db28} <Debug> DDLWorker: Processing task query-0000040117 (CREATE TABLE bp_campfire.user_local UUID '048ec15f-ce50-4e10-834b-46b03664557a' ON CLUSTER ch_cluster_all (`I_ID` UInt64 COMMENT '主键', `I_UID` UInt
64 COMMENT '业务主键', `I_VIP_ID` UInt64 COMMENT 'vip服务ID', `I_DISPLAY_ID` UInt64 COMMENT '显示ID', `CH_NICK_NAME` String COMMENT '昵称', `CH_AVATAR` String COMMENT '头像', `CH_AREA_CODE` String COMMENT '区号', `CH_PHONE` String COMMENT '手机号码', `CH_DESC` String COMMENT '
简介', `CH_BIRTHDAY` String COMMENT '出生日期', `CH_CITY` String COMMENT '城市', `CH_PROVINCE` String COMMENT '用户所在省份', `I_GENDER` UInt32 COMMENT '性别 1男 2女', `I_STATUS` UInt32 COMMENT '用户状态 1正常 2封禁 3禁播 4禁言 ', `I_TYPE` UInt32 COMMENT '用户类型 1普通用户2运
营用户3内部用户', `CH_IM_PASSWORD` String COMMENT 'IM密码', `I_ELEMENT2_VERIFY` UInt32 COMMENT '二要素认证 1已认证2未认证3认证失败', `I_FACE_VERIFY` UInt32 COMMENT '人脸认证 1已认证 2未认证 3认证失败', `I_USER_INFO_COMPLETE` UInt32 COMMENT '用户信息完成状态 1已完成 2未完成', `C
H_INVITE_CODE` String COMMENT '邀请码', `D_CREATED_AT` DateTime COMMENT '创建时间', `D_UPDATED_AT` DateTime COMMENT '更新时间') ENGINE = ReplicatedReplacingMergeTree('/clickhouse/bp_campfire/tables/{layer}-{shard}/user', '{replica}') PARTITION BY toYYYYMM(D_CREATED_AT) ORDER BY
 I_ID SETTINGS index_granularity = 8192)
2020.12.17 11:48:09.899628 [ 23283 ] {d9b88430-272b-4b07-9553-5151c8e8db28} <Debug> DDLWorker: Executing query: CREATE TABLE bp_campfire.user_local UUID '048ec15f-ce50-4e10-834b-46b03664557a' (`I_ID` UInt64 COMMENT '主键', `I_UID` UInt64 COMMENT '业务主键', `I_VIP_ID` UInt64 CO
MMENT 'vip服务ID', `I_DISPLAY_ID` UInt64 COMMENT '显示ID', `CH_NICK_NAME` String COMMENT '昵称', `CH_AVATAR` String COMMENT '头像', `CH_AREA_CODE` String COMMENT '区号', `CH_PHONE` String COMMENT '手机号码', `CH_DESC` String COMMENT '简介', `CH_BIRTHDAY` String COMMENT '出生日
期', `CH_CITY` String COMMENT '城市', `CH_PROVINCE` String COMMENT '用户所在省份', `I_GENDER` UInt32 COMMENT '性别 1男 2女', `I_STATUS` UInt32 COMMENT '用户状态 1正常 2封禁 3禁播 4禁言 ', `I_TYPE` UInt32 COMMENT '用户类型 1普通用户2运营用户3内部用户', `CH_IM_PASSWORD` String CO
MMENT 'IM密码', `I_ELEMENT2_VERIFY` UInt32 COMMENT '二要素认证 1已认证2未认证3认证失败', `I_FACE_VERIFY` UInt32 COMMENT '人脸认证 1已认证 2未认证 3认证失败', `I_USER_INFO_COMPLETE` UInt32 COMMENT '用户信息完成状态 1已完成 2未完成', `CH_INVITE_CODE` String COMMENT '邀请码', `D_C
REATED_AT` DateTime COMMENT '创建时间', `D_UPDATED_AT` DateTime COMMENT '更新时间') ENGINE = ReplicatedReplacingMergeTree('/clickhouse/bp_campfire/tables/{layer}-{shard}/user', '{replica}') PARTITION BY toYYYYMM(D_CREATED_AT) ORDER BY I_ID SETTINGS index_granularity = 8192
2020.12.17 11:48:09.899827 [ 23283 ] {46bbdb16-4534-4046-8f54-4784f053d0de} <Debug> executeQuery: (from 0.0.0.0:0, user: ) /* ddl_entry=query-0000040117 */ CREATE TABLE bp_campfire.user_local UUID '048ec15f-ce50-4e10-834b-46b03664557a' (`I_ID` UInt64 COMMENT '主键', `I_UID` UIn
t64 COMMENT '业务主键', `I_VIP_ID` UInt64 COMMENT 'vip服务ID', `I_DISPLAY_ID` UInt64 COMMENT '显示ID', `CH_NICK_NAME` String COMMENT '昵称', `CH_AVATAR` String COMMENT '头像', `CH_AREA_CODE` String COMMENT '区号', `CH_PHONE` String COMMENT '手机号码', `CH_DESC` String COMMENT '
简介', `CH_BIRTHDAY` String COMMENT '出生日期', `CH_CITY` String COMMENT '城市', `CH_PROVINCE` String COMMENT '用户所在省份', `I_GENDER` UInt32 COMMENT '性别 1男 2女', `I_STATUS` UInt32 COMMENT '用户状态 1正常 2封禁 3禁播 4禁言 ', `I_TYPE` UInt32 COMMENT '用户类型 1普通用户2运
营用户3内部用户', `CH_IM_PASSWORD` String COMMENT 'IM密码', `I_ELEMENT2_VERIFY` UInt32 COMMENT '二要素认证 1已认证2未认证3认证失败', `I_FACE_VERIFY` UInt32 COMMENT '人脸认证 1已认证 2未认证 3认证失败', `I_USER_INFO_COMPLETE` UInt32 COMMENT '用户信息完成状态 1已完成 2未完成', `C
H_INVITE_CODE` String COMMENT '邀请码', `D_CREATED_AT` DateTime COMMENT '创建时间', `D_UPDATED_AT` DateTime COMMENT '更新时间') ENGINE = ReplicatedReplacingMergeTree('/clickhouse/bp_campfire/tables/{layer}-{shard}/user', '{replica}') PARTITION BY toYYYYMM(D_CREATED_AT) ORDER BY
 I_ID SETTINGS index_granularity = 8192
2020.12.17 11:48:09.900911 [ 23346 ] {} <Information> DDLWorker: Task query-0000038957 should be deleted, but it is locked. Skipping it.
2020.12.17 11:48:09.901216 [ 23346 ] {} <Warning> zkutil::Lock: Lock is lost. It is normal if session was expired. Path: /clickhouse/task_queue/ddl/query-0000038957/lock/bj2%2Dclickhouse%2Dall%2Dprod%2D01:9000
2020.12.17 11:48:09.907328 [ 23283 ] {46bbdb16-4534-4046-8f54-4784f053d0de} <Debug> bp_campfire.user_local (048ec15f-ce50-4e10-834b-46b03664557a): Loading data parts
2020.12.17 11:48:09.907435 [ 23283 ] {46bbdb16-4534-4046-8f54-4784f053d0de} <Debug> bp_campfire.user_local (048ec15f-ce50-4e10-834b-46b03664557a): Loaded data parts (0 items)
2020.12.17 11:48:09.917781 [ 23283 ] {46bbdb16-4534-4046-8f54-4784f053d0de} <Debug> bp_campfire.user_local (048ec15f-ce50-4e10-834b-46b03664557a): This table /clickhouse/bp_campfire/tables/01-01/user is already created, will add new replica
2020.12.17 11:48:09.924589 [ 23283 ] {46bbdb16-4534-4046-8f54-4784f053d0de} <Debug> bp_campfire.user_local (048ec15f-ce50-4e10-834b-46b03664557a): Creating replica /clickhouse/bp_campfire/tables/01-01/user/replicas/bj2-clickhouse-all-prod-01
2020.12.17 11:48:09.931239 [ 23398 ] {} <Debug> DDLWorker: Scheduling tasks
2020.12.17 11:48:09.933155 [ 23398 ] {} <Debug> DDLWorker: Waiting a watch
2020.12.17 11:48:09.941634 [ 23325 ] {} <Debug> bp_campfire.user_local (ReplicatedMergeTreeRestartingThread): Activating replica.
2020.12.17 11:48:09.946095 [ 23325 ] {} <Information> bp_campfire.user_local (048ec15f-ce50-4e10-834b-46b03664557a): Replica bj2-clickhouse-all-prod-04 has log pointer '', approximate 1 queue lag and 0 queue size
2020.12.17 11:48:09.946107 [ 23325 ] {} <Information> bp_campfire.user_local (048ec15f-ce50-4e10-834b-46b03664557a): Will mimic bj2-clickhouse-all-prod-04
2020.12.17 11:48:09.948209 [ 23325 ] {} <Warning> bp_campfire.user_local (048ec15f-ce50-4e10-834b-46b03664557a): Log pointer of source replica bj2-clickhouse-all-prod-04 changed while we loading queue nodes. Will retry.
2020.12.17 11:48:09.950270 [ 23325 ] {} <Debug> bp_campfire.user_local (048ec15f-ce50-4e10-834b-46b03664557a): Queued 0 parts to be fetched
2020.12.17 11:48:09.950275 [ 23325 ] {} <Debug> bp_campfire.user_local (048ec15f-ce50-4e10-834b-46b03664557a): Copied 0 queue entries
2020.12.17 11:48:09.951295 [ 23325 ] {} <Debug> bp_campfire.user_local (ReplicatedMergeTreeQueue): Loading queue from /clickhouse/bp_campfire/tables/01-01/user/replicas/bj2-clickhouse-all-prod-01/queue
2020.12.17 11:48:09.951755 [ 23325 ] {} <Debug> bp_campfire.user_local (ReplicatedMergeTreeQueue): Having 0 queue entries to load, 0 entries already loaded.
2020.12.17 11:48:09.955418 [ 23306 ] {} <Information> bp_campfire.user_local (048ec15f-ce50-4e10-834b-46b03664557a): Became leader
2020.12.17 11:48:09.956190 [ 23283 ] {46bbdb16-4534-4046-8f54-4784f053d0de} <Debug> DDLWorker: Executed query: CREATE TABLE bp_campfire.user_local UUID '048ec15f-ce50-4e10-834b-46b03664557a' (`I_ID` UInt64 COMMENT '主键', `I_UID` UInt64 COMMENT '业务主键', `I_VIP_ID` UInt64 COMMENT 'vip服务ID', `I_DISPLAY_ID` UInt64 COMMENT '显示ID', `CH_NICK_NAME` String COMMENT '昵称', `CH_AVATAR` String COMMENT '头像', `CH_AREA_CODE` String COMMENT '区号', `CH_PHONE` String COMMENT '手机号码', `CH_DESC` String COMMENT '简介', `CH_BIRTHDAY` String COMMENT '出生日期', `CH_CITY` String COMMENT '城市', `CH_PROVINCE` String COMMENT '用户所在省份', `I_GENDER` UInt32 COMMENT '性别 1男 2女', `I_STATUS` UInt32 COMMENT '用户状态 1正常 2封禁 3禁播 4禁言 ', `I_TYPE` UInt32 COMMENT '用户类型 1普通用户2运营用户3内部用户', `CH_IM_PASSWORD` String COMMENT 'IM密码', `I_ELEMENT2_VERIFY` UInt32 COMMENT '二要素认证 1已认证2未认证3认证失败', `I_FACE_VERIFY` UInt32 COMMENT '人脸认证 1已认证 2未认证 3认证失败', `I_USER_INFO_COMPLETE` UInt32 COMMENT '用户信息完成状态 1已完成 2未完成', `CH_INVITE_CODE` String COMMENT '邀请码', `D_CREATED_AT` DateTime COMMENT '创建时间', `D_UPDATED_AT` DateTime COMMENT '更新时间') ENGINE = ReplicatedReplacingMergeTree('/clickhouse/bp_campfire/tables/{layer}-{shard}/user', '{replica}') PARTITION BY toYYYYMM(D_CREATED_AT) ORDER BY I_ID SETTINGS index_granularity = 8192
2020.12.17 11:48:09.999599 [ 10022 ] {b71e07bb-3e56-4ab3-8f05-dced37c78fee} <Information> executeQuery: Read 6 rows, 420.00 B in 0.111019245 sec., 54 rows/sec., 3.69 KiB/sec.
2020.12.17 11:48:09.999658 [ 10022 ] {b71e07bb-3e56-4ab3-8f05-dced37c78fee} <Debug> MemoryTracker: Peak memory usage (for query): 28.46 KiB.
2020.12.17 11:48:09.999816 [ 10022 ] {} <Debug> MemoryTracker: Peak memory usage (for query): 28.46 KiB.
2020.12.17 11:48:09.999832 [ 10022 ] {} <Information> TCPHandler: Processed in 0.11173117 sec.
2020.12.17 11:48:10.251891 [ 26107 ] {} <Warning> TCPHandler: Client has not sent any data.
2020.12.17 11:48:10.251939 [ 26107 ] {} <Information> TCPHandler: Done processing connection.
2020.12.17 11:48:11.253854 [ 26107 ] {} <Warning> TCPHandler: Client has not sent any data.
2020.12.17 11:48:11.253900 [ 26107 ] {} <Information> TCPHandler: Done processing connection.
2020.12.17 11:48:11.255298 [ 26107 ] {} <Warning> TCPHandler: Client has not sent any data.
2020.12.17 11:48:11.255338 [ 26107 ] {} <Information> TCPHandler: Done processing connection.
2020.12.17 11:48:11.834927 [ 23323 ] {} <Debug> inno_topping_article.article_play_local (ReplicatedMergeTreeCleanupThread): Removed 4 old log entries: log-0001728290 - log-0001728293
```