ID: 11672
Title: Filtering JOIN query throws supertype error (20.3/20.4)
Description:
**Describe the bug**

Another issue that showed up after upgrading ClickHouse from **19.6.2.11** to **20.3.10.75**, filtering a JOIN query with more than one expression with a single date value throws an unexpected error.

**How to reproduce**
* Which ClickHouse server version to use

20.3.10.75, confirmed also on 20.4.3.16

* Which interface to use, if matters

native client

* Non-default settings, if any

no

* `CREATE TABLE` statements for all tables involved

```sql
CREATE TABLE foo (server_date Date, server_time Datetime, dimension_1 String) ENGINE = MergeTree() PARTITION BY toYYYYMM(server_date) ORDER BY (server_date);
CREATE TABLE bar (server_date Date, dimension_1 String) ENGINE = MergeTree() PARTITION BY toYYYYMM(server_date) ORDER BY (server_date);
```

* Sample data for all these tables, use [clickhouse-obfuscator](https://github.com/ClickHouse/ClickHouse/blob/master/programs/obfuscator/Obfuscator.cpp#L42-L80) if necessary

```sql
INSERT INTO foo VALUES ('2020-01-01', '2020-01-01 12:00:00', 'test1'), ('2020-01-01', '2020-01-01 13:00:00', 'test2');
INSERT INTO bar VALUES ('2020-01-01', 'test2'), ('2020-01-01', 'test3');
```

* Queries to run that lead to unexpected result

```sql
SELECT count()
FROM foo ANY INNER JOIN bar USING (dimension_1)
WHERE (foo.server_date <= '2020-11-07') AND (toDate(foo.server_time, 'Asia/Yekaterinburg') <= '2020-11-07');
```

**Expected behavior**

Expected result from 19.6.2.11:
```sql
┌─count()─┐
│       1 │
└─────────┘

1 rows in set. Elapsed: 0.007 sec.
```

**Error message and/or stacktrace**

```sql
Received exception from server (version 20.3.10):
Code: 386. DB::Exception: Received from clickhouse:9000. DB::Exception: There is no supertype for types Date, String because some of them are String/FixedString and some of them are not. 

0 rows in set. Elapsed: 0.003 sec.
```

**Additional context**

Removing either one of the two conditions makes the query work. Changing the date to any other in the second condition also makes it work. It also works fine in queries without JOIN.