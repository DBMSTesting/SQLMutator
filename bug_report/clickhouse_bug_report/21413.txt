ID: 21413
Title: arraySort: Argument at index 1 for function tupleElement must be constant
Description:
**Describe the bug**
`tupleElement` fails with an error `Argument at index 1 for function tupleElement must be constant` when used inside ArrayMap, arraySort (and probably other high order functions) even if arguments are a tuple and a numeric literal.

**Does it reproduce on recent release?**
Cannot test at the moment.

**How to reproduce**
* ClickHouse **20.3.21**

I was able to minimize query to:
```
SELECT arraySort(x -> tupleElement(x, 2), [tuple('a', 'b')]) AS X FROM table
WHERE Date >= toDate('2021-03-03') - 2
ORDER BY TS LIMIT 1
```
But so far I can reproduce this only on a table which contains real application data. A very similar query on a test table with few hundred rows works without issues. Also many modifications to this query, like removing `ORDER BY` make query to run without an error on real data too.

Among other conditions to get an error - the same numeric literal should be used in two places - as number of tuple element and in WHERE. E. g.  with `tupleElement(x, 1)` this query works fine, changing WHERE to `Date >= toDate('2021-03-03') - 1 - 1` also make an error go away.

**Expected behavior**

Query exactly as written above returns:
```
┌─X───────────┐
│ [('a','b')] │
└─────────────┘
```

**Error message and/or stacktrace**
```
2021.03.03 10:58:00.666869 [ 10021 ] {2dbe5257-b05c-4917-8dbc-826aad2fedd1} <Debug> executeQuery: (from 127.0.0.1:46354) SELECT arraySort(x -> (x.2), [('a', 'b')]) AS X FROM table WHERE Date >= (toDate('2021-03-03') - 2) ORDER BY TS ASC LIMIT 1
2021.03.03 10:58:00.667692 [ 10021 ] {2dbe5257-b05c-4917-8dbc-826aad2fedd1} <Debug> InterpreterSelectQuery: MergeTreeWhereOptimizer: condition "Date >= (toDate('2021-03-03') - 2)" moved to PREWHERE
2021.03.03 10:58:00.668721 [ 10021 ] {2dbe5257-b05c-4917-8dbc-826aad2fedd1} <Debug> default.table (SelectExecutor): Key condition: unknown
2021.03.03 10:58:00.668760 [ 10021 ] {2dbe5257-b05c-4917-8dbc-826aad2fedd1} <Debug> default.table (SelectExecutor): MinMax index condition: (column 0 in [18687, +inf))
2021.03.03 10:58:00.668795 [ 10021 ] {2dbe5257-b05c-4917-8dbc-826aad2fedd1} <Debug> default.table (SelectExecutor): Selected 8 parts by date, 8 parts by key, 66 marks to read from 8 ranges
2021.03.03 10:58:00.773766 [ 10021 ] {2dbe5257-b05c-4917-8dbc-826aad2fedd1} <Error> executeQuery: Code: 44, e.displayText() = DB::Exception: Argument at index 1 for function tupleElement must be constant (version 20.3.21.2) (from 127.0.0.1:46354) (in query: SELECT arraySort(x -> (x.2), [('a', 'b')]) AS X FROM table WHERE Date >= (toDate('2021-03-03') - 2) ORDER BY TS ASC LIMIT 1), Stack trace (when copying this message, always include the lines below):

0. StackTrace::StackTrace() @ 0x7f01b37 in /usr/bin/clickhouse
1. DB::Exception::Exception(std::string const&, int) @ 0x7eda8a0 in /usr/bin/clickhouse
2. ? @ 0x406a07f in /usr/bin/clickhouse
3. DB::ExecutableFunctionAdaptor::executeWithoutLowCardinalityColumns(DB::Block&, std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long, unsigned long, bool) @ 0x4b01dde in /usr/bin/clickhouse
4. DB::ExecutableFunctionAdaptor::execute(DB::Block&, std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long, unsigned long, bool) @ 0x4b028e8 in /usr/bin/clickhouse
5. DB::ExpressionAction::execute(DB::Block&, bool, std::shared_ptr<DB::ExtraBlock>&) const @ 0x7c92fec in /usr/bin/clickhouse
6. DB::ExpressionActions::execute(DB::Block&, bool) const @ 0x7c93533 in /usr/bin/clickhouse
7. DB::ExecutableFunctionExpression::execute(DB::Block&, std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long, unsigned long) @ 0x7da83a0 in /usr/bin/clickhouse
8. DB::ExecutableFunctionAdaptor::execute(DB::Block&, std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long, unsigned long, bool) @ 0x4b028e8 in /usr/bin/clickhouse
9. DB::ColumnFunction::reduce() const @ 0x76919dc in /usr/bin/clickhouse
10. DB::FunctionArrayMapped<DB::ArraySortImpl<true>, DB::NameArraySort>::executeImpl(DB::Block&, std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long, unsigned long) @ 0x5d9e7b2 in /usr/bin/clickhouse
11. DB::ExecutableFunctionAdaptor::execute(DB::Block&, std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long, unsigned long, bool) @ 0x4b028e8 in /usr/bin/clickhouse
12. DB::ExpressionAction::execute(DB::Block&, bool, std::shared_ptr<DB::ExtraBlock>&) const @ 0x7c92fec in /usr/bin/clickhouse
13. DB::ExpressionActions::execute(DB::Block&, bool) const @ 0x7c93533 in /usr/bin/clickhouse
14. DB::ExpressionTransform::transform(DB::Chunk&) @ 0x7a3f114 in /usr/bin/clickhouse
15. DB::ISimpleTransform::work() @ 0x794846a in /usr/bin/clickhouse
16. ? @ 0x796f680 in /usr/bin/clickhouse
17. DB::PipelineExecutor::executeSingleThread(unsigned long, unsigned long) @ 0x79724a8 in /usr/bin/clickhouse
18. ? @ 0x7972e61 in /usr/bin/clickhouse
19. ThreadPoolImpl<std::thread>::worker(std::_List_iterator<std::thread>) @ 0x7f10b45 in /usr/bin/clickhouse
20. ? @ 0x8379af0 in /usr/bin/clickhouse
21. start_thread @ 0x7ea5 in /usr/lib64/libpthread-2.17.so
22. clone @ 0xfe96d in /usr/lib64/libc-2.17.so
```