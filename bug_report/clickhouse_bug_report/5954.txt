ID: 5954
Title: LowCardinality columns cannot be mixed with non-LowCardinality columns in materialized views
Description:
(you don't have to strictly follow this form)

**Describe the bug**
When mixing LowCardinality columns with regular columns (UInt64) in my example, CH returns an error because it expects all columns to be LowCardinality.

**How to reproduce**
* Which ClickHouse server version to use
Seen on 19.9.2.4

* Queries to run that lead to unexpected result
CREATE TABLE HASH_TEST_INSERT (STR_VAL String) ENGINE = Null;;

CREATE MATERIALIZED VIEW HASH_MV (HASH_VAL UInt64, STR_VAL LowCardinality(String)) ENGINE = ReplacingMergeTree ORDER BY HASH_VAL AS SELECT xxHash64(STR_VAL) AS HASH_VAL, toLowCardinality(STR_VAL) AS STR_VAL FROM HASH_TEST_INSERT;;

INSERT INTO HASH_TEST_INSERT VALUES ('test');;

**Error message and/or stacktrace**
Code: 53, e.displayText() = DB::Exception: Type mismatch for column HASH_VAL. Column has type UInt64, got type LowCardinality(UInt64): while pushing to view test_OverwriteDb.HASH_MV (version 19.9.2.4 (official build))

**Additional context**
Casting explicitly to UInt64 gives the desired result.  So, redefining the MV as the following will give the desired result:
CREATE MATERIALIZED VIEW HASH_MV (HASH_VAL UInt64, STR_VAL LowCardinality(String)) ENGINE = ReplacingMergeTree ORDER BY HASH_VAL AS SELECT **cast(xxHash64(STR_VAL) AS UInt64)** AS HASH_VAL, toLowCardinality(STR_VAL) AS STR_VAL FROM HASH_TEST_INSERT;;


