ID: 7915
Title: Segfault from DB::Join::joinBlockImpl
Description:
ClickHouse client version 19.16.2.2 (official build).
Connecting to localhost:9000 as user default.
Connected to ClickHouse server version 19.16.2 revision 54427.


I try to make a ANY INNER JOIN query, which work on (very) old version, between  MergeTree and Joint table (ENGINE = Join(ANY, INNER, {snp_num}). I also  set <any_join_distinct_right_table_keys>1</any_join_distinct_right_table_keys> keep the possibility of this type of join-query.

But I have:

2019.11.26 01:30:24.274916 [ 101 ] {71ab8e62-f6c0-44a8-9163-bd3e32a6461a} <Debug> executeQuery: (from N.N.N) SELECT ea1, gwas_id1, gwas_id2, n1, n2, p1, p2, ra1, rs_id1, snp_num, z1, z2, l2_0, ld_weights                              FROM (SELECT ea1, gwas_id1, gwas_id2, n1, n2, p1, p2, ra1, rs_id1, snp_num, z1, z2 FROM (SELECT ea AS ea1, gwas_id AS gwas_id1, n AS n1, p AS p1, ra AS ra1, rs_id AS rs_id1, snp_num, z AS z1 FROM test_dunlopgwas.snp_only_ld AS gwas_1 WHERE gwas_id in (370) and  greaterOrEquals(info,0.0)  and  eaf BETWEEN 0.01 and 0.99 ) ALL INNER JOIN (SELECT gwas_id AS gwas_id2, n AS n2, p AS p2, snp_num, z AS z2 FROM test_dunlopgwas.snp_only_ld AS gwas_2 WHERE gwas_id in (37) and  greaterOrEquals(info,0.0)  and  eaf BETWEEN 0.01 and 0.99 ) USING snp_num)                                      ANY INNER JOIN test_dunlopgwas.ldsc_snps                                     USING snp_num FORMAT TSVWithNamesAndTypes 
2019.11.26 01:30:24.275477 [ 101 ] {71ab8e62-f6c0-44a8-9163-bd3e32a6461a} <Debug> InterpreterSelectQuery: MergeTreeWhereOptimizer: condition "info >= 0." moved to PREWHERE
2019.11.26 01:30:24.276081 [ 101 ] {71ab8e62-f6c0-44a8-9163-bd3e32a6461a} <Debug> InterpreterSelectQuery: MergeTreeWhereOptimizer: condition "info >= 0." moved to PREWHERE
2019.11.26 01:30:24.276595 [ 101 ] {71ab8e62-f6c0-44a8-9163-bd3e32a6461a} <Debug> InterpreterSelectQuery: MergeTreeWhereOptimizer: condition "info >= 0." moved to PREWHERE
2019.11.26 01:30:24.277221 [ 101 ] {71ab8e62-f6c0-44a8-9163-bd3e32a6461a} <Debug> InterpreterSelectQuery: MergeTreeWhereOptimizer: condition "info >= 0." moved to PREWHERE
2019.11.26 01:30:24.277441 [ 101 ] {71ab8e62-f6c0-44a8-9163-bd3e32a6461a} <Debug> Join: setSampleBlock: gwas_id2 UInt32 UInt32(size = 0), z2 Float64 Float64(size = 0), snp_num UInt32 UInt32(size = 0), p2 Float64 Float64(size = 0), n2 Int32 Int32(size = 0)
2019.11.26 01:30:24.277918 [ 101 ] {71ab8e62-f6c0-44a8-9163-bd3e32a6461a} <Debug> InterpreterSelectQuery: MergeTreeWhereOptimizer: condition "info >= 0." moved to PREWHERE
2019.11.26 01:30:24.278565 [ 101 ] {71ab8e62-f6c0-44a8-9163-bd3e32a6461a} <Debug> InterpreterSelectQuery: MergeTreeWhereOptimizer: condition "info >= 0." moved to PREWHERE
2019.11.26 01:30:24.278791 [ 101 ] {71ab8e62-f6c0-44a8-9163-bd3e32a6461a} <Debug> Join: setSampleBlock: gwas_id2 UInt32 UInt32(size = 0), z2 Float64 Float64(size = 0), snp_num UInt32 UInt32(size = 0), p2 Float64 Float64(size = 0), n2 Int32 Int32(size = 0)
2019.11.26 01:30:24.279362 [ 101 ] {71ab8e62-f6c0-44a8-9163-bd3e32a6461a} <Debug> test_dunlopgwas.snp_only_ld (SelectExecutor): Key condition: (column 0 in 1-element set), unknown, and, unknown, and, unknown, and
2019.11.26 01:30:24.279375 [ 101 ] {71ab8e62-f6c0-44a8-9163-bd3e32a6461a} <Debug> test_dunlopgwas.snp_only_ld (SelectExecutor): MinMax index condition: (column 0 in 1-element set), unknown, and, unknown, and, unknown, and
2019.11.26 01:30:24.279388 [ 101 ] {71ab8e62-f6c0-44a8-9163-bd3e32a6461a} <Debug> test_dunlopgwas.snp_only_ld (SelectExecutor): Selected 1 parts by date, 1 parts by key, 1 marks to read from 1 ranges
2019.11.26 01:30:24.279453 [ 101 ] {71ab8e62-f6c0-44a8-9163-bd3e32a6461a} <Trace> test_dunlopgwas.snp_only_ld (SelectExecutor): Reading approx. 8192 rows with 1 streams
2019.11.26 01:30:24.279527 [ 101 ] {71ab8e62-f6c0-44a8-9163-bd3e32a6461a} <Trace> InterpreterSelectQuery: FetchColumns -> Complete
2019.11.26 01:30:24.279615 [ 101 ] {71ab8e62-f6c0-44a8-9163-bd3e32a6461a} <Trace> InterpreterSelectQuery: FetchColumns -> Complete
2019.11.26 01:30:24.279675 [ 101 ] {71ab8e62-f6c0-44a8-9163-bd3e32a6461a} <Trace> InterpreterSelectQuery: FetchColumns -> Complete
2019.11.26 01:30:24.280172 [ 102 ] {} <Fatal> BaseDaemon: ########################################
2019.11.26 01:30:24.280217 [ 102 ] {} <Fatal> BaseDaemon: (version 19.16.2.2 (official build)) (from thread 101) Received signal Segmentation fault (11).
2019.11.26 01:30:24.280236 [ 102 ] {} <Fatal> BaseDaemon: Address: NULL pointer. Access: read. Address not mapped to object.
2019.11.26 01:30:24.280248 [ 102 ] {} <Fatal> BaseDaemon: Stack trace: 0x55bbd9d39179 0x55bbd9d6a327 0x55bbd9d17cac 0x55bbda410130 0x55bbda4110e5 0x55bbda2a350d 0x55bbd9cf36d6 0x55bbd9cd78b5 0x55bbd9cf4b73 0x55bbd9cf6a58 0x55bbd9e02586 0x55bbd9e03a4c 0x55bbd69f18ae 0x55bbd69f3c29 0x55bbda882a69 0x55bbda87efe0 0x55bbda87f6fd 0x55bbdbf558d1 0x55bbdbf5367c 0x55bbdc6c51e0 0x7f0b85dad2de 0x7f0b856d0a63
2019.11.26 01:30:24.309645 [ 102 ] {} <Fatal> BaseDaemon: 3. 0x55bbd9d39179 ? /usr/bin/clickhouse
2019.11.26 01:30:24.309725 [ 102 ] {} <Fatal> BaseDaemon: 4. 0x55bbd9d6a327 void DB::Join::joinBlockImpl<(DB::ASTTableJoin::Kind)0, (DB::ASTTableJoin::Strictness)1, DB::Join::MapsTemplate<DB::JoinStuff::WithFlags<DB::RowRef, false> > >(DB::Block&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, DB::Block const&, DB::Join::MapsTemplate<DB::JoinStuff::WithFlags<DB::RowRef, false> > const&) const /usr/bin/clickhouse
2019.11.26 01:30:24.309738 [ 102 ] {} <Fatal> BaseDaemon: 5. 0x55bbd9d17cac DB::Join::joinBlock(DB::Block&) /usr/bin/clickhouse
2019.11.26 01:30:24.309752 [ 102 ] {} <Fatal> BaseDaemon: 6. 0x55bbda410130 DB::ExpressionAction::execute(DB::Block&, bool) const /usr/bin/clickhouse
2019.11.26 01:30:24.309762 [ 102 ] {} <Fatal> BaseDaemon: 7. 0x55bbda4110e5 DB::ExpressionActions::execute(DB::Block&, bool) const /usr/bin/clickhouse
2019.11.26 01:30:24.309771 [ 102 ] {} <Fatal> BaseDaemon: 8. 0x55bbda2a350d DB::ExpressionBlockInputStream::ExpressionBlockInputStream(std::shared_ptr<DB::IBlockInputStream> const&, std::shared_ptr<DB::ExpressionActions> const&) /usr/bin/clickhouse
2019.11.26 01:30:24.309780 [ 102 ] {} <Fatal> BaseDaemon: 9. 0x55bbd9cf36d6 void DB::InterpreterSelectQuery::executeImpl<DB::InterpreterSelectQuery::Pipeline>(DB::InterpreterSelectQuery::Pipeline&, std::shared_ptr<DB::IBlockInputStream> const&) /usr/bin/clickhouse
2019.11.26 01:30:24.309788 [ 102 ] {} <Fatal> BaseDaemon: 10. 0x55bbd9cd78b5 DB::InterpreterSelectQuery::executeWithMultipleStreams() /usr/bin/clickhouse
2019.11.26 01:30:24.309795 [ 102 ] {} <Fatal> BaseDaemon: 11. 0x55bbd9cf4b73 DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams() /usr/bin/clickhouse
2019.11.26 01:30:24.309809 [ 102 ] {} <Fatal> BaseDaemon: 12. 0x55bbd9cf6a58 DB::InterpreterSelectWithUnionQuery::execute() /usr/bin/clickhouse
2019.11.26 01:30:24.309815 [ 102 ] {} <Fatal> BaseDaemon: 13. 0x55bbd9e02586 ? /usr/bin/clickhouse
2019.11.26 01:30:24.309827 [ 102 ] {} <Fatal> BaseDaemon: 14. 0x55bbd9e03a4c DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, DB::Context&, std::function<void (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>, std::function<void (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>) /usr/bin/clickhouse
2019.11.26 01:30:24.309837 [ 102 ] {} <Fatal> BaseDaemon: 15. 0x55bbd69f18ae DB::HTTPHandler::processQuery(Poco::Net::HTTPServerRequest&, HTMLForm&, Poco::Net::HTTPServerResponse&, DB::HTTPHandler::Output&) /usr/bin/clickhouse
2019.11.26 01:30:24.309845 [ 102 ] {} <Fatal> BaseDaemon: 16. 0x55bbd69f3c29 DB::HTTPHandler::handleRequest(Poco::Net::HTTPServerRequest&, Poco::Net::HTTPServerResponse&) /usr/bin/clickhouse
2019.11.26 01:30:24.309861 [ 102 ] {} <Fatal> BaseDaemon: 17. 0x55bbda882a69 Poco::Net::HTTPServerConnection::run() /usr/bin/clickhouse
2019.11.26 01:30:24.309868 [ 102 ] {} <Fatal> BaseDaemon: 18. 0x55bbda87efe0 Poco::Net::TCPServerConnection::start() /usr/bin/clickhouse
2019.11.26 01:30:24.309874 [ 102 ] {} <Fatal> BaseDaemon: 19. 0x55bbda87f6fd Poco::Net::TCPServerDispatcher::run() /usr/bin/clickhouse
2019.11.26 01:30:24.309884 [ 102 ] {} <Fatal> BaseDaemon: 20. 0x55bbdbf558d1 Poco::PooledThread::run() /usr/bin/clickhouse
2019.11.26 01:30:24.309893 [ 102 ] {} <Fatal> BaseDaemon: 21. 0x55bbdbf5367c Poco::ThreadImpl::runnableEntry(void*) /usr/bin/clickhouse
2019.11.26 01:30:24.309899 [ 102 ] {} <Fatal> BaseDaemon: 22. 0x55bbdc6c51e0 ? /usr/bin/clickhouse
2019.11.26 01:30:24.309908 [ 102 ] {} <Fatal> BaseDaemon: 23. 0x7f0b85dad2de start_thread /usr/lib64/libpthread-2.28.so
2019.11.26 01:30:24.309918 [ 102 ] {} <Fatal> BaseDaemon: 24. 0x7f0b856d0a63 __GI___clone /usr/lib64/libc-2.28.so

