ID: 64602
Title: Null pointer in DB::MarksInCompressedFile::get in 24.2.3.70
Description:
Started having this yesterday in 24.2.1, upgraded to 24.2.3.70 cannot boot my ClickHouse instance. 

```
2024.05.29 18:38:06.346326 [ 794 ] {} <Fatal> BaseDaemon: ########## Short fault info ############
2024.05.29 18:38:06.346373 [ 794 ] {} <Fatal> BaseDaemon: (version 24.2.3.70 (official build), build id: 7FC693C54C1FDD028F1B018FAD6F0EDEE1A433D1, git hash: 8a7b8c7afb6718831e8da261ca1e68f3f741f177) (from thread 746) Received signal 11
2024.05.29 18:38:06.346389 [ 794 ] {} <Fatal> BaseDaemon: Signal description: Segmentation fault
2024.05.29 18:38:06.346399 [ 794 ] {} <Fatal> BaseDaemon: Address: NULL pointer. Access: read. Unknown si_code.
2024.05.29 18:38:06.346417 [ 794 ] {} <Fatal> BaseDaemon: Stack trace: 0x000000001313010d 0x0000000012cb332c 0x0000000012ce22c6 0x0000000012ce62a4 0x0000000012ce6629 0x0000000010ed3c6e 0x0000000012ce4cd4 0x0000000012cf83c2 0x0000000012d0125b 0x0000000012d08eb6 0x00000000135bbcef 0x0000000012cf5f96 0x00000000135ed838 0x00000000131564a3 0x000000001316f49a 0x0000000013165ed0 0x0000000013165688 0x0000000013173d97 0x0000000013173f53 0x0000000006b34965 0x000000000f3a09d8 0x000000000f39f341 0x000000001036e01c 0x00000000117ba49c 0x00000000117c6168 0x00000000117cba5f 0x000000000d114abe 0x00007f47b57f5609 0x00007f47b571a353
2024.05.29 18:38:06.346423 [ 794 ] {} <Fatal> BaseDaemon: ########################################
2024.05.29 18:38:06.346432 [ 794 ] {} <Fatal> BaseDaemon: (version 24.2.3.70 (official build), build id: 7FC693C54C1FDD028F1B018FAD6F0EDEE1A433D1, git hash: 8a7b8c7afb6718831e8da261ca1e68f3f741f177) (from thread 746) (no query) Received signal Segmentation fault (11)
2024.05.29 18:38:06.346438 [ 794 ] {} <Fatal> BaseDaemon: Address: NULL pointer. Access: read. Unknown si_code.
2024.05.29 18:38:06.346444 [ 794 ] {} <Fatal> BaseDaemon: Stack trace: 0x000000001313010d 0x0000000012cb332c 0x0000000012ce22c6 0x0000000012ce62a4 0x0000000012ce6629 0x0000000010ed3c6e 0x0000000012ce4cd4 0x0000000012cf83c2 0x0000000012d0125b 0x0000000012d08eb6 0x00000000135bbcef 0x0000000012cf5f96 0x00000000135ed838 0x00000000131564a3 0x000000001316f49a 0x0000000013165ed0 0x0000000013165688 0x0000000013173d97 0x0000000013173f53 0x0000000006b34965 0x000000000f3a09d8 0x000000000f39f341 0x000000001036e01c 0x00000000117ba49c 0x00000000117c6168 0x00000000117cba5f 0x000000000d114abe 0x00007f47b57f5609 0x00007f47b571a353
2024.05.29 18:38:06.346503 [ 794 ] {} <Fatal> BaseDaemon: 2. DB::MarksInCompressedFile::get(unsigned long) const @ 0x000000001313010d
2024.05.29 18:38:06.346525 [ 794 ] {} <Fatal> BaseDaemon: 3. DB::MergeTreeMarksLoader::getMark(unsigned long, unsigned long) @ 0x0000000012cb332c
2024.05.29 18:38:06.346535 [ 794 ] {} <Fatal> BaseDaemon: 4. DB::MergeTreeReaderStream::getRightOffset(unsigned long) @ 0x0000000012ce22c6
2024.05.29 18:38:06.346574 [ 794 ] {} <Fatal> BaseDaemon: 5. DB::getStream(bool, DB::ISerialization::SubstreamPath const&, DB::MergeTreeDataPartChecksums const&, std::map<String, std::unique_ptr<DB::MergeTreeReaderStream, std::default_delete<DB::MergeTreeReaderStream>>, std::less<String>, std::allocator<std::pair<String const, std::unique_ptr<DB::MergeTreeReaderStream, std::default_delete<DB::MergeTreeReaderStream>>>>>&, DB::NameAndTypePair const&, unsigned long, bool, unsigned long, std::unordered_map<String, COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::hash<String>, std::equal_to<String>, std::allocator<std::pair<String const, COW<DB::IColumn>::immutable_ptr<DB::IColumn>>>>&) @ 0x0000000012ce62a4
2024.05.29 18:38:06.346607 [ 794 ] {} <Fatal> BaseDaemon: 6. DB::ReadBuffer* std::__function::__policy_invoker<DB::ReadBuffer* (DB::ISerialization::SubstreamPath const&)>::__call_impl<std::__function::__default_alloc_func<DB::MergeTreeReaderWide::readData(DB::NameAndTypePair const&, std::shared_ptr<DB::ISerialization const> const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn>&, unsigned long, bool, unsigned long, unsigned long, std::unordered_map<String, COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::hash<String>, std::equal_to<String>, std::allocator<std::pair<String const, COW<DB::IColumn>::immutable_ptr<DB::IColumn>>>>&, bool)::$_0, DB::ReadBuffer* (DB::ISerialization::SubstreamPath const&)>>(std::__function::__policy_storage const*, DB::ISerialization::SubstreamPath const&) @ 0x0000000012ce6629
2024.05.29 18:38:06.346631 [ 794 ] {} <Fatal> BaseDaemon: 7. DB::ISerialization::deserializeBinaryBulkWithMultipleStreams(COW<DB::IColumn>::immutable_ptr<DB::IColumn>&, unsigned long, DB::ISerialization::DeserializeBinaryBulkSettings&, std::shared_ptr<DB::ISerialization::DeserializeBinaryBulkState>&, std::unordered_map<String, COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::hash<String>, std::equal_to<String>, std::allocator<std::pair<String const, COW<DB::IColumn>::immutable_ptr<DB::IColumn>>>>*) const @ 0x0000000010ed3c6e
2024.05.29 18:38:06.346647 [ 794 ] {} <Fatal> BaseDaemon: 8. DB::MergeTreeReaderWide::readRows(unsigned long, unsigned long, bool, unsigned long, std::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn>>>&) @ 0x0000000012ce4cd4
2024.05.29 18:38:06.346659 [ 794 ] {} <Fatal> BaseDaemon: 9. DB::MergeTreeRangeReader::DelayedStream::finalize(std::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn>>>&) @ 0x0000000012cf83c2
2024.05.29 18:38:06.346675 [ 794 ] {} <Fatal> BaseDaemon: 10. DB::MergeTreeRangeReader::read(unsigned long, DB::MarkRanges&) @ 0x0000000012d0125b
2024.05.29 18:38:06.346689 [ 794 ] {} <Fatal> BaseDaemon: 11. DB::MergeTreeReadTask::read(DB::MergeTreeReadTask::BlockSizeParams const&) @ 0x0000000012d08eb6
2024.05.29 18:38:06.346703 [ 794 ] {} <Fatal> BaseDaemon: 12. DB::MergeTreeThreadSelectAlgorithm::readFromTask(DB::MergeTreeReadTask&, DB::MergeTreeReadTask::BlockSizeParams const&) @ 0x00000000135bbcef
2024.05.29 18:38:06.346718 [ 794 ] {} <Fatal> BaseDaemon: 13. DB::MergeTreeSelectProcessor::read() @ 0x0000000012cf5f96
2024.05.29 18:38:06.346734 [ 794 ] {} <Fatal> BaseDaemon: 14. DB::MergeTreeSource::tryGenerate() @ 0x00000000135ed838
2024.05.29 18:38:06.346747 [ 794 ] {} <Fatal> BaseDaemon: 15. DB::ISource::work() @ 0x00000000131564a3
2024.05.29 18:38:06.346758 [ 794 ] {} <Fatal> BaseDaemon: 16. DB::ExecutionThreadContext::executeTask() @ 0x000000001316f49a
2024.05.29 18:38:06.346780 [ 794 ] {} <Fatal> BaseDaemon: 17. DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x0000000013165ed0
2024.05.29 18:38:06.346792 [ 794 ] {} <Fatal> BaseDaemon: 18. DB::PipelineExecutor::executeStep(std::atomic<bool>*) @ 0x0000000013165688
2024.05.29 18:38:06.346809 [ 794 ] {} <Fatal> BaseDaemon: 19. DB::PullingPipelineExecutor::pull(DB::Chunk&) @ 0x0000000013173d97
2024.05.29 18:38:06.346821 [ 794 ] {} <Fatal> BaseDaemon: 20. DB::PullingPipelineExecutor::pull(DB::Block&) @ 0x0000000013173f53
2024.05.29 18:38:06.346842 [ 794 ] {} <Fatal> BaseDaemon: 21. DB::HashedDictionary<(DB::DictionaryKeyType)0, false, false>::HashedDictionary(DB::StorageID const&, DB::DictionaryStructure const&, std::shared_ptr<DB::IDictionarySource>, DB::HashedDictionaryConfiguration const&, std::shared_ptr<DB::Block>) @ 0x0000000006b34965
2024.05.29 18:38:06.346864 [ 794 ] {} <Fatal> BaseDaemon: 22. DB::registerDictionaryHashed(DB::DictionaryFactory&)::$_4::operator()(String const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, String const&, std::shared_ptr<DB::IDictionarySource>, std::shared_ptr<DB::Context const>, DB::DictionaryKeyType, bool) const @ 0x000000000f3a09d8
2024.05.29 18:38:06.346890 [ 794 ] {} <Fatal> BaseDaemon: 23. std::unique_ptr<DB::IDictionary, std::default_delete<DB::IDictionary>> std::__function::__policy_invoker<std::unique_ptr<DB::IDictionary, std::default_delete<DB::IDictionary>> (String const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, String const&, std::shared_ptr<DB::IDictionarySource>, std::shared_ptr<DB::Context const>, bool)>::__call_impl<std::__function::__default_alloc_func<DB::registerDictionaryHashed(DB::DictionaryFactory&)::$_0, std::unique_ptr<DB::IDictionary, std::default_delete<DB::IDictionary>> (String const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, String const&, std::shared_ptr<DB::IDictionarySource>, std::shared_ptr<DB::Context const>, bool)>>(std::__function::__policy_storage const*, String const&, DB::DictionaryStructure const&, Poco::Util::AbstractConfiguration const&, String const&, std::shared_ptr<DB::IDictionarySource>&&, std::shared_ptr<DB::Context const>&&, bool) @ 0x000000000f39f341
2024.05.29 18:38:06.346910 [ 794 ] {} <Fatal> BaseDaemon: 24. DB::DictionaryFactory::create(String const&, Poco::Util::AbstractConfiguration const&, String const&, std::shared_ptr<DB::Context const>, bool) const @ 0x000000001036e01c
2024.05.29 18:38:06.346930 [ 794 ] {} <Fatal> BaseDaemon: 25. DB::ExternalDictionariesLoader::create(String const&, Poco::Util::AbstractConfiguration const&, String const&, String const&) const @ 0x00000000117ba49c
2024.05.29 18:38:06.346945 [ 794 ] {} <Fatal> BaseDaemon: 26. DB::ExternalLoader::LoadingDispatcher::doLoading(String const&, unsigned long, bool, unsigned long, bool, std::shared_ptr<DB::ThreadGroup>) @ 0x00000000117c6168
2024.05.29 18:38:06.346971 [ 794 ] {} <Fatal> BaseDaemon: 27. void std::__function::__policy_invoker<void ()>::__call_impl<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<true>::ThreadFromGlobalPoolImpl<void (DB::ExternalLoader::LoadingDispatcher::*)(String const&, unsigned long, bool, unsigned long, bool, std::shared_ptr<DB::ThreadGroup>), DB::ExternalLoader::LoadingDispatcher*, String&, unsigned long&, bool&, unsigned long&, bool, std::shared_ptr<DB::ThreadGroup>>(void (DB::ExternalLoader::LoadingDispatcher::*&&)(String const&, unsigned long, bool, unsigned long, bool, std::shared_ptr<DB::ThreadGroup>), DB::ExternalLoader::LoadingDispatcher*&&, String&, unsigned long&, bool&, unsigned long&, bool&&, std::shared_ptr<DB::ThreadGroup>&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0x00000000117cba5f
2024.05.29 18:38:06.346992 [ 794 ] {} <Fatal> BaseDaemon: 28. void* std::__thread_proxy[abi:v15000]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0x000000000d114abe
2024.05.29 18:38:06.347002 [ 794 ] {} <Fatal> BaseDaemon: 29. ? @ 0x00007f47b57f5609
2024.05.29 18:38:06.347007 [ 794 ] {} <Fatal> BaseDaemon: 30. ? @ 0x00007f47b571a353
2024.05.29 18:38:06.473290 [ 794 ] {} <Fatal> BaseDaemon: Integrity check of the executable successfully passed (checksum: 6EAC1A63EB190294470D837DD9C37210)
2024.05.29 18:38:06.473549 [ 794 ] {} <Fatal> BaseDaemon: Report this error to https://github.com/ClickHouse/ClickHouse/issues
```