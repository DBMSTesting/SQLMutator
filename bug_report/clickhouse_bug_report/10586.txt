ID: 10586
Title: RBAC "SET DEFAULT ROLE NONE TO role0" crashes the server
Description:
Executing `SET DEFAULT ROLE NONE TO role0` query causes a crash.

```
user@user-node:~$ clickhouse-client 
ClickHouse client version 20.4.1.3079 (official build).
Connecting to localhost:9000 as user default.
Connected to ClickHouse server version 20.4.1 revision 54434.

user-node :) CREATE ROLE role0

CREATE ROLE role0

Ok.

0 rows in set. Elapsed: 0.003 sec. 

user-node :) SET DEFAULT ROLE NONE TO role0

SET DEFAULT ROLE NONE TO role0


Exception on client:
Code: 32. DB::Exception: Attempt to read after eof: while receiving packet from localhost:9000

Connecting to localhost:9000 as user default.
Code: 210. DB::NetException: Connection refused (localhost:9000)
```
Server error log contains the following.
```
2020.04.29 18:58:56.784105 [ 28842 ] {} <Fatal> BaseDaemon: ########################################
2020.04.29 18:58:56.784263 [ 28842 ] {} <Fatal> BaseDaemon: (version 20.4.1.3079 (official build)) (from thread 28792) (query_id: cb2a72c4-68dc-4148-ac4b-5bd44e9ab175) Received signal Segmentation fault (11).
2020.04.29 18:58:56.784366 [ 28842 ] {} <Fatal> BaseDaemon: Address: 0x110 Access: read. Address not mapped to object.
2020.04.29 18:58:56.784451 [ 28842 ] {} <Fatal> BaseDaemon: Stack trace: 0xcc8f3e6 0xd3ffd67 0xd3ffe39 0xcc70fce 0xcc7189e 0xcc96888 0xd400037 0xd401978 0xd5404d3 0xd543441 0x8ff7c48 0x8ff8c20 0x104aa97b 0x104aae0b 0x106589d6 0x10653c90 0x7fbc03d1b6db 0x7fbc043f288f
2020.04.29 18:58:56.828946 [ 28842 ] {} <Fatal> BaseDaemon: 3. DB::ExtendedRoleSet::operator=(DB::ExtendedRoleSet const&) @ 0xcc8f3e6 in /usr/bin/clickhouse
2020.04.29 18:58:56.828997 [ 28842 ] {} <Fatal> BaseDaemon: 4. DB::InterpreterSetRoleQuery::updateUserSetDefaultRoles(DB::User&, DB::ExtendedRoleSet const&) @ 0xd3ffd67 in /usr/bin/clickhouse
2020.04.29 18:58:56.829012 [ 28842 ] {} <Fatal> BaseDaemon: 5. ? @ 0xd3ffe39 in /usr/bin/clickhouse
2020.04.29 18:58:56.829036 [ 28842 ] {} <Fatal> BaseDaemon: 6. DB::DiskAccessStorage::updateNoLock(StrongTypedef<DB::UInt128, DB::UUIDTag> const&, std::__1::function<std::__1::shared_ptr<DB::IAccessEntity const> (std::__1::shared_ptr<DB::IAccessEntity const> const&)> const&, std::__1::vector<std::__1::tuple<std::__1::function<void (StrongTypedef<DB::UInt128, DB::UUIDTag> const&, std::__1::shared_ptr<DB::IAccessEntity const> const&)>, StrongTypedef<DB::UInt128, DB::UUIDTag>, std::__1::shared_ptr<DB::IAccessEntity const> >, std::__1::allocator<std::__1::tuple<std::__1::function<void (StrongTypedef<DB::UInt128, DB::UUIDTag> const&, std::__1::shared_ptr<DB::IAccessEntity const> const&)>, StrongTypedef<DB::UInt128, DB::UUIDTag>, std::__1::shared_ptr<DB::IAccessEntity const> > > >&) @ 0xcc70fce in /usr/bin/clickhouse
2020.04.29 18:58:56.829062 [ 28842 ] {} <Fatal> BaseDaemon: 7. DB::DiskAccessStorage::updateImpl(StrongTypedef<DB::UInt128, DB::UUIDTag> const&, std::__1::function<std::__1::shared_ptr<DB::IAccessEntity const> (std::__1::shared_ptr<DB::IAccessEntity const> const&)> const&) @ 0xcc7189e in /usr/bin/clickhouse
2020.04.29 18:58:56.829081 [ 28842 ] {} <Fatal> BaseDaemon: 8. DB::IAccessStorage::update(std::__1::vector<StrongTypedef<DB::UInt128, DB::UUIDTag>, std::__1::allocator<StrongTypedef<DB::UInt128, DB::UUIDTag> > > const&, std::__1::function<std::__1::shared_ptr<DB::IAccessEntity const> (std::__1::shared_ptr<DB::IAccessEntity const> const&)> const&) @ 0xcc96888 in /usr/bin/clickhouse
2020.04.29 18:58:56.829105 [ 28842 ] {} <Fatal> BaseDaemon: 9. DB::InterpreterSetRoleQuery::setDefaultRole(DB::ASTSetRoleQuery const&) @ 0xd400037 in /usr/bin/clickhouse
2020.04.29 18:58:56.829121 [ 28842 ] {} <Fatal> BaseDaemon: 10. DB::InterpreterSetRoleQuery::execute() @ 0xd401978 in /usr/bin/clickhouse
2020.04.29 18:58:56.829134 [ 28842 ] {} <Fatal> BaseDaemon: 11. ? @ 0xd5404d3 in /usr/bin/clickhouse
2020.04.29 18:58:56.829150 [ 28842 ] {} <Fatal> BaseDaemon: 12. DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, bool) @ 0xd543441 in /usr/bin/clickhouse
2020.04.29 18:58:56.829166 [ 28842 ] {} <Fatal> BaseDaemon: 13. DB::TCPHandler::runImpl() @ 0x8ff7c48 in /usr/bin/clickhouse
2020.04.29 18:58:56.829180 [ 28842 ] {} <Fatal> BaseDaemon: 14. DB::TCPHandler::run() @ 0x8ff8c20 in /usr/bin/clickhouse
2020.04.29 18:58:56.829195 [ 28842 ] {} <Fatal> BaseDaemon: 15. Poco::Net::TCPServerConnection::start() @ 0x104aa97b in /usr/bin/clickhouse
2020.04.29 18:58:56.829208 [ 28842 ] {} <Fatal> BaseDaemon: 16. Poco::Net::TCPServerDispatcher::run() @ 0x104aae0b in /usr/bin/clickhouse
2020.04.29 18:58:56.829222 [ 28842 ] {} <Fatal> BaseDaemon: 17. Poco::PooledThread::run() @ 0x106589d6 in /usr/bin/clickhouse
2020.04.29 18:58:56.829237 [ 28842 ] {} <Fatal> BaseDaemon: 18. Poco::ThreadImpl::runnableEntry(void*) @ 0x10653c90 in /usr/bin/clickhouse
2020.04.29 18:58:56.829265 [ 28842 ] {} <Fatal> BaseDaemon: 19. start_thread @ 0x76db in /lib/x86_64-linux-gnu/libpthread-2.27.so
2020.04.29 18:58:56.829398 [ 28842 ] {} <Fatal> BaseDaemon: 20. /build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97: __clone @ 0x12188f in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so
```