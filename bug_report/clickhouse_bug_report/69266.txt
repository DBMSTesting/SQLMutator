ID: 69266
Title: Merge tree out-of-bound error
Description:
**Describe the bug**
After a few inserts and a `EXCHANGE TABLE` command, the background merge process keeps throwing an error:

**How to reproduce**

```sql
SET allow_experimental_dynamic_type = 1;
CREATE TABLE t0 (c0 String) ENGINE = MergeTree() ORDER BY tuple();
CREATE TABLE t1 (c0 Array(Dynamic)) ENGINE = MergeTree() ORDER BY tuple();
INSERT INTO t1 (c0) VALUES (['你们', FALSE, FALSE, TRUE, TRUE, 'been']);
INSERT INTO t1 (c0) VALUES ([[98, 1, 78, 111]]);
INSERT INTO t1 (c0) VALUES ([]), ([]);
INSERT INTO t1 (c0) VALUES ([TRUE, TRUE, [], FALSE, [18446670196838598712, 18446663404668669361], 4081281779, 1]), ([1, 'had', 1, 'boy', 'said', -409198627, -464570, [74982692443208, 65926839794546, 33534674657146, 18446656970772746935, 18446714808036706404, 18446675889500768351, 88013143396497, 18446688291987781172], -2715051280651840466]), (['叫', 4310.5, TRUE, '爸爸', FALSE]), ([[-444497630, NULL], [TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE], [[1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1]], [-348, 2989, 145408613, -682060461, 3488205575, 327570098], 81028225870452, 6223, '认识你很高兴', []]), ([-8046511071028141655, 14945000545372148948]), ([13981479826772, -11301, 'being']), ([12770, '爸爸', [TRUE, TRUE, FALSE, FALSE, TRUE, FALSE], TRUE, 1, 55820344587345, 'saw', 'watch']), ([-5, 32219299442182]), ([FALSE, 1, 1]);
EXCHANGE TABLES t0 AND t1;
INSERT INTO t0 (c0) VALUES ([]), (['漂亮', [1, 1], [1, 1], FALSE, 65534, 65534]), ([]), ([]), (['照片', 'had', [], [1, 1, 1, 1, 1, 1], 1, 6.9, 1, -894937679, FALSE]), ([2029856161131318577, '认识你很高兴']), ([97550, 1, [65534, 65534, 65534, 65534, 65534]]), ([[[['saw', '名字', '爸爸', '叫', 'said', '兄弟姐妹', 'think', '爸爸', '漂亮'], ['is'], ['认识你很高兴', '哪国人'], ['name', '认识你很高兴', 'name', 'must'], ['hear', 'might'], ['went', '照片', '兄弟姐妹', 'move', '哪国人', 'might'], []], [['have', 'live', 'can']], [['am', 'show', '漂亮', 'seem', 'set', 'began', 'give', '兄弟姐妹'], ['漂亮', '日本'], [], [], ['认识你很高兴', 'back', 'began', 'water', 'come', 'run', 'place'], ['let', '认识你很高兴', '爸爸']], [['sentence', '照片', '美国', '照片', '漂亮', '美国', 'write', '兄弟姐妹', '照片'], ['find', '爸爸', 'will', '兄弟姐妹'], ['哪国人', '名字', 'keep'], ['叫', 'being', '叫'], [], ['叫', '美国', '你们', 'study', '漂亮'], ['爸爸', '你们', 'grow', 'carry', 'be', 'find', 'set']], [['漂亮', 'write', 'went', 'seem', 'does', '兄弟姐妹', '美国', '哪国人', '哪国人']], [['come', '名字', '爸爸', 'might', 'call', '日本'], ['change', '美国', '爸爸', '认识你很高兴', '名字', '名字', 'boy'], ['let', 'try']], [['will', '你们', 'like', 'see', '叫']], [['thought', 'turn', 'close', '哪国人', 'carry', 'sentence', 'write', '哪国人', '照片'], ['follow'], ['爸爸', 'was', 'set', 'make', 'can', '名字', '认识你很高兴'], ['see', 'boy', 'turn', '名字', '认识你很高兴', 'help']], [['back', '兄弟姐妹', 'be', 'grow', 'man']]], []]);
INSERT INTO t0 (c0) VALUES ([TRUE, 1, 13743, 1, '哪国人', 65534, NULL, 66.94870, TRUE]);
```

The error details:
```
<Error> MergeTreeBackgroundExecutor: Exception while executing background task {555673a5-084e-4328-b1e7-337768ca6c82::all_1_6_1}: Code: 12. DB::Exception: Parameter out of bound in IColumnString::insertRangeFrom method. (PARAMETER_OUT_OF_BOUND), Stack trace (when copying this message, always include the lines below):

0. contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x0000000037045b11
1. src/Common/Exception.cpp:109: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000001e42bf0d
2. src/Common/Exception.h:110: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x000000000e633066
3. src/Common/Exception.h:128: DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x000000000e63b5cf
4. src/Columns/ColumnString.cpp:147: DB::ColumnString::doInsertRangeFrom(DB::IColumn const&, unsigned long, unsigned long) @ 0x000000002d76f794
5. src/Columns/IColumn.h:200: DB::ColumnVariant::insertRangeFromImpl(DB::IColumn const&, unsigned long, unsigned long, std::vector<char8_t, std::allocator<char8_t>> const*, char8_t const*) @ 0x000000002d95511f
6. src/Columns/IColumn.h:200: DB::ColumnDynamic::doInsertRangeFrom(DB::IColumn const&, unsigned long, unsigned long) @ 0x000000002d621a45
7. src/Columns/IColumn.h:200: DB::ColumnArray::doInsertRangeFrom(DB::IColumn const&, unsigned long, unsigned long) @ 0x000000002d4659b9
8. src/Columns/IColumn.h:200: DB::MergeTreeDataPartWriterCompact::ColumnsBuffer::add(std::vector<COW<DB::IColumn>::mutable_ptr<DB::IColumn>, std::allocator<COW<DB::IColumn>::mutable_ptr<DB::IColumn>>>&&) @ 0x000000002eb75a7d
9. src/Storages/MergeTree/MergeTreeDataPartWriterCompact.cpp:196: DB::MergeTreeDataPartWriterCompact::write(DB::Block const&, DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 63ul, 64ul> const*) @ 0x000000002eb7510d
10. src/Storages/MergeTree/MergedBlockOutputStream.cpp:358: DB::MergedBlockOutputStream::write(DB::Block const&) @ 0x000000002ee4e957
11. src/Storages/MergeTree/MergeTask.cpp:690: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::executeImpl() @ 0x000000002e98cf15
12. src/Storages/MergeTree/MergeTask.cpp:520: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::execute() @ 0x000000002e989dfa
13. src/Storages/MergeTree/MergeTask.cpp:1181: DB::MergeTask::execute() @ 0x000000002e9968be
14. src/Storages/MergeTree/MergePlainMergeTreeTask.cpp:57: DB::MergePlainMergeTreeTask::executeStep() @ 0x000000002f0f9cf6
15. src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:286: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(std::shared_ptr<DB::TaskRuntimeData>) @ 0x000000002e9d8740
16. src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:352: DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::threadFunction() @ 0x000000002e9da0e5
17. contrib/llvm-project/libcxx/include/__functional/function.h:848: ? @ 0x000000001e5dfca3
18. src/Common/ThreadPool.cpp:252: ThreadFromGlobalPoolImpl<false, true>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'()::operator()() @ 0x000000001e5e969d
19. contrib/llvm-project/libcxx/include/__functional/function.h:848: ? @ 0x000000001e5d8d5e
20. src/Common/ThreadPool.cpp:252: void* std::__thread_proxy[abi:v15007]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0x000000001e5e3aed
21. asan_thread_start(void*) @ 0x000000000e5e7bcd
22. ? @ 0x0000737adc49ca94
23. ? @ 0x0000737adc529c3c
 (version 24.9.1.1)
```