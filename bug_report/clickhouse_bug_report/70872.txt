ID: 70872
Title: Segmentation fault when trying to create a table with mongodb engine. 
Description:
**Describe the unexpected behaviour**
Tried to create a table with the MongoDB Engine, after entering  the create table command, clickhouse server crashes with a segfault.

**ClickHouse Version**
`ClickHouse 24.10.1.2054 (revision: 54491, git hash: 82ae1cc719e8a1d72a9066ce77f895c60841c3d8, build id: BDD689F811189396C4838122DDFA48D2F67AE252)`

**Steps to Reproduce**
1. Started clickhouse using `./clickhouse server` on one terminal session (TMUX)
2. Started clickhouse client on another terminal session `./clickhouse client`
3. Create a database `CREATE DATABASE mongodb`
4. Use the database `USE mongodb`
5. Attempt to create a table
```
CREATE TABLE IF NOT EXISTS store_version (
_id String,
store_version_name String,
store_version_code Int32,
device_id String,
os String,
version_code String,
meta array
) ENGINE=MongoDB("localhost:27017","mongodb","storeinfo","adminUser","adminUser")

```

**Expected behavior**
Integration should have succeeded. In case of failure a suitable error message should have been displayed instead of crashing.

**Error message and/or stacktrace**
```
[localserver] 2024.10.21 10:57:34.187203 [ 1430446 ] <Fatal> BaseDaemon: ########################################
[localserver] 2024.10.21 10:57:34.187309 [ 1430446 ] <Fatal> BaseDaemon: (version 24.10.1.2054 (official build), build id: BDD689F811189396C4838122DDFA48D2F67AE252, git hash: 82ae1cc719e8a1d72a9066ce77f895c60841c3d8) (from thread 1429732) (query_id: f74783e3-f3a5-4567-aaa9-23900bf4a3e4) (query: ) Received signal Segmentation fault (11)
[localserver] 2024.10.21 10:57:34.187352 [ 1430446 ] <Fatal> BaseDaemon: Address: NULL pointer. Access: read. Unknown si_code.
[localserver] 2024.10.21 10:57:34.187380 [ 1430446 ] <Fatal> BaseDaemon: Stack trace: 0x000000000db8efd5 0x00007b7723445320 0x0000000013c2b18f 0x0000000013c646aa 0x0000000013c15e74 0x0000000013c1a728 0x0000000013c42c38 0x0000000013cb8c92 0x000000001218659e 0x00000000121854da 0x00000000133a08b4 0x00000000133bbd38 0x000000001627ffc7 0x0000000016280459 0x000000001624cfc1 0x000000001624b57d 0x00007b772349ca94 0x00007b7723529c3c
[localserver] 2024.10.21 10:57:34.189789 [ 1430446 ] <Fatal> BaseDaemon: 0. signalHandler(int, siginfo_t*, void*) @ 0x000000000db8efd5
[localserver] 2024.10.21 10:57:34.189872 [ 1430446 ] <Fatal> BaseDaemon: 1. ? @ 0x00007b7723445320
[localserver] 2024.10.21 10:57:34.190729 [ 1430446 ] <Fatal> BaseDaemon: 2. DB::ASTFunction::formatImplWithoutAlias(DB::IAST::FormatSettings const&, DB::IAST::FormatState&, DB::IAST::FormatStateStacked) const @ 0x0000000013c2b18f
[localserver] 2024.10.21 10:57:34.190800 [ 1430446 ] <Fatal> BaseDaemon: 3. DB::ASTWithAlias::formatImpl(DB::IAST::FormatSettings const&, DB::IAST::FormatState&, DB::IAST::FormatStateStacked) const @ 0x0000000013c646aa
[localserver] 2024.10.21 10:57:34.190935 [ 1430446 ] <Fatal> BaseDaemon: 4. DB::ASTStorage::formatImpl(DB::IAST::FormatSettings const&, DB::IAST::FormatState&, DB::IAST::FormatStateStacked) const @ 0x0000000013c15e74
[localserver] 2024.10.21 10:57:34.190981 [ 1430446 ] <Fatal> BaseDaemon: 5. DB::ASTCreateQuery::formatQueryImpl(DB::IAST::FormatSettings const&, DB::IAST::FormatState&, DB::IAST::FormatStateStacked) const @ 0x0000000013c1a728
[localserver] 2024.10.21 10:57:34.191035 [ 1430446 ] <Fatal> BaseDaemon: 6. DB::ASTQueryWithOutput::formatImpl(DB::IAST::FormatSettings const&, DB::IAST::FormatState&, DB::IAST::FormatStateStacked) const @ 0x0000000013c42c38
[localserver] 2024.10.21 10:57:34.191979 [ 1430446 ] <Fatal> BaseDaemon: 7. DB::IAST::formatWithPossiblyHidingSensitiveData(unsigned long, bool, bool, bool, DB::IdentifierQuotingRule, DB::IdentifierQuotingStyle) const @ 0x0000000013cb8c92
[localserver] 2024.10.21 10:57:34.192730 [ 1430446 ] <Fatal> BaseDaemon: 8. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x000000001218659e
[localserver] 2024.10.21 10:57:34.194478 [ 1430446 ] <Fatal> BaseDaemon: 9. DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000121854da
[localserver] 2024.10.21 10:57:34.195248 [ 1430446 ] <Fatal> BaseDaemon: 10. DB::TCPHandler::runImpl() @ 0x00000000133a08b4
[localserver] 2024.10.21 10:57:34.196660 [ 1430446 ] <Fatal> BaseDaemon: 11. DB::TCPHandler::run() @ 0x00000000133bbd38
[localserver] 2024.10.21 10:57:34.197646 [ 1430446 ] <Fatal> BaseDaemon: 12. Poco::Net::TCPServerConnection::start() @ 0x000000001627ffc7
[localserver] 2024.10.21 10:57:34.197715 [ 1430446 ] <Fatal> BaseDaemon: 13. Poco::Net::TCPServerDispatcher::run() @ 0x0000000016280459
[localserver] 2024.10.21 10:57:34.197756 [ 1430446 ] <Fatal> BaseDaemon: 14. Poco::PooledThread::run() @ 0x000000001624cfc1
[localserver] 2024.10.21 10:57:34.197808 [ 1430446 ] <Fatal> BaseDaemon: 15. Poco::ThreadImpl::runnableEntry(void*) @ 0x000000001624b57d
[localserver] 2024.10.21 10:57:34.197917 [ 1430446 ] <Fatal> BaseDaemon: 16. ? @ 0x00007b772349ca94
[localserver] 2024.10.21 10:57:34.197964 [ 1430446 ] <Fatal> BaseDaemon: 17. ? @ 0x00007b7723529c3c
[localserver] 2024.10.21 10:57:34.427868 [ 1430446 ] <Fatal> BaseDaemon: Integrity check of the executable successfully passed (checksum: 79FCBE860584D34F58F7D0224F443DAF)
[localserver] 2024.10.21 10:57:34.429865 [ 1430446 ] <Fatal> BaseDaemon: Report this error to https://github.com/ClickHouse/ClickHouse/issues
[localserver] 2024.10.21 10:57:34.430101 [ 1430446 ] <Fatal> BaseDaemon: No settings were changed
Error on processing query: Code: 32. DB::Exception: Attempt to read after eof: while receiving packet from localhost:9000. (ATTEMPT_TO_READ_AFTER_EOF) (version 24.10.1.2054 (official build))

Connecting to database mongo at localhost:9000 as user default.
Code: 102. DB::NetException: Unexpected packet from server localhost:9000 (expected Hello or Exception, got Unknown packet): (localhost:9000, 127.0.0.1, local address: 127.0.0.1:49372). (UNEXPECTED_PACKET_FROM_SERVER)
```

**Additional context**
I might just be dumb. Please be patient with me ðŸ¤ª