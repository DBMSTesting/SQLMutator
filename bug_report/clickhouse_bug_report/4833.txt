ID: 4833
Title: Partition intersects next part exception
Description:
During a call to docker container with the clickhouse server running version 1.1.54394.3 the following command:
`OPTIMIZE table transactions PARTITION 201712"`

Results in this exception being logged:
```java
nested exception is ru.yandex.clickhouse.except.ClickHouseException: ClickHouse exception, code: 49, host: clickhouse, port: 8123; Code: 49, e.displayText() = DB::Exception: Part 20181201_20181231_1950_4223_11 intersects next part 20181201_20181231_1950_5084_8 (state Committed). It is a bug., e.what() = DB::Exception
myproject.2019-03-28-12.log-
myproject.2019-03-28-12.log-       at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
myproject.2019-03-28-12.log-       at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
myproject.2019-03-28-12.log-       at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
myproject.2019-03-28-12.log-       at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1402)
```

The container is still up, I can query it for data. 

system.tables contains the **20181201_20181231_1950_5084_8** partition but not **20181201_20181231_1950_4223_11**. 

I know this because the following query:
`select * from system.parts where name = '20181201_20181231_1950_5084_8'` returns a result
The partition is even active.

Should I be worried?