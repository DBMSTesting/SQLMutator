ID: 72199
Title: Logical error: 'marks_count > 0'
Description:
**Describe the bug**
Detaching then attaching a table with `primary_key_lazy_load` and multi-column PK, gives a logical error.

**How to reproduce**
Run:
```sql
CREATE TABLE t0 (c0 Int, c1 Int) ENGINE = MergeTree() PRIMARY KEY (c0, c1) SETTINGS primary_key_lazy_load = 0;
INSERT INTO TABLE t0 (c0, c1) VALUES (1, 1);
TRUNCATE t0;
DETACH TABLE t0;
ATTACH TABLE t0;
```
Stack trace:
```
Logical error: 'marks_count > 0'.
Stack trace (when copying this message, always include the lines below):

0. src/Common/StackTrace.cpp:380: StackTrace::tryCapture() @ 0x0000000025306937
1. src/Common/StackTrace.h:48: DB::abortOnFailedAssertion(String const&) @ 0x00000000252b8e57
2. src/Storages/MergeTree/IMergeTreeDataPart.cpp:971: DB::IMergeTreeDataPart::loadIndex() const @ 0x0000000034bfc79e
3. src/Storages/MergeTree/IMergeTreeDataPart.cpp:373: DB::IMergeTreeDataPart::getIndex() const @ 0x0000000034bf9403
4. src/Storages/MergeTree/IMergeTreeDataPart.cpp:758: DB::IMergeTreeDataPart::loadColumnsChecksumsIndexes(bool, bool) @ 0x0000000034c07592
5. src/Storages/MergeTree/MergeTreeData.cpp:1541: DB::MergeTreeData::loadDataPart(DB::MergeTreePartInfo const&, String const&, std::shared_ptr<DB::IDisk> const&, DB::MergeTreeDataPartState, std::mutex&) @ 0x0000000034d6f35b
6. src/Storages/MergeTree/MergeTreeData.cpp:1680: DB::MergeTreeData::loadDataPartWithRetries(DB::MergeTreePartInfo const&, String const&, std::shared_ptr<DB::IDisk> const&, DB::MergeTreeDataPartState, std::mutex&, unsigned long, unsigned long, unsigned long) @ 0x0000000034d78924
7. src/Storages/MergeTree/MergeTreeData.cpp:1742: void std::__function::__policy_invoker<void ()>::__call_impl<std::__function::__default_alloc_func<DB::MergeTreeData::loadDataPartsFromDisk(std::vector<std::shared_ptr<DB::MergeTreeData::PartLoadingTree::Node>, std::allocator<std::shared_ptr<DB::MergeTreeData::PartLoadingTree::Node>>>&)::$_0, void ()>>(std::__function::__policy_storage const*) @ 0x0000000034e61aa2
8. contrib/llvm-project/libcxx/include/__functional/function.h:848: ? @ 0x000000002f3c8800
9. contrib/llvm-project/libcxx/include/future:1876: std::packaged_task<void ()>::operator()() @ 0x0000000025d47a72
10. contrib/llvm-project/libcxx/include/__functional/function.h:848: ? @ 0x00000000253f531c
11. contrib/llvm-project/libcxx/include/__functional/invoke.h:359: ? @ 0x00000000253fd3d4
12. contrib/llvm-project/libcxx/include/__functional/function.h:848: ? @ 0x00000000253f2a6f
13. contrib/llvm-project/libcxx/include/__functional/invoke.h:359: ? @ 0x00000000253f9c6a
14. ? @ 0x00007ffff7ca1e2e
15. ? @ 0x00007ffff7d33a4c
```
