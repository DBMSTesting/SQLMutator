ID: 71044
Title: 'Input initializer is not set' when reading from stdin in clickhouse local
Description:
```sql
% echo 'meow' | ~/ClickHouse/build/programs/clickhouse local -q "insert into function file('a.csv') select * from input('x Int64') format CSV"                                                                                    
2024.10.25 05:30:15.521604 [ 1950607 ] {c7f6c1e4-c6f1-4d52-9ed8-cd10a85200aa} <Fatal> : Logical error: 'Input initializer is not set'.                                                                                                                                                
2024.10.25 05:30:15.682231 [ 1950607 ] {c7f6c1e4-c6f1-4d52-9ed8-cd10a85200aa} <Fatal> : Stack trace (when copying this message, always include the lines below):                                                                                                                      
                                                                                                                                                                                                                                                                                      
0. /home/ubuntu/ClickHouse/contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x00000000169df5b2                                                                                                                                     
1. /home/ubuntu/ClickHouse/src/Common/Exception.cpp:109: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c490f19                                                                                                                                     
2. /home/ubuntu/ClickHouse/src/Common/Exception.h:110: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x000000000716920c                                                                                                                                                      
3. /home/ubuntu/ClickHouse/src/Common/Exception.h:128: DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x000000000716c0cb                                                                                                                                                 
4. /home/ubuntu/ClickHouse/src/Interpreters/Context.cpp:5069: DB::Context::initializeInput(std::shared_ptr<DB::IStorage> const&) @ 0x00000000112eef6e                                                                                                                                 
5. /home/ubuntu/ClickHouse/src/Storages/StorageInput.cpp:97: DB::StorageInput::read(DB::QueryPlan&, std::vector<String, std::allocator<String>> const&, std::shared_ptr<DB::StorageSnapshot> const&, DB::SelectQueryInfo&, std::shared_ptr<DB::Context const>, DB::QueryProcessingStag
e::Enum, unsigned long, unsigned long) @ 0x0000000012650054                                                                                                                                                                                                                           
6. /home/ubuntu/ClickHouse/src/Planner/PlannerJoinTree.cpp:921: DB::(anonymous namespace)::buildQueryPlanForTableExpression(std::shared_ptr<DB::IQueryTreeNode>, DB::SelectQueryInfo const&, DB::SelectQueryOptions const&, std::shared_ptr<DB::PlannerContext>&, bool, bool) @ 0x0000
000011a221ec                                                                                                                                                                                                                                                                          
7. /home/ubuntu/ClickHouse/src/Planner/PlannerJoinTree.cpp:1835: DB::buildJoinTreeQueryPlan(std::shared_ptr<DB::IQueryTreeNode> const&, DB::SelectQueryInfo const&, DB::SelectQueryOptions&, std::unordered_set<String, std::hash<String>, std::equal_to<String>, std::allocator<Strin
g>> const&, std::shared_ptr<DB::PlannerContext>&) @ 0x0000000011a1b7e2                                                                                                                                                                                                                
8. /home/ubuntu/ClickHouse/src/Planner/Planner.cpp:1535: DB::Planner::buildPlanForQueryNode() @ 0x0000000011a06eae                                                                                                                                                                    
9. /home/ubuntu/ClickHouse/src/Planner/Planner.cpp:1289: DB::Planner::buildQueryPlanIfNeeded() @ 0x0000000011a03c7e                                                                                                                                                                   
10. /home/ubuntu/ClickHouse/src/Interpreters/InterpreterSelectQueryAnalyzer.cpp:253: DB::InterpreterSelectQueryAnalyzer::buildQueryPipeline() @ 0x0000000011a01c79                                                                                                                    
11. /home/ubuntu/ClickHouse/src/Interpreters/InterpreterInsertQuery.cpp:519: DB::InterpreterInsertQuery::buildInsertSelectPipeline(DB::ASTInsertQuery&, std::shared_ptr<DB::IStorage>) @ 0x00000000119a0669                                                                           
12. /home/ubuntu/ClickHouse/src/Interpreters/InterpreterInsertQuery.cpp:810: DB::InterpreterInsertQuery::execute() @ 0x00000000119a400c                                                                                                                                               
13. /home/ubuntu/ClickHouse/src/Interpreters/executeQuery.cpp:1346: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x0000000011ccae96                                                
14. /home/ubuntu/ClickHouse/src/Interpreters/executeQuery.cpp:1513: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000011cc6c7d                                                                                
15. /home/ubuntu/ClickHouse/src/Client/LocalConnection.cpp:240: DB::LocalConnection::sendQuery(DB::ConnectionTimeouts const&, String const&, std::unordered_map<String, String, std::hash<String>, std::equal_to<String>, std::allocator<std::pair<String const, String>>> const&, Str
ing const&, unsigned long, DB::Settings const*, DB::ClientInfo const*, bool, std::function<void (DB::Progress const&)>) @ 0x000000001300e4ea                                                                                                                                          
16. /home/ubuntu/ClickHouse/src/Client/ClientBase.cpp:1587: DB::ClientBase::processInsertQuery(String const&, std::shared_ptr<DB::IAST>) @ 0x0000000012fc033e                                                                                                                         
17. /home/ubuntu/ClickHouse/src/Client/ClientBase.cpp:2075: DB::ClientBase::processParsedSingleQuery(String const&, String const&, std::shared_ptr<DB::IAST>, std::optional<bool>, bool) @ 0x0000000012fbaa1a                                                                         
18. /home/ubuntu/ClickHouse/src/Client/ClientBase.cpp:2411: DB::ClientBase::executeMultiQuery(String const&) @ 0x0000000012fc3ac3                                                                                                                                                     
19. /home/ubuntu/ClickHouse/src/Client/ClientBase.cpp:2556: DB::ClientBase::processQueryText(String const&) @ 0x0000000012fc47a6                                                                                                                                                      
20. /home/ubuntu/ClickHouse/src/Client/ClientBase.cpp:2860: DB::ClientBase::runNonInteractive() @ 0x0000000012fc6f1b                                                                                                                                                                  
21. /home/ubuntu/ClickHouse/programs/local/LocalServer.cpp:605: DB::LocalServer::main(std::vector<String, std::allocator<String>> const&) @ 0x000000000c6a5906                                                                                                                        
22. /home/ubuntu/ClickHouse/base/poco/Util/src/Application.cpp:315: Poco::Util::Application::run() @ 0x0000000016aa68e6                                                                                                                                                               
23. /home/ubuntu/ClickHouse/programs/local/LocalServer.cpp:1026: mainEntryClickHouseLocal(int, char**) @ 0x000000000c6af0d5                                                                                                                                                           
24. /home/ubuntu/ClickHouse/programs/main.cpp:248: main @ 0x0000000007162c6b                                                                                                                                                                                                          
25. ? @ 0x00007ffff7c29d90                                                                                                                                                                                                                                                            
26. ? @ 0x00007ffff7c29e40                                                                                                                                                                                                                                                            
27. _start @ 0x000000000716202e
```