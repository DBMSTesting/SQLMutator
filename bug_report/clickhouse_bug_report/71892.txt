ID: 71892
Title: TSAN: data race between MergeTreeData::modifyPartState and StorageMergeTree::stopMergesAndWaitForPartition
Description:
Found in test run https://s3.amazonaws.com/clickhouse-test-reports/71866/31e27d3678356e6d5dd123f53d5ce865447e93c3/stateless_tests__tsan__[1_4].html

Full TSAN report https://s3.amazonaws.com/clickhouse-test-reports/71866/31e27d3678356e6d5dd123f53d5ce865447e93c3/stateless_tests__tsan__[1_4]/stderr.log

```
WARNING: ThreadSanitizer: data race (pid=614)
  Write of size 1 at 0x726c00077b38 by thread T614 (mutexes: write M0):
    #0 DB::IMergeTreeDataPart::setState(DB::MergeTreeDataPartState) const build_docker/./src/Storages/MergeTree/IMergeTreeDataPart.cpp:444:11 (clickhouse+0x19f5a50a) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #1 DB::MergeTreeData::getStateModifier(DB::MergeTreeDataPartState)::'lambda'(std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&)::operator()(std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&) const build_docker/./src/Storages/MergeTree/MergeTreeData.h:1300:59 (clickhouse+0x1a12523b) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #2 bool boost::multi_index::multi_index_container<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::tag<DB::MergeTreeData::TagByInfo, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::global_fun<std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&, DB::MergeTreePartInfo const&, &DB::MergeTreeData::dataPartPtrToInfo(std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&)>, mpl_::na>, boost::multi_index::ordered_unique<boost::multi_index::tag<DB::MergeTreeData::TagByStateAndInfo, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::global_fun<std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&, DB::MergeTreeData::DataPartStateAndInfo, &DB::MergeTreeData::dataPartPtrToStateAndInfo(std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&)>, DB::MergeTreeData::LessStateDataPart>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>::modify_<DB::MergeTreeData::getStateModifier(DB::MergeTreeDataPartState)::'lambda'(std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&)>(DB::MergeTreeData::getStateModifier(DB::MergeTreeDataPartState)::'lambda'(std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&)&, boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::null_augment_policy, boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::null_augment_policy, boost::multi_index::detail::index_node_base<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>>*) build_docker/./contrib/boost/boost/multi_index_container.hpp:1036:7 (clickhouse+0x1a12523b)
    #3 bool boost::multi_index::detail::index_base<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::tag<DB::MergeTreeData::TagByInfo, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::global_fun<std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&, DB::MergeTreePartInfo const&, &DB::MergeTreeData::dataPartPtrToInfo(std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&)>, mpl_::na>, boost::multi_index::ordered_unique<boost::multi_index::tag<DB::MergeTreeData::TagByStateAndInfo, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::global_fun<std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&, DB::MergeTreeData::DataPartStateAndInfo, &DB::MergeTreeData::dataPartPtrToStateAndInfo(std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&)>, DB::MergeTreeData::LessStateDataPart>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>::final_modify_<DB::MergeTreeData::getStateModifier(DB::MergeTreeDataPartState)::'lambda'(std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&)>(DB::MergeTreeData::getStateModifier(DB::MergeTreeDataPartState)::'lambda'(std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&)&, boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::null_augment_policy, boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::null_augment_policy, boost::multi_index::detail::index_node_base<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>>*) build_docker/./contrib/boost/boost/multi_index/detail/index_base.hpp:312:21 (clickhouse+0x1a11aadc) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #4 bool boost::multi_index::detail::ordered_index_impl<boost::multi_index::global_fun<std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&, DB::MergeTreeData::DataPartStateAndInfo, &DB::MergeTreeData::dataPartPtrToStateAndInfo(std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&)>, DB::MergeTreeData::LessStateDataPart, boost::multi_index::detail::nth_layer<2, std::__1::shared_ptr<DB::IMergeTreeDataPart const>, boost::multi_index::indexed_by<boost::multi_index::ordered_unique<boost::multi_index::tag<DB::MergeTreeData::TagByInfo, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::global_fun<std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&, DB::MergeTreePartInfo const&, &DB::MergeTreeData::dataPartPtrToInfo(std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&)>, mpl_::na>, boost::multi_index::ordered_unique<boost::multi_index::tag<DB::MergeTreeData::TagByStateAndInfo, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, boost::multi_index::global_fun<std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&, DB::MergeTreeData::DataPartStateAndInfo, &DB::MergeTreeData::dataPartPtrToStateAndInfo(std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&)>, DB::MergeTreeData::LessStateDataPart>, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na, mpl_::na>, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>, boost::mpl::v_item<DB::MergeTreeData::TagByStateAndInfo, boost::mpl::vector0<mpl_::na>, 0>, boost::multi_index::detail::ordered_unique_tag, boost::multi_index::detail::null_augment_policy>::modify<DB::MergeTreeData::getStateModifier(DB::MergeTreeDataPartState)::'lambda'(std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&)>(boost::multi_index::detail::bidir_node_iterator<boost::multi_index::detail::ordered_index_node<boost::multi_index::detail::null_augment_policy, boost::multi_index::detail::index_node_base<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>>, DB::MergeTreeData::getStateModifier(DB::MergeTreeDataPartState)::'lambda'(std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&)) build_docker/./contrib/boost/boost/multi_index/detail/ord_index_impl.hpp:463:18 (clickhouse+0x1a11aadc)
    #5 DB::MergeTreeData::modifyPartState(std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&, DB::MergeTreeDataPartState) build_docker/./src/Storages/MergeTree/MergeTreeData.h:1321:43 (clickhouse+0x1a11aadc)
    #6 DB::MergeTreeData::Transaction::commit(DB::DataPartsLock*) build_docker/./src/Storages/MergeTree/MergeTreeData.cpp:7016:9 (clickhouse+0x1a0e4d02) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #7 DB::MergePlainMergeTreeTask::finish() build_docker/./src/Storages/MergeTree/MergePlainMergeTreeTask.cpp:150:17 (clickhouse+0x1a57257c) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #8 DB::MergePlainMergeTreeTask::executeStep() build_docker/./src/Storages/MergeTree/MergePlainMergeTreeTask.cpp:71:13 (clickhouse+0x1a571789) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #9 DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(std::__1::shared_ptr<DB::TaskRuntimeData>) build_docker/./src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:286:42 (clickhouse+0x1a04f4c8) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #10 DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::threadFunction() build_docker/./src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:352:13 (clickhouse+0x1a0500b4) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #11 DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::MergeTreeBackgroundExecutor(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long, unsigned long, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>, std::__1::basic_string_view<char, std::__1::char_traits<char>>)::'lambda'()::operator()() const build_docker/./src/Storages/MergeTree/MergeTreeBackgroundExecutor.cpp:57:47 (clickhouse+0x1a052121) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #12 decltype(std::declval<DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::MergeTreeBackgroundExecutor(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long, unsigned long, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>, std::__1::basic_string_view<char, std::__1::char_traits<char>>)::'lambda'()&>()()) std::__1::__invoke[abi:v15007]<DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::MergeTreeBackgroundExecutor(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long, unsigned long, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>, std::__1::basic_string_view<char, std::__1::char_traits<char>>)::'lambda'()&>(DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::MergeTreeBackgroundExecutor(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long, unsigned long, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>, std::__1::basic_string_view<char, std::__1::char_traits<char>>)::'lambda'()&) build_docker/./contrib/llvm-project/libcxx/include/__functional/invoke.h:394:23 (clickhouse+0x1a052121)
    #13 void std::__1::__invoke_void_return_wrapper<void, true>::__call<DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::MergeTreeBackgroundExecutor(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long, unsigned long, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>, std::__1::basic_string_view<char, std::__1::char_traits<char>>)::'lambda'()&>(DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::MergeTreeBackgroundExecutor(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long, unsigned long, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>, std::__1::basic_string_view<char, std::__1::char_traits<char>>)::'lambda'()&) build_docker/./contrib/llvm-project/libcxx/include/__functional/invoke.h:479:9 (clickhouse+0x1a052121)
    #14 std::__1::__function::__default_alloc_func<DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::MergeTreeBackgroundExecutor(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long, unsigned long, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>, std::__1::basic_string_view<char, std::__1::char_traits<char>>)::'lambda'(), void ()>::operator()[abi:v15007]() build_docker/./contrib/llvm-project/libcxx/include/__functional/function.h:235:12 (clickhouse+0x1a052121)
    #15 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::MergeTreeBackgroundExecutor(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, unsigned long, unsigned long, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>, std::__1::basic_string_view<char, std::__1::char_traits<char>>)::'lambda'(), void ()>>(std::__1::__function::__policy_storage const*) build_docker/./contrib/llvm-project/libcxx/include/__functional/function.h:716:16 (clickhouse+0x1a052121)
    #16 std::__1::__function::__policy_func<void ()>::operator()[abi:v15007]() const build_docker/./contrib/llvm-project/libcxx/include/__functional/function.h:848:16 (clickhouse+0xf77ace7) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #17 std::__1::function<void ()>::operator()() const build_docker/./contrib/llvm-project/libcxx/include/__functional/function.h:1197:12 (clickhouse+0xf77ace7)
    #18 ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::worker() build_docker/./src/Common/ThreadPool.cpp:775:17 (clickhouse+0xf77ace7)
    #19 decltype(*std::declval<ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*&>().*std::declval<void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&)()>()()) std::__1::__invoke[abi:v15007]<void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*&, void>(void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*&) build_docker/./contrib/llvm-project/libcxx/include/__functional/invoke.h:359:23 (clickhouse+0xf7826c5) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #20 decltype(auto) std::__1::__apply_tuple_impl[abi:v15007]<void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&)(), std::__1::tuple<ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*>&, 0ul>(void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&)(), std::__1::tuple<ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*>&, std::__1::__tuple_indices<0ul>) build_docker/./contrib/llvm-project/libcxx/include/tuple:1789:1 (clickhouse+0xf7826c5)
    #21 decltype(auto) std::__1::apply[abi:v15007]<void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&)(), std::__1::tuple<ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*>&>(void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&)(), std::__1::tuple<ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*>&) build_docker/./contrib/llvm-project/libcxx/include/tuple:1798:1 (clickhouse+0xf7826c5)
    #22 ThreadFromGlobalPoolImpl<false, true>::ThreadFromGlobalPoolImpl<void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*>(void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&&)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*&&)::'lambda'()::operator()() build_docker/./src/Common/ThreadPool.h:311:13 (clickhouse+0xf7826c5)
    #23 decltype(std::declval<void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*)()>()(std::declval<ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*>())) std::__1::__invoke[abi:v15007]<ThreadFromGlobalPoolImpl<false, true>::ThreadFromGlobalPoolImpl<void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*>(void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&&)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*&&)::'lambda'()&>(void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&&)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*&&) build_docker/./contrib/llvm-project/libcxx/include/__functional/invoke.h:394:23 (clickhouse+0xf7825e1) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #24 void std::__1::__invoke_void_return_wrapper<void, true>::__call<ThreadFromGlobalPoolImpl<false, true>::ThreadFromGlobalPoolImpl<void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*>(void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&&)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*&&)::'lambda'()&>(ThreadFromGlobalPoolImpl<false, true>::ThreadFromGlobalPoolImpl<void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*>(void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&&)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*&&)::'lambda'()&) build_docker/./contrib/llvm-project/libcxx/include/__functional/invoke.h:479:9 (clickhouse+0xf7825e1)
    #25 std::__1::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false, true>::ThreadFromGlobalPoolImpl<void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*>(void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&&)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*&&)::'lambda'(), void ()>::operator()[abi:v15007]() build_docker/./contrib/llvm-project/libcxx/include/__functional/function.h:235:12 (clickhouse+0xf7825e1)
    #26 void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false, true>::ThreadFromGlobalPoolImpl<void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*>(void (ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool::*&&)(), ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::ThreadFromThreadPool*&&)::'lambda'(), void ()>>(std::__1::__function::__policy_storage const*) build_docker/./contrib/llvm-project/libcxx/include/__functional/function.h:716:16 (clickhouse+0xf7825e1)
    #27 std::__1::__function::__policy_func<void ()>::operator()[abi:v15007]() const build_docker/./contrib/llvm-project/libcxx/include/__functional/function.h:848:16 (clickhouse+0xf77785d) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #28 std::__1::function<void ()>::operator()() const build_docker/./contrib/llvm-project/libcxx/include/__functional/function.h:1197:12 (clickhouse+0xf77785d)
    #29 ThreadPoolImpl<std::__1::thread>::ThreadFromThreadPool::worker() build_docker/./src/Common/ThreadPool.cpp:785:17 (clickhouse+0xf77785d)
    #30 decltype(*std::declval<ThreadPoolImpl<std::__1::thread>::ThreadFromThreadPool*>().*std::declval<void (ThreadPoolImpl<std::__1::thread>::ThreadFromThreadPool::*)()>()()) std::__1::__invoke[abi:v15007]<void (ThreadPoolImpl<std::__1::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::__1::thread>::ThreadFromThreadPool*, void>(void (ThreadPoolImpl<std::__1::thread>::ThreadFromThreadPool::*&&)(), ThreadPoolImpl<std::__1::thread>::ThreadFromThreadPool*&&) build_docker/./contrib/llvm-project/libcxx/include/__functional/invoke.h:359:23 (clickhouse+0xf77f7fb) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #31 void std::__1::__thread_execute[abi:v15007]<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (ThreadPoolImpl<std::__1::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::__1::thread>::ThreadFromThreadPool*, 2ul>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (ThreadPoolImpl<std::__1::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::__1::thread>::ThreadFromThreadPool*>&, std::__1::__tuple_indices<2ul>) build_docker/./contrib/llvm-project/libcxx/include/thread:284:5 (clickhouse+0xf77f7fb)
    #32 void* std::__1::__thread_proxy[abi:v15007]<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (ThreadPoolImpl<std::__1::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::__1::thread>::ThreadFromThreadPool*>>(void*) build_docker/./contrib/llvm-project/libcxx/include/thread:295:5 (clickhouse+0xf77f7fb)

  Previous read of size 1 at 0x726c00077b38 by thread T4293 (mutexes: write M1):
    #0 DB::IMergeTreeDataPart::stateString() const build_docker/./src/Storages/MergeTree/IMergeTreeDataPart.h:302:73 (clickhouse+0x1a5594af) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #1 DB::IMergeTreeDataPart::getNameWithState() const build_docker/./src/Storages/MergeTree/IMergeTreeDataPart.h:304:81 (clickhouse+0x1a5594af)
    #2 auto auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::operator()<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&) const build_docker/./src/Storages/StorageMergeTree.cpp:1721:19 (clickhouse+0x1a5594af)
    #3 decltype(std::declval<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>()(std::declval<std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&>())) std::__1::__invoke[abi:v15007]<auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)&, std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>&&, std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&) build_docker/./contrib/llvm-project/libcxx/include/__functional/invoke.h:394:23 (clickhouse+0x1a5594af)
    #4 std::__1::invoke_result<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>, std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&>::type std::__1::invoke<auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)&, std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>&&, std::__1::shared_ptr<DB::IMergeTreeDataPart const> const&) build_docker/./contrib/llvm-project/libcxx/include/__functional/invoke.h:531:12 (clickhouse+0x1a5594af)
    #5 std::__1::ranges::transform_view<std::__1::ranges::ref_view<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const>, auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)>::__iterator<false>::operator*[abi:v15007]() const build_docker/./contrib/llvm-project/libcxx/include/__ranges/transform_view.h:210:12 (clickhouse+0x1a5594af)
    #6 decltype(fp0.out()) fmt::v9::formatter<fmt::v9::join_view<std::__1::ranges::transform_view<std::__1::ranges::ref_view<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const>, auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)>::__iterator<false>, std::__1::ranges::transform_view<std::__1::ranges::ref_view<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const>, auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)>::__iterator<false>, char>, char, void>::format<fmt::v9::basic_format_context<fmt::v9::appender, char>>(fmt::v9::join_view<std::__1::ranges::transform_view<std::__1::ranges::ref_view<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const>, auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)>::__iterator<false>, std::__1::ranges::transform_view<std::__1::ranges::ref_view<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const>, auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)>::__iterator<false>, char> const&, std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>&) const build_docker/./contrib/fmtlib-cmake/../fmtlib/include/fmt/format.h:3973:41 (clickhouse+0x1a5594af)
    #7 void fmt::v9::detail::value<fmt::v9::basic_format_context<fmt::v9::appender, char>>::format_custom_arg<fmt::v9::join_view<std::__1::ranges::transform_view<std::__1::ranges::ref_view<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const>, auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)>::__iterator<false>, std::__1::ranges::transform_view<std::__1::ranges::ref_view<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const>, auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)>::__iterator<false>, char>, fmt::v9::formatter<fmt::v9::join_view<std::__1::ranges::transform_view<std::__1::ranges::ref_view<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const>, auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)>::__iterator<false>, std::__1::ranges::transform_view<std::__1::ranges::ref_view<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const>, auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)>::__iterator<false>, char>, char, void>>(void*, fmt::v9::basic_format_parse_context<char, fmt::v9::detail::error_handler>&, fmt::v9::basic_format_context<fmt::v9::appender, char>&) build_docker/./contrib/fmtlib-cmake/../fmtlib/include/fmt/core.h:1314:22 (clickhouse+0x1a5594af)
    #8 void fmt::v9::detail::vformat_to<char>(fmt::v9::detail::buffer<char>&, fmt::v9::basic_string_view<char>, fmt::v9::basic_format_args<fmt::v9::basic_format_context<std::__1::conditional<std::is_same<fmt::v9::type_identity<char>::type, char>::value, fmt::v9::appender, std::__1::back_insert_iterator<fmt::v9::detail::buffer<fmt::v9::type_identity<char>::type>>>::type, fmt::v9::type_identity<char>::type>>, fmt::v9::detail::locale_ref) <null> (clickhouse+0x9d0c8dc) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #9 fmt::v9::vformat(fmt::v9::basic_string_view<char>, fmt::v9::basic_format_args<fmt::v9::basic_format_context<fmt::v9::appender, char>>) build_docker/./contrib/fmtlib-cmake/../fmtlib/include/fmt/format-inl.h:1472:3 (clickhouse+0x1f60f78a) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #10 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> fmt::v9::format<fmt::v9::join_view<std::__1::ranges::transform_view<std::__1::ranges::ref_view<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const>, auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)>::__iterator<false>, std::__1::ranges::transform_view<std::__1::ranges::ref_view<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const>, auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)>::__iterator<false>, char>>(fmt::v9::basic_format_string<char, fmt::v9::type_identity<fmt::v9::join_view<std::__1::ranges::transform_view<std::__1::ranges::ref_view<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const>, auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)>::__iterator<false>, std::__1::ranges::transform_view<std::__1::ranges::ref_view<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const>, auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)>::__iterator<false>, char>>::type>, fmt::v9::join_view<std::__1::ranges::transform_view<std::__1::ranges::ref_view<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const>, auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)>::__iterator<false>, std::__1::ranges::transform_view<std::__1::ranges::ref_view<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const>, auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)>::__iterator<false>, char>&&) build_docker/./contrib/fmtlib-cmake/../fmtlib/include/fmt/core.h:3206:10 (clickhouse+0x1a5591ee) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #11 void tryGetFormattedArgs<fmt::v9::join_view<std::__1::ranges::transform_view<std::__1::ranges::ref_view<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const>, auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)>::__iterator<false>, std::__1::ranges::transform_view<std::__1::ranges::ref_view<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const>, auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)>::__iterator<false>, char>&, unsigned long&>(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>&, std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>&&, unsigned long&) build_docker/./src/Common/LoggingFormatStringHelpers.h:131:23 (clickhouse+0x1a5591ee)
    #12 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> tryGetArgsAndFormat<fmt::v9::join_view<std::__1::ranges::transform_view<std::__1::ranges::ref_view<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const>, auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)>::__iterator<false>, std::__1::ranges::transform_view<std::__1::ranges::ref_view<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const>, auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)>::__iterator<false>, char>, unsigned long&>(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>&, fmt::v9::basic_format_string<char, fmt::v9::type_identity<fmt::v9::join_view<std::__1::ranges::transform_view<std::__1::ranges::ref_view<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const>, auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)>::__iterator<false>, std::__1::ranges::transform_view<std::__1::ranges::ref_view<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const>, auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)>::__iterator<false>, char>>::type, fmt::v9::type_identity<unsigned long&>::type>, fmt::v9::join_view<std::__1::ranges::transform_view<std::__1::ranges::ref_view<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const>, auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)>::__iterator<false>, std::__1::ranges::transform_view<std::__1::ranges::ref_view<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const>, auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)>::__iterator<false>, char>&&, unsigned long&) build_docker/./src/Common/LoggingFormatStringHelpers.h:168:5 (clickhouse+0x1a53c766) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #13 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> ConstexprIfsAreNotIfdefs<true>::getArgsAndFormat<fmt::v9::join_view<std::__1::ranges::transform_view<std::__1::ranges::ref_view<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const>, auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)>::__iterator<false>, std::__1::ranges::transform_view<std::__1::ranges::ref_view<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const>, auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)>::__iterator<false>, char>, unsigned long&>(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>&, fmt::v9::basic_format_string<char, fmt::v9::type_identity<fmt::v9::join_view<std::__1::ranges::transform_view<std::__1::ranges::ref_view<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const>, auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)>::__iterator<false>, std::__1::ranges::transform_view<std::__1::ranges::ref_view<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const>, auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)>::__iterator<false>, char>>::type, fmt::v9::type_identity<unsigned long&>::type>, fmt::v9::join_view<std::__1::ranges::transform_view<std::__1::ranges::ref_view<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const>, auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)>::__iterator<false>, std::__1::ranges::transform_view<std::__1::ranges::ref_view<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const>, auto DB::(anonymous namespace)::getNameWithState<std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>>>(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)::'lambda'(std::__1::set<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, DB::MergeTreeData::LessDataPart, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const>>> const&)>::__iterator<false>, char>&&, unsigned long&) build_docker/./src/Common/LoggingFormatStringHelpers.h:162:16 (clickhouse+0x1a53c766)
    #14 DB::StorageMergeTree::stopMergesAndWaitForPartition(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) build_docker/./src/Storages/StorageMergeTree.cpp:1750:9 (clickhouse+0x1a53c766)
    #15 DB::StorageMergeTree::replacePartitionFrom(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::Context const>) build_docker/./src/Storages/StorageMergeTree.cpp:2215:31 (clickhouse+0x1a54c33a) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #16 DB::MergeTreeData::alterPartition(std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::vector<DB::PartitionCommand, std::__1::allocator<DB::PartitionCommand>> const&, std::__1::shared_ptr<DB::Context const>) build_docker/./src/Storages/MergeTree/MergeTreeData.cpp:5555:17 (clickhouse+0x1a0c7318) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #17 DB::InterpreterAlterQuery::executeToTable(DB::ASTAlterQuery const&) build_docker/./src/Interpreters/InterpreterAlterQuery.cpp:245:47 (clickhouse+0x17f5e908) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #18 DB::InterpreterAlterQuery::execute() build_docker/./src/Interpreters/InterpreterAlterQuery.cpp:80:16 (clickhouse+0x17f5bb42) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #19 DB::executeQueryImpl(char const*, char const*, std::__1::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) build_docker/./src/Interpreters/executeQuery.cpp:1351:40 (clickhouse+0x1888b18d) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #20 DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) build_docker/./src/Interpreters/executeQuery.cpp:1518:26 (clickhouse+0x18886337) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #21 DB::TCPHandler::runImpl() build_docker/./src/Server/TCPHandler.cpp:595:54 (clickhouse+0x1a8db036) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #22 DB::TCPHandler::run() build_docker/./src/Server/TCPHandler.cpp:2528:9 (clickhouse+0x1a8f9507) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #23 Poco::Net::TCPServerConnection::start() build_docker/./base/poco/Net/src/TCPServerConnection.cpp:43:3 (clickhouse+0x1eeb4822) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #24 Poco::Net::TCPServerDispatcher::run() build_docker/./base/poco/Net/src/TCPServerDispatcher.cpp:115:38 (clickhouse+0x1eeb5091) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #25 Poco::PooledThread::run() build_docker/./base/poco/Foundation/src/ThreadPool.cpp:205:14 (clickhouse+0x1ee2dd02) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #26 Poco::(anonymous namespace)::RunnableHolder::run() build_docker/./base/poco/Foundation/src/Thread.cpp:45:11 (clickhouse+0x1ee2bfcf) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)
    #27 Poco::ThreadImpl::runnableEntry(void*) build_docker/./base/poco/Foundation/src/Thread_POSIX.cpp:335:27 (clickhouse+0x1ee2a4a9) (BuildId: 6fe9aaaf3e81756aec6d9052783cf6ac4599e377)

```