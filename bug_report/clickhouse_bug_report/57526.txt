ID: 57526
Title: parser: different behaviour in alias position.
Description:

**Describe what's wrong**

We find a parser bug, incorrect behavior in the alias order.

https://fiddle.clickhouse.com/2a8c36d2-1a16-4bf7-9a59-b339fac1a6cf

**Does it reproduce on recent release?**
I only tried the above fiddle, but it seems to still exist.

**Error message and/or stacktrace**

sorry, I do not have a recent debug build, but thoes code I believe have not been changed. 
maybe the stacktrace has little different.
```cpp
2023.12.05 05:12:01.259843 [ 605477 ] {96367d42-13e7-4c4c-8021-502d16bf5f6e} <Error> executeQuery: Code: 47. DB::Exception: Unknown identifier: Value1; there are columns: Id, Value2, cte2.Value2, least(Value2, cte2.Value2): While processing least(Value2, cte2.Value2) AS Value1, Value2 + Value1 AS CombinedValue. (UNKNOWN_IDENTIFIER) (version 23.1.8.1) (from 127.0.0.1:55556) (in query: SELECT least(cte1.Value2, cte2.Value2) AS Value1, cte1.Value2 + cte1.Value1 AS CombinedValue FROM cte1 INNER JOIN cte2 ON cte1.Id = cte2.Id;), Stack trace (when copying this message, always include the lines below):

0. ClickHouse/contrib/llvm-project/libcxx/include/exception:134: std::exception::capture() @ 0x189a5602 in ClickHouse/build_debug/programs/clickhouse
1. ClickHouse/contrib/llvm-project/libcxx/include/exception:112: std::exception::exception[abi:v15000]() @ 0x189a55cd in ClickHouse/build_debug/programs/clickhouse
2. ClickHouse/contrib/poco/Foundation/src/Exception.cpp:27: Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, int) @ 0x2fc72220 in ClickHouse/build_debug/programs/clickhouse
3. ClickHouse/src/Common/Exception.cpp:89: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x210ead2e in ClickHouse/build_debug/programs/clickhouse
4. ClickHouse/src/Common/Exception.h:64: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&&, int, bool) @ 0x1899c90a in ClickHouse/build_debug/programs/clickhouse
5. ClickHouse/src/Common/Exception.h:84: DB::Exception::Exception<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>(int, FormatStringHelperImpl<std::__1::type_identity<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&>::type, std::__1::type_identity<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>::type>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&&) @ 0x1b228c6c in ClickHouse/build_debug/programs/clickhouse
6. ClickHouse/src/Interpreters/ActionsVisitor.cpp:768: DB::ActionsMatcher::getNameAndTypeFromAST(std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x28a998ba in ClickHouse/build_debug/programs/clickhouse
7. ClickHouse/src/Interpreters/ActionsVisitor.cpp:1222: DB::ActionsMatcher::visit(DB::ASTFunction const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x28a98091 in ClickHouse/build_debug/programs/clickhouse
8. ClickHouse/src/Interpreters/ActionsVisitor.cpp:738: DB::ActionsMatcher::visit(std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x28a93e6d in ClickHouse/build_debug/programs/clickhouse
9. ClickHouse/src/Interpreters/ActionsVisitor.cpp:847: DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x28a995f7 in ClickHouse/build_debug/programs/clickhouse
10. ClickHouse/src/Interpreters/ActionsVisitor.cpp:742: DB::ActionsMatcher::visit(std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x28a93ed9 in ClickHouse/build_debug/programs/clickhouse
11. ClickHouse/src/Interpreters/InDepthNodeVisitor.h:71: DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::doVisit(std::__1::shared_ptr<DB::IAST> const&) @ 0x28a89ca0 in ClickHouse/build_debug/programs/clickhouse
12. ClickHouse/src/Interpreters/InDepthNodeVisitor.h:61: void DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visitImplMain<false>(std::__1::shared_ptr<DB::IAST> const&) @ 0x28a89e81 in ClickHouse/build_debug/programs/clickhouse
13. ClickHouse/src/Interpreters/InDepthNodeVisitor.h:53: void DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visitImpl<false>(std::__1::shared_ptr<DB::IAST> const&) @ 0x28a89c2a in ClickHouse/build_debug/programs/clickhouse
14. ClickHouse/src/Interpreters/InDepthNodeVisitor.h:33: DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x28a69165 in ClickHouse/build_debug/programs/clickhouse
15. ClickHouse/src/Interpreters/ExpressionAnalyzer.cpp:563: DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x28a55fbe in ClickHouse/build_debug/programs/clickhouse
16. ClickHouse/src/Interpreters/ExpressionAnalyzer.cpp:1536: DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x28a5fdd5 in ClickHouse/build_debug/programs/clickhouse
17. ClickHouse/src/Interpreters/ExpressionAnalyzer.cpp:2077: DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x28a646ea in ClickHouse/build_debug/programs/clickhouse
18. ClickHouse/src/Interpreters/InterpreterSelectQuery.cpp:849: DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x29694d8e in ClickHouse/build_debug/programs/clickhouse
19. ClickHouse/src/Interpreters/InterpreterSelectQuery.cpp:682: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::PreparedSets>)::$_2::operator()(bool) const @ 0x2968e45e in ClickHouse/build_debug/programs/clickhouse
20. ClickHouse/src/Interpreters/InterpreterSelectQuery.cpp:685: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::PreparedSets>) @ 0x29689e8d in ClickHouse/build_debug/programs/clickhouse
21. ClickHouse/src/Interpreters/InterpreterSelectQuery.cpp:200: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) @ 0x296880c6 in ClickHouse/build_debug/programs/clickhouse
22. ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: std::__1::__unique_if<DB::InterpreterSelectQuery>::__unique_single std::__1::make_unique[abi:v15000]<DB::InterpreterSelectQuery, std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context>&, DB::SelectQueryOptions&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&>(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context>&, DB::SelectQueryOptions&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) @ 0x29766d61 in ClickHouse/build_debug/programs/clickhouse
23. ClickHouse/src/Interpreters/InterpreterSelectWithUnionQuery.cpp:250: DB::InterpreterSelectWithUnionQuery::buildCurrentChildInterpreter(std::__1::shared_ptr<DB::IAST> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) @ 0x29763f49 in ClickHouse/build_debug/programs/clickhouse
24. ClickHouse/src/Interpreters/InterpreterSelectWithUnionQuery.cpp:148: DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&) @ 0x297633bf in ClickHouse/build_debug/programs/clickhouse
25. ClickHouse/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: std::__1::__unique_if<DB::InterpreterSelectWithUnionQuery>::__unique_single std::__1::make_unique[abi:v15000]<DB::InterpreterSelectWithUnionQuery, std::__1::shared_ptr<DB::IAST>&, std::__1::shared_ptr<DB::Context>&, DB::SelectQueryOptions const&>(std::__1::shared_ptr<DB::IAST>&, std::__1::shared_ptr<DB::Context>&, DB::SelectQueryOptions const&) @ 0x2963bad4 in ClickHouse/build_debug/programs/clickhouse
26. ClickHouse/src/Interpreters/InterpreterFactory.cpp:142: DB::InterpreterFactory::get(std::__1::shared_ptr<DB::IAST>&, std::__1::shared_ptr<DB::Context>, DB::SelectQueryOptions const&) @ 0x29639878 in ClickHouse/build_debug/programs/clickhouse
27. ClickHouse/src/Interpreters/executeQuery.cpp:671: DB::executeQueryImpl(char const*, char const*, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x29c0f126 in ClickHouse/build_debug/programs/clickhouse
28. ClickHouse/src/Interpreters/executeQuery.cpp:1172: DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum) @ 0x29c0b964 in ClickHouse/build_debug/programs/clickhouse
29. ClickHouse/src/Server/TCPHandler.cpp:379: DB::TCPHandler::runImpl() @ 0x2aed1dc6 in ClickHouse/build_debug/programs/clickhouse
30. ClickHouse/src/Server/TCPHandler.cpp:1969: DB::TCPHandler::run() @ 0x2aee3165 in ClickHouse/build_debug/programs/clickhouse
31. ClickHouse/contrib/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x2faaee99 in ClickHouse/build_debug/programs/clickhouse


```


**How to reproduce**
plz find it in the fiddle.
```sql
CREATE TABLE cte1 (
  `Id` Int32, 
  `Value1` Float, 
  `Value2` Float
) ENGINE = Memory;

CREATE TABLE cte2 (
  `Id` Int32, 
  `Value1` Float, 
  `Value2` Float
) ENGINE = Memory;

INSERT INTO cte1(`Id`, `Value1`, `Value2`) VALUES (1, 10.0, 2.0)(2, 15.0, 3.0)(3, 20.0, 4.0);
INSERT INTO cte2(`Id`, `Value1`, `Value2`) VALUES (1, 10.0, 2.0)(2, 15.0, 3.0)(3, 20.0, 4.0);

-- correct and can work
SELECT 
  cte1.Value2 + cte1.Value1 AS CombinedValue,
  least(cte1.Value2, cte2.Value2) AS Value1
FROM 
  cte1
INNER JOIN cte2 ON cte1.Id = cte2.Id;


-- incorrect
SELECT 
  least(cte1.Value2, cte2.Value2) AS Value1,
  cte1.Value2 + cte1.Value1 AS CombinedValue
FROM 
  cte1
INNER JOIN cte2 ON cte1.Id = cte2.Id;

```

**Expected behavior**

we simply change the order and it works. but it works both on mysql/pgsql. I think this is just the current parser in `complex_alias` need some extra logic.

**Additional**
I locally debug find the problem is from below, the `complex_alias` is an optimization right? if the `complex_alias` contain the necessary columns, seems incorrect? Right now, i am still debugging wanna find a better way, but the worst solution maybe [re-scan again](https://github.com/timeplus-io/proton/pull/380/files#diff-6e3f0b123e8ca74921c75e4fd3c4ac6bb0d104a45d3dce2aa76f8be8aaef808fR146-R149).
https://github.com/ClickHouse/ClickHouse/blob/bb9baea5b6fa1e85700a7fd888d6ff3ccf699776/src/Interpreters/RequiredSourceColumnsData.cpp#L56-L72

what I mean re-scan is below code re call visit all the select
https://github.com/ClickHouse/ClickHouse/blob/bb9baea5b6fa1e85700a7fd888d6ff3ccf699776/src/Interpreters/RequiredSourceColumnsVisitor.cpp#L167
