ID: 12450
Title: Cannot rename a column using a recently dropped column
Description:
**Describe the bug**

The table should have enough datas and be part of the `MergeTree` family.

If we have a table similar at `CREATE TABLE test (pk UInt32, foo AggregateFunction(groupBitOr, UInt32)) Engine = ReplacingMergeTree() PRIMARY KEY (pk) ORDER BY pk;`

`ALTER TABLE test ADD COLUMN foo_tmp SimpleAggregateFunction(groupBitOr, UInt32) AFTER foo SETTINGS mutations_sync = 2, replication_alter_partitions_sync = 2`

`ALTER TABLE test UPDATE foo_tmp = finalizeAggregation(foo) WHERE 1 SETTINGS mutations_sync = 2, replication_alter_partitions_sync = 2`

-- Wait now than all mutations are executed, with checking if on the table `system.mutations`, all columns `is_done = 1`

`ALTER TABLE test DROP COLUMN foo SETTINGS mutations_sync = 2, replication_alter_partitions_sync = 2`

`ALTER TABLE test RENAME COLUMN foo_tmp TO foo`

After this line, the mutation will be stuck, and we will have an error similar at
`Code: 424, e.displayText() = DB::ErrnoException: Destination file /srv/clickhouse/data/default/test/tmp_mut_20200318_18062_19364_306_171657//foo.bin is already exist and have different inode., errno: 17, strerror: File exists (version 20.4.6.53 (official build))`

Error seem also to be reproducible after a simple `UPDATE` clause, so not sure if I'm doing something wrong with it.

On clickhouse `20.4`