ID: 59438
Title: Empty stacktrace on ClickHouse 24.1
Description:
I'm installing ClickHouse 24.1 using the official packages with

```
sudo apt install clickhouse-client=24.1.1.2048 clickhouse-server=24.1.1.2048 clickhouse-common-static=24.1.1.2048
```

After running the server I've started seeing empty stacktraces as the following one:

```
2024.01.31 15:49:06.902219 [ 1822983 ] {cea6f52f-3def-4bf1-9ca2-9bab93df0051} <Error> TCPHandler: Code: 47. DB::Exception: Missing columns: 'jrdi' while processing query: 'SELECT hostname, event_time, table, name, event_type, merge_reason, jrdi FROM system.part_log WHERE name = '2024_207072_207868_163'', required columns: 'hostname' 'table' 'event_type' 'event_time' 'name' 'merge_reason' 'jrdi', maybe you meant: 'hostname', 'table', 'event_type', 'event_time' or 'merge_reason'. (UNKNOWN_IDENTIFIER), Stack trace (when copying this message, always include the lines below):

0. ? @ 0x000000000c802edb in /usr/bin/clickhouse
1. ? @ 0x000000000730800c in /usr/bin/clickhouse
2. ? @ 0x00000000118574c0 in /usr/bin/clickhouse
3. ? @ 0x000000001185d61b in /usr/bin/clickhouse
4. ? @ 0x00000000114dec05 in /usr/bin/clickhouse
5. ? @ 0x00000000114d4e6c in /usr/bin/clickhouse
6. ? @ 0x0000000011593358 in /usr/bin/clickhouse
7. ? @ 0x0000000011599757 in /usr/bin/clickhouse
8. ? @ 0x00000000114bae39 in /usr/bin/clickhouse
9. ? @ 0x0000000011904956 in /usr/bin/clickhouse
10. ? @ 0x00000000119016ba in /usr/bin/clickhouse
11. ? @ 0x000000001291dd69 in /usr/bin/clickhouse
12. ? @ 0x0000000012935df9 in /usr/bin/clickhouse
13. ? @ 0x00000000153a79b2 in /usr/bin/clickhouse
14. ? @ 0x00000000153a87b1 in /usr/bin/clickhouse
15. ? @ 0x00000000154a0f87 in /usr/bin/clickhouse
16. ? @ 0x000000001549f5bd in /usr/bin/clickhouse
17. ? @ 0x00007fba65094ac3
18. ? @ 0x00007fba65126850
```

Looks like something is off with those packages. To test things further I've install debug symbols with the following command and the situation improved a bit:

```
sudo apt install clickhouse-common-static-dbg=24.1.1.2048
```

```
2024.01.31 15:49:06.902219 [ 1822983 ] {cea6f52f-3def-4bf1-9ca2-9bab93df0051} <Error> TCPHandler: Code: 47. DB::Exception: Missing columns: 'jrdi' while processing query: 'SELECT hostname, event_time, table, name, event_type, merge_reason, jrdi FROM system.part_log WHERE name = '2024_207072_207868_163'', required columns: 'hostname' 'table' 'event_type' 'event_time' 'name' 'merge_reason' 'jrdi', maybe you meant: 'hostname', 'table', 'event_type', 'event_time' or 'merge_reason'. (UNKNOWN_IDENTIFIER), Stack trace (when copying this message, always include the lines below):

0. ./build_docker/./src/Common/Exception.cpp:96: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c802edb in /usr/lib/debug/usr/bin/clickhouse.debug
1. ? @ 0x000000000730800c in /usr/lib/debug/usr/bin/clickhouse.debug
2. ./build_docker/./src/Interpreters/TreeRewriter.cpp:0: DB::TreeRewriterResult::collectUsedColumns(std::shared_ptr<DB::IAST> const&, bool, bool) @ 0x00000000118574c0 in /usr/lib/debug/usr/bin/clickhouse.debug
3. ./build_docker/./src/Interpreters/TreeRewriter.cpp:0: DB::TreeRewriter::analyzeSelect(std::shared_ptr<DB::IAST>&, DB::TreeRewriterResult&&, DB::SelectQueryOptions const&, std::vector<DB::TableWithColumnNamesAndTypes, std::allocator<DB::TableWithColumnNamesAndTypes>> const&, std::vector<String, std::allocator<String>> const&, std::shared_ptr<DB::TableJoin>) const @ 0x000000001185d61b in /usr/lib/debug/usr/bin/clickhouse.debug
4. ./contrib/llvm-project/libcxx/include/__utility/swap.h:37: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context> const&, std::optional<DB::Pipe>, std::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::vector<String, std::allocator<String>> const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::shared_ptr<DB::PreparedSets>)::$_0::operator()(bool) const @ 0x00000000114dec05 in /usr/lib/debug/usr/bin/clickhouse.debug
5. ./build_docker/./src/Interpreters/InterpreterSelectQuery.cpp:0: DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context> const&, std::optional<DB::Pipe>, std::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::vector<String, std::allocator<String>> const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::shared_ptr<DB::PreparedSets>) @ 0x00000000114d4e6c in /usr/lib/debug/usr/bin/clickhouse.debug
6. ./src/Interpreters/InterpreterSelectQuery.cpp:0: DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context>, DB::SelectQueryOptions const&, std::vector<String, std::allocator<String>> const&) @ 0x0000000011593358 in /usr/lib/debug/usr/bin/clickhouse.debug
7. ./contrib/llvm-project/libcxx/include/__functional/function.h:717: ? @ 0x0000000011599757 in /usr/lib/debug/usr/bin/clickhouse.debug
8. ./build_docker/./src/Interpreters/InterpreterFactory.cpp:0: DB::InterpreterFactory::get(std::shared_ptr<DB::IAST>&, std::shared_ptr<DB::Context>, DB::SelectQueryOptions const&) @ 0x00000000114bae39 in /usr/lib/debug/usr/bin/clickhouse.debug
9. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x0000000011904956 in /usr/lib/debug/usr/bin/clickhouse.debug
10. ./build_docker/./src/Interpreters/executeQuery.cpp:1285: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x00000000119016ba in /usr/lib/debug/usr/bin/clickhouse.debug
11. ./contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:612: DB::TCPHandler::runImpl() @ 0x000000001291dd69 in /usr/lib/debug/usr/bin/clickhouse.debug
12. ./build_docker/./src/Server/TCPHandler.cpp:2298: DB::TCPHandler::run() @ 0x0000000012935df9 in /usr/lib/debug/usr/bin/clickhouse.debug
13. ./build_docker/./base/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x00000000153a79b2 in /usr/lib/debug/usr/bin/clickhouse.debug
14. ./contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:48: Poco::Net::TCPServerDispatcher::run() @ 0x00000000153a87b1 in /usr/lib/debug/usr/bin/clickhouse.debug
15. ./build_docker/./base/poco/Foundation/src/ThreadPool.cpp:202: Poco::PooledThread::run() @ 0x00000000154a0f87 in /usr/lib/debug/usr/bin/clickhouse.debug
16. ./base/poco/Foundation/include/Poco/SharedPtr.h:231: Poco::ThreadImpl::runnableEntry(void*) @ 0x000000001549f5bd in /usr/lib/debug/usr/bin/clickhouse.debug
17. ? @ 0x00007face0094ac3
18. ? @ 0x00007face0126850
```

This is easy to reproduce, just start the ClickHouse server and run any query that produces an error. I'm using this one:

```sql
SELECT
    hostname,
    event_time,
    table,
    name,
    event_type,
    merge_reason,
    jrdi -- Wrong columns
FROM system.part_log
WHERE name = '2024_207072_207868_163'
```