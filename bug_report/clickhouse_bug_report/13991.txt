ID: 13991
Title: Fail to create DB from MySQL by using MaterializeMySQL
Description:
**Describe the bug**
clickhouse_test is a test MySQL DB, with only one table named 'name', when run "CREATE DATABASE clickhouse_test ENGINE = MaterializeMySQL('bdcmysqldev2', 'clickhouse_test', 'root', 'password');", below issue occur:

Table on ClickHouse side has been created but no data synchronized.

**Error message and/or stacktrace**
2020.08.24 15:18:17.371180 [ 38196 ] {} <Error> MaterializeMySQLSyncThread(): Query EXTERNAL DDL FROM MySQL(storage_monitor, storage_monitor) B wasn't finished successfully: Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 121 ('B'): B. Expected one of: RENAME DATABASE, TRUNCATE, RENAME TABLE, DROP query, RENAME DICTIONARY, DETACH, RENAME query, DROP, create query, CREATE, EXCHANGE TABLES, ALTER TABLE, alter query, Stack trace (when copying this message, always include the lines below):

0. Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x1a708040 in /usr/bin/clickhouse
1. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0xff0e78d in /usr/bin/clickhouse
2. ? @ 0x18328b41 in /usr/bin/clickhouse
3. ? @ 0x176d06de in /usr/bin/clickhouse
4. DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool) @ 0x176d27ef in /usr/bin/clickhouse
5. ? @ 0x1729f494 in /usr/bin/clickhouse
6. DB::MaterializeMySQLSyncThread::onEvent(DB::MaterializeMySQLSyncThread::Buffers&, std::__1::shared_ptr<DB::MySQLReplication::EventBase> const&, DB::MaterializeMetadata&) @ 0x172a5456 in /usr/bin/clickhouse
7. DB::MaterializeMySQLSyncThread::synchronization(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x172a6d8f in /usr/bin/clickhouse
8. ? @ 0x172a7176 in /usr/bin/clickhouse
9. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xff3e4a7 in /usr/bin/clickhouse
10. ? @ 0xff3cae3 in /usr/bin/clickhouse
11. start_thread @ 0x7dd5 in /usr/lib64/libpthread-2.17.so
12. __clone @ 0xfdead in /usr/lib64/libc-2.17.so
 (version 20.8.1.4447 (official build))

**Additional context**
OS version: RHEL 7.6
Clickhouse build: 20.8.1.4447