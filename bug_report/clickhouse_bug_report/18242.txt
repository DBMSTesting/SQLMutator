ID: 18242
Title: Permanent merge of pieces of type TTL_DELETE is in progress
Description:
**Describe the bug**

Permanent merge of pieces of type TTL_DELETE is in progress. The process takes a long time with little progress. Then it starts to consume a lot of memory and falls as it runs into the memory limit (30GB). And the merge starts over. And so endlessly. At the same time, neighboring merges with different types pass without problems.

`system.merges`:

```
elapsed:          458.42945129
progress:         0.09986469705947837
partition_id:     202005
result_part_name: 202005_0_53094_42
memory_usage:     120.49 MiB
merge_type:       TTL_DELETE
```

`system.parts`:

```
partition_id:  202005
name:          202005_0_53094_41
bytes_on_disk: 106.91 GiB
```

**Which ClickHouse server version to use**

```
┌─version()──┐
│ 20.11.4.13 │
└────────────┘
```

**`CREATE TABLE` statements for all tables involved**

```
CREATE TABLE DATABASE.TABLE ON CLUSTER name (
timestamp DateTime,
  ...
  timestamp DateTime,
  bundle String,
  ifa         String,
  bid_id String
)
ENGINE ReplicatedMergeTree('/clickhouse/{cluster}/{shard}/database/table', '{replica}')
  PARTITION BY toYYYYMM(timestamp)
  ORDER BY (bundle, ifa, timestamp)
  TTL timestamp + INTERVAL 2 YEAR
  SETTINGS storage_policy = 'slow_storage';
```

**Expected behavior**

Merge parts should not lead to a drop in the merge process. The merge should complete successfully.

**Error message and/or stacktrace**

```
2020.12.19 12:16:28.108008 [ 8944 ] {} <Error> DATABASE.TABLE: auto DB::StorageReplicatedMergeTree::queueTask()::(anonymous class)::operator()(DB::StorageReplicatedMergeTree::LogEntryPtr &) const: Code: 241, e.displayText() = DB::Exception: Memory limit (total) exceeded: would use 30.83 GiB (attempt to allocate chunk of 4245904 bytes), maximum: 30.83 GiB: (while reading column bid_id): (while reading from part /var/lib/clickhouse/cold/data/DATABASE/TABLE/202005_0_53094_41/ from mark 408392 with max_rows_to_read = 8192): While executing MergeTreeSequentialSource, Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x7b46e2e in /usr/bin/clickhouse
1. MemoryTracker::alloc(long) @ 0x7b3b016 in /usr/bin/clickhouse
2. MemoryTracker::alloc(long) @ 0x7b3ac1d in /usr/bin/clickhouse
3. MemoryTracker::alloc(long) @ 0x7b3ac1d in /usr/bin/clickhouse
4. DB::DataTypeString::deserializeBinaryBulk(DB::IColumn&, DB::ReadBuffer&, unsigned long, double) const @ 0xd5a8164 in /usr/bin/clickhouse
5. DB::MergeTreeReaderWide::readData(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::IDataType const&, DB::IColumn&, unsigned long, bool, unsigned long, bool) @ 0xe1c2c79 in /usr/bin/clickhouse
6. DB::MergeTreeReaderWide::readRows(unsigned long, bool, unsigned long, std::__1::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::__1::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn> > >&) @ 0xe1c1f90 in /usr/bin/clickhouse
7. DB::MergeTreeSequentialSource::generate() @ 0xe1d36c9 in /usr/bin/clickhouse
8. DB::ISource::work() @ 0xe36459a in /usr/bin/clickhouse
9. DB::SourceWithProgress::work() @ 0xe4c927a in /usr/bin/clickhouse
10. ? @ 0xe39d37c in /usr/bin/clickhouse
11. DB::PipelineExecutor::executeStepImpl(unsigned long, unsigned long, std::__1::atomic<bool>*) @ 0xe39a4a7 in /usr/bin/clickhouse
12. DB::PipelineExecutor::executeStep(std::__1::atomic<bool>*) @ 0xe39918c in /usr/bin/clickhouse
13. DB::PullingPipelineExecutor::pull(DB::Chunk&) @ 0xe3a5ac8 in /usr/bin/clickhouse
14. DB::PullingPipelineExecutor::pull(DB::Block&) @ 0xe3a5d10 in /usr/bin/clickhouse
15. DB::PipelineExecutingBlockInputStream::readImpl() @ 0xe395444 in /usr/bin/clickhouse
16. DB::IBlockInputStream::read() @ 0xd4f2625 in /usr/bin/clickhouse
17. DB::TTLBlockInputStream::readImpl() @ 0xe11eedb in /usr/bin/clickhouse
18. DB::IBlockInputStream::read() @ 0xd4f2625 in /usr/bin/clickhouse
19. DB::MergeTreeDataMergerMutator::mergePartsToTemporaryPart(DB::FutureMergedMutatedPart const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::BackgroundProcessListEntry<DB::MergeListElement, DB::MergeInfo>&, std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl>&, long, DB::Context const&, std::__1::unique_ptr<DB::IReservation, std::__1::default_delete<DB::IReservation> > const&, bool) @ 0xe0fc7b7 in /usr/bin/clickhouse
20. DB::StorageReplicatedMergeTree::tryExecuteMerge(DB::ReplicatedMergeTreeLogEntry const&) @ 0xdef4c04 in /usr/bin/clickhouse
21. DB::StorageReplicatedMergeTree::executeLogEntry(DB::ReplicatedMergeTreeLogEntry&) @ 0xdee6d6c in /usr/bin/clickhouse
22. ? @ 0xdf5af7c in /usr/bin/clickhouse
23. DB::ReplicatedMergeTreeQueue::processEntry(std::__1::function<std::__1::shared_ptr<zkutil::ZooKeeper> ()>, std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry>&, std::__1::function<bool (std::__1::shared_ptr<DB::ReplicatedMergeTreeLogEntry>&)>) @ 0xe23f2b5 in /usr/bin/clickhouse
24. DB::StorageReplicatedMergeTree::queueTask() @ 0xdf16e8b in /usr/bin/clickhouse
25. DB::BackgroundProcessingPool::workLoopFunc() @ 0xe05e3b3 in /usr/bin/clickhouse
26. ? @ 0xe05eef1 in /usr/bin/clickhouse
27. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x7b7293d in /usr/bin/clickhouse
28. ? @ 0x7b76463 in /usr/bin/clickhouse
29. start_thread @ 0x76db in /lib/x86_64-linux-gnu/libpthread-2.27.so
30. __clone @ 0x12171f in /lib/x86_64-linux-gnu/libc-2.27.so
 (version 20.11.4.13 (official build))
```

**Additional context**

Deleted the TTL from the table, but the `TTL_DELETE` merge did not stop.