ID: 11466
Title: File not found after inserts
Description:
(you don't have to strictly follow this form)

**Describe the bug**
File not found error  on insert from select query right after multiple inserts

* Which ClickHouse server version to use
20.3.5.21
* Queries to run that lead to unexpected result
Simple insert from select query right after multiple inserts
1) multiple insert into table1 (300k rows every 5 seconds)
2) insert into table2 select agg from table1

**DDL**
```CREATE TABLE IF NOT EXISTS table1
(
    field                  FixedString(10),
    anotherHash     UInt32,
    ...
    importMonth           UInt32 DEFAULT toYYYYMM(now()),
    fieldHash              UInt32 DEFAULT xxHash32(field)

)
    ENGINE = MergeTree
        PARTITION BY (importMonth)
        ORDER BY (fieldHash);
```
**Query**
```
insert into table2
SELECT importMonth,
       field,
       fieldHash,
       agg1
       
from ( SELECT s1.importMonth,
              s1.field,
              s1.fieldHash              
       from table1
           prewhere importMonth = 202004) as s1
         LEFT JOIN (SELECT anotherHash, count(distinct fieldHash) agg1
                    FROM table1
                        prewhere importMonth = 202004
                    group by anotherHash) as s2
                   ON s1.anotherHash = s2.anotherHash;
```

**Error message and/or stacktrace**
```
2020.06.05 07:48:20.069176 [ 6881 ] {22a3ba86-7921-4b3b-9e3d-2a399ad1243e} <Error> executeQuery: Poco::Exception. Code: 1000, e.code() = 2, e.displayText() = File not found: /var/lib/clickhouse/data/db/table/202004_623_623_0/fieldHash.mrk2 (version 20.3.5.21 (official build)) (from 10.104.42.253:54420) (in query: {insert from select query}, Stack trace (when copying this message, always include the lines below):

0. Poco::FileNotFoundException::FileNotFoundException(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x10519310 in /usr/bin/clickhouse
1. Poco::FileImpl::handleLastErrorImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x1052497c in /usr/bin/clickhouse
2. ? @ 0x10524f43 in /usr/bin/clickhouse
3. DB::DiskLocal::getFileSize(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const @ 0xcf6b793 in /usr/bin/clickhouse
4. DB::MergeTreeMarksLoader::loadMarksImpl() @ 0xda19cd0 in /usr/bin/clickhouse
5. std::__1::pair<std::__1::shared_ptr<DB::MarksInCompressedFile>, bool> DB::LRUCache<DB::UInt128, DB::MarksInCompressedFile, DB::UInt128TrivialHash, DB::MarksWeightFunction>::getOrSet<std::__1::__bind<std::__1::shared_ptr<DB::MarksInCompressedFile> (DB::MergeTreeMarksLoader::*)(), DB::MergeTreeMarksLoader*>&>(DB::UInt128 const&, std::__1::__bind<std::__1::shared_ptr<DB::MarksInCompressedFile> (DB::MergeTreeMarksLoader::*)(), DB::MergeTreeMarksLoader*>&) @ 0xda1eb83 in /usr/bin/clickhouse
6. DB::MergeTreeMarksLoader::loadMarks() @ 0xda1a675 in /usr/bin/clickhouse
7. DB::MergeTreeMarksLoader::getMark(unsigned long, unsigned long) @ 0xda1a875 in /usr/bin/clickhouse
8. DB::MergeTreeReaderStream::MergeTreeReaderStream(std::__1::shared_ptr<DB::IDisk>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, std::__1::deque<DB::MarkRange, std::__1::allocator<DB::MarkRange> > const&, DB::MergeTreeReaderSettings const&, DB::MarkCache*, DB::UncompressedCache*, unsigned long, DB::MergeTreeIndexGranularityInfo const*, std::__1::function<void (DB::ReadBufferFromFileBase::ProfileInfo)> const&, int) @ 0xda23c79 in /usr/bin/clickhouse
9. ? @ 0xda25fed in /usr/bin/clickhouse
10. DB::MergeTreeReaderWide::addStreams(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::IDataType const&, std::__1::function<void (DB::ReadBufferFromFileBase::ProfileInfo)> const&, int) @ 0xda253cc in /usr/bin/clickhouse
11. DB::MergeTreeReaderWide::MergeTreeReaderWide(std::__1::shared_ptr<DB::MergeTreeDataPartWide const> const&, DB::NamesAndTypesList const&, DB::UncompressedCache*, DB::MarkCache*, std::__1::deque<DB::MarkRange, std::__1::allocator<DB::MarkRange> > const&, DB::MergeTreeReaderSettings const&, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, double, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, double> > > const&, std::__1::function<void (DB::ReadBufferFromFileBase::ProfileInfo)> const&, int) @ 0xda26729 in /usr/bin/clickhouse
12. DB::MergeTreeDataPartWide::getReader(DB::NamesAndTypesList const&, std::__1::deque<DB::MarkRange, std::__1::allocator<DB::MarkRange> > const&, DB::UncompressedCache*, DB::MarkCache*, DB::MergeTreeReaderSettings const&, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, double, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, double> > > const&, std::__1::function<void (DB::ReadBufferFromFileBase::ProfileInfo)> const&) const @ 0xd96acac in /usr/bin/clickhouse
13. DB::MergeTreeThreadSelectBlockInputProcessor::getNewTask() @ 0xda6462e in /usr/bin/clickhouse
14. DB::MergeTreeBaseSelectProcessor::generate() @ 0xda3b61a in /usr/bin/clickhouse
15. DB::ISource::work() @ 0xdb79f5b in /usr/bin/clickhouse
16. DB::SourceWithProgress::work() @ 0xdecb437 in /usr/bin/clickhouse
17. DB::TreeExecutorBlockInputStream::execute(bool) @ 0xdbc12c2 in /usr/bin/clickhouse
18. DB::TreeExecutorBlockInputStream::readImpl() @ 0xdbc15ad in /usr/bin/clickhouse
19. DB::IBlockInputStream::read() @ 0xce2f36f in /usr/bin/clickhouse
20. DB::ExpressionBlockInputStream::readImpl() @ 0xd25acba in /usr/bin/clickhouse
21. DB::IBlockInputStream::read() @ 0xce2f36f in /usr/bin/clickhouse
22. DB::ParallelInputsProcessor<DB::ParallelAggregatingBlockInputStream::Handler>::thread(std::__1::shared_ptr<DB::ThreadGroupStatus>, unsigned long) @ 0xd31b240 in /usr/bin/clickhouse
23. ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::ParallelInputsProcessor<DB::ParallelAggregatingBlockInputStream::Handler>::*)(std::__1::shared_ptr<DB::ThreadGroupStatus>, unsigned long), DB::ParallelInputsProcessor<DB::ParallelAggregatingBlockInputStream::Handler>*, std::__1::shared_ptr<DB::ThreadGroupStatus>, unsigned long&>(void (DB::ParallelInputsProcessor<DB::ParallelAggregatingBlockInputStream::Handler>::*&&)(std::__1::shared_ptr<DB::ThreadGroupStatus>, unsigned long), DB::ParallelInputsProcessor<DB::ParallelAggregatingBlockInputStream::Handler>*&&, std::__1::shared_ptr<DB::ThreadGroupStatus>&&, unsigned long&)::'lambda'()::operator()() const @ 0xd31b839 in /usr/bin/clickhouse
24. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x8f567eb in /usr/bin/clickhouse
25. ? @ 0x8f54c33 in /usr/bin/clickhouse
26. start_thread @ 0x7fa3 in /lib/x86_64-linux-gnu/libpthread-2.28.so
27. clone @ 0xf94cf in /lib/x86_64-linux-gnu/libc-2.28.so
```

**Additional context**
1) Drop and recreate or truncate doesn't fix it. 
2) Saw same error with another field 
3) fieldHash is DEFALUT xxHash32(field)
