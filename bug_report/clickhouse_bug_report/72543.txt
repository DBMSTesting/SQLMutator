ID: 72543
Title: Logical error while parsing JSON
Description:
**Describe the bug**
A link to the report

**How to reproduce**
Run:

```sql
SET engine_file_truncate_on_insert = 1, allow_experimental_dynamic_type = 1, allow_experimental_json_type = 1, input_format_json_use_string_type_for_ambiguous_paths_in_named_tuples_inference_from_objects = 1;
CREATE OR REPLACE TABLE t0 (c0 Dynamic) ENGINE = Memory();
INSERT INTO TABLE t0 (c0) VALUES ('{"c0":{"c1":1}}'::JSON(`c1`.`c2` Int, `c1` Int));
INSERT INTO TABLE FUNCTION file('<path to file>', 'JSON', 'c0 Dynamic') SELECT c0 FROM t0;
INSERT INTO TABLE t0 (c0) FROM INFILE '<path to file>' FORMAT JSON; --Logical error: 'element_column.size() - old_size == 1'
```
Stack trace:
```
Logical error: 'element_column.size() - old_size == 1'
########## Short fault info ############
(version 24.12.1.370 (official build), build id: , git hash: 71b651d4a8f064f00f588a8387b14ad8d9da4055, architecture: x86_64) (from thread 2904925) Received signal 6
Signal description: Aborted

Stack trace: 0x000060c3e27bda2d 0x000060c3e2bc63b8 0x000075d0f5245250 0x000075d0f52a3f1d 0x000075d0f524519e 0x000075d0f5228902 0x000060c3e2774ef4 0x000060c3e2775374 0x000060c3ed2c134e 0x000060c3ed2c74c7 0x000060c3ed2c3204 0x000060c3ed1bf88b 0x000060c3ed22a5d9 0x000060c3f19558e5 0x000060c3f1c3bb84 0x000060c3f1c3c2ce 0x000060c3f1c3cdd7 0x000060c3f1ab0950 0x000060c3f19eb5e4 0x000060c3f19b0156 0x000060c3f19af964 0x000060c3f19dbdf6 0x000060c3f19c81fc 0x000060c3f19c7963 0x000060c3f19e2934 0x000060c3f0691ea0 0x000060c3f19b0156 0x000060c3f19af964 0x000060c3f19dbdf6 0x000060c3f19c81fc 0x000060c3f19c7365 0x000060c3f19c6faa 0x000060c3f19e0edb 0x000060c3e2893701 0x000060c3e289a6aa 0x000075d0f52a1e2e 0x000075d0f5333a4c
########################################
(version 24.12.1.370 (official build), build id: , git hash: 71b651d4a8f064f00f588a8387b14ad8d9da4055) (from thread 2904925) (no query) Received signal Aborted (6)

Stack trace: 0x000060c3e27bda2d 0x000060c3e2bc63b8 0x000075d0f5245250 0x000075d0f52a3f1d 0x000075d0f524519e 0x000075d0f5228902 0x000060c3e2774ef4 0x000060c3e2775374 0x000060c3ed2c134e 0x000060c3ed2c74c7 0x000060c3ed2c3204 0x000060c3ed1bf88b 0x000060c3ed22a5d9 0x000060c3f19558e5 0x000060c3f1c3bb84 0x000060c3f1c3c2ce 0x000060c3f1c3cdd7 0x000060c3f1ab0950 0x000060c3f19eb5e4 0x000060c3f19b0156 0x000060c3f19af964 0x000060c3f19dbdf6 0x000060c3f19c81fc 0x000060c3f19c7963 0x000060c3f19e2934 0x000060c3f0691ea0 0x000060c3f19b0156 0x000060c3f19af964 0x000060c3f19dbdf6 0x000060c3f19c81fc 0x000060c3f19c7365 0x000060c3f19c6faa 0x000060c3f19e0edb 0x000060c3e2893701 0x000060c3e289a6aa 0x000075d0f52a1e2e 0x000075d0f5333a4c
0.0. inlined from src/Common/StackTrace.cpp:380: StackTrace::tryCapture()
0. src/Common/StackTrace.cpp:349: StackTrace::StackTrace(ucontext_t const&) @ 0x00000000253eda2d
1. src/Common/SignalHandlers.cpp:100: signalHandler(int, siginfo_t*, void*) @ 0x00000000257f63b8
2. ? @ 0x000075d0f5245250
3. ? @ 0x000075d0f52a3f1d
4. ? @ 0x000075d0f524519e
5. ? @ 0x000075d0f5228902
6. src/Common/Exception.cpp:48: DB::abortOnFailedAssertion(String const&, void* const*, unsigned long, unsigned long) @ 0x00000000253a4ef4
7. src/Common/Exception.cpp:54: ? @ 0x00000000253a5374
8. src/DataTypes/Serializations/SerializationTuple.cpp:82: void DB::addElementSafe<void, void DB::SerializationTuple::deserializeTupleJSONImpl<void, void DB::SerializationTuple::deserializeTextJSONImpl<void>(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&) const::'lambda0'(DB::IColumn&, unsigned long)>(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&, void DB::SerializationTuple::deserializeTextJSONImpl<void>(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&) const::'lambda0'(DB::IColumn&, unsigned long)&&) const::'lambda'()&>(unsigned long, DB::IColumn&, void DB::SerializationTuple::deserializeTextJSONImpl<void>(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&) const::'lambda0'(DB::IColumn&, unsigned long)&&)::'lambda'()::operator()() const @ 0x000000002fef134e
9.0. inlined from src/DataTypes/Serializations/SerializationTuple.cpp:118: void DB::addElementSafe<void, void DB::SerializationTuple::deserializeTupleJSONImpl<void, void DB::SerializationTuple::deserializeTextJSONImpl<void>(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&) const::'lambda0'(DB::IColumn&, unsigned long)>(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&, void DB::SerializationTuple::deserializeTextJSONImpl<void>(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&) const::'lambda0'(DB::IColumn&, unsigned long)&&) const::'lambda'()&>(unsigned long, DB::IColumn&, void DB::SerializationTuple::deserializeTextJSONImpl<void>(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&) const::'lambda0'(DB::IColumn&, unsigned long)&&)
9. src/DataTypes/Serializations/SerializationTuple.cpp:447: void DB::SerializationTuple::deserializeTupleJSONImpl<void, void DB::SerializationTuple::deserializeTextJSONImpl<void>(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&) const::'lambda0'(DB::IColumn&, unsigned long)>(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&, void DB::SerializationTuple::deserializeTextJSONImpl<void>(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&) const::'lambda0'(DB::IColumn&, unsigned long)&&) const @ 0x000000002fef74c7
10. src/DataTypes/Serializations/SerializationTuple.cpp:521: void DB::SerializationTuple::deserializeTextJSONImpl<void>(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&) const @ 0x000000002fef3204
11.0. inlined from src/DataTypes/Serializations/SerializationDynamic.cpp:795: operator()
11.1. inlined from src/DataTypes/Serializations/SerializationDynamic.cpp:513: void DB::deserializeVariant<void, DB::SerializationDynamic::deserializeTextJSON(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&) const::$_2>(DB::ColumnVariant&, std::shared_ptr<DB::ISerialization const> const&, char8_t, DB::ReadBuffer&, DB::SerializationDynamic::deserializeTextJSON(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&) const::$_2)
11.2. inlined from src/DataTypes/Serializations/SerializationDynamic.cpp:605: void DB::deserializeTextImpl<DB::SerializationDynamic::deserializeTextJSON(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&) const::$_0, DB::SerializationDynamic::deserializeTextJSON(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&) const::$_1, DB::SerializationDynamic::deserializeTextJSON(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&) const::$_2>(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&, DB::SerializationDynamic::deserializeTextJSON(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&) const::$_0, DB::FormatSettings::EscapingRule, DB::SerializationDynamic::deserializeTextJSON(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&) const::$_1, DB::SerializationDynamic::deserializeTextJSON(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&) const::$_2)
11. src/DataTypes/Serializations/SerializationDynamic.cpp:798: DB::SerializationDynamic::deserializeTextJSON(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&) const @ 0x000000002fdef88b
12. src/DataTypes/Serializations/SerializationNullable.cpp:878: DB::SerializationNullable::deserializeNullAsDefaultOrNestedTextJSON(DB::IColumn&, DB::ReadBuffer&, DB::FormatSettings const&, std::shared_ptr<DB::ISerialization const> const&) @ 0x000000002fe5a5d9
13. src/Formats/JSONUtils.cpp:302: DB::JSONUtils::readField(DB::ReadBuffer&, DB::IColumn&, std::shared_ptr<DB::IDataType const> const&, std::shared_ptr<DB::ISerialization const> const&, String const&, DB::FormatSettings const&, bool) @ 0x00000000345858e5
14. src/Processors/Formats/Impl/JSONEachRowRowInputFormat.cpp:136: DB::JSONEachRowRowInputFormat::readField(unsigned long, std::vector<COW<DB::IColumn>::mutable_ptr<DB::IColumn>, std::allocator<COW<DB::IColumn>::mutable_ptr<DB::IColumn>>>&) @ 0x000000003486bb84
15. src/Processors/Formats/Impl/JSONEachRowRowInputFormat.cpp:194: DB::JSONEachRowRowInputFormat::readJSONObject(std::vector<COW<DB::IColumn>::mutable_ptr<DB::IColumn>, std::allocator<COW<DB::IColumn>::mutable_ptr<DB::IColumn>>>&) @ 0x000000003486c2ce
16. src/Processors/Formats/Impl/JSONEachRowRowInputFormat.cpp:228: DB::JSONEachRowRowInputFormat::readRow(std::vector<COW<DB::IColumn>::mutable_ptr<DB::IColumn>, std::allocator<COW<DB::IColumn>::mutable_ptr<DB::IColumn>>>&, DB::RowReadExtension&) @ 0x000000003486cdd7
17. src/Processors/Formats/IRowInputFormat.cpp:147: DB::IRowInputFormat::read() @ 0x00000000346e0950
18. src/Processors/Formats/IInputFormat.cpp:19: DB::IInputFormat::generate() @ 0x000000003461b5e4
19. src/Processors/ISource.cpp:139: DB::ISource::tryGenerate() @ 0x00000000345e0156
20. src/Processors/ISource.cpp:108: DB::ISource::work() @ 0x00000000345df964
21.0. inlined from src/Processors/Executors/ExecutionThreadContext.cpp:49: DB::executeJob(DB::ExecutingGraph::Node*, DB::ReadProgressCallback*)
21. src/Processors/Executors/ExecutionThreadContext.cpp:98: DB::ExecutionThreadContext::executeTask() @ 0x000000003460bdf6
22. src/Processors/Executors/PipelineExecutor.cpp:289: DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x00000000345f81fc
23. src/Processors/Executors/PipelineExecutor.cpp:163: DB::PipelineExecutor::executeStep(std::atomic<bool>*) @ 0x00000000345f7963
24. src/Processors/Executors/PullingPipelineExecutor.cpp:54: DB::PullingPipelineExecutor::pull(DB::Chunk&) @ 0x0000000034612934
25. src/Storages/StorageFile.cpp:1474: DB::StorageFileSource::generate() @ 0x00000000332c1ea0
26. src/Processors/ISource.cpp:139: DB::ISource::tryGenerate() @ 0x00000000345e0156
27. src/Processors/ISource.cpp:108: DB::ISource::work() @ 0x00000000345df964
28.0. inlined from src/Processors/Executors/ExecutionThreadContext.cpp:49: DB::executeJob(DB::ExecutingGraph::Node*, DB::ReadProgressCallback*)
28. src/Processors/Executors/ExecutionThreadContext.cpp:98: DB::ExecutionThreadContext::executeTask() @ 0x000000003460bdf6
29. src/Processors/Executors/PipelineExecutor.cpp:289: DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x00000000345f81fc
30.0. inlined from src/Processors/Executors/PipelineExecutor.cpp:255: DB::PipelineExecutor::executeSingleThread(unsigned long)
30. src/Processors/Executors/PipelineExecutor.cpp:441: DB::PipelineExecutor::executeImpl(unsigned long, bool) @ 0x00000000345f7365
31. src/Processors/Executors/PipelineExecutor.cpp:126: DB::PipelineExecutor::execute(unsigned long, bool) @ 0x00000000345f6faa
32.0. inlined from src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:83: DB::threadFunction(DB::PullingAsyncPipelineExecutor::Data&, std::shared_ptr<DB::ThreadGroup>, unsigned long, bool)
32.1. inlined from src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:109: operator()
32.2. inlined from contrib/llvm-project/libcxx/include/__functional/invoke.h:394: ?
32.3. inlined from contrib/llvm-project/libcxx/include/tuple:1789: _ZNSt3__118__apply_tuple_implB6v15007IRZN2DB28PullingAsyncPipelineExecutor4pullERNS1_5ChunkEmE3$_0RNS_5tupleIJEEETpTnmJEEEDcOT_OT0_NS_15__tuple_indicesIJXspT1_EEEE
32.4. inlined from contrib/llvm-project/libcxx/include/tuple:1798: decltype(auto) std::apply[abi:v15007]<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::tuple<>&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::tuple<>&)
32.5. inlined from src/Common/ThreadPool.h:311: operator()
32.6. inlined from contrib/llvm-project/libcxx/include/__functional/invoke.h:394: ?
32.7. inlined from contrib/llvm-project/libcxx/include/__functional/invoke.h:479: ?
32.8. inlined from contrib/llvm-project/libcxx/include/__functional/function.h:235: ?
32. contrib/llvm-project/libcxx/include/__functional/function.h:716: ? @ 0x0000000034610edb
33.0. inlined from contrib/llvm-project/libcxx/include/__functional/function.h:848: ?
33.1. inlined from contrib/llvm-project/libcxx/include/__functional/function.h:1197: ?
33. src/Common/ThreadPool.cpp:785: ThreadPoolImpl<std::thread>::ThreadFromThreadPool::worker() @ 0x00000000254c3701
34.0. inlined from contrib/llvm-project/libcxx/include/__functional/invoke.h:359: ?
34.1. inlined from contrib/llvm-project/libcxx/include/thread:284: void std::__thread_execute[abi:v15007]<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*, 2ul>(std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*>&, std::__tuple_indices<2ul>)
34. contrib/llvm-project/libcxx/include/thread:295: void* std::__thread_proxy[abi:v15007]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*>>(void*) @ 0x00000000254ca6aa
35. ? @ 0x000075d0f52a1e2e
36. ? @ 0x000075d0f5333a4c
```