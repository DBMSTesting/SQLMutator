ID: 67419
Title: Presence of AggregationFunction column triggers incorrect evaluation of less-than condition on a distinct column
Description:
**Company or project name**

Upollo Pty Ltd

**Describe what's wrong**

The presence of an AggregationFunction in column A of a CTE constructed with UNION ALL causes a less-than condition on column B to be incorrectly evaluated. In the examples below the condition is placed in the WHERE clause, but the same issue has been observed if it is evaluated as part of the SELECT.

This returns an incorrect result of two rows, despite both having last_seen dates after 2020-01-01:
https://fiddle.clickhouse.com/7add21a5-e748-4376-85c8-487280caa23c

Simply removing column A with the AggregationFunction allows the correct result to be produced (no rows returned), despite no changes to the last_seen column or condition:
https://fiddle.clickhouse.com/d34827a7-4513-41c2-b8b7-ad2928540509

**Does it reproduce on the most recent release?**

Yes (24.6.2.17). Originally observed in 24.5.1.22859.

**Enable crash reporting**

n/a, not a crash

**How to reproduce**

Fully self contained example which can be run on fiddle.clickhouse.com with version 24.6.2.17:

```
with activity as (
  select
    groupUniqArrayState(toDate('2025-01-01 01:00:00')) as dates_seen,
    toDateTime('2025-01-01 01:00:00') as last_seen
  union all
  select
    groupUniqArrayState(toDate('2023-11-11 11:11:11')) as dates_seen,
    toDateTime('2023-11-11 11:11:11') as last_seen
)
select last_seen from activity
where last_seen < toDateTime('2020-01-01 00:00:00')
```

**Expected behavior**

No rows should be returned, because neither last_seen date in the CTE is before '2020-01-01 00:00:00'. I.e. the result is expected to be the same as:

```
with activity as (
  select toDateTime('2025-01-01 01:00:00') as last_seen
  union all
  select toDateTime('2023-11-11 11:11:11') as last_seen
)
select last_seen from activity
where last_seen < toDateTime('2020-01-01 00:00:00')
```

**Additional context**

This construct of providing data in CTEs is useful in unit testing.