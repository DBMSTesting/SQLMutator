ID: 71574
Title: Logical error after Dynamic cast
Description:
**Describe the bug**
After converting a LowCardinality column to Dynamic, a subsequent export query into a file gives a logical error.

**How to reproduce**
Run:
```sql
SET allow_suspicious_low_cardinality_types = 1, allow_experimental_dynamic_type = 1;
CREATE TABLE t0 (c0 LowCardinality(Nullable(Int))) ENGINE = Memory();
INSERT INTO TABLE t0 (c0) VALUES (NULL);
SELECT CAST(t0.c0 AS Dynamic) FROM t0;
INSERT INTO TABLE FUNCTION file('<path to file>', 'CSV', 'c0 LowCardinality(Nullable(Int))') SELECT c0 FROM t0;
```
Stack trace:
```
<Fatal> : Logical error: 'Bad cast from type DB::ColumnVector<int> to DB::ColumnNullable'.
<Fatal> : Stack trace (when copying this message, always include the lines below):

0. std::exception::capture() @ 0x0000000019428f0b
1. contrib/llvm-project/libcxx/include/exception:114: Poco::Exception::Exception(String const&, int) @ 0x0000000038ca9dc5
2. src/Common/Exception.cpp:109: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x00000000255838ab
3. DB::Exception::Exception(PreformattedMessage&&, int) @ 0x00000000192a7296
4. DB::Exception::Exception<String, String>(int, FormatStringHelperImpl<std::type_identity<String>::type, std::type_identity<String>::type>, String&&, String&&) @ 0x00000000192a99af
5. DB::ColumnNullable const& assert_cast<DB::ColumnNullable const&, DB::IColumn const&>(DB::IColumn const&) @ 0x000000001a5c816b
6. src/DataTypes/Serializations/SerializationNullable.cpp:647: DB::SerializationNullable::serializeTextCSV(DB::IColumn const&, unsigned long, DB::WriteBuffer&, DB::FormatSettings const&) const @ 0x0000000030bd6bdb
7. src/DataTypes/Serializations/SerializationLowCardinality.cpp:808: void DB::SerializationLowCardinality::serializeImpl<DB::WriteBuffer&, DB::FormatSettings const&, DB::WriteBuffer&, DB::FormatSettings const&>(DB::IColumn const&, unsigned long, void (DB::ISerialization::*)(DB::IColumn const&, unsigned long, DB::WriteBuffer&, DB::FormatSettings const&) const, DB::WriteBuffer&, DB::FormatSettings const&) const @ 0x0000000030bbd606
8. src/DataTypes/Serializations/SerializationLowCardinality.cpp:748: DB::SerializationLowCardinality::serializeTextCSV(DB::IColumn const&, unsigned long, DB::WriteBuffer&, DB::FormatSettings const&) const @ 0x0000000030bb8cb1
9. src/Processors/Formats/IRowOutputFormat.cpp:78: DB::IRowOutputFormat::write(std::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn>>> const&, unsigned long) @ 0x00000000353ba3e8
10. src/Processors/Formats/IRowOutputFormat.cpp:31: DB::IRowOutputFormat::consume(DB::Chunk) @ 0x00000000353b9aba
11. src/Processors/Formats/Impl/ParallelFormattingOutputFormat.cpp:235: DB::ParallelFormattingOutputFormat::formatterThreadFunction(unsigned long, unsigned long, std::shared_ptr<DB::ThreadGroup> const&) @ 0x000000003571f1ff
12. contrib/llvm-project/libcxx/include/__functional/function.h:848: ? @ 0x00000000256bd07c
13. contrib/llvm-project/libcxx/include/__functional/invoke.h:359: ? @ 0x00000000256c5134
14. contrib/llvm-project/libcxx/include/__functional/function.h:848: ? @ 0x00000000256ba7cf
15. contrib/llvm-project/libcxx/include/__functional/invoke.h:359: ? @ 0x00000000256c19ca
16. ? @ 0x00007ffff7ca1e2e
17. ? @ 0x00007ffff7d33a4c
```