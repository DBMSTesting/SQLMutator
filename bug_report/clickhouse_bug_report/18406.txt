ID: 18406
Title: Incomplete query results
Description:
(you don't have to strictly follow this form)

**Describe the bug**
A clear and concise description of what works not as it is supposed to.
Hi, first of all, thank you for all your work!

I have a weird issue that seems to be correlated to the load of the database. Indeed, sometimes the result of the query is not complete, without having any timeout error or anything on the errors logs. 

**How to reproduce**
* Which ClickHouse server version to use
I currently use the version 20.11.4 via Docker. I use [this](https://github.com/mymarilyn/clickhouse-driver) Python Clickhouse client (It may be an issue to the client as well). 
* Which interface to use, if matters
I make all the query via localhost
* Non-default settings, if any
Because there is a lot of data in the tables, I changed the memory limit per query : `          <max_memory_usage>275000000000</max_memory_usage>`

Also, for each request I change the timeouts : 
```
self.client = Client(
    database_host,
    connect_timeout=6000,
    send_receive_timeout=100000,
    sync_request_timeout=50,
)

self.client.execute(
                    query,
                    settings={
                        "max_block_size": 100000,
                        "connect_timeout": 1000,
                        "send_timeout": 6000,
                        "receive_timeout": 100000,
                    },
                )
```
* `CREATE TABLE` statements for all tables involved
```

┌─statement──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐
│ CREATE TABLE mytable
(
    `a` UInt32,
    `b` UInt32,
    `c` UInt32,
    `d` UInt32,
    `e` UInt8,
    `f` UInt16,
    `g` UInt16,
    `h` UInt8,
    `i` UInt8,
    `j` UInt8,
    `k` UInt8,
    `l` Float64,
    `m` UInt8,
    `n` UInt16,
    `o` UInt32,
    `p` UInt16
)
ENGINE = MergeTree()
ORDER BY (a, b, c, h, f, g, p)
SETTINGS index_granularity = 8192 │
└────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘
```
* Sample data for all these tables, use [clickhouse-obfuscator](https://github.com/ClickHouse/ClickHouse/blob/master/programs/obfuscator/Obfuscator.cpp#L42-L80) if necessary
* Queries to run that lead to unexpected result
I had this issue with multiple queries, but this one is the simplest : 
```
"SELECT b, "
"groupUniqArray(d) "
"FROM mytable "
"WHERE d != c AND j = 1 "
"AND b IN (SELECT b FROM othertable)"
"GROUP BY b",
```

**Expected behavior**
A clear and concise description of what you expected to happen.

So I should get always the same number of "b" (in my case 100k) but sometimes, I don't have the full number of "b", instead I have a bit less. If I do exactly the same query back to back, I may have the good number of "b". 
I was wondering if the issue was in relation with the "IN" clause. 

**Error message and/or stacktrace**
If applicable, add screenshots to help explain your problem.

**Additional context**
Add any other context about the problem here.

Please tell me if you need any further information.
Best. 