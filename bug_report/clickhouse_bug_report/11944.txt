ID: 11944
Title: A hung DROP TABLE query for engine Kafka table
Description:
Processing of DROP TABLE query for `ENGINE = Kafka` table stalled somewhere inside librdkafka stack.

**How to reproduce**
* CH version 20.3.10.75-lts
* `CREATE TABLE prod.event_stream ('d' String, 'timestamp' String, 'current_state' String, 'previous_state' String) ENGINE = Kafka SETTINGS kafka_broker_list = 'kafka-01-k:9092,kafka-01-m:9092,kafka-01-s:9092', kafka_topic_list = 'change-event-json', kafka_group_name = 'clickhouse_change-event-stream2', kafka_format = 'JSONEachRow', kafka_row_delimiter = '\n', kafka_skip_broken_messages = 1`
* Queries to run that lead to unexpected result:
`/* ddl_entry=query-0000010279 */ DROP TABLE prod.change_event_stream`

**Expected behavior**
Query terminates successfully without stalling.

**Error message and/or stacktrace**
```
Thread 491 (Thread 0x7f07e0e58700 (LWP 37068)):
#0  0x00007f0a326529f3 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib/x86_64-linux-gnu/libpthread.so.0
#1  0x00000000103ee05d in cnd_wait (cond=<optimized out>, mtx=<optimized out>) at ../contrib/librdkafka/src/tinycthread.c:442
#2  0x00000000103ee565 in cnd_timedwait_abs (cnd=cnd@entry=0x7f09f2a1d768, mtx=mtx@entry=0x7f09f2a1d740, tspec=tspec@entry=0x7f07e0e50400) at ../contrib/librdkafka/src/tinycthread_extra.c:99
#3  0x00000000103bcae9 in rd_kafka_q_pop_serve (rkq=rkq@entry=0x7f09f2a1d740, timeout_us=timeout_us@entry=-1, version=version@entry=0, cb_type=cb_type@entry=RD_KAFKA_Q_CB_RETURN, callback=callback@entry=0x0, opaque=opaque@entry=0x0) at ../contrib/librdkafka/src/rdkafka_queue.c:390
#4  0x00000000103bcbd4 in rd_kafka_q_pop (rkq=rkq@entry=0x7f09f2a1d740, timeout_us=timeout_us@entry=-1, version=version@entry=0) at ../contrib/librdkafka/src/rdkafka_queue.c:416
#5  0x0000000010327e68 in rd_kafka_consumer_close (rk=0x7f09948c5000) at ../contrib/librdkafka/src/rdkafka.c:2907
#6  0x000000001031dbf9 in cppkafka::Consumer::close (this=0x7f0994839c20) at ../contrib/cppkafka/src/consumer.cpp:293
#7  cppkafka::Consumer::~Consumer (this=0x7f0994839c20, __in_chrg=<optimized out>) at ../contrib/cppkafka/src/consumer.cpp:82
#8  0x000000000d86998a in std::__1::__shared_count::__release_shared (this=0x7f0994839c00) at ../contrib/libcxx/include/memory:3440
#9  std::__1::__shared_weak_count::__release_shared (this=0x7f0994839c00) at ../contrib/libcxx/include/memory:3482
#10 std::__1::shared_ptr<cppkafka::Consumer>::~shared_ptr (this=0x7f099d022660, __in_chrg=<optimized out>) at ../contrib/libcxx/include/memory:4207
#11 DB::ReadBufferFromKafkaConsumer::~ReadBufferFromKafkaConsumer (this=0x7f099d022618, __in_chrg=<optimized out>) at ../src/Storages/Kafka/ReadBufferFromKafkaConsumer.cpp:78
#12 0x000000000d84adf1 in std::__1::__shared_count::__release_shared (this=0x7f099d022600) at ../contrib/libcxx/include/memory:3440
#13 std::__1::__shared_weak_count::__release_shared (this=0x7f099d022600) at ../contrib/libcxx/include/memory:3482
#14 std::__1::shared_ptr<DB::ReadBufferFromKafkaConsumer>::~shared_ptr (this=<synthetic pointer>, __in_chrg=<optimized out>) at ../contrib/libcxx/include/memory:4207
#15 DB::StorageKafka::shutdown (this=0x7f0994916800) at ../src/Storages/Kafka/StorageKafka.cpp:181
#16 0x000000000d0925d5 in DB::InterpreterDropQuery::executeToTable (this=this@entry=0x7f09e0102000, database_name_=..., table_name=..., kind=<optimized out>, if_exists=<optimized out>, is_temporary=false, no_ddl_lock=false) at ../contrib/libcxx/include/string:1484
#17 0x000000000d095c02 in DB::InterpreterDropQuery::execute (this=0x7f09e0102000) at ../src/Interpreters/InterpreterDropQuery.cpp:41
#18 0x000000000d558888 in DB::executeQueryImpl (begin=begin@entry=0x7f09948f9180 "/* ddl_entry=query-0000010279 */ DROP TABLE prod_stream.booking_change_event_stream", end=end@entry=0x7f09948f91d3 "", context=..., internal=internal@entry=false, stage=stage@entry=DB::QueryProcessingStage::Complete, has_query_tail=false, istr=0x7f07e0e52560, allow_processors=true) at ../src/Interpreters/executeQuery.cpp:328
#19 0x000000000d55b809 in DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, DB::Context&, std::__1::function<void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>) (istr=..., ostr=..., allow_into_outfile=allow_into_outfile@entry=false, context=..., set_result_details=...) at ../src/Interpreters/executeQuery.cpp:634
#20 0x000000000d009fb7 in DB::DDLWorker::tryExecuteQuery (this=this@entry=0x7f081c187c80, query=..., task=..., status=...) at ../contrib/libcxx/include/memory:2582
#21 0x000000000d011818 in DB::DDLWorker::processTask (this=this@entry=0x7f081c187c80, task=..., zookeeper=...) at ../src/Interpreters/DDLWorker.cpp:653
#22 0x000000000d0125dc in DB::DDLWorker::processTasks (this=this@entry=0x7f081c187c80) at ../src/Interpreters/DDLWorker.cpp:421
#23 0x000000000d013944 in DB::DDLWorker::runMainThread (this=0x7f081c187c80) at ../src/Interpreters/DDLWorker.cpp:995
#24 0x000000000d01b555 in std::__1::__invoke_constexpr<void (DB::DDLWorker::* const&)(), DB::DDLWorker* const&, , void>(void (DB::DDLWorker::* const&)(), DB::DDLWorker* const&) (__a0=@0x7f09949b0868: 0x7f081c187c80, __f=@0x7f09949b0858: (void (DB::DDLWorker::*)(DB::DDLWorker * const)) 0xd0135e0 <DB::DDLWorker::runMainThread()>) at ../contrib/libcxx/include/type_traits:3466
#25 std::__1::__apply_tuple_impl<void (DB::DDLWorker::* const&)(), std::__1::tuple<DB::DDLWorker*> const&, 0ul> (__t=..., __f=@0x7f09949b0858: (void (DB::DDLWorker::*)(DB::DDLWorker * const)) 0xd0135e0 <DB::DDLWorker::runMainThread()>) at ../contrib/libcxx/include/tuple:1415
#26 std::__1::apply<void (DB::DDLWorker::* const&)(), std::__1::tuple<DB::DDLWorker*> const&> (__t=..., __f=@0x7f09949b0858: (void (DB::DDLWorker::*)(DB::DDLWorker * const)) 0xd0135e0 <DB::DDLWorker::runMainThread()>) at ../contrib/libcxx/include/tuple:1424
#27 ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::DDLWorker::*)(), DB::DDLWorker*>(void (DB::DDLWorker::*&&)(), DB::DDLWorker*&&)::{lambda()#1}::operator()() const (this=0x7f09949b0848) at ../src/Common/ThreadPool.h:160
#28 0x0000000008f667eb in std::__1::__function::__value_func<void ()>::operator()() const (this=0x7f07e0e53520) at ../contrib/libcxx/include/functional:2471
#29 std::__1::function<void ()>::operator()() const (this=0x7f07e0e53520) at ../contrib/libcxx/include/functional:2473
#30 ThreadPoolImpl<std::__1::thread>::worker (this=0x1110b940 <GlobalThreadPool::instance()::ret>, thread_it=...) at ../src/Common/ThreadPool.cpp:224
#31 0x0000000008f64c33 in void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#3}::operator()() const (this=<optimized out>, this=<optimized out>) at ../src/Common/ThreadPool.cpp:105
#32 std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#3}>(void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#3}&&, (void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#3}&&)...) (__f=...) at ../contrib/libcxx/include/type_traits:3519
#33 std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#3}>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#3}>&, std::__1::__tuple_indices<>) (__t=...) at ../contrib/libcxx/include/thread:273
#34 std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#3}> >(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#3}>) (__vp=0x7f09c6418be0) at ../contrib/libcxx/include/thread:284
#35 0x00007f0a3264c6db in start_thread () from /lib/x86_64-linux-gnu/libpthread.so.0
#36 0x00007f0a32f2b88f in clone () from /lib/x86_64-linux-gnu/libc.so.6
```

Note the `timeout_us=-1` starting from frame 4.