ID: 7673
Title: toDate(nullif('', '')), toDateTime(nullif('', '')) throws Parsing error
Description:
**Describe the bug or unexpected behaviour**

When casting `nullif('', '')` to `Date`/`DateTime` types using `toDate()`/`toDateTime()` ClickHouse returns exceptions:

`SQL Error [38]: ClickHouse exception, code: 38, host: *, port: *; Code: 38, e.displayText() = DB::Exception: Cannot parse date: value is too short: Cannot parse Date from String (version 19.15.3.6)`

`SQL Error [41]: ClickHouse exception, code: 41, host: *, port: *; Code: 41, e.displayText() = DB::Exception: Cannot parse datetime: Cannot parse DateTime from String (version 19.15.3.6)`

**How to reproduce**

Some expected results:

```sql
select
    toDateTime(NULL)


toDateTime(NULL)
----------------
[NULL]          
```

```sql    
select
    toDateTime('')


SQL Error [41]: ClickHouse exception, code: 41, host: *, port: *; Code: 41, e.displayText() = DB::Exception: Cannot parse datetime: Cannot parse DateTime from String (version 19.15.3.6)
```

```sql    
select
    nullif('', '')


nullif('', '')
--------------
[NULL]        
```
    
```sql    
select
    toDateTime(nullif(1, 1))


toDateTime(nullif(1, 1))
------------------------
                  [NULL]
```


```sql        
select
    toDateTimeOrNull(nullif('', ''))


toDateTimeOrNull(nullif('', ''))
--------------------------------
                          [NULL]
```

Unexpected behavior:

```sql    
select
    toDateTime(nullif('', ''))


SQL Error [41]: ClickHouse exception, code: 41, host: *, port: *; Code: 41, e.displayText() = DB::Exception: Cannot parse datetime: Cannot parse DateTime from String (version 19.15.3.6)
```

```sql                          
select
    toDate(nullif('', ''))


SQL Error [38]: ClickHouse exception, code: 38, host: *, port: *; Code: 38, e.displayText() = DB::Exception: Cannot parse date: value is too short: Cannot parse Date from String (version 19.15.3.6)
```

**Expected behavior**

```sql        
select
    toDateTime(nullif('', ''))


toDateTime(nullif('', ''))
--------------------------------
                          [NULL]
```
