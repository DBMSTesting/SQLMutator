ID: 10162
Title: Code: 32, e.displayText() = DB::Exception: Attempt to read after eof
Description:
**Describe the bug**
Running queries like this will cause clickhouse to **restart**

```
SELECT countIf(level = 'AAA') AS `agg`
FROM default.`Distributed.table`
PREWHERE (_service = '_service') AND ((_ts >= 1586369299944) AND (_ts < 1586455699944)) AND (level != 'AAA')
SETTINGS max_threads = 1, max_execution_time = 30, timeout_overflow_mode = 'break'
```
In this query, `countIf` and `prewhere` filter the same field `level` with the same value `AAA`

**How to reproduce**
It only appears for querying on distributed table.  The same query on merge table works fine.

Some other observations, 
If `level` is filtered with different values, it works.
```
SELECT countIf(level = 'AAA') AS `agg`
FROM default.`Distributed.table`
PREWHERE (_service = '_service') AND ((_ts >= 1586369299944) AND (_ts < 1586455699944)) AND (level != 'BBB')
SETTINGS max_threads = 1, max_execution_time = 30, timeout_overflow_mode = 'break'
```

* Which ClickHouse server version to use

20.3.5.21



* Which interface to use, if matters
use default clickhouse-client

* Non-default settings, if any
* `CREATE TABLE` statements for all tables involved
* Sample data for all these tables, use [clickhouse-obfuscator](https://github.com/ClickHouse/ClickHouse/blob/master/programs/obfuscator/Obfuscator.cpp#L42-L80) if necessary
* Queries to run that lead to unexpected result

**Expected behavior**
first query and the second query should return the same result with a count of 0

**Error message and/or stacktrace**
```
[host] 2020.04.09 21:53:32.688224 [ 128 ] <Error> ThreadPool: Exception in ThreadPool(max_threads: 1, max_free_threads: 1, queue_size: 1, shutdown_on_exception: 1).: Code: 32, e.displayText() = DB::Exception: Attempt to read after eof: while receiving packet from host-dca8:25604: While executing SourceFromInputStream, Stack trace (when copying this message, always include the lines below):

0. /build/obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Exception.cpp:27: Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x1050f0d0 in /usr/lib/debug/usr/bin/clickhouse
1. /build/obj-x86_64-linux-gnu/../dbms/src/Common/Exception.cpp:29: DB::throwReadAfterEOF() @ 0x8f36caf in /usr/lib/debug/usr/bin/clickhouse
2. /build/obj-x86_64-linux-gnu/../dbms/src/IO/VarInt.h:133: DB::readVarUInt(unsigned long&, DB::ReadBuffer&) @ 0x901a2e6 in /usr/lib/debug/usr/bin/clickhouse
3. /build/obj-x86_64-linux-gnu/../dbms/src/Client/Connection.cpp:691: DB::Connection::receivePacket() @ 0xdb0c0f4 in /usr/lib/debug/usr/bin/clickhouse
4. /build/obj-x86_64-linux-gnu/../dbms/src/Client/MultiplexedConnections.cpp:251: DB::MultiplexedConnections::receivePacket() @ 0xdb20e5a in /usr/lib/debug/usr/bin/clickhouse
5. /build/obj-x86_64-linux-gnu/../dbms/src/DataStreams/RemoteBlockInputStream.cpp:244: DB::RemoteBlockInputStream::readImpl() @ 0xce64134 in /usr/lib/debug/usr/bin/clickhouse
6. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:1003: DB::IBlockInputStream::read() @ 0xce2f36f in /usr/lib/debug/usr/bin/clickhouse
7. /build/obj-x86_64-linux-gnu/../dbms/src/Processors/Sources/SourceFromInputStream.cpp:128: DB::SourceFromInputStream::generate() @ 0xdec9884 in /usr/lib/debug/usr/bin/clickhouse
8. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:1003: DB::ISource::work() @ 0xdb79f5b in /usr/lib/debug/usr/bin/clickhouse
9. /build/obj-x86_64-linux-gnu/../dbms/src/Processors/Sources/SourceFromInputStream.cpp:79: DB::SourceFromInputStream::work() @ 0xdec9765 in /usr/lib/debug/usr/bin/clickhouse
10. /build/obj-x86_64-linux-gnu/../dbms/src/Processors/Executors/PipelineExecutor.cpp:167: std::__1::__function::__func<DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::'lambda'(), std::__1::allocator<DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::'lambda'()>, void ()>::operator()() @ 0xdbb2881 in /usr/lib/debug/usr/bin/clickhouse
11. /build/obj-x86_64-linux-gnu/../dbms/src/Processors/Executors/PipelineExecutor.cpp:606: DB::PipelineExecutor::executeSingleThread(unsigned long, unsigned long) @ 0xdbb6b2d in /usr/lib/debug/usr/bin/clickhouse
12. /build/obj-x86_64-linux-gnu/../dbms/src/Processors/Executors/PipelineExecutor.cpp:760: ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::'lambda0'()>(DB::PipelineExecutor::executeImpl(unsigned long)::'lambda0'()&&)::'lambda'()::operator()() const @ 0xdbb7522 in /usr/lib/debug/usr/bin/clickhouse
13. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/atomic:856: ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x8f567eb in /usr/lib/debug/usr/bin/clickhouse
14. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2615: void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()> >(void*) @ 0x8f54c33 in /usr/lib/debug/usr/bin/clickhouse
15. start_thread @ 0x8064 in /lib/x86_64-linux-gnu/libpthread-2.19.so
16. clone @ 0xe862d in /lib/x86_64-linux-gnu/libc-2.19.so
 (version 20.3.5.21 (official build))
[host-phx4] 2020.04.09 21:53:32.739552 [ 46 ] {axxx7-50eb-41df-85a7-dxxx933} <Error> executeQuery: Code: 32, e.displayText() = DB::Exception: Attempt to read after eof: while receiving packet from host-dca8:25604: While executing SourceFromInputStream (version 20.3.5.21 (official build)) (from 10.82.212.100:36612) (in query: SELECT countIf(level = 'DEBUG') AS `agg` FROM default.`DistributedTable` PREWHERE (_service = 'serviceA') AND ((_ts >= 1586369299944) AND (_ts < 1586455699944)) AND (level != 'DEBUG') SETTINGS max_threads = 1, max_execution_time = 30, timeout_overflow_mode = 'break', skip_unavailable_shards = 1), Stack trace (when copying this message, always include the lines below):

0. /build/obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Exception.cpp:27: Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x1050f0d0 in /usr/lib/debug/usr/bin/clickhouse
1. /build/obj-x86_64-linux-gnu/../dbms/src/Common/Exception.cpp:29: DB::throwReadAfterEOF() @ 0x8f36caf in /usr/lib/debug/usr/bin/clickhouse
2. /build/obj-x86_64-linux-gnu/../dbms/src/IO/VarInt.h:133: DB::readVarUInt(unsigned long&, DB::ReadBuffer&) @ 0x901a2e6 in /usr/lib/debug/usr/bin/clickhouse
3. /build/obj-x86_64-linux-gnu/../dbms/src/Client/Connection.cpp:691: DB::Connection::receivePacket() @ 0xdb0c0f4 in /usr/lib/debug/usr/bin/clickhouse
4. /build/obj-x86_64-linux-gnu/../dbms/src/Client/MultiplexedConnections.cpp:251: DB::MultiplexedConnections::receivePacket() @ 0xdb20e5a in /usr/lib/debug/usr/bin/clickhouse
5. /build/obj-x86_64-linux-gnu/../dbms/src/DataStreams/RemoteBlockInputStream.cpp:244: DB::RemoteBlockInputStream::readImpl() @ 0xce64134 in /usr/lib/debug/usr/bin/clickhouse
6. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:1003: DB::IBlockInputStream::read() @ 0xce2f36f in /usr/lib/debug/usr/bin/clickhouse
7. /build/obj-x86_64-linux-gnu/../dbms/src/Processors/Sources/SourceFromInputStream.cpp:128: DB::SourceFromInputStream::generate() @ 0xdec9884 in /usr/lib/debug/usr/bin/clickhouse
8. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:1003: DB::ISource::work() @ 0xdb79f5b in /usr/lib/debug/usr/bin/clickhouse
9. /build/obj-x86_64-linux-gnu/../dbms/src/Processors/Sources/SourceFromInputStream.cpp:79: DB::SourceFromInputStream::work() @ 0xdec9765 in /usr/lib/debug/usr/bin/clickhouse
10. /build/obj-x86_64-linux-gnu/../dbms/src/Processors/Executors/PipelineExecutor.cpp:167: std::__1::__function::__func<DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::'lambda'(), std::__1::allocator<DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::'lambda'()>, void ()>::operator()() @ 0xdbb2881 in /usr/lib/debug/usr/bin/clickhouse
11. /build/obj-x86_64-linux-gnu/../dbms/src/Processors/Executors/PipelineExecutor.cpp:606: DB::PipelineExecutor::executeSingleThread(unsigned long, unsigned long) @ 0xdbb6b2d in /usr/lib/debug/usr/bin/clickhouse
12. /build/obj-x86_64-linux-gnu/../dbms/src/Processors/Executors/PipelineExecutor.cpp:760: ThreadFromGlobalPool::ThreadFromGlobalPool<DB::PipelineExecutor::executeImpl(unsigned long)::'lambda0'()>(DB::PipelineExecutor::executeImpl(unsigned long)::'lambda0'()&&)::'lambda'()::operator()() const @ 0xdbb7522 in /usr/lib/debug/usr/bin/clickhouse
13. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/atomic:856: ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x8f567eb in /usr/lib/debug/usr/bin/clickhouse
14. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2615: void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()> >(void*) @ 0x8f54c33 in /usr/lib/debug/usr/bin/clickhouse
15. start_thread @ 0x8064 in /lib/x86_64-linux-gnu/libpthread-2.19.so
16. clone @ 0xe862d in /lib/x86_64-linux-gnu/libc-2.19.so

Received exception from server (version 20.3.5):
Code: 32. DB::Exception: Received from host-phx4:25604. DB::Exception: Attempt to read after eof: while receiving packet from host-dca8:25604: While executing SourceFromInputStream.

0 rows in set. Elapsed: 18.393 sec. Processed xxx million rows, xxx GB (xxx million rows/s., xxx MB/s.)
```
**Additional context**
Add any other context about the problem here.

tried `enable_scalar_subquery_optimization` does not help.