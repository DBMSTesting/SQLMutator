ID: 12340
Title: Bug with DROP ROW POLICY statement - multiple polices from multiple tables exception
Description:
**Describe the bug**
Using the `DROP ROW POLICY` statement results in an exception when attempting to drop multiple policies from multiple tables

**How to reproduce**
ClickHouse server version 20.5.2 revision 54435.
`CREATE TABLE default.foo (x UInt64, y String) Engine=Memory`
`CREATE TABLE default.foo2 (x UInt64, y String) Engine=Memory`
`CREATE ROW POLICY policy3 ON default.foo`
`CREATE ROW POLICY policy4 ON default.foo2`
`DROP ROW POLICY policy3, policy4 ON default.foo, default.foo2`

**Expected behavior**
The row policies are dropped from the corresponding tables.

**Error message and/or stacktrace**
```Jul 09,2020 15:09:08         
⟥  Scenario I drop multiple row policies on multiple tables, flags:TE
                                  Requirements
                                    RQ.SRS-006.RBAC.RowPolicy.Drop
                                      version 1.0
                                    RQ.SRS-006.RBAC.RowPolicy.Drop.On
                                      version 1.0
Jul 09,2020 15:09:08           ⟥  Given I have multiple row policies on multiple tables
Jul 09,2020 15:09:08             ⟥  By executing command
                                      echo -e "CREATE ROW POLICY policy3 ON default.foo" | clickhouse client -n
                12ms                  [clickhouse1] bash# echo -e "CREATE ROW POLICY policy3 ON default.foo" | clickhouse client -n
                82ms                  [clickhouse1] bash# echo $?
                83ms                  [clickhouse1] 0
                85ms                  [clickhouse1] bash#
                85ms             ⟥⟤ OK executing command, /rbac/syntax/drop row policy/I drop multiple row policies on multiple tables/I have multiple row policies on multiple tables/executing command
Jul 09,2020 15:09:08             ⟥  Then check if output has exception
                 1ms             ⟥⟤ OK check if output has exception, /rbac/syntax/drop row policy/I drop multiple row policies on multiple tables/I have multiple row policies on multiple tables/check if output has exception
Jul 09,2020 15:09:08             ⟥  By executing command
                                      echo -e "CREATE ROW POLICY policy4 ON default.foo2" | clickhouse client -n
                 7ms                  [clickhouse1] bash# echo -e "CREATE ROW POLICY policy4 ON default.foo2" | clickhouse client -n
                89ms                  [clickhouse1] bash# echo $?
                90ms                  [clickhouse1] 0
                92ms                  [clickhouse1] bash#
                92ms             ⟥⟤ OK executing command, /rbac/syntax/drop row policy/I drop multiple row policies on multiple tables/I have multiple row policies on multiple tables/executing command
Jul 09,2020 15:09:08             ⟥  Then check if output has exception
                 1ms             ⟥⟤ OK check if output has exception, /rbac/syntax/drop row policy/I drop multiple row policies on multiple tables/I have multiple row policies on multiple tables/check if output has exception
               186ms           ⟥⟤ OK I have multiple row policies on multiple tables, /rbac/syntax/drop row policy/I drop multiple row policies on multiple tables/I have multiple row policies on multiple tables
Jul 09,2020 15:09:08           ⟥  When I drop the row policies from the tables
Jul 09,2020 15:09:08             ⟥  By executing command
                                      echo -e "DROP ROW POLICY policy3, policy4 ON default.foo, default.foo2" | clickhouse client -n
                16ms                  [clickhouse1] bash# echo -e "DROP ROW POLICY policy3, policy4 ON default.foo, default.foo2" | clickhouse client -n
                87ms                  [clickhouse1] Code: 62. DB::Exception: Syntax error: failed at position 48: , default.foo2
                87ms                  [clickhouse1] . Expected one of: ON, token
                88ms                  [clickhouse1]
               119ms                  [clickhouse1] bash# echo $?
               119ms                  [clickhouse1] 62
               120ms                  [clickhouse1] bash#
