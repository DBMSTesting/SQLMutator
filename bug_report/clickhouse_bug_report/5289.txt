ID: 5289
Title: Enum8 -> LowCardinality(String) column type modification SegFault
Description:
**How to reproduce and description**
While trying to convert Enum8 column with ~30 distinct small String values to LowCardinality(String) with statement:
`alter table impressions modify column node_name LowCardinality(String)`

table contains around 3.5 billion rows. Also this bug reproduces not only with Enum8 -> LowCardinality(String), but also with String -> LowCardinality(String).

clickhouse version:
`ClickHouse client version 19.4.3.11.
Connecting to localhost:9000 as user default.
Connected to ClickHouse server version 19.4.3 revision 54416.`

os version:
`CentOS Linux release 7.5.1804 (Core) `

stacktrace in clickhouse-server.err.log:
```
2019.05.15 19:37:45.804094 [ 234 ] {} <Error> BaseDaemon: ########################################
2019.05.15 19:37:45.804237 [ 234 ] {} <Error> BaseDaemon: (from thread 33) Received signal Segmentation fault (11).
2019.05.15 19:37:45.804273 [ 234 ] {} <Error> BaseDaemon: Address: NULL pointer.
2019.05.15 19:37:45.804293 [ 234 ] {} <Error> BaseDaemon: Access: read.
2019.05.15 19:37:45.804310 [ 234 ] {} <Error> BaseDaemon: Address not mapped to object.
2019.05.15 19:37:45.858422 [ 234 ] {} <Error> BaseDaemon: 0. clickhouse-server() [0x54ec03b]
2019.05.15 19:37:45.858558 [ 234 ] {} <Error> BaseDaemon: 1. clickhouse-server(DB::DataTypeLowCardinality::serializeBinaryBulkStateSuffix(DB::IDataType::SerializeBinaryBulkSettings&, std::shared_ptr<DB::IDataType::SerializeBinaryBulkState>&) const+0x1f) [0x54eddcf]
2019.05.15 19:37:45.858589 [ 234 ] {} <Error> BaseDaemon: 2. clickhouse-server(DB::MergedColumnOnlyOutputStream::writeSuffixAndGetChecksums()+0x1b6) [0x58ec396]
2019.05.15 19:37:45.858615 [ 234 ] {} <Error> BaseDaemon: 3. clickhouse-server(DB::MergeTreeData::alterDataPart(std::shared_ptr<DB::MergeTreeDataPart const> const&, DB::NamesAndTypesList const&, std::vector<std::shared_ptr<DB::ASTIndexDeclaration>, std::allocator<std::shared_ptr<DB::ASTIndexDeclaration> > > const&, bool)+0x973) [0x587a533]
2019.05.15 19:37:45.858639 [ 234 ] {} <Error> BaseDaemon: 4. clickhouse-server(DB::StorageMergeTree::alter(DB::AlterCommands const&, std::string const&, std::string const&, DB::Context const&)+0x384) [0x57cb3b4]
2019.05.15 19:37:45.858659 [ 234 ] {} <Error> BaseDaemon: 5. clickhouse-server(DB::InterpreterAlterQuery::execute()+0x833) [0x5b78233]
2019.05.15 19:37:45.858689 [ 234 ] {} <Error> BaseDaemon: 6. clickhouse-server() [0x56f5fb6]
2019.05.15 19:37:45.858709 [ 234 ] {} <Error> BaseDaemon: 7. clickhouse-server(DB::executeQuery(std::string const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool)+0x61) [0x56f7eb1]
2019.05.15 19:37:45.858730 [ 234 ] {} <Error> BaseDaemon: 8. clickhouse-server(DB::TCPHandler::runImpl()+0x47c) [0x2e1676c]
2019.05.15 19:37:45.858754 [ 234 ] {} <Error> BaseDaemon: 9. clickhouse-server(DB::TCPHandler::run()+0x1c) [0x2e17b0c]
2019.05.15 19:37:45.858779 [ 234 ] {} <Error> BaseDaemon: 10. clickhouse-server(Poco::Net::TCPServerConnection::start()+0xf) [0x613634f]
2019.05.15 19:37:45.858795 [ 234 ] {} <Error> BaseDaemon: 11. clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x110) [0x61369b0]
2019.05.15 19:37:45.858812 [ 234 ] {} <Error> BaseDaemon: 12. clickhouse-server(Poco::PooledThread::run()+0x77) [0x621e117]
2019.05.15 19:37:45.858828 [ 234 ] {} <Error> BaseDaemon: 13. clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x38) [0x621b678]
2019.05.15 19:37:45.858843 [ 234 ] {} <Error> BaseDaemon: 14. clickhouse-server() [0x692ecef]
2019.05.15 19:37:45.858863 [ 234 ] {} <Error> BaseDaemon: 15. /lib64/libpthread.so.0(+0x7e25) [0x7f951025ce25]
```

clickhouse successfully restarts after this crash.
