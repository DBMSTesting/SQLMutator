ID: 44002
Title: mutation could modify previous part through hardlinks
Description:
Strange fail happend in CI. Test seems to be stable so far according to the stats. 
But after the changes from this PR https://github.com/ClickHouse/ClickHouse/pull/43760 could reveal the bug. Because clickhouse re-reads old parts after detach/attach.
- Stateless Tests (release, Wide Parts Enabled)
- 01780_column_sparse_alter
- https://s3.amazonaws.com/clickhouse-test-reports/43760/77d2db4e811ce43403544a8074b9ab2904e04298/stateless_tests__release__wide_parts_enabled_.html

<details>
<summary> Error log </summary>

```
2022.12.06 23:07:07.671890 [ 14129 ] {c9248060-b770-4bfd-9be2-f5131c90711a} <Error> test_3wsfqacq.t_sparse_alter (7255bf95-b5b8-4ddf-8adb-a904e2f424b8): while loading part all_1_1_0 on path store/725/7255bf95-b5b8-4ddf-8adb-a904e2f424b8/all_1_1_0: Code: 228. DB::Exception: /var/lib/clickhouse/store/725/7255bf95-b5b8-4ddf-8adb-a904e2f424b8/all_1_1_0/serialization.json has unexpected size: 154 instead of 219. (BAD_SIZE_OF_FILE_IN_DATA_PART), Stack trace (when copying this message, always include the lines below):

0. ./build_docker/../src/Common/Exception.cpp:77: DB::Exception::Exception(DB::Exception::MessageMasked const&, int, bool) @ 0xe5179fa in /usr/lib/debug/usr/bin/clickhouse.debug
1. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, int, bool) @ 0x7e886ad in /usr/lib/debug/usr/bin/clickhouse.debug
2. ./build_docker/../src/Storages/MergeTree/MergeTreeDataPartChecksum.cpp:0: DB::MergeTreeDataPartChecksum::checkSize(std::__1::shared_ptr<DB::IDisk> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const @ 0x14c426a2 in /usr/lib/debug/usr/bin/clickhouse.debug
3. ./build_docker/../contrib/llvm-project/libcxx/include/string:1499: DB::MergeTreeDataPartChecksums::checkSizes(std::__1::shared_ptr<DB::IDisk> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const @ 0x14c42c90 in /usr/lib/debug/usr/bin/clickhouse.debug
4. ./build_docker/../contrib/llvm-project/libcxx/include/string:1499: DB::DataPartStorageOnDisk::checkConsistency(DB::MergeTreeDataPartChecksums const&) const @ 0x14adf51e in /usr/lib/debug/usr/bin/clickhouse.debug
5. ./build_docker/../contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::IMergeTreeDataPart::checkConsistencyBase() const @ 0x14b5317f in /usr/lib/debug/usr/bin/clickhouse.debug
6. ./build_docker/../src/Storages/MergeTree/MergeTreeDataPartWide.cpp:187: DB::MergeTreeDataPartWide::checkConsistency(bool) const @ 0x14c54698 in /usr/lib/debug/usr/bin/clickhouse.debug
7. ./build_docker/../src/Storages/MergeTree/IMergeTreeDataPart.cpp:659: DB::IMergeTreeDataPart::loadColumnsChecksumsIndexes(bool, bool) @ 0x14b41935 in /usr/lib/debug/usr/bin/clickhouse.debug
8. ./build_docker/../contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:815: DB::MergeTreeData::loadDataPartsFromDisk(std::__1::vector<std::__1::shared_ptr<DB::IMergeTreeDataPart>, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart>>>&, std::__1::vector<std::__1::shared_ptr<DB::IMergeTreeDataPart>, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart>>>&, ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>&, unsigned long, std::__1::queue<std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>>>>, std::__1::deque<std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>>>>, std::__1::allocator<std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>>>>>>>&, bool, std::__1::shared_ptr<DB::MergeTreeSettings const> const&)::$_15::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::shared_ptr<DB::IDisk> const&) const @ 0x14c307ee in /usr/lib/debug/usr/bin/clickhouse.debug
9. ./build_docker/../src/Storages/MergeTree/MergeTreeData.cpp:1173: void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<DB::MergeTreeData::loadDataPartsFromDisk(std::__1::vector<std::__1::shared_ptr<DB::IMergeTreeDataPart>, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart>>>&, std::__1::vector<std::__1::shared_ptr<DB::IMergeTreeDataPart>, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart>>>&, ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>&, unsigned long, std::__1::queue<std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>>>>, std::__1::deque<std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>>>>, std::__1::allocator<std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::shared_ptr<DB::IDisk>>>>>>>&, bool, std::__1::shared_ptr<DB::MergeTreeSettings const> const&)::$_16, void ()>>(std::__1::__function::__policy_storage const*) @ 0x14c2f640 in /usr/lib/debug/usr/bin/clickhouse.debug
10. ./build_docker/../base/base/wide_integer_impl.h:774: ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__1::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0xe5d4756 in /usr/lib/debug/usr/bin/clickhouse.debug
11. ./build_docker/../src/Common/ThreadPool.cpp:0: void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::__1::function<void ()>, long, std::__1::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'(), void ()>>(std::__1::__function::__policy_storage const*) @ 0xe5d6f75 in /usr/lib/debug/usr/bin/clickhouse.debug
12. ./build_docker/../base/base/wide_integer_impl.h:774: ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xe5d0d76 in /usr/lib/debug/usr/bin/clickhouse.debug
13. ./build_docker/../contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: void* std::__1::__thread_proxy[abi:v15000]<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, long, std::__1::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0xe5d5f41 in /usr/lib/debug/usr/bin/clickhouse.debug
14. ? @ 0x7f9c38fec609 in ?
15. clone @ 0x7f9c38f11133 in ?
 (version 22.12.1.1254)
2022.12.06 23:07:07.672138 [ 14129 ] {c9248060-b770-4bfd-9be2-f5131c90711a} <Error> test_3wsfqacq.t_sparse_alter (7255bf95-b5b8-4ddf-8adb-a904e2f424b8): Detaching broken part /var/lib/clickhouse/store/725/7255bf95-b5b8-4ddf-8adb-a904e2f424b8/all_1_1_0 (size: 10.48 KiB). If it happened after update, it is likely because of backward incompatibility. You need to resolve this manually
```

</details>

_Originally posted by @CheSema in https://github.com/ClickHouse/ClickHouse/issues/43760#issuecomment-1340825032_
      