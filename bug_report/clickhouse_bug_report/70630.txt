ID: 70630
Title: Clickhouse crashes when generation protobuf schema with recursive fields
Description:
Here's a simple message.proto file that contains recursive field `google.protobuf.Struct`:
```proto
message Message {
  string event = 1
  google.protobuf.Struct payload = 2;
}
```
The default command creating schema based on provided proto file works correctly with expected output:
```sql
CREATE TABLE Message
ENGINE = File('ProtobufSingle')
SETTINGS format_schema='example.com/test/message.proto:Message';
```

output:
```
Code: 36. DB::Exception: ClickHouse doesn't support type recursion (google.protobuf.Struct.fields): The table structure cannot be extracted from a ProtobufSingle format file. You can specify the structure manually. (BAD_ARGUMENTS) (version 24.9.2.42 (official build))
```

But things go wrong if `input_format_protobuf_skip_fields_with_unsupported_types_in_schema_inference` flag is enabled:

```sql
CREATE TABLE Message
ENGINE = File('ProtobufSingle')
SETTINGS format_schema='example.com/test/message.proto:Message',
input_format_protobuf_skip_fields_with_unsupported_types_in_schema_inference = 1;
```

It just crashes:

<details>
  <summary>log</summary>

  ```
  024-10-14 11:45:54.189,Report this error to https://github.com/ClickHouse/ClickHouse/issues
2024-10-14 11:45:54.189,Child process was terminated by signal 11.
2024-10-14 11:45:54.189,"43. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323f32a"
2024-10-14 11:45:54.189,"36. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323f32a"
2024-10-14 11:45:54.189,"35. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323ea2f"
2024-10-14 11:45:54.189,"40. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323f32a"
2024-10-14 11:45:54.189,"39. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323e902"
2024-10-14 11:45:54.189,Integrity check of the executable successfully passed (checksum: 304A115ED8190AFEC6CD86E739C64D15)
2024-10-14 11:45:54.189,"Changed settings: use_uncompressed_cache = false, distributed_foreground_insert = true, distributed_background_insert_batch = true, load_balancing = 'nearest_hostname', log_queries = false, log_queries_cut_to_length = 10000000, max_concurrent_queries_for_user = 201, max_execution_time = 60., join_algorithm = 'auto', max_memory_usage = 5033479372, max_memory_usage_for_user = 0, log_query_threads = false, prefer_localhost_replica = true, cancel_http_readonly_queries_on_client_close = true, allow_introspection_functions = true, flatten_nested = false, allow_experimental_analyzer = false, background_pool_size = 8"
2024-10-14 11:45:54.189,"41. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323f9ca"
2024-10-14 11:45:54.189,"38. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323f9ca"
2024-10-14 11:45:54.189,"37. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323f9ca"
2024-10-14 11:45:54.189,"42. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323ea2f"
2024-10-14 11:45:54.189,"44. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323f9ca"
2024-10-14 11:45:54.188,"(version 24.8.4.13 (official build), build id: 510AF6A3C7DAA05409FC12A92CCF85B979B59D2B, git hash: 53195bc189b587afaabc52c4ca765aa54beea84f) (from thread 965725) Received signal 11"
2024-10-14 11:45:54.188,"0. signalHandler(int, siginfo_t*, void*) @ 0x000000000ddf5484"
2024-10-14 11:45:54.188,"33. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323f32a"
2024-10-14 11:45:54.188,"14. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323ea2f"
2024-10-14 11:45:54.188,"10. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323f9ca"
2024-10-14 11:45:54.188,"32. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323e902"
2024-10-14 11:45:54.188,1. ? @ 0x00007efd7348f520
2024-10-14 11:45:54.188,"26. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323f32a"
2024-10-14 11:45:54.188,"20. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323f9ca"
2024-10-14 11:45:54.188,"9. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323f9ca"
2024-10-14 11:45:54.188,"29. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323f32a"
2024-10-14 11:45:54.188,"3. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323e303"
2024-10-14 11:45:54.188,"8. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323f32a"
2024-10-14 11:45:54.188,"16. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323f9ca"
2024-10-14 11:45:54.188,Stack trace: 0x000000000ddf5484 0x00007efd7348f520 0x000000000dacf223 0x000000001323e303 0x000000001323e902 0x000000001323f32a 0x000000001323f9ca 0x000000001323ea2f 0x000000001323f32a 0x000000001323f9ca 0x000000001323f9ca 0x000000001323e902 0x000000001323f32a 0x000000001323f9ca 0x000000001323ea2f 0x000000001323f32a 0x000000001323f9ca 0x000000001323f9ca 0x000000001323e902 0x000000001323f32a 0x000000001323f9ca 0x000000001323ea2f 0x000000001323f32a 0x000000001323f9ca 0x000000001323f9ca 0x000000001323e902 0x000000001323f32a 0x000000001323f9ca 0x000000001323ea2f 0x000000001323f32a 0x000000001323f9ca 0x000000001323f9ca 0x000000001323e902 0x000000001323f32a 0x000000001323f9ca 0x000000001323ea2f 0x000000001323f32a 0x000000001323f9ca 0x000000001323f9ca 0x000000001323e902 0x000000001323f32a 0x000000001323f9ca 0x000000001323ea2f 0x000000001323f32a 0x000000001323f9ca
2024-10-14 11:45:54.188,"12. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323f32a"
2024-10-14 11:45:54.188,"31. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323f9ca"
2024-10-14 11:45:54.188,"17. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323f9ca"
2024-10-14 11:45:54.188,"25. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323e902"
2024-10-14 11:45:54.188,"24. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323f9ca"
2024-10-14 11:45:54.188,Signal description: Segmentation fault
2024-10-14 11:45:54.188,"5. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323f32a"
2024-10-14 11:45:54.188,"19. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323f32a"
2024-10-14 11:45:54.188,"27. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323f9ca"
2024-10-14 11:45:54.188,"30. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323f9ca"
2024-10-14 11:45:54.188,"6. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323f9ca"
2024-10-14 11:45:54.188,########## Short fault info ############
2024-10-14 11:45:54.188,"21. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323ea2f"
2024-10-14 11:45:54.188,"28. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323ea2f"
2024-10-14 11:45:54.188,"(version 24.8.4.13 (official build), build id: 510AF6A3C7DAA05409FC12A92CCF85B979B59D2B, git hash: 53195bc189b587afaabc52c4ca765aa54beea84f) (from thread 965725) (query_id: 74768729-d897-4a01-9679-c01c77aa337d) (query: \n\t\tcreate table \""clafka_generated_cvylcbultx\""\n\t\tengine = File('ProtobufSingle')\n\t\tsettings format_schema='gitlab.ozon.ru/pvz/api/audit/databus/pvz_audit/main.proto:PvzAuditMessageValue',\n\t\tinput_format_protobuf_skip_fields_with_unsupported_types_in_schema_inference = 1;\n\t) Received signal Segmentation fault (11)"
2024-10-14 11:45:54.188,"22. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323f32a"
2024-10-14 11:45:54.188,"7. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323ea2f"
2024-10-14 11:45:54.188,"4. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323e902"
2024-10-14 11:45:54.188,Address: 0x7efd49dfcff8. Access: write. Attempted access has violated the permissions assigned to the memory area.
2024-10-14 11:45:54.188,"18. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323e902"
2024-10-14 11:45:54.188,Stack trace: 0x000000000ddf5484 0x00007efd7348f520 0x000000000dacf223 0x000000001323e303 0x000000001323e902 0x000000001323f32a 0x000000001323f9ca 0x000000001323ea2f 0x000000001323f32a 0x000000001323f9ca 0x000000001323f9ca 0x000000001323e902 0x000000001323f32a 0x000000001323f9ca 0x000000001323ea2f 0x000000001323f32a 0x000000001323f9ca 0x000000001323f9ca 0x000000001323e902 0x000000001323f32a 0x000000001323f9ca 0x000000001323ea2f 0x000000001323f32a 0x000000001323f9ca 0x000000001323f9ca 0x000000001323e902 0x000000001323f32a 0x000000001323f9ca 0x000000001323ea2f 0x000000001323f32a 0x000000001323f9ca 0x000000001323f9ca 0x000000001323e902 0x000000001323f32a 0x000000001323f9ca 0x000000001323ea2f 0x000000001323f32a 0x000000001323f9ca 0x000000001323f9ca 0x000000001323e902 0x000000001323f32a 0x000000001323f9ca 0x000000001323ea2f 0x000000001323f32a 0x000000001323f9ca
2024-10-14 11:45:54.188,"34. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323f9ca"
2024-10-14 11:45:54.188,"13. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323f9ca"
2024-10-14 11:45:54.188,"15. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323f32a"
2024-10-14 11:45:54.188,"23. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323f9ca"
2024-10-14 11:45:54.188,2. operator new(unsigned long) @ 0x000000000dacf223
2024-10-14 11:45:54.188,Address: 0x7efd49dfcff8. Access: write. Attempted access has violated the permissions assigned to the memory area.
2024-10-14 11:45:54.188,########################################
2024-10-14 11:45:54.188,"11. DB::(anonymous namespace)::getNameAndDataTypeFromFieldRecursive(google::protobuf::FieldDescriptor const*, bool, bool, std::unordered_set<google::protobuf::FieldDescriptor const*, std::hash<google::protobuf::FieldDescriptor const*>, std::equal_to<google::protobuf::FieldDescriptor const*>, std::allocator<google::protobuf::FieldDescriptor const*>>&) @ 0x000000001323e902"
  ```
</details>


**Does it reproduce on the most recent release?**
yes


