ID: 6978
Title: Crash when Nullable and non-Nullable doesn't match between MV Distributed and local table
Description:
Test case reproduces on 19.11.8. 

Master works properly, but maybe code still need to be checked.
```
CREATE TABLE src ( 
    username String
) Engine=MergeTree() ORDER BY tuple();

CREATE TABLE dst_local ( 
    username Nullable(String)
) Engine=MergeTree() ORDER BY tuple();

CREATE TABLE dst ( 
    username Nullable(String)
) ENGINE = Distributed('test_shard_localhost', 'default', 'dst_local', rand() );

CREATE MATERIALIZED VIEW mv_src2dst TO dst (
    username String 
) AS SELECT DISTINCT username FROM src;

INSERT INTO src VALUES ('a');
```


```
2019.09.18 14:08:43.059754 [ 50 ] {} <Error> BaseDaemon: ########################################
2019.09.18 14:08:43.059816 [ 50 ] {} <Error> BaseDaemon: (version 19.11.8.46 (official build)) (from thread 42) Received signal Segmentation fault (11).
2019.09.18 14:08:43.059839 [ 50 ] {} <Error> BaseDaemon: Address: 0x41 Access: read. Address not mapped to object.
2019.09.18 14:08:43.144618 [ 50 ] {} <Error> BaseDaemon: 0. /usr/bin/clickhouse-server(StackTrace::StackTrace(ucontext_t const&)+0x31) [0x7d37f91]
1. /usr/bin/clickhouse-server() [0x3cd9b3e]
2. /lib/x86_64-linux-gnu/libpthread.so.0(+0x12890) [0x7f6888b64890]
3. /usr/bin/clickhouse-server(DB::ColumnNullable::checkConsistency() const+0x26) [0x6d97e06]
4. /usr/bin/clickhouse-server(DB::DataTypeNullable::serializeBinaryBulkWithMultipleStreams(DB::IColumn const&, unsigned long, unsigned long, DB::IDataType::SerializeBinaryBulkSettings&, std::shared_ptr<DB::IDataType::SerializeBinaryBulkState>&) const+0x4e) [0x6b745ce]
5. /usr/bin/clickhouse-server(DB::IMergedBlockOutputStream::writeSingleGranule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, DB::IDataType const&, DB::IColumn const&, std::set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool, std::shared_ptr<DB::IDataType::SerializeBinaryBulkState>&, DB::IDataType::SerializeBinaryBulkSettings&, unsigned long, unsigned long, bool)+0x66) [0x730de76]
6. /usr/bin/clickhouse-server(DB::IMergedBlockOutputStream::writeColumn(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, DB::IDataType const&, DB::IColumn const&, std::set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool, std::shared_ptr<DB::IDataType::SerializeBinaryBulkState>&, unsigned long)+0x1fa) [0x730e55a]
7. /usr/bin/clickhouse-server(DB::MergedBlockOutputStream::writeImpl(DB::Block const&, DB::PODArray<unsigned long, 4096ul, AllocatorWithHint<false, AllocatorHints::DefaultHint, 67108864ul>, 15ul, 16ul> const*)+0xd86) [0x6f76556]
8. /usr/bin/clickhouse-server(DB::MergeTreeDataWriter::writeTempPart(DB::BlockWithPartition&)+0x1431) [0x6f46ad1]
9. /usr/bin/clickhouse-server(DB::MergeTreeBlockOutputStream::write(DB::Block const&)+0xe4) [0x6ee6244]
10. /usr/bin/clickhouse-server(DB::PushingToViewsBlockOutputStream::write(DB::Block const&)+0x51) [0x711f6a1]
11. /usr/bin/clickhouse-server(DB::SquashingBlockOutputStream::finalize()+0x143) [0x7127e53]
12. /usr/bin/clickhouse-server(DB::SquashingBlockOutputStream::writeSuffix()+0x11) [0x7128081]
13. /usr/bin/clickhouse-server(DB::DistributedBlockOutputStream::writeToLocal(DB::Block const&, unsigned long)+0x96) [0x6ec1746]
14. /usr/bin/clickhouse-server(DB::DistributedBlockOutputStream::writeAsyncImpl(DB::Block const&, unsigned long)+0x1c0) [0x6ec5f60]
15. /usr/bin/clickhouse-server(DB::DistributedBlockOutputStream::write(DB::Block const&)+0x64) [0x6ec6464]
16. /usr/bin/clickhouse-server(DB::PushingToViewsBlockOutputStream::write(DB::Block const&)+0x51) [0x711f6a1]
17. /usr/bin/clickhouse-server(DB::PushingToViewsBlockOutputStream::process(DB::Block const&, unsigned long)+0x85f) [0x711efef]
18. /usr/bin/clickhouse-server(DB::PushingToViewsBlockOutputStream::write(DB::Block const&)+0x322) [0x711f972]
19. /usr/bin/clickhouse-server(DB::SquashingBlockOutputStream::finalize()+0x143) [0x7127e53]
20. /usr/bin/clickhouse-server(DB::SquashingBlockOutputStream::writeSuffix()+0x11) [0x7128081]
21. /usr/bin/clickhouse-server(DB::TCPHandler::processInsertQuery(DB::Settings const&)+0x39a) [0x3bc5caa]
22. /usr/bin/clickhouse-server(DB::TCPHandler::runImpl()+0x94d) [0x3bc665d]
23. /usr/bin/clickhouse-server(DB::TCPHandler::run()+0x2b) [0x3bc6cbb]
24. /usr/bin/clickhouse-server(Poco::Net::TCPServerConnection::start()+0x10) [0x7712de0]
25. /usr/bin/clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0xed) [0x77134fd]
26. /usr/bin/clickhouse-server(Poco::PooledThread::run()+0x81) [0x7e36ca1]
27. /usr/bin/clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x3c) [0x7e34a4c]
28. /usr/bin/clickhouse-server() [0xb80a200]
29. /lib/x86_64-linux-gnu/libpthread.so.0(+0x76db) [0x7f6888b596db]
30. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3f) [0x7f68882e088f]
```