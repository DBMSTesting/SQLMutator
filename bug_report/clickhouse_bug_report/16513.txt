ID: 16513
Title: Exception "Missing columns" on merge table join
Description:
Simple query with any common join (inner/full/cross/left/right) causes the Missing columns exception if the first table in join has Merge engine

**How to reproduce**
I tried this on  20.8.5.45 and 20.10.3.30 version in Docker. It works fine on 19.14.13.4 version.

'clstr1' cluster created (tested on 2 nodes cluster)

Schema:

```
CREATE TABLE  default.test1 ON CLUSTER clstr1
(  id   Int64,  name String )
    ENGINE MergeTree PARTITION BY (id) ORDER BY (id);

CREATE TABLE  default.test1_distributed ON CLUSTER clstr1
    AS default.test1
        ENGINE = Distributed(clstr1, default, test1);

CREATE TABLE default.test1_merge ON CLUSTER clstr1
    AS default.test1
        ENGINE = Merge('default', 'test1_distributed');
```
```
CREATE TABLE  default.test2 ON CLUSTER clstr1
(  id   Int64,  name String )
    ENGINE MergeTree PARTITION BY (id) ORDER BY (id);

CREATE TABLE  default.test2_distributed ON CLUSTER clstr1
    AS default.test2
        ENGINE = Distributed(clstr1, default, test2);

CREATE TABLE default.test2_merge ON CLUSTER clstr1
    AS default.test2
        ENGINE = Merge('default', 'test2_distributed');
```

Queries to run that lead to unexpected result:

```
  select * from default.test1_merge cross join default.test2_merge;
  select * from default.test1_merge cross join default.test2_distributed;
  select * from default.test1_merge cross join default.test2;
```


**Note** 
These queries are executed correctly without exception (if the first table in join is non-merge):

```
  select * from default.test1 cross join default.test2_merge;
  select * from default.test1 cross join default.test2_distributed;
  select * from default.test1 cross join default.test2;
```
```
  select * from default.test1_distributed cross join default.test2_merge;
  select * from default.test1_distributed cross join default.test2_distributed;
  select * from default.test1_distributed cross join default.test2;
```
Exception:
```
Code: 47, e.displayText() = DB::Exception: Missing columns: 'test2_merge.name' 'test2_merge.id' while processing query: 'SELECT id, name, test2_merge.id, test2_merge.name FROM default.test1_merge', required columns: 'id' 'name' 'test2_merge.id' 'test2_merge.name', source columns: 'name' 'id' (version 20.10.3.30 (official build))
```

Will be glad to provide more details if needed
