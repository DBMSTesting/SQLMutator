ID: 37463
Title: Added Empty SETTINGS in metadata for RabbitMQ ENGINE
Description:
> You have to provide the following information whenever possible.

Create RabbitMQ ENGINE table like this:
```
CREATE TABLE vms.vms_cdr_consumer
(
    `start_ts` UInt64,
    `cdr_type` String,
    `hostname` String,
    `domain` String,
    `cdr` String
)
ENGINE = RabbitMQ(ch_reader, rabbitmq_host_port = '192.168.51.201:5672', rabbitmq_vhost = 'nvms', rabbitmq_format = 'JSONEachRow', rabbitmq_queue_base = 'q_cdr_ext', rabbitmq_queue_consume = 1);
```
But in metadata placed:
```
ATTACH TABLE vms_cdr_consumer
(
    `start_ts` UInt64,
    `cdr_type` String,
    `hostname` String,
    `domain` String,
    `cdr` String
)
ENGINE = RabbitMQ(ch_reader, rabbitmq_host_port = '192.168.51.201:5672', rabbitmq_vhost = 'nvms', rabbitmq_format = 'JSONEachRow', rabbitmq_queue_base = 'q_cdr_ext', rabbitmq_queue_consume = 1)
SETTINGS 
```
In case of restart clickhouse server will get:
```
2022.05.20 06:46:32.107565 [ 1 ] {} <Error> Application: Caught exception while loading metadata: Code: 62. DB::Exception: Syntax error (in file /var/lib/clickhouse/metadata/vms/vms_cdr_consumer.sql): failed at position 346 (end of query) (line 11, col 1): . Expected one of: SET query, compound identifier, list of elements, identifier, end of query: Cannot parse definition from metadata file /var/lib/clickhouse/metadata/vms/vms_cdr_consumer.sql. (SYNTAX_ERROR), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0xb37173a in /usr/bin/clickhouse
1. DB::DatabaseOnDisk::parseQueryFromMetadata(Poco::Logger*, std::__1::shared_ptr<DB::Context const>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, bool) @ 0x1526694d in /usr/bin/clickhouse
2. ? @ 0x1530c97a in /usr/bin/clickhouse
3. ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0xb41b7ca in /usr/bin/clickhouse
4. ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()&&...)::'lambda'()::operator()() @ 0xb41d964 in /usr/bin/clickhouse
5. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xb418b97 in /usr/bin/clickhouse
6. ? @ 0xb41c71d in /usr/bin/clickhouse
7. ? @ 0x7f2f9eb89609 in ?
8. __clone @ 0x7f2f9eaae163 in ?
 (version 22.3.6.5 (official build))
```


Reproduced at least in 22.4.2.1 and 22.3.6.5.

**How to reproduce**
1. Create table 
```
CREATE TABLE vms.vms_cdr_consumer
(
    `start_ts` UInt64,
    `cdr_type` String,
    `hostname` String,
    `domain` String,
    `cdr` String
)
ENGINE = RabbitMQ(ch_reader, rabbitmq_host_port = '192.168.51.201:5672', rabbitmq_vhost = 'nvms', rabbitmq_format = 'JSONEachRow', rabbitmq_queue_base = 'q_cdr_ext', rabbitmq_queue_consume = 1);
```
2. Restart Clickhouse server
