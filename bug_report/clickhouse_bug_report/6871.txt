ID: 6871
Title: 'LRUCache became inconsistent' and merges hangs for all tables
Description:
On release 19.1.10 we have a problem with merges. On some nodes in Cluster we got merges hangs for all tables. Merges were hung with percent of progress = 0 .
![image](https://user-images.githubusercontent.com/5371224/64527489-c46d2180-d30e-11e9-9c85-3de3ae738b40.png)


After restart node the problem was disappeared.

For investigation  we analyzed clickhouse logs and found followed error in around few minutes before merges_hangs. We suppose that this issues are related with each other. 

```
2019.09.07 09:22:09.411216 [ 242548 ] {76e68fa1-bf38-41f6-8752-9a9550c9f0d0} <Error> LRUCache: LRUCache became inconsistent. There must be a bug in it.
2019.09.07 09:22:09.502391 [ 2 ] {} <Error> BaseDaemon: ########################################
2019.09.07 09:22:09.519536 [ 2 ] {} <Error> BaseDaemon: (from thread 242548) Received signal Aborted (6).
2019.09.07 09:22:09.683234 [ 2 ] {} <Error> BaseDaemon: 0. /lib/x86_64-linux-gnu/libc.so.6(gsignal+0xc7) [0x7f53a0897e97]
2019.09.07 09:22:09.683311 [ 2 ] {} <Error> BaseDaemon: 1. /lib/x86_64-linux-gnu/libc.so.6(abort+0x141) [0x7f53a0899801]
2019.09.07 09:22:09.683380 [ 2 ] {} <Error> BaseDaemon: 2. /usr/bin/clickhouse-server(DB::LRUCache<DB::UInt128, DB::PODArray<DB::MarkInCompressedFile, 4096ul, Allocator<false>, 0ul, 0ul>, DB::UInt128TrivialHash, DB::MarksWeightFunction>::removeOverflow(std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&)+0x3d6) [0x5de11b6]
2019.09.07 09:22:09.683418 [ 2 ] {} <Error> BaseDaemon: 3. /usr/bin/clickhouse-server(DB::MergeTreeReader::Stream::loadMarks()+0xe0a) [0x5ddf09a]
2019.09.07 09:22:09.683447 [ 2 ] {} <Error> BaseDaemon: 4. /usr/bin/clickhouse-server(DB::MergeTreeReader::Stream::Stream(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::vector<DB::MarkRange, std::allocator<DB::MarkRange> > const&, DB::MarkCache*, bool, DB::UncompressedCache*, unsigned long, unsigned long, std::function<void (DB::ReadBufferFromFileBase::ProfileInfo)> const&, int)+0x490) [0x5ddf7a0]
2019.09.07 09:22:09.683461 [ 2 ] {} <Error> BaseDaemon: 5. /usr/bin/clickhouse-server() [0x5ddfc16]
2019.09.07 09:22:09.683479 [ 2 ] {} <Error> BaseDaemon: 6. /usr/bin/clickhouse-server(DB::MergeTreeReader::addStreams(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, DB::IDataType const&, std::function<void (DB::ReadBufferFromFileBase::ProfileInfo)> const&, int)+0x99) [0x5dda659]
2019.09.07 09:22:09.683522 [ 2 ] {} <Error> BaseDaemon: 7. /usr/bin/clickhouse-server(DB::MergeTreeReader::MergeTreeReader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::shared_ptr<DB::MergeTreeDataPart const> const&, DB::NamesAndTypesList const&, DB::UncompressedCache*, DB::MarkCache*, bool, DB::MergeTreeData const&, std::vector<DB::MarkRange, std::allocator<DB::MarkRange> > const&, unsigned long, unsigned long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > > const&, std::function<void (DB::ReadBufferFromFileBase::ProfileInfo)> const&, int)+0x3ad) [0x5ddcebd]
2019.09.07 09:22:09.683540 [ 2 ] {} <Error> BaseDaemon: 8. /usr/bin/clickhouse-server(DB::MergeTreeThreadSelectBlockInputStream::getNewTask()+0x20a) [0x5aa008a]
2019.09.07 09:22:09.683555 [ 2 ] {} <Error> BaseDaemon: 9. /usr/bin/clickhouse-server(DB::MergeTreeBaseSelectBlockInputStream::readImpl()+0x47c) [0x5dd36dc]
2019.09.07 09:22:09.683568 [ 2 ] {} <Error> BaseDaemon: 10. /usr/bin/clickhouse-server(DB::IProfilingBlockInputStream::read()+0x262) [0x5644702]
2019.09.07 09:22:09.683585 [ 2 ] {} <Error> BaseDaemon: 11. /usr/bin/clickhouse-server(DB::FilterBlockInputStream::readImpl()+0xbd) [0x5bd36fd]
2019.09.07 09:22:09.683598 [ 2 ] {} <Error> BaseDaemon: 12. /usr/bin/clickhouse-server(DB::IProfilingBlockInputStream::read()+0x262) [0x5644702]
2019.09.07 09:22:09.683611 [ 2 ] {} <Error> BaseDaemon: 13. /usr/bin/clickhouse-server(DB::ExpressionBlockInputStream::readImpl()+0x2e) [0x5bd29ce]
2019.09.07 09:22:09.683624 [ 2 ] {} <Error> BaseDaemon: 14. /usr/bin/clickhouse-server(DB::IProfilingBlockInputStream::read()+0x262) [0x5644702]
2019.09.07 09:22:09.683637 [ 2 ] {} <Error> BaseDaemon: 15. /usr/bin/clickhouse-server(DB::LimitBlockInputStream::readImpl()+0x225) [0x5649db5]
2019.09.07 09:22:09.683650 [ 2 ] {} <Error> BaseDaemon: 16. /usr/bin/clickhouse-server(DB::IProfilingBlockInputStream::read()+0x262) [0x5644702]
2019.09.07 09:22:09.683664 [ 2 ] {} <Error> BaseDaemon: 17. /usr/bin/clickhouse-server(DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>::loop(unsigned long)+0x12d) [0x5798e7d]
2019.09.07 09:22:09.683678 [ 2 ] {} <Error> BaseDaemon: 18. /usr/bin/clickhouse-server(DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>::thread(std::shared_ptr<DB::ThreadGroupStatus>, unsigned long)+0x207) [0x57994a7]
2019.09.07 09:22:09.683699 [ 2 ] {} <Error> BaseDaemon: 19. /usr/bin/clickhouse-server(std::thread::_State_impl<std::thread::_Invoker<std::tuple<DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>::process()::{lambda()#1}> > >::_M_run()+0x4f) [0x579999f]
2019.09.07 09:22:09.683717 [ 2 ] {} <Error> BaseDaemon: 20. /usr/bin/clickhouse-server() [0xa9c9c7f]
2019.09.07 09:22:09.683729 [ 2 ] {} <Error> BaseDaemon: 21. /lib/x86_64-linux-gnu/libpthread.so.0(+0x76db) [0x7f53a13fb6db]
```

 We cannot reproduce this issue on our stage. This version of clickhouse works well in production for half year. We didn't change schema in clickhouse in this period.
