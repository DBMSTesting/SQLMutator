ID: 76670
Title: SEGV on bad join query
Description:
### Describe the bug

The issue only reproduces on current master with new analyzer enabled. The right join clause seems to be wrong.

### How to reproduce

The issue was found while testing the improved AST fuzzer: https://s3.amazonaws.com/clickhouse-test-reports/json.html?PR=75279&sha=989a5bd6cb67c9c210948618ca9e2e487cd18657&name_0=PR&name_1=AST+fuzzer+%28debug%29
Run Fiddle: https://fiddle.clickhouse.com/7df80942-409d-4b35-b778-23f7d9fa7cbc

### Error message and/or stacktrace

Stack trace:

```
[fb6e4069e246] 2025.02.24 10:57:13.950290 [ 762 ] <Fatal> BaseDaemon: Address: 0x2b. Access: write. Address not mapped to object.
[fb6e4069e246] 2025.02.24 10:57:13.950328 [ 762 ] <Fatal> BaseDaemon: Stack trace: 0x000000000dcdf4d7 0x000076ede6806520 0x0000000010d17800 0x0000000010d179c1 0x000000001104193c 0x00000000119e1401 0x0000000011d90d39 0x0000000011d8a4a4 0x00000000130b40ac 0x00000000130d2539 0x00000000167843a7 0x00000000167847f9 0x0000000016750b5b 0x000000001674f03d 0x000076ede6858ac3 0x000076ede68e9a04
[fb6e4069e246] 2025.02.24 10:57:13.950401 [ 762 ] <Fatal> BaseDaemon: 0. signalHandler(int, siginfo_t*, void*) @ 0x000000000dcdf4d7
[fb6e4069e246] 2025.02.24 10:57:13.950436 [ 762 ] <Fatal> BaseDaemon: 1. ? @ 0x000076ede6806520
[fb6e4069e246] 2025.02.24 10:57:13.950486 [ 762 ] <Fatal> BaseDaemon: 2. std::__shared_ptr_emplace<DB::ConstantNode, std::allocator<DB::ConstantNode>>::__on_zero_shared() @ 0x0000000010d17800
[fb6e4069e246] 2025.02.24 10:57:13.950531 [ 762 ] <Fatal> BaseDaemon: 3. DB::IQueryTreeNode::~IQueryTreeNode() @ 0x0000000010d179c1
[fb6e4069e246] 2025.02.24 10:57:13.950576 [ 762 ] <Fatal> BaseDaemon: 4. DB::QueryNode::~QueryNode() @ 0x000000001104193c
[fb6e4069e246] 2025.02.24 10:57:13.950622 [ 762 ] <Fatal> BaseDaemon: 5. DB::InterpreterSelectQueryAnalyzer::~InterpreterSelectQueryAnalyzer() @ 0x00000000119e1401
[fb6e4069e246] 2025.02.24 10:57:13.950707 [ 762 ] <Fatal> BaseDaemon: 6. DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*, std::shared_ptr<DB::IAST>&) @ 0x0000000011d90d39
[fb6e4069e246] 2025.02.24 10:57:13.950759 [ 762 ] <Fatal> BaseDaemon: 7. DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000011d8a4a4
[fb6e4069e246] 2025.02.24 10:57:13.950820 [ 762 ] <Fatal> BaseDaemon: 8. DB::TCPHandler::runImpl() @ 0x00000000130b40ac
[fb6e4069e246] 2025.02.24 10:57:13.950863 [ 762 ] <Fatal> BaseDaemon: 9. DB::TCPHandler::run() @ 0x00000000130d2539
[fb6e4069e246] 2025.02.24 10:57:13.950912 [ 762 ] <Fatal> BaseDaemon: 10. Poco::Net::TCPServerConnection::start() @ 0x00000000167843a7
[fb6e4069e246] 2025.02.24 10:57:13.950948 [ 762 ] <Fatal> BaseDaemon: 11. Poco::Net::TCPServerDispatcher::run() @ 0x00000000167847f9
[fb6e4069e246] 2025.02.24 10:57:13.950986 [ 762 ] <Fatal> BaseDaemon: 12. Poco::PooledThread::run() @ 0x0000000016750b5b
[fb6e4069e246] 2025.02.24 10:57:13.951037 [ 762 ] <Fatal> BaseDaemon: 13. Poco::ThreadImpl::runnableEntry(void*) @ 0x000000001674f03d
[fb6e4069e246] 2025.02.24 10:57:13.951075 [ 762 ] <Fatal> BaseDaemon: 14. ? @ 0x000076ede6858ac3
[fb6e4069e246] 2025.02.24 10:57:13.951105 [ 762 ] <Fatal> BaseDaemon: 15. ? @ 0x000076ede68e9a04
[fb6e4069e246] 2025.02.24 10:57:14.084159 [ 762 ] <Fatal> BaseDaemon: Integrity check of the executable successfully passed (checksum: F74BD26A2DAAD9A2AAA0EE5EB41E0875)
[fb6e4069e246] 2025.02.24 10:57:14.084397 [ 762 ] <Fatal> BaseDaemon: Report this error to https://github.com/ClickHouse/ClickHouse/issues
[fb6e4069e246] 2025.02.24 10:57:14.084575 [ 762 ] <Fatal> BaseDaemon: Changed settings: allow_experimental_analyzer = true, output_format_pretty_color = 0, output_format_pretty_grid_charset = 'ASCII'
```