ID: 4879
Title: Wrong name qualification for the left table in GLOBAL JOIN
Description:
CH version: 19.4.1.1

Using a cluster with a single node, one distributed table and one non-distributed, and a vstest database:

`CREATE TABLE vstest.local_table(id Int32, name String, ts DateTime, oth_id Int32) ENGINE = MergeTree() PARTITION BY toMonday(ts) ORDER BY (ts, id);`
`CREATE TABLE vstest.dist_table(id Int32, name String, ts DateTime, oth_id Int32) ENGINE = Distributed(vscluster, vstest, local_table);`
`CREATE TABLE vstest.other_table(id Int32, name String, ts DateTime, trd_id Int32) ENGINE = MergeTree() PARTITION BY toMonday(ts) ORDER BY (ts, id);`
`INSERT INTO vstest.local_table VALUES(1, 'One', now(), 100);`
`INSERT INTO vstest.local_table VALUES(2, 'Two', now(), 200);`
`INSERT INTO vstest.other_table VALUES(100, 'One Hundred', now(), 1000);`
`INSERT INTO vstest.other_table VALUES(200, 'Two Hundred', now(), 2000);`

The "local" join works fine:
`select t2.name from dist_table as t1 left join other_table as t2 on t1.oth_id = t2.id`

`┌─t2.name─────┐`
`│ One Hundred │`
`│ Two Hundred │`
`└─────────────┘`

But it is not the case when using the GLOBAL join:
`select t2.name from dist_table as t1 GLOBAL left join other_table as t2 on t1.oth_id = t2.id`

Getting an error:
`Received exception from server (version 19.4.1):`
`Code: 47. DB::Exception: Received from localhost:19000, ::1. DB::Exception: Unknown identifier: t1.id, context: query: 'SELECT t1.name FROM dist_table AS t1  GLOBAL ALL LEFT JOIN _data1 ON oth_id = t1.id' required_names: 't1.id''t1.name''oth_id' source_tables: 't1'/'dist_table' '_data1' table_aliases: 't1' complex_aliases: masked_columns: array_join_columns: source_columns: 'oth_id' .`


