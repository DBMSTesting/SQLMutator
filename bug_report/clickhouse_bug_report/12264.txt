ID: 12264
Title: HAVING clause can change result of aggregation
Description:
**Describe the bug**
HAVING Clause works not like filter over aggregation result. It allows to use expression that is not an aggregation and not a  group by
```
Each column reference directly contained in the search condition shall be one of the following:
a) An unambiguous reference to a column that is functionally dependent on the set consisting of every column referenced by a column reference contained in group by clause.
...
```
**How to reproduce**
``` sql
CREATE TABLE t3 (`c0` Int32, `c1` Int32, `c2` String) ENGINE = Log()
INSERT INTO t3(c0,c1,c2) VALUES (1,10,'1'), (1,0,'2');

SELECT *
FROM t3

┌─c0─┬─c1─┬─c2─┐
│  1 │ 10 │ 1  │
│  1 │  0 │ 2  │
└────┴────┴────┘

SELECT MIN(t3.c2)
FROM t3
GROUP BY t3.c0
HAVING NOT t3.c1
UNION ALL
SELECT MIN(t3.c2)
FROM t3
GROUP BY t3.c0
HAVING NOT (NOT t3.c1)
UNION ALL
SELECT MIN(t3.c2)
FROM t3
GROUP BY t3.c0
HAVING isNull(NOT t3.c1)

┌─MIN(c2)─┐
│ 2       │
│ 1       │
└─────────┘

SELECT MIN(c2)
FROM t3
GROUP BY c0

┌─MIN(c2)─┐
│ 1       │
└─────────┘
```
**Expected behavior**
HAVING clause should not work for case where it is not an aggregation or a function over group by columns.
MySQL for example shows error: http://sqlfiddle.com/#!9/df2cd1/4

**Additional context**
Found by SQLancer TLP Having oracle https://github.com/sqlancer/sqlancer/pull/39