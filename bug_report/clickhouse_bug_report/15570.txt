ID: 15570
Title: arrayFilter is not working as expected
Description:
**How to reproduce**

`SELECT 
    countIf(1, step0_time != toDateTime(0)) AS step_0,
    countIf(1, step1_time != toDateTime(0)) AS step_1,
    countIf(1, step2_time != toDateTime(0)) AS step_2,
    avg(timeToStep1) AS avgTimeToStep1,
    median(timeToStep1) AS medianTimeToStep1,
    avg(timeToStep2) AS avgTimeToStep2,
    median(timeToStep2) AS medianTimeToStep2,
    median(count_on_step0) AS medianRepetitionOnStep0,
    avg(count_on_step0) AS avgRepetitionOnStep0,
    median(count_on_step1) AS medianRepetitionOnStep1,
    avg(count_on_step1) AS avgRepetitionOnStep1,
    median(count_on_step2) AS medianRepetitionOnStep2,
    avg(count_on_step2) AS avgRepetitionOnStep2,
    avg(totalTimeDifference) AS totalTimeAvg,
    quantile(0.8)(count_on_step0) AS quantileCountStep0,
    quantile(0.8)(count_on_step1) AS quantileCountStep1,
    quantile(0.8)(count_on_step2) AS quantileCountStep2,
    quantile(0.8)(timeToStep1) AS quantileTimeStep1,
    quantile(0.8)(timeToStep2) AS quantileTimeStep2,
    quantile(0.8)(totalTimeDifference) AS quantileTotalTime,
    medianIf(totalTimeDifference, totalTimeDifference > 0) AS medianTotalTime
FROM 
(
    SELECT 
        deviceId,
        groupArrayIf(eventTime, eventName = 'event1') AS step0_time_arr,
        step0_time_arr[1] AS step0_time,
        arrayFilter(time -> ((step0_time != toDateTime(0)) AND ((time - step0_time) >= 0)), groupArrayIf(eventTime, eventName = 'event2')) AS step1_time_arr,
        step1_time_arr[1] AS step1_time,
        arrayFilter(time -> ((step1_time != toDateTime(0)) AND ((time - step1_time) >= 0)), groupArrayIf(eventTime, eventName = 'event3')) AS step2_time_arr,
        step2_time_arr[1] AS step2_time,
        step2_time - step0_time AS totalTimeDifference,
        if((step1_time - step0_time) >= 0, step1_time - step0_time, 0) AS timeToStep1,
        if((step2_time - step0_time) >= 0, step2_time - step0_time, 0) AS timeToStep2,
        length(step0_time_arr) AS count_on_step0,
        length(step1_time_arr) AS count_on_step1,
        length(step2_time_arr) AS count_on_step2
    FROM 
    (
        SELECT 
            deviceId,
            eventTime,
            eventName
        FROM db.tbl
        WHERE ((eventName = 'event1') OR (eventName = 'event2') OR (eventName = 'event3')) AND ((eventTime >= 1599091200) AND (eventTime <= 1601701473))
        ORDER BY eventTime ASC
    )
    GROUP BY deviceId
)`

output:
`{ step_0: 292825,
    step_1: 72218,
    step_2: 9613,
    avgTimeToStep1: 33254.824646311725,
    medianTimeToStep1: 0,
    avgTimeToStep2: 10835.248003804829,
    medianTimeToStep2: 0,
    medianRepetitionOnStep0: 1,
    avgRepetitionOnStep0: 3.044994775059618,
    medianRepetitionOnStep1: 0,
    avgRepetitionOnStep1: 0.7961134481927066,
    medianRepetitionOnStep2: 0,
    avgRepetitionOnStep2: 0.1065988317569197,
    totalTimeAvg: -1518265272.8451173,
    quantileCountStep0: 4,
    quantileCountStep1: 1,
    quantileCountStep2: 0,
    quantileTimeStep1: 12,
    quantileTimeStep2: 0,
    quantileTotalTime: -1599940535,
    medianTotalTime: 33140.5 }`

**Expected behavior**
Even though arrayFilter is being used `arrayFilter(time -> ((step0_time != toDateTime(0)) AND ((time - step0_time) >= 0)), groupArrayIf(eventTime, eventName = 'event2')) AS step1_time_arr,
        step1_time_arr[1] AS step1_time,
        arrayFilter(time -> ((step1_time != toDateTime(0)) AND ((time - step1_time) >= 0)), groupArrayIf(eventTime, eventName = 'event3')) AS step2_time_arr,
        step2_time_arr[1] AS step2_time`
in which the output should be `step2_time>=step1_time>=step0_time` but the result shows negative values ` totalTimeAvg: -1518265272.8451173` also `quantileTotalTime: -1599940535`
and as can be seen we were forced to re-filter negative values!
to overcome this issue we `If` suffix but the results were wrong!

Am I missing something here?