ID: 6732
Title: DB::ErrnoException: Allocator: Cannot mmap 1.00 GiB., errno: 12, strerror: Cannot allocate memory
Description:
ClickHouse server version 19.13.3 revision 54425.
my query:
```SELECT Path, Time, Value, Timestamp FROM graphite PREWHERE (Date >= '2019-01-01') AND (Date <= '2019-08-29') WHERE (Path = 'nginx_stat.frontNNN.requests') AND ((Time >= 1546290000) AND (Time <= 1567101599)) FORMAT TSV```

Exception:

```2019.08.29 20:52:18.867187 [ 40 ] {9548820f-7b87-413e-8807-17567705123a} <Error> executeQuery: Code: 173, e.displayText() = DB::ErrnoException: Allocator: Cannot mmap 1.00 GiB., errno: 12, strerror: Cannot allocate memory (version 19.13.3.26 (official build)) (from 127.0.0.1:27630) (in query: SELECT Path, Time, Value, Timestamp FROM graphite PREWHERE (Date >= '2019-01-01') AND (Date <= '2019-08-29') WHERE (Path = 'nginx_stat.frontNNN.requests') AND ((Time >= 1546290000) AND (Time <= 1567101599)) FORMAT TSV), Stack trace:```

```0. clickhouse-server(StackTrace::StackTrace()+0x30) [0x7f6b5f0]
1. clickhouse-server(DB::Exception::Exception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)+0x25) [0x3c46865]
2. clickhouse-server(DB::throwFromErrno(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, int)+0x134) [0x37b5073]
3. clickhouse-server() [0x70b88b2]
4. clickhouse-server(DB::MergeTreeReaderStream::loadMarks()+0xd83) [0x70b96c3]
5. clickhouse-server(DB::MergeTreeReaderStream::MergeTreeReaderStream(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, std::vector<DB::MarkRange, std::allocator<DB::MarkRange> > const&, DB::MarkCache*, bool, DB::UncompressedCache*, unsigned long, unsigned long, unsigned long, DB::MergeTreeIndexGranularityInfo const*, std::function<void (DB::ReadBufferFromFileBase::ProfileInfo)> const&, int)+0x498) [0x70ba318]
6. clickhouse-server() [0x7586b63]
7. clickhouse-server(DB::MergeTreeReader::addStreams(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, DB::IDataType const&, std::function<void (DB::ReadBufferFromFileBase::ProfileInfo)> const&, int)+0xa3) [0x7585993]
8. clickhouse-server(DB::MergeTreeReader::MergeTreeReader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::shared_ptr<DB::MergeTreeDataPart const> const&, DB::NamesAndTypesList const&, DB::UncompressedCache*, DB::MarkCache*, bool, DB::MergeTreeData const&, std::vector<DB::MarkRange, std::allocator<DB::MarkRange> > const&, unsigned long, unsigned long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > > const&, std::function<void (DB::ReadBufferFromFileBase::ProfileInfo)> const&, int)+0x432) [0x7587302]
9. clickhouse-server(DB::MergeTreeThreadSelectBlockInputStream::getNewTask()+0x1f1) [0x70d0ad1]
10. clickhouse-server(DB::MergeTreeBaseSelectBlockInputStream::readImpl()+0x429) [0x7555119]
11. clickhouse-server(DB::IBlockInputStream::read()+0x187) [0x6c160a7]
12. clickhouse-server(DB::FilterBlockInputStream::readImpl()+0xc6) [0x7328716]
13. clickhouse-server(DB::IBlockInputStream::read()+0x187) [0x6c160a7]
14. clickhouse-server(DB::ExpressionBlockInputStream::readImpl()+0x2f) [0x732768f]
15. clickhouse-server(DB::IBlockInputStream::read()+0x187) [0x6c160a7]
16. clickhouse-server(DB::ExpressionBlockInputStream::readImpl()+0x2f) [0x732768f]
17. clickhouse-server(DB::IBlockInputStream::read()+0x187) [0x6c160a7]
18. clickhouse-server(DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>::loop(unsigned long)+0x162) [0x6d7dd42]
19. clickhouse-server(DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>::thread(std::shared_ptr<DB::ThreadGroupStatus>, unsigned long)+0x245) [0x6d7e405]
20. clickhouse-server(ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>::*)(std::shared_ptr<DB::ThreadGroupStatus>, unsigned long), DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>*, std::shared_ptr<DB::ThreadGroupStatus>, unsigned long&>(void (DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>::*&&)(std::shared_ptr<DB::ThreadGroupStatus>, unsigned long), DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>*&&, std::shared_ptr<DB::ThreadGroupStatus>&&, unsigned long&)::{lambda()#1}::operator()() const+0x7d) [0x6d7ed7d]
21. clickhouse-server(ThreadPoolImpl<std::thread>::worker(std::_List_iterator<std::thread>)+0x1a6) [0x3c760f6]
22. clickhouse-server() [0xba3e1a0]
23. /lib/x86_64-linux-gnu/libpthread.so.0(+0x7494) [0x7f2d72f71494]
24. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3f) [0x7f2d727abacf]```

Server: 512G ram, swap disabled

```
SHOW CREATE TABLE graphite

┌─statement──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐
│ CREATE TABLE default.graphite (`Path` String, `Value` Float64, `Time` UInt32, `Date` Date, `Timestamp` UInt32) ENGINE = GraphiteMergeTree(Date, (Path, Time), 8192, 'graphite_rollup') │
└────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘

1 rows in set. Elapsed: 0.035 sec.
```