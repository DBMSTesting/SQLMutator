ID: 26796
Title:  Can't adjust last granule because it has X rows, but try to subtract Y rows
Description:
You have to provide the following information whenever possible.

**SELECT query_id from system.query_log where type = 'QueryFinish' limit 10 stop working. 
Got exception: Code: 49.
DB::Exception: Can't adjust last granule because it has X rows, but try to subtract Y rows**

A clear and concise description of what works not as it is supposed to.

**SELECT query_id from system.query_log where type = 'QueryFinish' limit 10 works on QA but doesnâ€™t works on Production (same environments versions 20.12.2.1)**

**SELECT * from system.query_log where type = 'QueryFinish' limit 10 works on both environments.**

**How to reproduce**

* Which ClickHouse server version to use - 20.12.2.1
* Which interface to use, if matters (Tabix, or other interfaces)
* `CREATE TABLE` statements for all tables involved (It's system table)
* Queries to run that lead to unexpected result
SELECT query_id from system.query_log where type = 'QueryFinish' limit 10

**Expected behavior**
Response with query_ids

**Error message and/or stacktrace**
Code: 49. DB::Exception: Can't adjust last granule because it has 1440 rows, but try to subtract 5349 rows.: While executing MergeTree. Stack trace: 0. DB::MergeTreeRangeReader::ReadResult::adjustLastGranule() @ 0xe46da66 in /usr/bin/clickhouse 1. DB::MergeTreeRangeReader::startReadingChain(unsigned long, std::_1::deque<DB::MarkRange, std::1::allocator&) @ 0xe47123c in /usr/bin/clickhouse 2. DB::MergeTreeRangeReader::read(unsigned long, std::1::deque<DB::MarkRange, std::1::allocator&) @ 0xe46fdf4 in /usr/bin/clickhouse 3. DB::MergeTreeBaseSelectProcessor::readFromPartImpl() @ 0xe46a49a in /usr/bin/clickhouse 4. DB::MergeTreeBaseSelectProcessor::readFromPart() @ 0xe46b10d in /usr/bin/clickhouse 5. DB::MergeTreeBaseSelectProcessor::generate() @ 0xe4699ab in /usr/bin/clickhouse 6. DB::ISource::work() @ 0xe60dcfa in /usr/bin/clickhouse 7. DB::SourceWithProgress::work() @ 0xe76b27a in /usr/bin/clickhouse 8. ? @ 0xe64683c in /usr/bin/clickhouse 9. DB::PipelineExecutor::executeStepImpl(unsigned long, unsigned long, std::1::atomic<bool>*) @ 0xe643967 in /usr/bin/clickhouse 10. DB::PipelineExecutor::executeImpl(unsigned long) @ 0xe642159 in /usr/bin/clickhouse 11. DB::PipelineExecutor::execute(unsigned long) @ 0xe641cdd in /usr/bin/clickhouse 12. ? @ 0xe64e0dd in /usr/bin/clickhouse 13. ThreadPoolImpl<std::1::thread>::worker(std::1::_list_iterator) @ 0x7d1faad in /usr/bin/clickhouse 14. ? @ 0x7d235d3 in /usr/bin/clickhouse 15. start_thread @ 0x9609 in /usr/lib/x86_64-linux-gnu/libpthread-2.31.so 16. clone @ 0x122293 in /usr/lib/x86_64-linux-gnu/libc-2.31
