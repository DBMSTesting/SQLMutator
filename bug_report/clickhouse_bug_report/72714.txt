ID: 72714
Title: Short circuit evaluation doesn't work with constant arguments
Description:
**Describe what's wrong**

```sql
WITH test AS (SELECT 0 AS number) SELECT if(number = 0, 0, intDiv(100, number)) FROM test

Received exception from server (version 24.12.1):
Code: 153. DB::Exception: Received from localhost:9000. DB::Exception: Division by zero. (ILLEGAL_DIVISION)
```

```sql
WITH 0 AS n SELECT multiIf(n = 0, 0, intDiv(100, n))

Code: 153. DB::Exception: Received from localhost:9000. DB::Exception: Division by zero: In scope WITH 0 AS n SELECT multiIf(n = 0, 0, intDiv(100, n)). (ILLEGAL_DIVISION)
```

```sql
WITH 0 AS n SELECT if(n = 0, 0, intDiv(100, n))

   ┌─0─┐
1. │ 0 │
   └───┘
```

**Additional context**

It happens because of constant folding that doesn't respect short circuit functions in [analyzer](https://github.com/ClickHouse/ClickHouse/blob/2ecc690b9363b6964167826f177c5c290ccfc382/src/Analyzer/Resolve/QueryAnalyzer.cpp#L3508-L3525) and in [actions dag](https://github.com/ClickHouse/ClickHouse/blob/2ecc690b9363b6964167826f177c5c290ccfc382/src/Interpreters/ActionsDAG.cpp#L329-L345). Interesting that it works for function `if` in some cases because this special case is [handled](https://github.com/ClickHouse/ClickHouse/blob/2ecc690b9363b6964167826f177c5c290ccfc382/src/Analyzer/Resolve/QueryAnalyzer.cpp#L2822) in analyzer.