ID: 13098
Title: ClickHouse server silently crashed.
Description:
**Describe the bug**
I left my clickhouse server with running benchmark and after a while I found, that it was crashed with message `Segmentation fault (core dumped)`, but there was no error message in log.

**Error message and/or stacktrace**
In coredump backtrace we can see:
```
#0  libunwind::LocalAddressSpace::get64 (this=<optimized out>, addr=255) at ../contrib/libunwind/src/AddressSpace.hpp:203
#1  libunwind::LocalAddressSpace::getRegister (this=<optimized out>, addr=255) at ../contrib/libunwind/src/AddressSpace.hpp:241
#2  libunwind::DwarfInstructions<libunwind::LocalAddressSpace, libunwind::Registers_x86_64>::getSavedRegister (addressSpace=..., registers=..., cfa=<optimized out>, savedReg=...)
    at ../contrib/libunwind/src/DwarfInstructions.hpp:89
#3  0x000000000d5f7aa3 in libunwind::DwarfInstructions<libunwind::LocalAddressSpace, libunwind::Registers_x86_64>::stepWithDwarf (addressSpace=..., pc=<optimized out>, fdeStart=<optimized out>, 
    registers=...) at ../contrib/libunwind/src/DwarfInstructions.hpp:201
#4  0x000000000d5f75f7 in libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_x86_64>::stepWithDwarfFDE (this=0x7f2e983ca838) at ../contrib/libunwind/src/UnwindCursor.hpp:933
#5  libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_x86_64>::step (this=0x7f2e983ca838) at ../contrib/libunwind/src/UnwindCursor.hpp:1987
#6  0x000000000d5f6069 in unw_backtrace (buffer=0x7f2e983caa18, size=<optimized out>) at ../contrib/libunwind/src/libunwind.cpp:297
#7  0x000000000584dc28 in StackTrace::tryCapture (this=0x7f2e983caa08) at ../src/Common/StackTrace.cpp:291
#8  StackTrace::StackTrace (this=0x7f2e983caa08, signal_context=...) at ../src/Common/StackTrace.cpp:260
#9  0x0000000009d02a54 in signalHandler (sig=<optimized out>, info=0x7f2e983cb5f0, context=<optimized out>) at ../base/daemon/BaseDaemon.cpp:128
#10 <signal handler called>
#11 libunwind::LocalAddressSpace::get64 (this=<optimized out>, addr=255) at ../contrib/libunwind/src/AddressSpace.hpp:203
#12 libunwind::LocalAddressSpace::getRegister (this=<optimized out>, addr=255) at ../contrib/libunwind/src/AddressSpace.hpp:241
#13 libunwind::DwarfInstructions<libunwind::LocalAddressSpace, libunwind::Registers_x86_64>::getSavedRegister (addressSpace=..., registers=..., cfa=<optimized out>, savedReg=...)
    at ../contrib/libunwind/src/DwarfInstructions.hpp:89
#14 0x000000000d5f7aa3 in libunwind::DwarfInstructions<libunwind::LocalAddressSpace, libunwind::Registers_x86_64>::stepWithDwarf (addressSpace=..., pc=<optimized out>, fdeStart=<optimized out>, 
    registers=...) at ../contrib/libunwind/src/DwarfInstructions.hpp:201
#15 0x000000000d5f75f7 in libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_x86_64>::stepWithDwarfFDE (this=0x7f2e9845a608) at ../contrib/libunwind/src/UnwindCursor.hpp:933
#16 libunwind::UnwindCursor<libunwind::LocalAddressSpace, libunwind::Registers_x86_64>::step (this=0x7f2e9845a608) at ../contrib/libunwind/src/UnwindCursor.hpp:1987
#17 0x000000000d5f6069 in unw_backtrace (buffer=0x7f2e9845a770, size=<optimized out>) at ../contrib/libunwind/src/libunwind.cpp:297
#18 0x000000000584dc28 in StackTrace::tryCapture (this=0x7f2e9845a760) at ../src/Common/StackTrace.cpp:291
#19 StackTrace::StackTrace (this=0x7f2e9845a760, signal_context=...) at ../src/Common/StackTrace.cpp:260
#20 0x0000000005867ab6 in DB::(anonymous namespace)::writeTraceInfo (trace_type=DB::TraceType::CPU, info=<optimized out>, context=<optimized out>) at ../src/Common/QueryProfiler.cpp:61
#21 DB::QueryProfilerCpu::signalHandler (sig=<optimized out>, info=<optimized out>, context=<optimized out>) at ../src/Common/QueryProfiler.cpp:194
#22 <signal handler called>
#23 0x00007ffea4781e6d in gettimeofday ()
#24 0x0000000009d1334d in DB::ExtendedLogMessage::getFrom (base=...) at ../base/loggers/ExtendedLogChannel.cpp:21
#25 0x0000000009d10b83 in DB::OwnSplitChannel::logSplit (this=0x7f2f0ae0d460, msg=...) at ../base/loggers/OwnSplitChannel.cpp:41
#26 0x0000000009d10a72 in DB::OwnSplitChannel::log (this=0x7f2f0ae0d460, msg=...) at ../base/loggers/OwnSplitChannel.cpp:35
#27 0x000000000aa6bd90 in DB::AggregatingInOrderTransform::prepare (this=0x7f2e799e8a18) at ../src/Processors/Transforms/AggregatingInOrderTransform.cpp:204
#28 0x000000000a5cd4c6 in DB::PipelineExecutor::prepareProcessor (this=0x7f2e8abbef98, pid=84, thread_number=10, queue=..., node_lock=<error reading variable: Cannot access memory at address 0xb70c>)
    at ../src/Processors/Executors/PipelineExecutor.cpp:291
#29 0x000000000a5cfc03 in DB::PipelineExecutor::executeStepImpl (this=0x7f2e8abbef98, thread_num=10, num_threads=32, yield_flag=0x0) at ../src/Processors/Executors/PipelineExecutor.cpp:658
#30 0x000000000a5d173a in DB::PipelineExecutor::executeSingleThread (this=<optimized out>, thread_num=0, num_threads=254047) at ../src/Processors/Executors/PipelineExecutor.cpp:546
#31 DB::PipelineExecutor::executeImpl(unsigned long)::$_6::operator()() const (this=0x7f2e9441a798) at ../src/Processors/Executors/PipelineExecutor.cpp:803
#32 _ZNSt3__118__invoke_constexprIRKZN2DB16PipelineExecutor11executeImplEmE3$_6JEEEDTclclsr3std3__1E7forwardIT_Efp_Espclsr3std3__1E7forwardIT0_Efp0_EEEOS6_DpOS7_ (__f=...)
    at ../contrib/libcxx/include/type_traits:3525
#33 _ZNSt3__118__apply_tuple_implIRKZN2DB16PipelineExecutor11executeImplEmE3$_6RKNS_5tupleIJEEEJEEEDcOT_OT0_NS_15__tuple_indicesIJXspT1_EEEE (__f=..., __t=...) at ../contrib/libcxx/include/tuple:1415
#34 std::__1::apply<DB::PipelineExecutor::executeImpl(unsigned long)::$_6(std::__1::tuple<> const&) const&> (__f=..., __t=...) at ../contrib/libcxx/include/tuple:1424
#35 _ZZN20ThreadFromGlobalPoolC1IZN2DB16PipelineExecutor11executeImplEmE3$_6JEEEOT_DpOT0_ENKUlvE_clEv (this=<optimized out>) at ../src/Common/ThreadPool.h:168
#36 _ZNSt3__18__invokeIRZN20ThreadFromGlobalPoolC1IZN2DB16PipelineExecutor11executeImplEmE3$_6JEEEOT_DpOT0_EUlvE_JEEEDTclclsr3std3__1E7forwardIS6_Efp_Espclsr3std3__1E7forwardIS8_Efp0_EEES7_SA_ (__f=...)
    at ../contrib/libcxx/include/type_traits:3519
#37 _ZNSt3__128__invoke_void_return_wrapperIvE6__callIJRZN20ThreadFromGlobalPoolC1IZN2DB16PipelineExecutor11executeImplEmE3$_6JEEEOT_DpOT0_EUlvE_EEEvDpOT_ (__args=...)
    at ../contrib/libcxx/include/__functional_base:348
#38 _ZNSt3__110__function12__alloc_funcIZN20ThreadFromGlobalPoolC1IZN2DB16PipelineExecutor11executeImplEmE3$_6JEEEOT_DpOT0_EUlvE_NS_9allocatorISC_EEFvvEEclEv (this=<optimized out>)
    at ../contrib/libcxx/include/functional:1540
#39 _ZNSt3__110__function6__funcIZN20ThreadFromGlobalPoolC1IZN2DB16PipelineExecutor11executeImplEmE3$_6JEEEOT_DpOT0_EUlvE_NS_9allocatorISC_EEFvvEEclEv (this=0x7f2e9441a780)
    at ../contrib/libcxx/include/functional:1714
#40 0x000000000586bcb6 in std::__1::__function::__value_func<void ()>::operator()() const (this=0x7f2e9845c1c0) at ../contrib/libcxx/include/functional:1867
#41 std::__1::function<void ()>::operator()() const (this=0x7f2e9845c1c0) at ../contrib/libcxx/include/functional:2473
---Type <return> to continue, or q <return> to quit---
#42 ThreadPoolImpl<std::__1::thread>::worker (this=0x7f2f0ae53800, thread_it=...) at ../src/Common/ThreadPool.cpp:227
#43 0x000000000586de7b in void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#3}::operator()() const (
    this=0x7f2f0ae5db68) at ../src/Common/ThreadPool.cpp:108
#44 std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#3}> (__f=...)
    at ../contrib/libcxx/include/type_traits:3519
#45 std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#3}>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#3}>&, std::__1::__tuple_indices<>) (__t=...)
    at ../contrib/libcxx/include/thread:273
#46 std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#3}> >(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::{lambda()#3}>) (__vp=0x7f2f0ae5db60)
    at ../contrib/libcxx/include/thread:284
#47 0x00007f2f0c6036db in start_thread (arg=0x7f2e98461700) at pthread_create.c:463
#48 0x00007f2f0bf2088f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95
```

In line 22 query profiler tried to capture a stacktrace, but it got a segfault for some reason. Segfault was handled in `BaseDeamon` in line 10, but we got another segfault at the same line, while capturing stacktrace for the second time. Since it already was in signal handler it wasn't handled and nothing was printed lo the log.
