ID: 70719
Title: Logical error found by AST Fuzzer: Unexpected node type for table expression. Expected table, table function, query, union, join or array join. Actual IDENTIFIER
Description:
https://s3.amazonaws.com/clickhouse-test-reports/66532/4db12c5607e7c05f997006004919e082c59cc090/ast_fuzzer__debug_/fatal.log

```sql
2024.10.15 20:02:02.667336 [ 195 ] {3f735fc1-70c9-44b6-95e6-7c264e4a4243} <Fatal> : Logical error: 'Unexpected node type for table expression. Expected table, table function, query, union, join or array join. Actual IDENTIFIER'.
2024.10.15 20:02:02.686733 [ 195 ] {3f735fc1-70c9-44b6-95e6-7c264e4a4243} <Fatal> : Stack trace (when copying this message, always include the lines below):

2024.10.15 20:05:56.088133 [ 1819 ] {} <Fatal> BaseDaemon: ########## Short fault info ############
2024.10.15 20:05:56.088166 [ 1819 ] {} <Fatal> BaseDaemon: (version 24.10.1.1762, build id: AD0BC099A5BD764578132B0EC087451E0241E7DA, git hash: 15972d405b868b70e22569f623a2f5016cbc6821, architecture: x86_64) (from thread 195) Received signal 6
2024.10.15 20:05:56.088186 [ 1819 ] {} <Fatal> BaseDaemon: Signal description: Aborted
2024.10.15 20:05:56.088192 [ 1819 ] {} <Fatal> BaseDaemon: 
2024.10.15 20:05:56.088208 [ 1819 ] {} <Fatal> BaseDaemon: Stack trace: 0x000000000c45df68 0x000000000c6ac985 0x00007f98a5907520 0x00007f98a595b9fd 0x00007f98a5907476 0x00007f98a58ed7f3 0x000000000c42f013 0x000000000c42fad4 0x000000000710820c 0x00000000095d8bab 0x0000000011027997 0x0000000011703f88 0x00000000117036e7 0x00000000116fa1ea 0x0000000011978096 0x0000000011976569 0x0000000011978ea4 0x000000001191120b 0x0000000011c4ef98 0x0000000011c4b57d 0x0000000013043a29 0x0000000013059219 0x000000001692e7e7 0x000000001692ecbe 0x00000000168db232 0x00000000168d8f43 0x00007f98a5959ac3 0x00007f98a59eb850
2024.10.15 20:05:56.088215 [ 1819 ] {} <Fatal> BaseDaemon: ########################################
2024.10.15 20:05:56.088264 [ 1819 ] {} <Fatal> BaseDaemon: (version 24.10.1.1762, build id: AD0BC099A5BD764578132B0EC087451E0241E7DA, git hash: 15972d405b868b70e22569f623a2f5016cbc6821) (from thread 195) (query_id: 3f735fc1-70c9-44b6-95e6-7c264e4a4243) (query: SELECT * FROM fuzzJSON(`02918_json_fuzzer`, equals(random_seed, view(SELECT          materialize(19),     1, toUInt16(id) AS id FROM data__fuzz_41), 54321)) LIMIT 10) Received signal Aborted (6)
2024.10.15 20:05:56.088283 [ 1819 ] {} <Fatal> BaseDaemon: 
2024.10.15 20:05:56.088296 [ 1819 ] {} <Fatal> BaseDaemon: Stack trace: 0x000000000c45df68 0x000000000c6ac985 0x00007f98a5907520 0x00007f98a595b9fd 0x00007f98a5907476 0x00007f98a58ed7f3 0x000000000c42f013 0x000000000c42fad4 0x000000000710820c 0x00000000095d8bab 0x0000000011027997 0x0000000011703f88 0x00000000117036e7 0x00000000116fa1ea 0x0000000011978096 0x0000000011976569 0x0000000011978ea4 0x000000001191120b 0x0000000011c4ef98 0x0000000011c4b57d 0x0000000013043a29 0x0000000013059219 0x000000001692e7e7 0x000000001692ecbe 0x00000000168db232 0x00000000168d8f43 0x00007f98a5959ac3 0x00007f98a59eb850
2024.10.15 20:05:56.111768 [ 1819 ] {} <Fatal> BaseDaemon: 0.0. inlined from /build/src/Common/StackTrace.cpp:380: StackTrace::tryCapture()
2024.10.15 20:05:56.111804 [ 1819 ] {} <Fatal> BaseDaemon: 0. /build/src/Common/StackTrace.cpp:349: StackTrace::StackTrace(ucontext_t const&) @ 0x000000000c45df68

2024.10.15 20:05:56.128541 [ 1819 ] {} <Fatal> BaseDaemon: 1. /build/src/Common/SignalHandlers.cpp:85: signalHandler(int, siginfo_t*, void*) @ 0x000000000c6ac985
2024.10.15 20:05:56.128593 [ 1819 ] {} <Fatal> BaseDaemon: 2. ? @ 0x00007f98a5907520
2024.10.15 20:05:56.128609 [ 1819 ] {} <Fatal> BaseDaemon: 3. ? @ 0x00007f98a595b9fd
2024.10.15 20:05:56.128622 [ 1819 ] {} <Fatal> BaseDaemon: 4. ? @ 0x00007f98a5907476
2024.10.15 20:05:56.128636 [ 1819 ] {} <Fatal> BaseDaemon: 5. ? @ 0x00007f98a58ed7f3

2024.10.15 20:05:56.160115 [ 1819 ] {} <Fatal> BaseDaemon: 6. /build/src/Common/Exception.cpp:48: DB::abortOnFailedAssertion(String const&, void* const*, unsigned long, unsigned long) @ 0x000000000c42f013

2024.10.15 20:05:56.179858 [ 1819 ] {} <Fatal> BaseDaemon: 7.0. inlined from /build/src/Common/Exception.cpp:71: DB::handle_error_code(String const&, int, bool, std::vector<void*, std::allocator<void*>> const&)
2024.10.15 20:05:56.179918 [ 1819 ] {} <Fatal> BaseDaemon: 7. /build/src/Common/Exception.cpp:115: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c42fad4
2024.10.15 20:05:56.189808 [ 1819 ] {} <Fatal> BaseDaemon: 8.0. inlined from /build/src/Common/Exception.h:110: Exception
2024.10.15 20:05:56.189848 [ 1819 ] {} <Fatal> BaseDaemon: 8. /build/src/Common/Exception.h:63: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x000000000710820c
2024.10.15 20:05:56.202038 [ 1819 ] {} <Fatal> BaseDaemon: 9. /build/src/Common/Exception.h:128: DB::Exception::Exception<char const*>(int, FormatStringHelperImpl<std::type_identity<char const*>::type>, char const*&&) @ 0x00000000095d8bab
2024.10.15 20:05:56.228799 [ 1819 ] {} <Fatal> BaseDaemon: 10. /build/src/Analyzer/Utils.cpp:489: DB::extractTableExpressions(std::shared_ptr<DB::IQueryTreeNode> const&, bool, bool) @ 0x0000000011027997
2024.10.15 20:05:56.237533 [ 1819 ] {} <Fatal> BaseDaemon: 11.0. inlined from /build/src/Analyzer/Passes/RemoveUnusedProjectionColumnsPass.cpp:43: DB::(anonymous namespace)::CollectUsedColumnsVisitor::enterImpl(std::shared_ptr<DB::IQueryTreeNode>&)
2024.10.15 20:05:56.237579 [ 1819 ] {} <Fatal> BaseDaemon: 11. /build/src/Analyzer/InDepthQueryTreeVisitor.h:153: DB::InDepthQueryTreeVisitorWithContext<DB::(anonymous namespace)::CollectUsedColumnsVisitor>::visit(std::shared_ptr<DB::IQueryTreeNode>&) @ 0x0000000011703f88
2024.10.15 20:05:56.246773 [ 1819 ] {} <Fatal> BaseDaemon: 12. /build/src/Analyzer/Passes/RemoveUnusedProjectionColumnsPass.cpp:147: DB::RemoveUnusedProjectionColumnsPass::run(std::shared_ptr<DB::IQueryTreeNode>&, std::shared_ptr<DB::Context const>) @ 0x00000000117036e7
2024.10.15 20:05:56.264269 [ 1819 ] {} <Fatal> BaseDaemon: 13. /build/src/Analyzer/QueryTreePassManager.cpp:185: DB::QueryTreePassManager::run(std::shared_ptr<DB::IQueryTreeNode>) @ 0x00000000116fa1ea
2024.10.15 20:05:56.287185 [ 1819 ] {} <Fatal> BaseDaemon: 14. /build/src/Interpreters/InterpreterSelectQueryAnalyzer.cpp:142: DB::(anonymous namespace)::buildQueryTreeAndRunPasses(std::shared_ptr<DB::IAST> const&, DB::SelectQueryOptions const&, std::shared_ptr<DB::Context const> const&, std::shared_ptr<DB::IStorage> const&) @ 0x0000000011978096
2024.10.15 20:05:56.304722 [ 1819 ] {} <Fatal> BaseDaemon: 15. /build/src/Interpreters/InterpreterSelectQueryAnalyzer.cpp:160: DB::InterpreterSelectQueryAnalyzer::InterpreterSelectQueryAnalyzer(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context const> const&, DB::SelectQueryOptions const&, std::vector<String, std::allocator<String>> const&) @ 0x0000000011976569
2024.10.15 20:05:56.326665 [ 1819 ] {} <Fatal> BaseDaemon: 16. /build/contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:714: std::__unique_if<DB::InterpreterSelectQueryAnalyzer>::__unique_single std::make_unique[abi:v15007]<DB::InterpreterSelectQueryAnalyzer, std::shared_ptr<DB::IAST>&, std::shared_ptr<DB::Context> const&, DB::SelectQueryOptions const&>(std::shared_ptr<DB::IAST>&, std::shared_ptr<DB::Context> const&, DB::SelectQueryOptions const&) @ 0x0000000011978ea4

2024.10.15 20:05:56.335061 [ 1819 ] {} <Fatal> BaseDaemon: 17.0. inlined from /build/contrib/llvm-project/libcxx/include/__functional/function.h:848: ?
2024.10.15 20:05:56.335118 [ 1819 ] {} <Fatal> BaseDaemon: 17.1. inlined from /build/contrib/llvm-project/libcxx/include/__functional/function.h:1197: ?
2024.10.15 20:05:56.335140 [ 1819 ] {} <Fatal> BaseDaemon: 17. /build/src/Interpreters/InterpreterFactory.cpp:362: DB::InterpreterFactory::get(std::shared_ptr<DB::IAST>&, std::shared_ptr<DB::Context>, DB::SelectQueryOptions const&) @ 0x000000001191120b
2024.10.15 20:05:56.386211 [ 1819 ] {} <Fatal> BaseDaemon: 18. /build/src/Interpreters/executeQuery.cpp:1335: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x0000000011c4ef98
2024.10.15 20:05:56.441641 [ 1819 ] {} <Fatal> BaseDaemon: 19. /build/src/Interpreters/executeQuery.cpp:1565: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000011c4b57d
2024.10.15 20:05:56.476896 [ 1819 ] {} <Fatal> BaseDaemon: 20. /build/src/Server/TCPHandler.cpp:587: DB::TCPHandler::runImpl() @ 0x0000000013043a29

2024.10.15 20:05:56.532416 [ 1819 ] {} <Fatal> BaseDaemon: 21. /build/src/Server/TCPHandler.cpp:2519: DB::TCPHandler::run() @ 0x0000000013059219
2024.10.15 20:05:56.535560 [ 1819 ] {} <Fatal> BaseDaemon: 22. /build/base/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x000000001692e7e7
2024.10.15 20:05:56.539733 [ 1819 ] {} <Fatal> BaseDaemon: 23. /build/base/poco/Net/src/TCPServerDispatcher.cpp:115: Poco::Net::TCPServerDispatcher::run() @ 0x000000001692ecbe
2024.10.15 20:05:56.544395 [ 1819 ] {} <Fatal> BaseDaemon: 24. /build/base/poco/Foundation/src/ThreadPool.cpp:205: Poco::PooledThread::run() @ 0x00000000168db232
2024.10.15 20:05:56.548698 [ 1819 ] {} <Fatal> BaseDaemon: 25. /build/base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x00000000168d8f43
2024.10.15 20:05:56.548745 [ 1819 ] {} <Fatal> BaseDaemon: 26. ? @ 0x00007f98a5959ac3
2024.10.15 20:05:56.548755 [ 1819 ] {} <Fatal> BaseDaemon: 27. ? @ 0x00007f98a59eb850
2024.10.15 20:05:56.548766 [ 1819 ] {} <Fatal> BaseDaemon: Integrity check of the executable skipped because the reference checksum could not be read.

2024.10.15 20:05:56.990736 [ 1819 ] {} <Fatal> BaseDaemon: This ClickHouse version is not official and should be upgraded to the official build.
2024.10.15 20:05:56.990978 [ 1819 ] {} <Fatal> BaseDaemon: Changed settings: receive_timeout = 10., receive_data_timeout_ms = 10000, totals_mode = 'after_having_auto', allow_suspicious_low_cardinality_types = true, compile_expressions = true, min_count_to_compile_expression = 0, group_by_two_level_threshold = 1000, distributed_aggregation_memory_efficient = true, optimize_skip_unused_shards = true, force_optimize_skip_unused_shards = 2, log_queries = true, log_queries_min_type = 'QUERY_FINISH', table_function_remote_max_addresses = 200, prefer_column_name_to_alias = true, max_rows_to_group_by = 1000, group_by_overflow_mode = 'any', max_execution_time = 10., max_memory_usage = 10000000000, send_logs_level = 'fatal', prefer_localhost_replica = true, allow_introspection_functions = true, optimize_use_implicit_projections = true
2024.10.15 20:06:03.922695 [ 177 ] {} <Fatal> Application: Child process was terminated by signal 6.

```
