ID: 7681
Title: Single INSERT sql will cause Fatal bug
Description:
**Describe the bug or unexpected behaviour**
Repeated assignments when inserting data can cause a database crash

**How to reproduce**
I create a test table:
`CREATE TABLE IF NOT EXISTS test (date Date,time Int64,value UInt64) engine=MergeTree() PARTITION BY date ORDER BY (time) PRIMARY KEY (time)`

when I insert data, I made a mistake, I repeat assignment to a field, just like:
`INSERT INTO test (date, time, value, time) VALUES ('2019-11-08', 1573185600, 100, 1573185600)`

then, clickhouse-server is crashed

**Expected behavior**
Returns an error, at least not crash

**Error message and/or stacktrace**
> 2019.11.08 14:59:51.482470 [ 56 ] {} \<Fatal\> BaseDaemon: ########################################
> 2019.11.08 14:59:51.482565 [ 56 ] {} \<Fatal\> BaseDaemon: (version 19.16.2.2 (official build)) (from thread 28) Received signal Segmentation fault (11).
> 2019.11.08 14:59:51.482594 [ 56 ] {} \<Fatal\> BaseDaemon: Address: NULL pointer. Access: read. Address not mapped to object.
> 2019.11.08 14:59:51.482621 [ 56 ] {} \<Fatal\> BaseDaemon: Stack trace: 0x55556e8d27d6 0x55556e93abb6 0x55556e941913 0x55556b7b469d 0x55556b7b519b 0x55556b7b52de 0x55556b7b586e 0x55556b7b5ae1 0x55556b7b7115 0x55556b7b739b 0x55556f64ffe0 0x55556f6506fd 0x555570d268d1 0x555570d2467c 0x5555714961e0 0x7f08c0acae65 0x7f08c03e788d
> 2019.11.08 14:59:51.558099 [ 56 ] {} \<Fatal\> BaseDaemon: 3. 0x55556e8d27d6 DB::Block::bytes() const /usr/bin/clickhouse
> 2019.11.08 14:59:51.558158 [ 56 ] {} \<Fatal\> BaseDaemon: 4. 0x55556e93abb6 DB::BlockStreamProfileInfo::update(DB::Block&) /usr/bin/clickhouse
> 2019.11.08 14:59:51.558176 [ 56 ] {} \<Fatal\> BaseDaemon: 5. 0x55556e941913 DB::IBlockInputStream::read() /usr/bin/clickhouse
> 2019.11.08 14:59:51.558189 [ 56 ] {} \<Fatal\> BaseDaemon: 6. 0x55556b7b469d DB::TCPHandler::receiveData() /usr/bin/clickhouse
> 2019.11.08 14:59:51.558202 [ 56 ] {} \<Fatal\> BaseDaemon: 7. 0x55556b7b519b DB::TCPHandler::receivePacket() /usr/bin/clickhouse
> 2019.11.08 14:59:51.558217 [ 56 ] {} \<Fatal\> BaseDaemon: 8. 0x55556b7b52de DB::TCPHandler::readDataNext(unsigned long const&, int const&) /usr/bin/clickhouse
> 2019.11.08 14:59:51.558236 [ 56 ] {} \<Fatal\> BaseDaemon: 9. 0x55556b7b586e DB::TCPHandler::readData(DB::Settings const&) /usr/bin/clickhouse
> 2019.11.08 14:59:51.558252 [ 56 ] {} \<Fatal\> BaseDaemon: 10. 0x55556b7b5ae1 DB::TCPHandler::processInsertQuery(DB::Settings const&) /usr/bin/clickhouse
> 2019.11.08 14:59:51.558265 [ 56 ] {} \<Fatal\> BaseDaemon: 11. 0x55556b7b7115 DB::TCPHandler::runImpl() /usr/bin/clickhouse
> 2019.11.08 14:59:51.558289 [ 56 ] {} \<Fatal\> BaseDaemon: 12. 0x55556b7b739b DB::TCPHandler::run() /usr/bin/clickhouse
> 2019.11.08 14:59:51.558306 [ 56 ] {} \<Fatal\> BaseDaemon: 13. 0x55556f64ffe0 Poco::Net::TCPServerConnection::start() /usr/bin/clickhouse
> 2019.11.08 14:59:51.558320 [ 56 ] {} \<Fatal\> BaseDaemon: 14. 0x55556f6506fd Poco::Net::TCPServerDispatcher::run() /usr/bin/clickhouse
> 2019.11.08 14:59:51.558336 [ 56 ] {} \<Fatal\> BaseDaemon: 15. 0x555570d268d1 Poco::PooledThread::run() /usr/bin/clickhouse
> 2019.11.08 14:59:51.558349 [ 56 ] {} \<Fatal\> BaseDaemon: 16. 0x555570d2467c Poco::ThreadImpl::runnableEntry(void*) /usr/bin/clickhouse
> 2019.11.08 14:59:51.558360 [ 56 ] {} \<Fatal\> BaseDaemon: 17. 0x5555714961e0 ? /usr/bin/clickhouse
> 2019.11.08 14:59:51.558375 [ 56 ] {} \<Fatal\> BaseDaemon: 18. 0x7f08c0acae65 start_thread /usr/lib64/libpthread-2.17.so
> 2019.11.08 14:59:51.558392 [ 56 ] {} \<Fatal\> BaseDaemon: 19. 0x7f08c03e788d __clone /usr/lib64/libc-2.17.so