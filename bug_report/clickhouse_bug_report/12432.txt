ID: 12432
Title: Format overwriting problem
Description:
**Describe the bug**

It's not really a bug, it's a bug caused by the output format architecture(maybe), but I'm issuing it as a bug here!

**Problem**

In the MySQL protocol, we set the default format as 'MySQLWire' 
```
 connection_context.setDefaultFormat("MySQLWire");
```

We expect it to follow the MySQL wire protocol format and send it to the client, it works well except:
```
mysql> SELECT 1 FORMAT JSON;
```

The `executeQuery` method will pick the `JSON` as its BlockOutputStream instead of the default `MySQLWire`, and send it as the MySQL wire packet to the client:
```
mysql> select 1 FORMAT JSON;
ERROR 2013 (HY000): Lost connection to MySQL server during query
``` 

clickhouse-server.log:
```
2020.07.12 18:22:06.279223 [ 115265 ] {} <Debug> MySQLHandler: Received command: 3. Connection id: 1.
2020.07.12 18:22:06.280101 [ 115265 ] {} <Debug> executeQuery: (from 127.0.0.1:45318) select 1 FORMAT JSON
2020.07.12 18:22:06.281131 [ 115265 ] {} <Trace> ContextAccess (default): Access granted: SELECT(dummy) ON system.one
2020.07.12 18:22:06.281507 [ 115265 ] {} <Trace> InterpreterSelectQuery: FetchColumns -> Complete
... ...
2020.07.12 18:22:06.284350 [ 115265 ] {} <Error> MySQLHandler: DB::Exception: Cannot read all data. Bytes read: 0. Bytes expected: 3.

```

This problem exists as long as you specify a format by default, such as:
```
explain select 1;
```
The clickhouse-server side specifies TSV format by default.

In a general sense, the BlockOutputStream should be nested instead of overwriting:
MySQLWrireFormat(TSVFormat)

Related #12425
Cc @alexey-milovidov 