ID: 66740
Title: Crash Bug - Segmentation fault - Address: NULL pointer. Access: read. Address not mapped to object.
Description:
Crash bug on ClickHouse server version version 24.3.3.102 (official build),  It has been running normally for a month.,  All nodes are down within a short period of time.

```
2024.07.19 10:33:31.702639 [ 28272 ] {} <Fatal> BaseDaemon: ########## Short fault info ############
2024.07.19 10:33:31.702671 [ 28272 ] {} <Fatal> BaseDaemon: (version 24.3.3.102 (official build), build id: EF9E1BD0781C858153E899F2D95A044F4DD82F9B, git hash: 7e7f3bdd9be3ced03925d1d602037db8687e6401) (from thread 28069) Received signal 11
2024.07.19 10:33:31.702693 [ 28272 ] {} <Fatal> BaseDaemon: Signal description: Segmentation fault
2024.07.19 10:33:31.702701 [ 28272 ] {} <Fatal> BaseDaemon: Address: NULL pointer. Access: read. Address not mapped to object.
2024.07.19 10:33:31.702710 [ 28272 ] {} <Fatal> BaseDaemon: Stack trace: 0x0000000011c223c6 0x0000000011c1805c 0x0000000011c2619a 0x000000000fd99d07 0x000000000fd9ae73 0x000000000cc7714d 0x00007f2abd06122a 0x00007f2abd0e3cf0
2024.07.19 10:33:31.702716 [ 28272 ] {} <Fatal> BaseDaemon: ########################################
2024.07.19 10:33:31.702724 [ 28272 ] {} <Fatal> BaseDaemon: (version 24.3.3.102 (official build), build id: EF9E1BD0781C858153E899F2D95A044F4DD82F9B, git hash: 7e7f3bdd9be3ced03925d1d602037db8687e6401) (from thread 28069) (no query) Received signal Segmentation fault (11)
2024.07.19 10:33:31.702742 [ 28272 ] {} <Fatal> BaseDaemon: Address: NULL pointer. Access: read. Address not mapped to object.
2024.07.19 10:33:31.702748 [ 28272 ] {} <Fatal> BaseDaemon: Stack trace: 0x0000000011c223c6 0x0000000011c1805c 0x0000000011c2619a 0x000000000fd99d07 0x000000000fd9ae73 0x000000000cc7714d 0x00007f2abd06122a 0x00007f2abd0e3cf0
2024.07.19 10:33:31.702806 [ 28272 ] {} <Fatal> BaseDaemon: 2. DB::DistributedAsyncInsertDirectoryQueue::processFile(String&, DB::SettingsChanges const&) @ 0x0000000011c223c6
2024.07.19 10:33:31.702819 [ 28272 ] {} <Fatal> BaseDaemon: 3. DB::DistributedAsyncInsertDirectoryQueue::processFiles(DB::SettingsChanges const&) @ 0x0000000011c1805c
2024.07.19 10:33:31.702856 [ 28272 ] {} <Fatal> BaseDaemon: 4. void std::__function::__policy_invoker<void ()>::__call_impl<std::__function::__default_alloc_func<DB::DistributedAsyncInsertDirectoryQueue::DistributedAsyncInsertDirectoryQueue(DB::StorageDistributed&, std::shared_ptr<DB::IDisk> const&, String const&, std::shared_ptr<DB::ConnectionPoolWithFailover>, DB::ActionBlocker&, DB::BackgroundSchedulePool&)::$_0, void ()>>(std::__function::__policy_storage const*) @ 0x0000000011c2619a
2024.07.19 10:33:31.702880 [ 28272 ] {} <Fatal> BaseDaemon: 5. DB::BackgroundSchedulePool::threadFunction() @ 0x000000000fd99d07
2024.07.19 10:33:31.702936 [ 28272 ] {} <Fatal> BaseDaemon: 6. void std::__function::__policy_invoker<void ()>::__call_impl<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<DB::BackgroundSchedulePool::BackgroundSchedulePool(unsigned long, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>, char const*)::$_0>(DB::BackgroundSchedulePool::BackgroundSchedulePool(unsigned long, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>, char const*)::$_0&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0x000000000fd9ae73
2024.07.19 10:33:31.702982 [ 28272 ] {} <Fatal> BaseDaemon: 7. void* std::__thread_proxy[abi:v15000]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0x000000000cc7714d
2024.07.19 10:33:31.702999 [ 28272 ] {} <Fatal> BaseDaemon: 8. ? @ 0x00007f2abd06122a
2024.07.19 10:33:31.703004 [ 28272 ] {} <Fatal> BaseDaemon: 9. ? @ 0x00007f2abd0e3cf0
2024.07.19 10:33:31.935150 [ 28272 ] {} <Fatal> BaseDaemon: Integrity check of the executable successfully passed (checksum: F3691ADAC982D94BEEF75EF7C8E42F75)
2024.07.19 10:33:31.935195 [ 28272 ] {} <Fatal> BaseDaemon: Report this error to https://github.com/ClickHouse/ClickHouse/issues

```

It's not caused by queryï¼Œ Are there any methods for me to troubleshoot?