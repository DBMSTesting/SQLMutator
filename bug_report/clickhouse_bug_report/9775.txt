ID: 9775
Title: splitByString segmentation fault on empty string.
Description:
```:) SELECT splitByString('', '')

SELECT splitByString('', '')


Exception on client:
Code: 32. DB::Exception: Attempt to read after eof: while receiving packet from localhost:9000
```

```
2020.03.20 14:41:38.305093 [ 20490 ] {4a432d28-2b6b-4d32-8852-94569a97c469} <Debug> executeQuery: (from [::1]:33046) SELECT splitByString('', '')                                                                                                                                                                                                                                              
=================================================================                                                                                                                                                                                                                                                                                                                              
==20316==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fc4d31f1128 at pc 0x00000a945a89 bp 0x7fc4d31f1010 sp 0x7fc4d31f07c0                                                                                                                                                                                                                                                     
READ of size 1 at 0x7fc4d31f1128 thread T172 (TCPHandler)                                                                                                                                                                                                                                                                                                                                      
    #0 0xa945a88 in __asan_memcpy (/home/alesap/code/cpp/BuildCH/dbms/programs/clickhouse+0xa945a88)
    #1 0xbaef19a in DB::FunctionTokens<DB::SplitByStringImpl>::executeImpl(DB::Block&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, unsigned long, unsigned long) (/home/alesap/code/cpp/BuildCH/dbms/programs/clickhouse+0xbaef19a)
    #2 0xb05a0e0 in DB::ExecutableFunctionAdaptor::execute(DB::Block&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, unsigned long, unsigned long, bool) (/home/alesap/code/cpp/BuildCH/dbms/programs/clickhouse+0xb05a0e0)    #3 0x17f8c0ef in DB::ExpressionAction::prepare(DB::Block&, DB::Settings const&, std::__1::unordered_set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__
1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&) /home/alesap/code/cpp/ClickHouse/dbms/src/Interpreters/ExpressionActions.cpp:202:27    #4 0x17f97414 in DB::ExpressionActions::addImpl(DB::ExpressionAction, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&) /home/alesap/code/cpp/ClickHouse/dbms/src/Interpreters/ExpressionActions.cpp:589:12
    #5 0x17f96851 in DB::ExpressionActions::add(DB::ExpressionAction const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&) /home/alesap/code/cpp/ClickHouse/dbms/src/Interpreters/ExpressionActions.cpp:550:5    #6 0x18469772 in DB::ScopeStack::addAction(DB::ExpressionAction const&) /home/alesap/code/cpp/ClickHouse/dbms/src/Interpreters/ActionsVisitor.cpp:260:27
    #7 0x18471ea9 in DB::ActionsMatcher::Data::addAction(DB::ExpressionAction const&) /home/alesap/code/cpp/ClickHouse/dbms/src/Interpreters/ActionsVisitor.h:108:27    #8 0x18471ea9 in DB::ActionsMatcher::visit(DB::ASTFunction const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) /home/alesap/code/cpp/ClickHouse/dbms/src/Interpreters/ActionsVisitor.cpp:586    #9 0x1844c519 in DB::InDepthNodeVisitor<DB::ActionsMatcher, true, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) /home/alesap/code/cpp/ClickHouse/dbms/src/Interpreters/InDepthNodeVisitor.h:32:9
    #10 0x1844c589 in DB::InDepthNodeVisitor<DB::ActionsMatcher, true, std::__1::shared_ptr<DB::IAST> const>::visitChildren(std::__1::shared_ptr<DB::IAST> const&) /home/alesap/code/cpp/ClickHouse/dbms/src/Interpreters/InDepthNodeVisitor.h:47:17    #11 0x1844c589 in DB::InDepthNodeVisitor<DB::ActionsMatcher, true, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) /home/alesap/code/cpp/ClickHouse/dbms/src/Interpreters/InDepthNodeVisitor.h:35
    #12 0x1843050d in DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ExpressionActions>&, bool) /home/alesap/code/cpp/ClickHouse/dbms/src/Interpreters/ExpressionAnalyzer.cpp:381:48
    #13 0x1843d0df in DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) /home/alesap/code/cpp/ClickHouse/dbms/src/Interpreters/ExpressionAnalyzer.cpp:773:5
    #14 0x18446e10 in DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, bool, bool, bool, std::__1::shared_ptr<DB::FilterInfo> const&, DB::Block const&) /home/alesap/code/cpp/ClickHouse/dbms/src/Interpreters/ExpressionAnalyzer.cpp:1077:24
    #15 0x1805487b in DB::InterpreterSelectQuery::getSampleBlockImpl(bool) /home/alesap/code/cpp/ClickHouse/dbms/src/Interpreters/InterpreterSelectQuery.cpp:511:23
    #16 0x1804b297 in DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<
char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)::$_1::operator()(bool) const /home/alesap/code/cpp/ClickHouse/dbms/src/Interpreters/InterpreterSelectQuery.cpp:365:25
    #17 0x1804122a in DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<
char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) /home/alesap/code/cpp/ClickHouse/dbms/src/Interpreters/InterpreterSelectQuery.cpp:368:5
    #18 0x1803e6ba in DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&
) /home/alesap/code/cpp/ClickHouse/dbms/src/Interpreters/InterpreterSelectQuery.cpp:166:7
    #19 0x18546da4 in std::__1::__unique_if<DB::InterpreterSelectQuery>::__unique_single std::__1::make_unique<DB::InterpreterSelectQuery, std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_trai
ts<char>, std::__1::allocator<char> > > > const&>(std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) /home/alesap/code/cpp/ClickHouse/contri
b/libcxx/include/memory:3028:32
    #20 0x18546da4 in DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<
char> > > > const&) /home/alesap/code/cpp/ClickHouse/dbms/src/Interpreters/InterpreterSelectWithUnionQuery.cpp:89
    #21 0x17f2225e in std::__1::__unique_if<DB::InterpreterSelectWithUnionQuery>::__unique_single std::__1::make_unique<DB::InterpreterSelectWithUnionQuery, std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions>(std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::SelectQueryOptions&&) /home/alesap/code/cpp/ClickHouse/contrib/libcxx/include/memory:3028:32
    #22 0x17f2225e in DB::InterpreterFactory::get(std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::QueryProcessingStage::Enum) /home/alesap/code/cpp/ClickHouse/dbms/src/Interpreters/InterpreterFactory.cpp:98
    #23 0x18c18cce in DB::executeQueryImpl(char const*, char const*, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, DB::ReadBuffer*, bool) /home/alesap/code/cpp/ClickHouse/dbms/src/Interpreters/executeQuery.cpp:307:28
    #24 0x18c16796 in DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, bool) /home/alesap/code/cpp/ClickHouse/dbms/src/Interpreters/executeQuery.cpp:572:30
    #25 0xabbf8bb in DB::TCPHandler::runImpl() /home/alesap/code/cpp/ClickHouse/dbms/programs/server/TCPHandler.cpp:249:24
    #26 0xabe17eb in DB::TCPHandler::run() /home/alesap/code/cpp/ClickHouse/dbms/programs/server/TCPHandler.cpp:1240:9
    #27 0x1a886bae in Poco::Net::TCPServerConnection::start() /home/alesap/code/cpp/ClickHouse/contrib/poco/Net/src/TCPServerConnection.cpp:43:3
    #28 0x1a887921 in Poco::Net::TCPServerDispatcher::run() /home/alesap/code/cpp/ClickHouse/contrib/poco/Net/src/TCPServerDispatcher.cpp:114:20
    #29 0x203827a5 in Poco::PooledThread::run() /home/alesap/code/cpp/ClickHouse/contrib/poco/Foundation/src/ThreadPool.cpp:199:14
    #30 0x2037c84d in Poco::ThreadImpl::runnableEntry(void*) /home/alesap/code/cpp/ClickHouse/contrib/poco/Foundation/src/Thread_POSIX.cpp:345:27
    #31 0x7fc535fba6da in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x76da)
    #32 0x7fc53669188e in clone /build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95
    
Address 0x7fc4d31f1128 is located in stack of thread T172 (TCPHandler) at offset 264 in frame
    #0 0xbaeda3f in DB::FunctionTokens<DB::SplitByStringImpl>::executeImpl(DB::Block&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, unsigned long, unsigned long) (/home/alesap/code/cpp/BuildCH/dbms/programs/clickhouse+0xbaeda3f)
    
  This frame has 17 object(s):
    [32, 96) 'ref.tmp.i'
    [128, 136) 'ref.tmp.i.i'
    [160, 200) 'generator'
    [240, 264) 'src' <== Memory access at offset 264 overflows this variable
    [304, 328) 'dst'
    [368, 432) 'ref.tmp126'
    [464, 488) 'ref.tmp127'
    [528, 536) 'ref.tmp142'
    [560, 624) 'ref.tmp149'
    [656, 680) 'ref.tmp170'
    [720, 744) 'ref.tmp171'
    [784, 808) 'ref.tmp172'
    [848, 872) 'ref.tmp173'
    [912, 936) 'ref.tmp174'
    [976, 1000) 'ref.tmp175'
    [1040, 1064) 'ref.tmp186'
    [1104, 1128) 'ref.tmp199'
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork      (longjmp and C++ exceptions *are* supported)
Thread T172 (TCPHandler) created by T0 here:
    #0 0xa92efad in __interceptor_pthread_create (/home/alesap/code/cpp/BuildCH/dbms/programs/clickhouse+0xa92efad)
    #1 0x2037b804 in Poco::ThreadImpl::startImpl(Poco::SharedPtr<Poco::Runnable, Poco::ReferenceCounter, Poco::ReleasePolicy<Poco::Runnable> >) /home/alesap/code/cpp/ClickHouse/contrib/poco/Foundation/src/Thread_POSIX.cpp:202:6
    #2 0x2037eae4 in Poco::Thread::start(Poco::Runnable&) /home/alesap/code/cpp/ClickHouse/contrib/poco/Foundation/src/Thread.cpp:128:2
    #3 0x2038301b in Poco::PooledThread::start() /home/alesap/code/cpp/ClickHouse/contrib/poco/Foundation/src/ThreadPool.cpp:85:10
    #4 0x2038301b in Poco::ThreadPool::ThreadPool(int, int, int, int) /home/alesap/code/cpp/ClickHouse/contrib/poco/Foundation/src/ThreadPool.cpp:252
    #5 0xa9a9c4e in DB::Server::main(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) /home/alesap/code/cpp/ClickHouse/dbms/programs/server/Server.cpp:658:26
    #6 0x1a8ad0d3 in Poco::Util::Application::run() /home/alesap/code/cpp/ClickHouse/contrib/poco/Util/src/Application.cpp:334:8
    #7 0xa98fe35 in DB::Server::run() /home/alesap/code/cpp/ClickHouse/dbms/programs/server/Server.cpp:178:25
    #8 0xa9e89d1 in mainEntryClickHouseServer(int, char**) /home/alesap/code/cpp/ClickHouse/dbms/programs/server/Server.cpp:1042:20
    #9 0xa979cc7 in main /home/alesap/code/cpp/ClickHouse/dbms/programs/main.cpp:166:12
    #10 0x7fc536591b96 in __libc_start_main /build/glibc-OTsEL5/glibc-2.27/csu/../csu/libc-start.c:310
  
SUMMARY: AddressSanitizer: stack-buffer-overflow (/home/alesap/code/cpp/BuildCH/dbms/programs/clickhouse+0xa945a88) in __asan_memcpy
Shadow bytes around the buggy address:
  0x0ff91a6361d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0ff91a6361e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0ff91a6361f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0ff91a636200: 00 00 00 00 f1 f1 f1 f1 f8 f8 f8 f8 f8 f8 f8 f8
  0x0ff91a636210: f2 f2 f2 f2 f8 f2 f2 f2 00 00 00 00 00 f2 f2 f2
=>0x0ff91a636220: f2 f2 00 00 00[f2]f2 f2 f2 f2 00 00 00 f2 f2 f2
  0x0ff91a636230: f2 f2 00 00 00 00 00 00 00 00 f2 f2 f2 f2 00 00
  0x0ff91a636240: 00 f2 f2 f2 f2 f2 f8 f2 f2 f2 f8 f8 f8 f8 f8 f8
  0x0ff91a636250: f8 f8 f2 f2 f2 f2 f8 f8 f8 f2 f2 f2 f2 f2 f8 f8
  0x0ff91a636260: f8 f2 f2 f2 f2 f2 f8 f8 f8 f2 f2 f2 f2 f2 f8 f8
  0x0ff91a636270: f8 f2 f2 f2 f2 f2 f8 f8 f8 f2 f2 f2 f2 f2 f8 f8
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa 
  Freed heap region:       fd 
  Stack left redzone:      f1 
  Stack mid redzone:       f2 
  Stack right redzone:     f3 
  Stack after return:      f5 
  Stack use after scope:   f8 
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc 
  Array cookie:            ac 
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb 
  Shadow gap:              cc 
==20316==ABORTING
```