ID: 7541
Title: Data loss when use a tuple as the primary key
Description:
**Describe the bug or unexpected behaviour**

If we use a tuple as the primary key, the data in the table will lose when the server restarts.

**How to reproduce**

Version: 19.17.1

```sql
CREATE TABLE test (
    x Tuple(UInt64, UInt64)
)
ENGINE=MergeTree
ORDER BY x
```

```sql
INSERT INTO test SELECT (number, number)
FROM numbers(1000000)
```

```sql
SELECT count()
FROM test

┌─count()─┐
│ 1000000 │
└─────────┘
```

*Restart the server*

```sql
SELECT count()
FROM test

┌─count()─┐
│       0 │
└─────────┘
```

**Error message and/or stacktrace**

```
<Error> auto DB::MergeTreeData::loadDataParts(bool)::(anonymous class)::operator()() const: Code: 226, e.displayText() = DB::Exception: Marks file 'clickhouse_data/data/default/test/all_1_1_0/x.mrk2' doesn't exist, Stack trace:

0. 0x3a269a7 StackTrace::StackTrace()
1. 0x73b6452 DB::MergeTreeDataPart::loadIndexGranularity()
2. 0x73b528e DB::MergeTreeDataPart::loadColumnsChecksumsIndexes(bool, bool)
3. 0x738b664 DB::MergeTreeData::loadDataParts(bool)::$_4::operator()() const
4. 0x3a629f2 ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>)
5. 0x3a64838 std::__1::__function::__func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&)::'lambda'(), std::__1::allocator<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&)::'lambda'()>, void ()>::operator()()
6. 0x3a612e1 ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>)
7. 0x3a635d0 void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()> >(void*)
8. 0x7f60a1d5b182 start_thread /lib/x86_64-linux-gnu/libpthread-2.29.so
9. 0x7f60a1c7eb1f clone /build/glibc-KRRWSm/glibc-2.29/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97
 (version 19.17.1.1)
<Error> default.test: Considering to remove broken part clickhouse_data/data/default/test/all_1_1_0 because it's impossible to repair.
```