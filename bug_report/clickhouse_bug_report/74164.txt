ID: 74164
Title: Assertion on client with JSON with duplicate values
Description:
**Describe the bug**
Use a debug build to reproduce this issue on the client.

**How to reproduce**
Run:
```sql
SET enable_variant_type = 1, allow_experimental_json_type = 1, type_json_skip_duplicated_paths = 1;
CREATE OR REPLACE TABLE t0 (c0 Map(Tuple(JSON(max_dynamic_paths=2)),Variant(UInt32))) ENGINE = Memory;
INSERT INTO TABLE t0 (c0) VALUES (map(('{"a":1,"b":1,"b":1}',),1, ('{"a":1}',),2, ('{"a":1,"c":1}',),2666514966)::Map(Tuple(JSON(max_dynamic_paths=2)),Variant(UInt32)));
/*
src/Columns/ColumnVector.h:212: virtual std::pair<String, DataTypePtr> DB::ColumnVector<long>::getValueNameAndType(size_t) const [T = long]: Assertion `n < data.size()' failed
*/
```
Stack trace:
```
clickhouse: src/Columns/ColumnVector.h:212: virtual std::pair<String, DataTypePtr> DB::ColumnVector<long>::getValueNameAndType(size_t) const [T = long]: Assertion `n < data.size()' failed.
########## Short fault info ############
(version 25.1.1.1, build id: , git hash: 7d2d71e2a3ae7dee7c8504738b9ccba3d16eb80c, architecture: x86_64) (from thread 2280419) Received signal 6
Signal description: Aborted

########################################
(version 25.1.1.1, build id: , git hash: 7d2d71e2a3ae7dee7c8504738b9ccba3d16eb80c) (from thread 2280419) (no query) Received signal Aborted (6)

0.0. inlined from src/Common/StackTrace.cpp:381: StackTrace::tryCapture()
0. src/Common/StackTrace.cpp:350: StackTrace::StackTrace(ucontext_t const&) @ 0x0000000026d70ccd
1. src/Common/SignalHandlers.cpp:102: signalHandler(int, siginfo_t*, void*) @ 0x00000000271f1cf8
2. ? @ 0x000071e3cda45250
3. ? @ 0x000071e3cdaa3f1d
4. ? @ 0x000071e3cda4519e
5. ? @ 0x000071e3cda28902
6. ? @ 0x000071e3cda2881e
7. ? @ 0x000071e3cda3b7c7
8. src/Columns/ColumnVector.h:212: DB::ColumnVector<long>::getValueNameAndType(unsigned long) const @ 0x000000003462a123
9. src/Columns/ColumnObject.cpp:336: DB::ColumnObject::getValueNameAndType(unsigned long) const @ 0x00000000342d8e00
10. src/Columns/ColumnTuple.cpp:163: DB::ColumnTuple::getValueNameAndType(unsigned long) const @ 0x000000003437f4ca
11. src/Columns/ColumnTuple.cpp:163: DB::ColumnTuple::getValueNameAndType(unsigned long) const @ 0x000000003437f4ca
12. src/Columns/ColumnMap.cpp:96: DB::ColumnMap::getValueNameAndType(unsigned long) const @ 0x00000000342b8ac7
13. src/Columns/ColumnConst.h:83: DB::ColumnConst::getValueNameAndType(unsigned long) const @ 0x00000000340b8e57
14. src/Analyzer/ConstantValue.h:38: DB::ConstantValue::getValueNameAndType() const @ 0x0000000031d01d9b
15.0. inlined from src/Analyzer/ConstantNode.h:113: DB::ConstantNode::getValueNameAndType() const
15. src/Planner/PlannerActionsVisitor.cpp:64: DB::(anonymous namespace)::calculateActionNodeNameWithCastIfNeeded(DB::ConstantNode const&) @ 0x0000000031cffe59
16.0. inlined from src/Planner/PlannerActionsVisitor.cpp:0: operator()
16.1. inlined from src/Planner/PlannerActionsVisitor.cpp:701: DB::(anonymous namespace)::PlannerActionsVisitorImpl::visitConstant(std::shared_ptr<DB::IQueryTreeNode> const&)
16. src/Planner/PlannerActionsVisitor.cpp:664: DB::(anonymous namespace)::PlannerActionsVisitorImpl::visitImpl(std::shared_ptr<DB::IQueryTreeNode>) @ 0x0000000031cf90ed
17.0. inlined from src/Planner/PlannerActionsVisitor.cpp:650: DB::(anonymous namespace)::PlannerActionsVisitorImpl::visit(std::shared_ptr<DB::IQueryTreeNode>)
17. src/Planner/PlannerActionsVisitor.cpp:1041: DB::PlannerActionsVisitor::visit(DB::ActionsDAG&, std::shared_ptr<DB::IQueryTreeNode>) @ 0x0000000031cf2116
18. src/Planner/Utils.cpp:252: DB::buildActionsDAGFromExpressionNode(std::shared_ptr<DB::IQueryTreeNode> const&, std::vector<DB::ColumnWithTypeAndName, std::allocator<DB::ColumnWithTypeAndName>> const&, std::shared_ptr<DB::PlannerContext> const&) @ 0x0000000031d101cf
19. src/Interpreters/evaluateConstantExpression.cpp:119: DB::evaluateConstantExpressionImpl(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context const> const&, bool) @ 0x0000000033294c97
20. src/Interpreters/evaluateConstantExpression.cpp:192: DB::evaluateConstantExpression(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context const> const&) @ 0x0000000033297167
21. src/Processors/Formats/Impl/ValuesBlockInputFormat.cpp:548: DB::ValuesBlockInputFormat::parseExpression(DB::IColumn&, unsigned long) @ 0x00000000362019e6
22.0. inlined from src/Processors/Formats/Impl/ValuesBlockInputFormat.cpp:329: DB::ValuesBlockInputFormat::tryReadValue(DB::IColumn&, unsigned long)
22. src/Processors/Formats/Impl/ValuesBlockInputFormat.cpp:238: DB::ValuesBlockInputFormat::readRow(std::vector<COW<DB::IColumn>::mutable_ptr<DB::IColumn>, std::allocator<COW<DB::IColumn>::mutable_ptr<DB::IColumn>>>&, unsigned long) @ 0x00000000361fcefa
23. src/Processors/Formats/Impl/ValuesBlockInputFormat.cpp:129: DB::ValuesBlockInputFormat::read() @ 0x00000000361fa49a
24. src/Processors/Formats/IInputFormat.cpp:19: DB::IInputFormat::generate() @ 0x0000000035d1dbe4
25. src/Processors/ISource.cpp:139: DB::ISource::tryGenerate() @ 0x0000000035ce3456
26. src/Processors/ISource.cpp:108: DB::ISource::work() @ 0x0000000035ce2de2
27.0. inlined from src/Processors/Executors/ExecutionThreadContext.cpp:49: DB::executeJob(DB::ExecutingGraph::Node*, DB::ReadProgressCallback*)
27. src/Processors/Executors/ExecutionThreadContext.cpp:98: DB::ExecutionThreadContext::executeTask() @ 0x0000000035d0e096
28. src/Processors/Executors/PipelineExecutor.cpp:290: DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x0000000035cfb57c
29. src/Processors/Executors/PipelineExecutor.cpp:256: DB::PipelineExecutor::executeSingleThread(unsigned long) @ 0x0000000035cfb801
30. src/Processors/Executors/PipelineExecutor.cpp:455: DB::PipelineExecutor::executeImpl(unsigned long, bool) @ 0x0000000035cf8e3c
31. src/Processors/Executors/PipelineExecutor.cpp:127: DB::PipelineExecutor::execute(unsigned long, bool) @ 0x0000000035cf841c
32.0. inlined from src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:83: DB::threadFunction(DB::PullingAsyncPipelineExecutor::Data&, std::shared_ptr<DB::ThreadGroup>, unsigned long, bool)
32.1. inlined from src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:109: operator()
32.2. inlined from contrib/llvm-project/libcxx/include/__type_traits/invoke.h:344: decltype(std::declval<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&>()()) std::__invoke[abi:se180100]<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&)
32.3. inlined from contrib/llvm-project/libcxx/include/tuple:1424: decltype(auto) std::__apply_tuple_impl[abi:se180100]<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::tuple<>&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::tuple<>&, std::__tuple_indices<...>)
32.4. inlined from contrib/llvm-project/libcxx/include/tuple:1428: decltype(auto) std::apply[abi:se180100]<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::tuple<>&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::tuple<>&)
32.5. inlined from src/Common/ThreadPool.h:311: operator()
32.6. inlined from contrib/llvm-project/libcxx/include/__type_traits/invoke.h:344: decltype(std::declval<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>()()) std::__invoke[abi:se180100]<ThreadFromGlobalPoolImpl<true, true>::ThreadFromGlobalPoolImpl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)
32.7. inlined from contrib/llvm-project/libcxx/include/__type_traits/invoke.h:419: void std::__invoke_void_return_wrapper<void, true>::__call[abi:se180100]<ThreadFromGlobalPoolImpl<true, true>::ThreadFromGlobalPoolImpl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()&>(ThreadFromGlobalPoolImpl<true, true>::ThreadFromGlobalPoolImpl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'()&)
32.8. inlined from contrib/llvm-project/libcxx/include/__functional/function.h:208: ?
32. contrib/llvm-project/libcxx/include/__functional/function.h:608: ? @ 0x0000000035d131db
33.0. inlined from contrib/llvm-project/libcxx/include/__functional/function.h:714: ?
33.1. inlined from contrib/llvm-project/libcxx/include/__functional/function.h:981: ?
33. src/Common/ThreadPool.cpp:785: ThreadPoolImpl<std::thread>::ThreadFromThreadPool::worker() @ 0x0000000026e409dd
34.0. inlined from contrib/llvm-project/libcxx/include/__type_traits/invoke.h:312: decltype(*std::declval<ThreadPoolImpl<std::thread>::ThreadFromThreadPool*>().*std::declval<void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)()>()()) std::__invoke[abi:se180100]<void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*, void>(void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*&&)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*&&)
34.1. inlined from contrib/llvm-project/libcxx/include/__thread/thread.h:193: void std::__thread_execute[abi:se180100]<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*, 2ul>(std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*>&, std::__tuple_indices<2ul>)
34. contrib/llvm-project/libcxx/include/__thread/thread.h:202: void* std::__thread_proxy[abi:se180100]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*>>(void*) @ 0x0000000026e47a5f
35. ? @ 0x000071e3cdaa1e2e
36. ? @ 0x000071e3cdb33a4c
```