ID: 42017
Title: (if a user misconfigure ClickHouse) WriteBufferFromS3 Segmentation fault with minio
Description:
22.8.6.71 

```
2022.10.03 00:26:06.491984 [ 290 ] {} <Fatal> BaseDaemon: ########################################
2022.10.03 00:26:06.492097 [ 290 ] {} <Fatal> BaseDaemon: (version 22.8.6.71 (official build), build id: 68D8301D2C882600) (from thread 251) (no query) Received signal Segmentation fault (11)
2022.10.03 00:26:06.492169 [ 290 ] {} <Fatal> BaseDaemon: Address: 0x7eed4e7ff340 Access: write. Address not mapped to object.
2022.10.03 00:26:06.492202 [ 290 ] {} <Fatal> BaseDaemon: Stack trace: 0xa3da033 0xa3cccb2 0xa3d0b95 0x13c68548 0x13c519f6 0x13c519f6 0xa3f448b 0xa5c7e6b 0x14513b33 0x1451683f 0x1452cf3b 0xa4b0886 0xa4b21d7 0xa4ae1a8 0xa4b13bd 0x7f03de3c3609 0x7f03de2e8133
2022.10.03 00:26:06.492295 [ 290 ] {} <Fatal> BaseDaemon: 2. memcpy @ 0xa3da033 in /usr/bin/clickhouse
2022.10.03 00:26:06.492356 [ 290 ] {} <Fatal> BaseDaemon: 3. std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsputn(char const*, long) @ 0xa3cccb2 in /usr/bin/clickhouse
2022.10.03 00:26:06.492388 [ 290 ] {} <Fatal> BaseDaemon: 4. std::__1::basic_ostream<char, std::__1::char_traits<char> >::write(char const*, long) @ 0xa3d0b95 in /usr/bin/clickhouse
2022.10.03 00:26:06.492429 [ 290 ] {} <Fatal> BaseDaemon: 5. DB::WriteBufferFromS3::nextImpl() @ 0x13c68548 in /usr/bin/clickhouse
2022.10.03 00:26:06.492457 [ 290 ] {} <Fatal> BaseDaemon: 6. DB::WriteBufferFromFileDecorator::nextImpl() @ 0x13c519f6 in /usr/bin/clickhouse
2022.10.03 00:26:06.492481 [ 290 ] {} <Fatal> BaseDaemon: 7. DB::WriteBufferFromFileDecorator::nextImpl() @ 0x13c519f6 in /usr/bin/clickhouse
2022.10.03 00:26:06.492509 [ 290 ] {} <Fatal> BaseDaemon: 8. DB::WriteBuffer::write(char const*, unsigned long) @ 0xa3f448b in /usr/bin/clickhouse
2022.10.03 00:26:06.492543 [ 290 ] {} <Fatal> BaseDaemon: 9. ? @ 0xa5c7e6b in /usr/bin/clickhouse
2022.10.03 00:26:06.492588 [ 290 ] {} <Fatal> BaseDaemon: 10. DB::IDisk::copyFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::IDisk&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x14513b33 in /usr/bin/clickhouse
2022.10.03 00:26:06.492624 [ 290 ] {} <Fatal> BaseDaemon: 11. ? @ 0x1451683f in /usr/bin/clickhouse
2022.10.03 00:26:06.492652 [ 290 ] {} <Fatal> BaseDaemon: 12. ? @ 0x1452cf3b in /usr/bin/clickhouse
2022.10.03 00:26:06.492684 [ 290 ] {} <Fatal> BaseDaemon: 13. ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0xa4b0886 in /usr/bin/clickhouse
2022.10.03 00:26:06.492736 [ 290 ] {} <Fatal> BaseDaemon: 14. void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) @ 0xa4b21d7 in /usr/bin/clickhouse
2022.10.03 00:26:06.492770 [ 290 ] {} <Fatal> BaseDaemon: 15. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xa4ae1a8 in /usr/bin/clickhouse
2022.10.03 00:26:06.492792 [ 290 ] {} <Fatal> BaseDaemon: 16. ? @ 0xa4b13bd in /usr/bin/clickhouse
2022.10.03 00:26:06.492822 [ 290 ] {} <Fatal> BaseDaemon: 17. ? @ 0x7f03de3c3609 in ?
2022.10.03 00:26:06.492842 [ 290 ] {} <Fatal> BaseDaemon: 18. clone @ 0x7f03de2e8133 in ?
2022.10.03 00:26:06.670868 [ 290 ] {} <Fatal> BaseDaemon: Integrity check of the executable successfully passed (checksum: CD96B7E29D00E30C5749E267E4CF9D6B)
```

22.9.3.18
```
2022.10.03 00:34:10.409917 [ 347 ] {} <Fatal> BaseDaemon: ########################################
2022.10.03 00:34:10.410024 [ 347 ] {} <Fatal> BaseDaemon: (version 22.9.3.18 (official build), build id: 2FF5057A32C04624F2110CA79BB67F0102974C99) (from thread 301) (no query) Received signal Segmentation fault (11)
2022.10.03 00:34:10.410109 [ 347 ] {} <Fatal> BaseDaemon: Address: 0x7f38ca900940 Access: write. Address not mapped to object.
2022.10.03 00:34:10.410146 [ 347 ] {} <Fatal> BaseDaemon: Stack trace: 0x78c3933 0x78b6732 0x78ba595 0x11626028 0x115e5cb6 0x115e5cb6 0x78de28b 0x7aa3eac 0x1158644a 0x1158901e 0x115aa3b8 0x797c1ec 0x797ef17 0x797872c 0x797de3e 0x7f4a6c8c9609 0x7f4a6c7ee133
2022.10.03 00:34:10.410250 [ 347 ] {} <Fatal> BaseDaemon: 2. memcpy @ 0x78c3933 in /usr/bin/clickhouse
2022.10.03 00:34:10.410312 [ 347 ] {} <Fatal> BaseDaemon: 3. std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsputn(char const*, long) @ 0x78b6732 in /usr/bin/clickhouse
2022.10.03 00:34:10.410363 [ 347 ] {} <Fatal> BaseDaemon: 4. std::__1::basic_ostream<char, std::__1::char_traits<char> >::write(char const*, long) @ 0x78ba595 in /usr/bin/clickhouse
2022.10.03 00:34:10.410405 [ 347 ] {} <Fatal> BaseDaemon: 5. DB::WriteBufferFromS3::nextImpl() @ 0x11626028 in /usr/bin/clickhouse
2022.10.03 00:34:10.410435 [ 347 ] {} <Fatal> BaseDaemon: 6. DB::WriteBufferFromFileDecorator::nextImpl() @ 0x115e5cb6 in /usr/bin/clickhouse
2022.10.03 00:34:10.410458 [ 347 ] {} <Fatal> BaseDaemon: 7. DB::WriteBufferFromFileDecorator::nextImpl() @ 0x115e5cb6 in /usr/bin/clickhouse
2022.10.03 00:34:10.410480 [ 347 ] {} <Fatal> BaseDaemon: 8. ? @ 0x78de28b in /usr/bin/clickhouse
2022.10.03 00:34:10.410511 [ 347 ] {} <Fatal> BaseDaemon: 9. ? @ 0x7aa3eac in /usr/bin/clickhouse
2022.10.03 00:34:10.410549 [ 347 ] {} <Fatal> BaseDaemon: 10. DB::IDisk::copyFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::IDisk&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::WriteSettings const&) @ 0x1158644a in /usr/bin/clickhouse
2022.10.03 00:34:10.410583 [ 347 ] {} <Fatal> BaseDaemon: 11. ? @ 0x1158901e in /usr/bin/clickhouse
2022.10.03 00:34:10.410605 [ 347 ] {} <Fatal> BaseDaemon: 12. ? @ 0x115aa3b8 in /usr/bin/clickhouse
2022.10.03 00:34:10.410639 [ 347 ] {} <Fatal> BaseDaemon: 13. ThreadPoolImpl<ThreadFromGlobalPoolImpl<false> >::worker(std::__1::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0x797c1ec in /usr/bin/clickhouse
2022.10.03 00:34:10.410703 [ 347 ] {} <Fatal> BaseDaemon: 14. void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false> >::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) @ 0x797ef17 in /usr/bin/clickhouse
2022.10.03 00:34:10.410738 [ 347 ] {} <Fatal> BaseDaemon: 15. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x797872c in /usr/bin/clickhouse
2022.10.03 00:34:10.410763 [ 347 ] {} <Fatal> BaseDaemon: 16. ? @ 0x797de3e in /usr/bin/clickhouse
2022.10.03 00:34:10.410793 [ 347 ] {} <Fatal> BaseDaemon: 17. ? @ 0x7f4a6c8c9609 in ?
2022.10.03 00:34:10.410814 [ 347 ] {} <Fatal> BaseDaemon: 18. clone @ 0x7f4a6c7ee133 in ?
2022.10.03 00:34:10.572727 [ 347 ] {} <Fatal> BaseDaemon: Integrity check of the executable successfully passed (checksum: 06A610082550DFA727475EBE3BB01E18)
```

Happens after

```
022.10.03 00:24:15.516033 [ 278 ] {} <Error> AWSClient: Failed to make request to: http://minio:8000/chTest/data/arzvkzexymyhvfeotcnffasmkbahbjzc: Poco::Exception. Code: 1000, e.code() = 0, Timeout, Stack trace (when copying this message, always include the lines below):

0. Poco::Net::SocketImpl::sendBytes(void const*, int, int) @ 0x18985774 in /usr/bin/clickhouse
1. Poco::Net::StreamSocketImpl::sendBytes(void const*, int, int) @ 0x18989e77 in /usr/bin/clickhouse
2. Poco::Net::HTTPClientSession::write(char const*, long) @ 0x189552fd in /usr/bin/clickhouse
3. Poco::Net::HTTPFixedLengthStreamBuf::writeToDevice(char const*, long) @ 0x189595d0 in /usr/bin/clickhouse
4. Poco::Net::HTTPFixedLengthIOS::~HTTPFixedLengthIOS() @ 0x1895981a in /usr/bin/clickhouse
5. non-virtual thunk to Poco::Net::HTTPFixedLengthOutputStream::~HTTPFixedLengthOutputStream() @ 0x1895a4a2 in /usr/bin/clickhouse
6. Poco::Net::HTTPClientSession::receiveResponse(Poco::Net::HTTPResponse&) @ 0x18952f91 in /usr/bin/clickhouse
7. DB::S3::PocoHTTPClient::makeRequestInternal(Aws::Http::HttpRequest&, std::__1::shared_ptr<DB::S3::PocoHTTPResponse>&, Aws::Utils::RateLimits::RateLimiterInterface*, Aws::Utils::RateLimits::RateLimiterInterface*) const @ 0x139651c6 in /usr/bin/clickhouse
8. DB::S3::PocoHTTPClient::MakeRequest(std::__1::shared_ptr<Aws::Http::HttpRequest> const&, Aws::Utils::RateLimits::RateLimiterInterface*, Aws::Utils::RateLimits::RateLimiterInterface*) const @ 0x13962cc7 in /usr/bin/clickhouse
9. Aws::Client::AWSClient::AttemptOneRequest(std::__1::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const @ 0x18ba5937 in /usr/bin/clickhouse
10. Aws::Client::AWSClient::AttemptExhaustively(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const @ 0x18ba2e1a in /usr/bin/clickhouse
11. Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const @ 0x18bb05ad in /usr/bin/clickhouse
12. Aws::S3::S3Client::PutObject(Aws::S3::Model::PutObjectRequest const&) const @ 0x18cc9ebc in /usr/bin/clickhouse
13. DB::WriteBufferFromS3::processPutRequest(DB::WriteBufferFromS3::PutObjectTask&) @ 0x13c6e692 in /usr/bin/clickhouse
14. ? @ 0x13c6f9be in /usr/bin/clickhouse
15. ? @ 0x15144c5b in /usr/bin/clickhouse
16. ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0xa4b0886 in /usr/bin/clickhouse
17. void std::__1::__function::__policy_invoker<void ()>::__call_impl<std::__1::__function::__default_alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda0'()>(void&&)::'lambda'(), void ()> >(std::__1::__function::__policy_storage const*) @ 0xa4b21d7 in /usr/bin/clickhouse
18. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xa4ae1a8 in /usr/bin/clickhouse
19. ? @ 0xa4b13bd in /usr/bin/clickhouse
20. ? @ 0x7f03de3c3609 in ?
21. clone @ 0x7f03de2e8133 in ?
 (version 22.8.6.71 (official build))
2022.10.03 00:24:15.516123 [ 278 ] {} <Error> AWSClient: HTTP response code: -1
Resolved remote host IP address: 
Request ID: 
Exception name: 
Error message: Poco::Exception. Code: 1000, e.code() = 0, Timeout (version 22.8.6.71 (official build))
0 response headers:
```