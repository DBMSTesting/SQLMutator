ID: 71506
Title: Insert into Hudi table SEGV
Description:
**Describe the bug**
According to the docs, the Hudi engine is read-only, but an INSERT shouldn't SEGV.

**How to reproduce**
Run:
```sql
CREATE TABLE tx(t0 Int) ENGINE=Hudi('<any file on a MinIO bucket>', '<user>', '<password>');
INSERT INTO tx VALUES (1); --SEGV
```
Stack trace:
```
#0  0x000055557bd29694 in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__is_long[abi:v15007]() const (this=0x0) at ./contrib/llvm-project/libcxx/include/string:1499
#1  std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string (this=0x7fff0383c420, __str=...) at ./contrib/llvm-project/libcxx/include/string:2012
#2  DB::StoredObject::StoredObject (this=0x7fff0383c420, remote_path_=..., local_path_=..., bytes_size_=0) at ./src/Disks/ObjectStorages/StoredObject.h:26
#3  0x000055557bdbc545 in DB::checkAndGetNewFileOnInsertIfNeeded (object_storage=..., configuration=..., settings=..., key=..., sequence_number=<optimized out>) at src/Storages/ObjectStorage/Utils.cpp:21
#4  0x000055557bd1fd43 in DB::StorageObjectStorage::write (this=0x51d000967898, query=..., metadata_snapshot=..., local_context=...) at src/Storages/ObjectStorage/StorageObjectStorage.cpp:364
#5  0x0000555583cd64ef in DB::buildPushingToViewsChain (storage=..., metadata_snapshot=..., context=..., query_ptr=..., no_destination=<optimized out>, thread_status_holder=..., running_group=..., elapsed_counter_ms=<optimized out>, 
    async_insert=<optimized out>, live_view_header=...) at src/Processors/Transforms/buildPushingToViewsChain.cpp:594
#6  0x000055557f38623f in DB::InterpreterInsertQuery::buildSink (this=<optimized out>, table=..., metadata_snapshot=..., thread_status_holder=..., running_group=..., elapsed_counter_ms=<optimized out>)
    at src/Interpreters/InterpreterInsertQuery.cpp:364
#7  0x000055557f387f21 in DB::InterpreterInsertQuery::buildPreAndSinkChains (this=<optimized out>, presink_streams=1, sink_streams=<optimized out>, table=..., metadata_snapshot=..., query_sample_block=...)
    at src/Interpreters/InterpreterInsertQuery.cpp:443
#8  0x000055557f38d60f in DB::InterpreterInsertQuery::buildInsertPipeline (this=0x507000150480, query=..., table=...) at src/Interpreters/InterpreterInsertQuery.cpp:695
#9  0x000055557f390e39 in DB::InterpreterInsertQuery::execute (this=0x507000150480) at src/Interpreters/InterpreterInsertQuery.cpp:815
#10 0x000055557fbc7299 in DB::executeQueryImpl (begin=<optimized out>, end=<optimized out>, context=..., flags=..., stage=<optimized out>, istr=<optimized out>) at src/Interpreters/executeQuery.cpp:1397
#11 0x000055557fbbfc85 in DB::executeQuery (query=..., context=..., flags=..., stage=<optimized out>) at src/Interpreters/executeQuery.cpp:1564
#12 0x00005555832daa73 in DB::TCPHandler::runImpl (this=0x51b0005a6d80) at src/Server/TCPHandler.cpp:595
#13 0x000055558330cf00 in DB::TCPHandler::run (this=<optimized out>) at src/Server/TCPHandler.cpp:2528
#14 0x000055558a84178f in Poco::Net::TCPServerConnection::start (this=0x17) at base/poco/Net/src/TCPServerConnection.cpp:43
#15 0x000055558a842377 in Poco::Net::TCPServerDispatcher::run (this=0x511001141c00) at base/poco/Net/src/TCPServerDispatcher.cpp:115
#16 0x000055558a74407c in Poco::PooledThread::run (this=<optimized out>) at base/poco/Foundation/src/ThreadPool.cpp:205
#17 0x000055558a73e1c8 in Poco::ThreadImpl::runnableEntry (pThread=<optimized out>) at ./base/poco/Foundation/src/Thread_POSIX.cpp:335
#18 0x0000555560309059 in asan_thread_start(void*) ()
#19 0x00007ffff7ca1e2e in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:447
#20 0x00007ffff7d33a4c in __GI___clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:78
```