ID: 17952
Title: Bad size of marks file Error
Description:
**Describe the bug**
Clickhouse get below error log after do lot of batch data update ,we never touch the marks file

2020.12.10 02:49:34.023382 [ 9826 ] {} <Error> auto DB::IBackgroundJobExecutor::jobExecutingTask()::(anonymous class)::operator()() const: Code: 246, e.displayText() = DB::Exception: Bad size of marks file '/var/lib/clickhouse/store/38d/38d4b208-fcda-49cc-a3ab-9b23931e57ab/43_735804_739656_12_741877/flag.mrk2': 168, must be: 192, Stack trace (when copying this message, always include the lines below):

0. DB::MergeTreeMarksLoader::loadMarksImpl() @ 0xe45bf6c in /usr/bin/clickhouse
1. DB::MergeTreeMarksLoader::loadMarks() @ 0xe45b219 in /usr/bin/clickhouse
2. DB::MergeTreeReaderStream::MergeTreeReaderStream(std::__1::shared_ptr<DB::IDisk>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, std::__1::deque<DB::MarkRange, std::__1::allocator<DB::MarkRange> > const&, DB::MergeTreeReaderSettings const&, DB::MarkCache*, DB::UncompressedCache*, unsigned long, DB::MergeTreeIndexGranularityInfo const*, std::__1::function<void (DB::ReadBufferFromFileBase::ProfileInfo)> const&, int) @ 0xe4627a1 in /usr/bin/clickhouse
3. ? @ 0xe465d63 in /usr/bin/clickhouse
4. DB::MergeTreeReaderWide::addStreams(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::IDataType const&, std::__1::function<void (DB::ReadBufferFromFileBase::ProfileInfo)> const&, int) @ 0xe463e6f in /usr/bin/clickhouse
5. DB::MergeTreeReaderWide::MergeTreeReaderWide(std::__1::shared_ptr<DB::MergeTreeDataPartWide const>, DB::NamesAndTypesList, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::UncompressedCache*, DB::MarkCache*, std::__1::deque<DB::MarkRange, std::__1::allocator<DB::MarkRange> >, DB::MergeTreeReaderSettings, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, double, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, double> > >, std::__1::function<void (DB::ReadBufferFromFileBase::ProfileInfo)> const&, int) @ 0xe463c4a in /usr/bin/clickhouse
6. DB::MergeTreeDataPartWide::getReader(DB::NamesAndTypesList const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::deque<DB::MarkRange, std::__1::allocator<DB::MarkRange> > const&, DB::UncompressedCache*, DB::MarkCache*, DB::MergeTreeReaderSettings const&, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, double, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, double> > > const&, std::__1::function<void (DB::ReadBufferFromFileBase::ProfileInfo)> const&) const @ 0xe3cf992 in /usr/bin/clickhouse
7. DB::MergeTreeSequentialSource::MergeTreeSequentialSource(DB::MergeTreeData const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::IMergeTreeDataPart const>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, bool, bool, bool) @ 0xe474c3b in /usr/bin/clickhouse
8. DB::MergeTreeDataMergerMutator::mergePartsToTemporaryPart(DB::FutureMergedMutatedPart const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::BackgroundProcessListEntry<DB::MergeListElement, DB::MergeInfo>&, std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl>&, long, DB::Context const&, std::__1::unique_ptr<DB::IReservation, std::__1::default_delete<DB::IReservation> > const&, bool) @ 0xe3924c9 in /usr/bin/clickhouse
9. DB::StorageMergeTree::mergeSelectedParts(std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, DB::StorageMergeTree::MergeMutateSelectedEntry&, std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl>&) @ 0xe1424c0 in /usr/bin/clickhouse
10. ? @ 0xe2f6b3d in /usr/bin/clickhouse
11. ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0x7d225ed in /usr/bin/clickhouse
12. ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()&&...)::'lambda'()::operator()() @ 0x7d24b4f in /usr/bin/clickhouse
13. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x7d1faad in /usr/bin/clickhouse
14. ? @ 0x7d235d3 in /usr/bin/clickhouse
15. start_thread @ 0x740b in /usr/lib64/libpthread-2.26.so
16. clone @ 0xeceef in /usr/lib64/libc-2.26.so
 (version 20.12.2.1 (official build))




2020.12.10 02:58:29.007346 [ 9804 ] {} <Error> auto DB::IBackgroundJobExecutor::jobExecutingTask()::(anonymous class)::operator()() const: Code: 49, e.displayText() = DB::Exception: Can't adjust last granule because it has 3496 rows, but try to subtract 3787 rows.: While executing MergeTree, Stack trace (when copying this message, always include the lines below):

0. DB::MergeTreeRangeReader::ReadResult::adjustLastGranule() @ 0xe46da66 in /usr/bin/clickhouse
1. DB::MergeTreeRangeReader::startReadingChain(unsigned long, std::__1::deque<DB::MarkRange, std::__1::allocator<DB::MarkRange> >&) @ 0xe47123c in /usr/bin/clickhouse
2. DB::MergeTreeRangeReader::read(unsigned long, std::__1::deque<DB::MarkRange, std::__1::allocator<DB::MarkRange> >&) @ 0xe46fdf4 in /usr/bin/clickhouse
3. DB::MergeTreeBaseSelectProcessor::readFromPartImpl() @ 0xe46a49a in /usr/bin/clickhouse
4. DB::MergeTreeBaseSelectProcessor::readFromPart() @ 0xe46b10d in /usr/bin/clickhouse
5. DB::MergeTreeBaseSelectProcessor::generate() @ 0xe4699ab in /usr/bin/clickhouse
6. DB::ISource::work() @ 0xe60dcfa in /usr/bin/clickhouse
7. DB::SourceWithProgress::work() @ 0xe76b27a in /usr/bin/clickhouse
8. ? @ 0xe64683c in /usr/bin/clickhouse
9. DB::PipelineExecutor::executeStepImpl(unsigned long, unsigned long, std::__1::atomic<bool>*) @ 0xe643967 in /usr/bin/clickhouse
10. DB::PipelineExecutor::executeStep(std::__1::atomic<bool>*) @ 0xe64264c in /usr/bin/clickhouse
11. DB::PullingPipelineExecutor::pull(DB::Chunk&) @ 0xe64f0f9 in /usr/bin/clickhouse
12. DB::PullingPipelineExecutor::pull(DB::Block&) @ 0xe64f1d0 in /usr/bin/clickhouse
13. DB::PipelineExecutingBlockInputStream::readImpl() @ 0xe63e904 in /usr/bin/clickhouse
14. DB::IBlockInputStream::read() @ 0xd733a05 in /usr/bin/clickhouse
15. DB::isStorageTouchedByMutations(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::vector<DB::MutationCommand, std::__1::allocator<DB::MutationCommand> > const&, DB::Context) @ 0xddd4bd6 in /usr/bin/clickhouse
16. DB::MergeTreeDataMergerMutator::mutatePartToTemporaryPart(DB::FutureMergedMutatedPart const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::MutationCommands const&, DB::BackgroundProcessListEntry<DB::MergeListElement, DB::MergeInfo>&, long, DB::Context const&, std::__1::unique_ptr<DB::IReservation, std::__1::default_delete<DB::IReservation> > const&, std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl>&) @ 0xe39eb7a in /usr/bin/clickhouse
17. DB::StorageMergeTree::mutateSelectedPart(std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::StorageMergeTree::MergeMutateSelectedEntry&, std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl>&) @ 0xe1452ff in /usr/bin/clickhouse
18. ? @ 0xe2f6b3d in /usr/bin/clickhouse
19. ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0x7d225ed in /usr/bin/clickhouse
20. ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()&&...)::'lambda'()::operator()() @ 0x7d24b4f in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x7d1faad in /usr/bin/clickhouse
22. ? @ 0x7d235d3 in /usr/bin/clickhouse
23. start_thread @ 0x740b in /usr/lib64/libpthread-2.26.so
24. clone @ 0xeceef in /usr/lib64/libc-2.26.so
 (version 20.12.2.1 (official build))