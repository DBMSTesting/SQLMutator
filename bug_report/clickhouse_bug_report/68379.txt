ID: 68379
Title: Logical error: 'Cannot replace literals'
Description:
**Describe the bug**
Compile Clickhouse on debug build. Then using a string literal on a BETWEEN clause inside an insert triggers a logical error

**How to reproduce**

```sql
CREATE TABLE t0 (c0 Int) ENGINE = Memory;
INSERT INTO t0(c0) VALUES (1 BETWEEN 1 AND 1);
```
The stack trace:

```
2024.08.15 07:04:51.609617 [ 674638 ] {0b8cd3cb-21ef-4160-a01c-df095bb49f1e} <Fatal> : Logical error: 'Cannot replace literals'.
2024.08.15 07:04:51.726355 [ 674638 ] {0b8cd3cb-21ef-4160-a01c-df095bb49f1e} <Fatal> : Stack trace (when copying this message, always include the lines below):

0. contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x000000002745eb71
1. src/Common/Exception.cpp:111: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x00000000160de76d
2. contrib/llvm-project/libcxx/include/string:1499: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006baed26
3. src/Common/LoggingFormatStringHelpers.h:45: DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000006bb6f4f
4. src/Processors/Formats/Impl/ConstantExpressionTemplate.cpp:330: DB::ConstantExpressionTemplate::TemplateStructure::TemplateStructure(std::vector<DB::LiteralInfo, std::allocator<DB::LiteralInfo>>&, DB::TokenIterator, DB::TokenIterator, std::shared_ptr<DB::IAST>&, DB::IDataType const&, bool, std::shared_ptr<DB::Context const>) @ 0x000000002624adf9
5. contrib/llvm-project/libcxx/include/__memory/construct_at.h:35: DB::ConstantExpressionTemplate::Cache::getFromCacheOrConstruct(std::shared_ptr<DB::IDataType const> const&, bool, DB::TokenIterator, DB::TokenIterator, std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context const>, bool*, String const&) @ 0x000000002624f09e
6. src/Processors/Formats/Impl/ValuesBlockInputFormat.cpp:486: DB::ValuesBlockInputFormat::parseExpression(DB::IColumn&, unsigned long) @ 0x0000000026240c90
7. src/Processors/Formats/Impl/ValuesBlockInputFormat.cpp:0: DB::ValuesBlockInputFormat::readRow(std::vector<COW<DB::IColumn>::mutable_ptr<DB::IColumn>, std::allocator<COW<DB::IColumn>::mutable_ptr<DB::IColumn>>>&, unsigned long) @ 0x000000002623cebd
8. src/Processors/Formats/Impl/ValuesBlockInputFormat.cpp:0: DB::ValuesBlockInputFormat::read() @ 0x000000002623a9b1
9. src/Processors/Formats/IInputFormat.cpp:19: DB::IInputFormat::generate() @ 0x000000002608a606
10. src/Processors/Chunk.h:110: DB::ISource::tryGenerate() @ 0x000000002603807a
11. contrib/llvm-project/libcxx/include/optional:344: DB::ISource::work() @ 0x0000000026037683
12. src/Processors/Executors/ExecutionThreadContext.cpp:0: DB::ExecutionThreadContext::executeTask() @ 0x000000002607422e
13. src/Processors/Executors/PipelineExecutor.cpp:273: DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x0000000026059cd1
14. contrib/llvm-project/libcxx/include/vector:547: DB::PipelineExecutor::executeSingleThread(unsigned long) @ 0x000000002605a68a
15. contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: DB::PipelineExecutor::executeImpl(unsigned long, bool) @ 0x000000002605781b
16. contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:274: DB::PipelineExecutor::execute(unsigned long, bool) @ 0x0000000026056beb
17. src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:94: void std::__function::__policy_invoker<void ()>::__call_impl<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<true, true>::ThreadFromGlobalPoolImpl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0x000000002607c11d
18. contrib/llvm-project/libcxx/include/__functional/function.h:0: ? @ 0x0000000016255500
19. contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: void* std::__thread_proxy[abi:v15007]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0x000000001625f6cd
20. asan_thread_start(void*) @ 0x0000000006b63bcd
21. ? @ 0x0000730f80a9ca94
22. ? @ 0x0000730f80b29c3c

2024.08.15 07:04:51.727359 [ 674868 ] {} <Fatal> ClientBase: ########## Short fault info ############
2024.08.15 07:04:51.727486 [ 674868 ] {} <Fatal> ClientBase: (version 24.8.1.1, build id: , git hash: ) (from thread 674638) Received signal 6
2024.08.15 07:04:51.727528 [ 674868 ] {} <Fatal> ClientBase: Signal description: Aborted
2024.08.15 07:04:51.727572 [ 674868 ] {} <Fatal> ClientBase: 
2024.08.15 07:04:51.727626 [ 674868 ] {} <Fatal> ClientBase: Stack trace: 0x0000610cf42c306d 0x0000610cf47ed5b0 0x0000730f80a45320 0x0000730f80a9eb1d 0x0000730f80a4526e 0x0000730f80a288ff 0x0000610cf4264428 0x0000610cf4265c3f 0x0000610ce4d35d26 0x0000610ce4d3df4f 0x0000610d043d1df9 0x0000610d043d609e 0x0000610d043c7c90 0x0000610d043c3ebd 0x0000610d043c19b1 0x0000610d04211606 0x0000610d041bf07a 0x0000610d041be683 0x0000610d041fb22e 0x0000610d041e0cd1 0x0000610d041e168a 0x0000610d041de81b 0x0000610d041ddbeb 0x0000610d0420311d 0x0000610cf43dc500 0x0000610cf43e66cd 0x0000610ce4ceabcd 0x0000730f80a9ca94 0x0000730f80b29c3c
2024.08.15 07:04:51.727672 [ 674868 ] {} <Fatal> ClientBase: ########################################
2024.08.15 07:04:51.727735 [ 674868 ] {} <Fatal> ClientBase: (version 24.8.1.1, build id: , git hash: ) (from thread 674638) (query_id: 0b8cd3cb-21ef-4160-a01c-df095bb49f1e) (query: INSERT INTO t0(c0) VALUES ) Received signal Aborted (6)
2024.08.15 07:04:51.727782 [ 674868 ] {} <Fatal> ClientBase: 
2024.08.15 07:04:51.727821 [ 674868 ] {} <Fatal> ClientBase: Stack trace: 0x0000610cf42c306d 0x0000610cf47ed5b0 0x0000730f80a45320 0x0000730f80a9eb1d 0x0000730f80a4526e 0x0000730f80a288ff 0x0000610cf4264428 0x0000610cf4265c3f 0x0000610ce4d35d26 0x0000610ce4d3df4f 0x0000610d043d1df9 0x0000610d043d609e 0x0000610d043c7c90 0x0000610d043c3ebd 0x0000610d043c19b1 0x0000610d04211606 0x0000610d041bf07a 0x0000610d041be683 0x0000610d041fb22e 0x0000610d041e0cd1 0x0000610d041e168a 0x0000610d041de81b 0x0000610d041ddbeb 0x0000610d0420311d 0x0000610cf43dc500 0x0000610cf43e66cd 0x0000610ce4ceabcd 0x0000730f80a9ca94 0x0000730f80b29c3c
2024.08.15 07:04:51.810580 [ 674868 ] {} <Fatal> ClientBase: 0.0. inlined from src/Common/StackTrace.cpp:349: StackTrace::tryCapture()
2024.08.15 07:04:51.810666 [ 674868 ] {} <Fatal> ClientBase: 0. src/Common/StackTrace.cpp:318: StackTrace::StackTrace(ucontext_t const&) @ 0x000000001613c06d
2024.08.15 07:04:51.903647 [ 674868 ] {} <Fatal> ClientBase: 1. src/Common/SignalHandlers.cpp:0: signalHandler(int, siginfo_t*, void*) @ 0x00000000166665b0
2024.08.15 07:04:51.903703 [ 674868 ] {} <Fatal> ClientBase: 2. ? @ 0x0000730f80a45320
2024.08.15 07:04:51.903725 [ 674868 ] {} <Fatal> ClientBase: 3. ? @ 0x0000730f80a9eb1d
2024.08.15 07:04:51.903742 [ 674868 ] {} <Fatal> ClientBase: 4. ? @ 0x0000730f80a4526e
2024.08.15 07:04:51.903766 [ 674868 ] {} <Fatal> ClientBase: 5. ? @ 0x0000730f80a288ff
2024.08.15 07:04:51.982030 [ 674868 ] {} <Fatal> ClientBase: 6.0. inlined from contrib/llvm-project/libcxx/include/atomic:958: int std::__cxx_atomic_load[abi:v15007]<int>(std::__cxx_atomic_base_impl<int> const*, std::memory_order)
2024.08.15 07:04:51.982093 [ 674868 ] {} <Fatal> ClientBase: 6.1. inlined from contrib/llvm-project/libcxx/include/atomic:1560: std::__atomic_base<int, false>::load[abi:v15007](std::memory_order) const
2024.08.15 07:04:51.982131 [ 674868 ] {} <Fatal> ClientBase: 6.2. inlined from contrib/llvm-project/libcxx/include/atomic:1564: std::__atomic_base<int, false>::operator int[abi:v15007]() const
2024.08.15 07:04:51.982168 [ 674868 ] {} <Fatal> ClientBase: 6.3. inlined from base/poco/Foundation/include/Poco/Logger.h:2354: Poco::Logger::is(int) const
2024.08.15 07:04:51.982199 [ 674868 ] {} <Fatal> ClientBase: 6. src/Common/Exception.cpp:47: DB::abortOnFailedAssertion(String const&, void* const*, unsigned long, unsigned long) @ 0x00000000160dd428
2024.08.15 07:04:52.053995 [ 674868 ] {} <Fatal> ClientBase: 7. src/Common/Exception.cpp:111: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x00000000160dec3f
2024.08.15 07:04:52.090806 [ 674868 ] {} <Fatal> ClientBase: 8.0. inlined from contrib/llvm-project/libcxx/include/string:1499: String::__is_long[abi:v15007]() const
2024.08.15 07:04:52.090869 [ 674868 ] {} <Fatal> ClientBase: 8.1. inlined from contrib/llvm-project/libcxx/include/string:2333: ~basic_string
2024.08.15 07:04:52.090898 [ 674868 ] {} <Fatal> ClientBase: 8.2. inlined from src/Common/Exception.h:98: ~MessageMasked
2024.08.15 07:04:52.090922 [ 674868 ] {} <Fatal> ClientBase: 8.3. inlined from src/Common/Exception.h:110: Exception
2024.08.15 07:04:52.090953 [ 674868 ] {} <Fatal> ClientBase: 8. src/Common/Exception.h:63: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006baed26
2024.08.15 07:04:52.133485 [ 674868 ] {} <Fatal> ClientBase: 9.0. inlined from src/Common/LoggingFormatStringHelpers.h:45: ~PreformattedMessage
2024.08.15 07:04:52.133541 [ 674868 ] {} <Fatal> ClientBase: 9. src/Common/Exception.h:128: DB::Exception::Exception<>(int, FormatStringHelperImpl<>) @ 0x0000000006bb6f4f
2024.08.15 07:04:52.229425 [ 674868 ] {} <Fatal> ClientBase: 10. src/Processors/Formats/Impl/ConstantExpressionTemplate.cpp:330: DB::ConstantExpressionTemplate::TemplateStructure::TemplateStructure(std::vector<DB::LiteralInfo, std::allocator<DB::LiteralInfo>>&, DB::TokenIterator, DB::TokenIterator, std::shared_ptr<DB::IAST>&, DB::IDataType const&, bool, std::shared_ptr<DB::Context const>) @ 0x000000002624adf9
2024.08.15 07:04:52.331375 [ 674868 ] {} <Fatal> ClientBase: 11.0. inlined from contrib/llvm-project/libcxx/include/__memory/construct_at.h:35: DB::ConstantExpressionTemplate::TemplateStructure* std::construct_at[abi:v15007]<DB::ConstantExpressionTemplate::TemplateStructure, std::vector<DB::LiteralInfo, std::allocator<DB::LiteralInfo>>&, DB::TokenIterator&, DB::TokenIterator&, std::shared_ptr<DB::IAST>&, DB::IDataType const&, bool&, std::shared_ptr<DB::Context const>&, DB::ConstantExpressionTemplate::TemplateStructure*>(DB::ConstantExpressionTemplate::TemplateStructure*, std::vector<DB::LiteralInfo, std::allocator<DB::LiteralInfo>>&, DB::TokenIterator&, DB::TokenIterator&, std::shared_ptr<DB::IAST>&, DB::IDataType const&, bool&, std::shared_ptr<DB::Context const>&)
2024.08.15 07:04:52.331493 [ 674868 ] {} <Fatal> ClientBase: 11.1. inlined from contrib/llvm-project/libcxx/include/__memory/allocator_traits.h:298: void std::allocator_traits<std::allocator<DB::ConstantExpressionTemplate::TemplateStructure>>::construct[abi:v15007]<DB::ConstantExpressionTemplate::TemplateStructure, std::vector<DB::LiteralInfo, std::allocator<DB::LiteralInfo>>&, DB::TokenIterator&, DB::TokenIterator&, std::shared_ptr<DB::IAST>&, DB::IDataType const&, bool&, std::shared_ptr<DB::Context const>&, void, void>(std::allocator<DB::ConstantExpressionTemplate::TemplateStructure>&, DB::ConstantExpressionTemplate::TemplateStructure*, std::vector<DB::LiteralInfo, std::allocator<DB::LiteralInfo>>&, DB::TokenIterator&, DB::TokenIterator&, std::shared_ptr<DB::IAST>&, DB::IDataType const&, bool&, std::shared_ptr<DB::Context const>&)
2024.08.15 07:04:52.331531 [ 674868 ] {} <Fatal> ClientBase: 11.2. inlined from contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:292: __shared_ptr_emplace<std::vector<DB::LiteralInfo, std::allocator<DB::LiteralInfo> > &, DB::TokenIterator &, DB::TokenIterator &, std::shared_ptr<DB::IAST> &, const DB::IDataType &, bool &, std::shared_ptr<const DB::Context> &>
2024.08.15 07:04:52.331578 [ 674868 ] {} <Fatal> ClientBase: 11.3. inlined from contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:953: std::shared_ptr<DB::ConstantExpressionTemplate::TemplateStructure> std::allocate_shared[abi:v15007]<DB::ConstantExpressionTemplate::TemplateStructure, std::allocator<DB::ConstantExpressionTemplate::TemplateStructure>, std::vector<DB::LiteralInfo, std::allocator<DB::LiteralInfo>>&, DB::TokenIterator&, DB::TokenIterator&, std::shared_ptr<DB::IAST>&, DB::IDataType const&, bool&, std::shared_ptr<DB::Context const>&, void>(std::allocator<DB::ConstantExpressionTemplate::TemplateStructure> const&, std::vector<DB::LiteralInfo, std::allocator<DB::LiteralInfo>>&, DB::TokenIterator&, DB::TokenIterator&, std::shared_ptr<DB::IAST>&, DB::IDataType const&, bool&, std::shared_ptr<DB::Context const>&)
2024.08.15 07:04:52.331631 [ 674868 ] {} <Fatal> ClientBase: 11.4. inlined from contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:962: std::shared_ptr<DB::ConstantExpressionTemplate::TemplateStructure> std::make_shared[abi:v15007]<DB::ConstantExpressionTemplate::TemplateStructure, std::vector<DB::LiteralInfo, std::allocator<DB::LiteralInfo>>&, DB::TokenIterator&, DB::TokenIterator&, std::shared_ptr<DB::IAST>&, DB::IDataType const&, bool&, std::shared_ptr<DB::Context const>&, void>(std::vector<DB::LiteralInfo, std::allocator<DB::LiteralInfo>>&, DB::TokenIterator&, DB::TokenIterator&, std::shared_ptr<DB::IAST>&, DB::IDataType const&, bool&, std::shared_ptr<DB::Context const>&)
2024.08.15 07:04:52.331667 [ 674868 ] {} <Fatal> ClientBase: 11. src/Processors/Formats/Impl/ConstantExpressionTemplate.cpp:440: DB::ConstantExpressionTemplate::Cache::getFromCacheOrConstruct(std::shared_ptr<DB::IDataType const> const&, bool, DB::TokenIterator, DB::TokenIterator, std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::Context const>, bool*, String const&) @ 0x000000002624f09e
2024.08.15 07:04:52.423844 [ 674868 ] {} <Fatal> ClientBase: 12. src/Processors/Formats/Impl/ValuesBlockInputFormat.cpp:486: DB::ValuesBlockInputFormat::parseExpression(DB::IColumn&, unsigned long) @ 0x0000000026240c90
2024.08.15 07:04:52.512263 [ 674868 ] {} <Fatal> ClientBase: 13.0. inlined from src/Processors/Formats/Impl/ValuesBlockInputFormat.cpp:0: DB::ValuesBlockInputFormat::tryReadValue(DB::IColumn&, unsigned long)
2024.08.15 07:04:52.512341 [ 674868 ] {} <Fatal> ClientBase: 13. src/Processors/Formats/Impl/ValuesBlockInputFormat.cpp:229: DB::ValuesBlockInputFormat::readRow(std::vector<COW<DB::IColumn>::mutable_ptr<DB::IColumn>, std::allocator<COW<DB::IColumn>::mutable_ptr<DB::IColumn>>>&, unsigned long) @ 0x000000002623cebd
2024.08.15 07:04:52.599720 [ 674868 ] {} <Fatal> ClientBase: 14. src/Processors/Formats/Impl/ValuesBlockInputFormat.cpp:0: DB::ValuesBlockInputFormat::read() @ 0x000000002623a9b1
2024.08.15 07:04:52.637251 [ 674868 ] {} <Fatal> ClientBase: 15. src/Processors/Formats/IInputFormat.cpp:19: DB::IInputFormat::generate() @ 0x000000002608a606
2024.08.15 07:04:52.674887 [ 674868 ] {} <Fatal> ClientBase: 16.0. inlined from src/Processors/Chunk.h:110: DB::Chunk::hasRows() const
2024.08.15 07:04:52.674948 [ 674868 ] {} <Fatal> ClientBase: 16.1. inlined from src/Processors/Chunk.h:112: DB::Chunk::empty() const
2024.08.15 07:04:52.674975 [ 674868 ] {} <Fatal> ClientBase: 16.2. inlined from src/Processors/Chunk.h:113: DB::Chunk::operator bool() const
2024.08.15 07:04:52.675005 [ 674868 ] {} <Fatal> ClientBase: 16. src/Processors/ISource.cpp:140: DB::ISource::tryGenerate() @ 0x000000002603807a
2024.08.15 07:04:52.711074 [ 674868 ] {} <Fatal> ClientBase: 17.0. inlined from contrib/llvm-project/libcxx/include/optional:344: std::__optional_storage_base<DB::Chunk, false>::has_value[abi:v15007]() const
2024.08.15 07:04:52.711141 [ 674868 ] {} <Fatal> ClientBase: 17.1. inlined from contrib/llvm-project/libcxx/include/optional:998: std::optional<DB::Chunk>::operator bool[abi:v15007]() const
2024.08.15 07:04:52.711175 [ 674868 ] {} <Fatal> ClientBase: 17. src/Processors/ISource.cpp:108: DB::ISource::work() @ 0x0000000026037683
2024.08.15 07:04:52.729477 [ 674868 ] {} <Fatal> ClientBase: 18.0. inlined from src/Processors/Executors/ExecutionThreadContext.cpp:0: DB::executeJob(DB::ExecutingGraph::Node*, DB::ReadProgressCallback*)
2024.08.15 07:04:52.729547 [ 674868 ] {} <Fatal> ClientBase: 18. src/Processors/Executors/ExecutionThreadContext.cpp:96: DB::ExecutionThreadContext::executeTask() @ 0x000000002607422e
2024.08.15 07:04:52.786325 [ 674868 ] {} <Fatal> ClientBase: 19. src/Processors/Executors/PipelineExecutor.cpp:273: DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x0000000026059cd1
2024.08.15 07:04:52.840888 [ 674868 ] {} <Fatal> ClientBase: 20.0. inlined from contrib/llvm-project/libcxx/include/vector:547: std::vector<std::unique_ptr<DB::ExecutionThreadContext, std::default_delete<DB::ExecutionThreadContext>>, std::allocator<std::unique_ptr<DB::ExecutionThreadContext, std::default_delete<DB::ExecutionThreadContext>>>>::size[abi:v15007]() const
2024.08.15 07:04:52.840962 [ 674868 ] {} <Fatal> ClientBase: 20.1. inlined from contrib/llvm-project/libcxx/include/vector:1490: std::vector<std::unique_ptr<DB::ExecutionThreadContext, std::default_delete<DB::ExecutionThreadContext>>, std::allocator<std::unique_ptr<DB::ExecutionThreadContext, std::default_delete<DB::ExecutionThreadContext>>>>::operator[][abi:v15007](unsigned long)
2024.08.15 07:04:52.840995 [ 674868 ] {} <Fatal> ClientBase: 20.2. inlined from src/Processors/Executors/ExecutorTasks.h:70: DB::ExecutorTasks::getThreadContext(unsigned long)
2024.08.15 07:04:52.841023 [ 674868 ] {} <Fatal> ClientBase: 20. src/Processors/Executors/PipelineExecutor.cpp:242: DB::PipelineExecutor::executeSingleThread(unsigned long) @ 0x000000002605a68a
2024.08.15 07:04:52.888743 [ 674868 ] {} <Fatal> ClientBase: 21.0. inlined from contrib/llvm-project/libcxx/include/__memory/shared_ptr.h:701: ~shared_ptr
2024.08.15 07:04:52.888806 [ 674868 ] {} <Fatal> ClientBase: 21. src/Processors/Executors/PipelineExecutor.cpp:412: DB::PipelineExecutor::executeImpl(unsigned long, bool) @ 0x000000002605781b
2024.08.15 07:04:52.941225 [ 674868 ] {} <Fatal> ClientBase: 22.0. inlined from contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:274: std::unique_ptr<DB::ExecutingGraph, std::default_delete<DB::ExecutingGraph>>::operator->[abi:v15007]() const
2024.08.15 07:04:52.941307 [ 674868 ] {} <Fatal> ClientBase: 22. src/Processors/Executors/PipelineExecutor.cpp:114: DB::PipelineExecutor::execute(unsigned long, bool) @ 0x0000000026056beb
2024.08.15 07:04:52.987416 [ 674868 ] {} <Fatal> ClientBase: 23.0. inlined from src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:94: DB::threadFunction(DB::PullingAsyncPipelineExecutor::Data&, std::shared_ptr<DB::ThreadGroup>, unsigned long, bool)
2024.08.15 07:04:52.987479 [ 674868 ] {} <Fatal> ClientBase: 23.1. inlined from src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:109: operator()
2024.08.15 07:04:52.987509 [ 674868 ] {} <Fatal> ClientBase: 23.2. inlined from contrib/llvm-project/libcxx/include/__functional/invoke.h:394: ?
2024.08.15 07:04:52.987542 [ 674868 ] {} <Fatal> ClientBase: 23.3. inlined from contrib/llvm-project/libcxx/include/tuple:1789: _ZNSt3__118__apply_tuple_implB6v15007IRZN2DB28PullingAsyncPipelineExecutor4pullERNS1_5ChunkEmE3$_0RNS_5tupleIJEEETpTnmJEEEDcOT_OT0_NS_15__tuple_indicesIJXspT1_EEEE
2024.08.15 07:04:52.987584 [ 674868 ] {} <Fatal> ClientBase: 23.4. inlined from contrib/llvm-project/libcxx/include/tuple:1798: decltype(auto) std::apply[abi:v15007]<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::tuple<>&>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&, std::tuple<>&)
2024.08.15 07:04:52.987611 [ 674868 ] {} <Fatal> ClientBase: 23.5. inlined from src/Common/ThreadPool.h:251: operator()
2024.08.15 07:04:52.987633 [ 674868 ] {} <Fatal> ClientBase: 23.6. inlined from contrib/llvm-project/libcxx/include/__functional/invoke.h:394: ?
2024.08.15 07:04:52.987652 [ 674868 ] {} <Fatal> ClientBase: 23.7. inlined from contrib/llvm-project/libcxx/include/__functional/invoke.h:479: ?
2024.08.15 07:04:52.987675 [ 674868 ] {} <Fatal> ClientBase: 23.8. inlined from contrib/llvm-project/libcxx/include/__functional/function.h:235: ?
2024.08.15 07:04:52.987703 [ 674868 ] {} <Fatal> ClientBase: 23. contrib/llvm-project/libcxx/include/__functional/function.h:716: ? @ 0x000000002607c11d
2024.08.15 07:04:53.055157 [ 674868 ] {} <Fatal> ClientBase: 24. contrib/llvm-project/libcxx/include/__functional/function.h:0: ? @ 0x0000000016255500
2024.08.15 07:04:53.190269 [ 674868 ] {} <Fatal> ClientBase: 25.0. inlined from contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:302: std::unique_ptr<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()>, std::default_delete<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()>>>::reset[abi:v15007](std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()>*)
2024.08.15 07:04:53.190387 [ 674868 ] {} <Fatal> ClientBase: 25.1. inlined from contrib/llvm-project/libcxx/include/__memory/unique_ptr.h:259: ~unique_ptr
2024.08.15 07:04:53.190438 [ 674868 ] {} <Fatal> ClientBase: 25. contrib/llvm-project/libcxx/include/thread:297: void* std::__thread_proxy[abi:v15007]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0x000000001625f6cd
2024.08.15 07:04:53.279407 [ 674868 ] {} <Fatal> ClientBase: 26. asan_thread_start(void*) @ 0x0000000006b63bcd
2024.08.15 07:04:53.279462 [ 674868 ] {} <Fatal> ClientBase: 27. ? @ 0x0000730f80a9ca94
2024.08.15 07:04:53.279481 [ 674868 ] {} <Fatal> ClientBase: 28. ? @ 0x0000730f80b29c3c
2024.08.15 07:04:53.279505 [ 674868 ] {} <Fatal> ClientBase: This ClickHouse version is not official and should be upgraded to the official build.
2024.08.15 07:04:53.279707 [ 674868 ] {} <Fatal> ClientBase: Changed settings: allow_introspection_functions = true, storage_file_read_method = 'mmap'
Aborted (core dumped)
```
