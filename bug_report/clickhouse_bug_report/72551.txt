ID: 72551
Title: 02725_parquet_preserve_order makes clickhouse-local crash in machines with low number of CPUs
Description:
Works in ClickHouse 24.9.1.3278. Crashes in 24.10.2.80.

Found via Antithesis report: 
https://clickhouse.antithesis.com/report/JlbiyHh5mgPAVASnqiqIR_6v/MpqTkNzy3QPWCfbD0HtA3UmuY4btk7iS05GvTjDi90k.html?auth=v2.public.eyJuYmYiOiIyMDI0LTExLTI2VDIwOjMxOjA1WiIsInNjb3BlIjp7IlJlcG9ydFNjb3BlVjEiOnsiYXNzZXQiOiJNcHFUa056eTNRUFdDZmJEMEh0QTNVbXVZNGJ0azdpUzA1R3ZUakRpOTBrLmh0bWwiLCJyZXBvcnRfaWQiOiJKbGJpeUhoNW1nUEFWQVNucWlxSVJfNnYifX19SEsac-czxSsDvglh_K0LUtY5ACa3p6n_V3XOTNWpVz6h42bnT59HWJVFGaKEDgfqp7oepWXnTrNc2I_7LYSZAg

Can be easily reproduced forcing `max_parsing_threads=1` and a single query:

```bash
/home/ubuntu/.local/share/mise/installs/clickhouse/24.10/bin/clickhouse -q "select number + sleepEachRow(0.1) from file('/home/ubuntu/ClickHouse/ClickHouse/tests/queries/0_stateless/data_parquet/02725_data.parquet') settings input_format_parquet_preserve_order=1, function_sleep_max_microseconds_per_block = 60000000, input_format_parquet_local_file_min_bytes_for_seek=0, max_parsing_threads=1"
2024.11.27 16:17:17.360402 [ 184047 ] {} <Fatal> ClientBase: ########## Short fault info ############
2024.11.27 16:17:17.360454 [ 184047 ] {} <Fatal> ClientBase: (version 24.10.2.80 (official build), build id: , git hash: 96b80057159a167b4c697cf2676afa9319f87f21, architecture: x86_64) (from thread 184045) Received signal 11
2024.11.27 16:17:17.360474 [ 184047 ] {} <Fatal> ClientBase: Signal description: Segmentation fault
2024.11.27 16:17:17.360491 [ 184047 ] {} <Fatal> ClientBase: Address: NULL pointer. Access: read. Address not mapped to object.
2024.11.27 16:17:17.360503 [ 184047 ] {} <Fatal> ClientBase: Stack trace: 0x000000000d2765e1 0x000076b9ca842520 0x00000000129d5ef5 0x0000000012b3ee92 0x0000000012b3d7cf 0x0000000012b3f1db 0x00000000129cc3d6 0x00000000129a8b1b 0x00000000129a8827 0x00000000129c2fa7 0x00000000129b6550 0x00000000129b5da8 0x00000000129c7317 0x0000000011cbad3d 0x00000000129a8b1b 0x00000000129a8827 0x00000000129c2fa7 0x00000000129b6550 0x00000000129b5824 0x00000000129c6a8a 0x000000000d04c0bf 0x000000000d052f5a 0x000076b9ca894ac3 0x000076b9ca926850
2024.11.27 16:17:17.360520 [ 184047 ] {} <Fatal> ClientBase: ########################################
2024.11.27 16:17:17.360532 [ 184047 ] {} <Fatal> ClientBase: (version 24.10.2.80 (official build), build id: , git hash: 96b80057159a167b4c697cf2676afa9319f87f21) (from thread 184045) (query_id: c5eadb6a-5a66-4fc4-841a-e442cf06a5fd) (query: select number + sleepEachRow(0.1) from file('/home/ubuntu/ClickHouse/ClickHouse/tests/queries/0_stateless/data_parquet/02725_data.parquet') settings input_format_parquet_preserve_order=1, function_sleep_max_microseconds_per_block = 60000000, input_format_parquet_local_file_min_bytes_for_seek=0, max_parsing_threads=1) Received signal Segmentation fault (11)
2024.11.27 16:17:17.360540 [ 184047 ] {} <Fatal> ClientBase: Address: NULL pointer. Access: read. Address not mapped to object.
2024.11.27 16:17:17.360548 [ 184047 ] {} <Fatal> ClientBase: Stack trace: 0x000000000d2765e1 0x000076b9ca842520 0x00000000129d5ef5 0x0000000012b3ee92 0x0000000012b3d7cf 0x0000000012b3f1db 0x00000000129cc3d6 0x00000000129a8b1b 0x00000000129a8827 0x00000000129c2fa7 0x00000000129b6550 0x00000000129b5da8 0x00000000129c7317 0x0000000011cbad3d 0x00000000129a8b1b 0x00000000129a8827 0x00000000129c2fa7 0x00000000129b6550 0x00000000129b5824 0x00000000129c6a8a 0x000000000d04c0bf 0x000000000d052f5a 0x000076b9ca894ac3 0x000076b9ca926850
2024.11.27 16:17:17.409026 [ 184047 ] {} <Fatal> ClientBase: 0. signalHandler(int, siginfo_t*, void*) @ 0x000000000d2765e1
2024.11.27 16:17:17.409058 [ 184047 ] {} <Fatal> ClientBase: 1. ? @ 0x000076b9ca842520
2024.11.27 16:17:17.409080 [ 184047 ] {} <Fatal> ClientBase: 2. arrow::RecordBatchReader::Next() @ 0x00000000129d5ef5
2024.11.27 16:17:17.409105 [ 184047 ] {} <Fatal> ClientBase: 3. DB::ParquetBlockInputFormat::decodeOneChunk(unsigned long, std::unique_lock<std::mutex>&)::$_3::operator()() const @ 0x0000000012b3ee92
2024.11.27 16:17:17.409125 [ 184047 ] {} <Fatal> ClientBase: 4. DB::ParquetBlockInputFormat::decodeOneChunk(unsigned long, std::unique_lock<std::mutex>&) @ 0x0000000012b3d7cf
2024.11.27 16:17:17.409144 [ 184047 ] {} <Fatal> ClientBase: 5. DB::ParquetBlockInputFormat::read() @ 0x0000000012b3f1db
2024.11.27 16:17:17.409160 [ 184047 ] {} <Fatal> ClientBase: 6. DB::IInputFormat::generate() @ 0x00000000129cc3d6
2024.11.27 16:17:17.409168 [ 184047 ] {} <Fatal> ClientBase: 7. DB::ISource::tryGenerate() @ 0x00000000129a8b1b
2024.11.27 16:17:17.409185 [ 184047 ] {} <Fatal> ClientBase: 8. DB::ISource::work() @ 0x00000000129a8827
2024.11.27 16:17:17.409193 [ 184047 ] {} <Fatal> ClientBase: 9. DB::ExecutionThreadContext::executeTask() @ 0x00000000129c2fa7
2024.11.27 16:17:17.409210 [ 184047 ] {} <Fatal> ClientBase: 10. DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x00000000129b6550
2024.11.27 16:17:17.409221 [ 184047 ] {} <Fatal> ClientBase: 11. DB::PipelineExecutor::executeStep(std::atomic<bool>*) @ 0x00000000129b5da8
2024.11.27 16:17:17.409240 [ 184047 ] {} <Fatal> ClientBase: 12. DB::PullingPipelineExecutor::pull(DB::Chunk&) @ 0x00000000129c7317
2024.11.27 16:17:17.409250 [ 184047 ] {} <Fatal> ClientBase: 13. DB::StorageFileSource::generate() @ 0x0000000011cbad3d
2024.11.27 16:17:17.409258 [ 184047 ] {} <Fatal> ClientBase: 14. DB::ISource::tryGenerate() @ 0x00000000129a8b1b
2024.11.27 16:17:17.409267 [ 184047 ] {} <Fatal> ClientBase: 15. DB::ISource::work() @ 0x00000000129a8827
2024.11.27 16:17:17.409277 [ 184047 ] {} <Fatal> ClientBase: 16. DB::ExecutionThreadContext::executeTask() @ 0x00000000129c2fa7
2024.11.27 16:17:17.409287 [ 184047 ] {} <Fatal> ClientBase: 17. DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x00000000129b6550
2024.11.27 16:17:17.409305 [ 184047 ] {} <Fatal> ClientBase: 18. DB::PipelineExecutor::execute(unsigned long, bool) @ 0x00000000129b5824
2024.11.27 16:17:17.409334 [ 184047 ] {} <Fatal> ClientBase: 19. void std::__function::__policy_invoker<void ()>::__call_impl<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<true, true>::ThreadFromGlobalPoolImpl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0x00000000129c6a8a
2024.11.27 16:17:17.409354 [ 184047 ] {} <Fatal> ClientBase: 20. ThreadPoolImpl<std::thread>::ThreadFromThreadPool::worker() @ 0x000000000d04c0bf
2024.11.27 16:17:17.409374 [ 184047 ] {} <Fatal> ClientBase: 21. void* std::__thread_proxy[abi:v15007]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void (ThreadPoolImpl<std::thread>::ThreadFromThreadPool::*)(), ThreadPoolImpl<std::thread>::ThreadFromThreadPool*>>(void*) @ 0x000000000d052f5a
2024.11.27 16:17:17.409383 [ 184047 ] {} <Fatal> ClientBase: 22. ? @ 0x000076b9ca894ac3
2024.11.27 16:17:17.409387 [ 184047 ] {} <Fatal> ClientBase: 23. ? @ 0x000076b9ca926850
2024.11.27 16:17:17.409399 [ 184047 ] {} <Fatal> ClientBase: Report this error to https://github.com/ClickHouse/ClickHouse/issues
2024.11.27 16:17:17.409517 [ 184047 ] {} <Fatal> ClientBase: Changed settings: max_parsing_threads = 1, allow_introspection_functions = true, function_sleep_max_microseconds_per_block = 60000000, storage_file_read_method = 'mmap', input_format_parquet_preserve_order = true, input_format_parquet_local_file_min_bytes_for_seek = 0
[1]    184040 segmentation fault (core dumped) 
```