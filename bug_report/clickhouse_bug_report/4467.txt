ID: 4467
Title: DB::Exception: Unknown codec family code : 4:
Description:
(you don't have to strictly follow this form)

**Describe the bug**
We have replicated table with ReplicatedMergeTree engine. Suddenly one of the replicas began to return an error for select query:

```
<hostname> :) select sum(cityHash64(request)) from db.table where event_date = '2019-02-20'                                                                                    

SELECT sum(cityHash64(request))
FROM db.table
WHERE event_date = '2019-02-20'

Received exception from server (version 19.1.6):
Code: 432. DB::Exception: Received from localhost:9000, 127.0.0.1. DB::Exception: Unknown codec family code : 4: (while reading column request): (while reading from part /data/clickhouse/data/db/table/20190220_20190220_37849_37849_0/ from mark 0 with max_rows_to_read = 8192). 

0 rows in set. Elapsed: 4.944 sec. Processed 72.35 million rows, 13.49 GB (14.63 million rows/s., 2.73 GB/s.) 
```
clickhouse-server tried to check this part, but result was ok
```
2019.02.20 20:58:56.984566 [ 27 ] {} <Warning> db.table (ReplicatedMergeTreePartCheckThread): Checking part 20190220_20190220_37849_37849_0
2019.02.20 20:58:56.988305 [ 27 ] {} <Warning> db.table (ReplicatedMergeTreePartCheckThread): Checking data of part 20190220_20190220_37849_37849_0.
2019.02.20 20:58:57.076686 [ 27 ] {} <Information> db.table (ReplicatedMergeTreePartCheckThread): Part 20190220_20190220_37849_37849_0 looks good.

2019.02.20 20:58:57.141819 [ 1926 ] {eb495c00-a322-4003-9013-a532f55241ba} <Error> executeQuery: Code: 432, e.displayText() = DB::Exception: Unknown codec family code : 4: (while reading column request): (while reading from part /data/clickhouse/data/db/table/20190220_20190220_37849_37849_0/ from mark 0 with max_rows_to_read = 8192), e.what() = DB::Exception (from 10.3.0.195:44332) (in query: <query>))), Stack trace:

0. /usr/bin/clickhouse-server(StackTrace::StackTrace()+0x16) [0x9fde646]
1. /usr/bin/clickhouse-server(DB::Exception::Exception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)+0x22) [0x3317a42]
2. /usr/bin/clickhouse-server(DB::CompressionCodecFactory::get(unsigned char) const+0x14f) [0x76b290f]
3. /usr/bin/clickhouse-server(DB::CompressedReadBufferBase::readCompressedData(unsigned long&, unsigned long&)+0x995) [0x76ae4b5]
4. /usr/bin/clickhouse-server(DB::CompressedReadBufferFromFile::seek(unsigned long, unsigned long)+0xad) [0x76af95d]
5. /usr/bin/clickhouse-server(DB::MergeTreeReader::Stream::seekToMark(unsigned long)+0x85) [0x75b4735]
6. /usr/bin/clickhouse-server() [0x75b4d0f]
7. /usr/bin/clickhouse-server(DB::IDataType::deserializeBinaryBulkWithMultipleStreams(DB::IColumn&, unsigned long, DB::IDataType::DeserializeBinaryBulkSettings&, std::shared_ptr<DB::IDataType::DeserializeBinaryBulkState>&) const+0x28) [0x3482ad8]
8. /usr/bin/clickhouse-server(DB::MergeTreeReader::readData(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, DB::IDataType const&, DB::IColumn&, unsigned long, bool, unsigned long, bool)+0x2b2) [0x75b0512]
9. /usr/bin/clickhouse-server(DB::MergeTreeReader::readRows(unsigned long, bool, unsigned long, DB::Block&)+0x387) [0x75b0ce7]
10. /usr/bin/clickhouse-server(DB::MergeTreeRangeReader::DelayedStream::finalize(DB::Block&)+0x136) [0x75abdd6]
11. /usr/bin/clickhouse-server(DB::MergeTreeRangeReader::startReadingChain(unsigned long, std::vector<DB::MarkRange, std::allocator<DB::MarkRange> >&)+0x46c) [0x75ac89c]
12. /usr/bin/clickhouse-server(DB::MergeTreeRangeReader::read(unsigned long, std::vector<DB::MarkRange, std::allocator<DB::MarkRange> >&)+0x10f) [0x75addbf]
13. /usr/bin/clickhouse-server(DB::MergeTreeRangeReader::read(unsigned long, std::vector<DB::MarkRange, std::allocator<DB::MarkRange> >&)+0x696) [0x75ae346]
14. /usr/bin/clickhouse-server(DB::MergeTreeBaseSelectBlockInputStream::readFromPart()+0x7e8) [0x75a6858]
15. /usr/bin/clickhouse-server(DB::MergeTreeBaseSelectBlockInputStream::readImpl()+0xbd) [0x75a7afd]
16. /usr/bin/clickhouse-server(DB::IProfilingBlockInputStream::read()+0x262) [0x6e21b62]
17. /usr/bin/clickhouse-server(DB::FilterBlockInputStream::readImpl()+0xbd) [0x73ae89d]
18. /usr/bin/clickhouse-server(DB::IProfilingBlockInputStream::read()+0x262) [0x6e21b62]
19. /usr/bin/clickhouse-server(DB::ExpressionBlockInputStream::readImpl()+0x2e) [0x73adb6e]
20. /usr/bin/clickhouse-server(DB::IProfilingBlockInputStream::read()+0x262) [0x6e21b62]
21. /usr/bin/clickhouse-server(DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>::loop(unsigned long)+0x12d) [0x6f7582d]
22. /usr/bin/clickhouse-server(DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>::thread(std::shared_ptr<DB::ThreadGroupStatus>, unsigned long)+0x200) [0x6f75e50]
23. /usr/bin/clickhouse-server(std::thread::_State_impl<std::thread::_Invoker<std::tuple<DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>::process()::{lambda()#1}> > >::_M_run()+0x4f) [0x6f7633f]
24. /usr/bin/clickhouse-server() [0xaa3e73f]
25. /lib/x86_64-linux-gnu/libpthread.so.0(+0x8064) [0x7efd17686064]
26. /lib/x86_64-linux-gnu/libc.so.6(clone+0x6d) [0x7efd16cae62d]
```

So, this broken part won't be downloaded from replica, causing this error appear again and again.

I tried to run `OPTIMIZE table FINAL` command for partition with a broken part, but unsuccessfully.

data from `system.merges` table:
```
Row 1:
──────
database:               db
table:                  table
replica_name:           host
position:               0
node_name:              queue-0001297481
type:                   MERGE_PARTS
create_time:            2019-02-20 20:59:12
required_quorum:        0
source_replica:         host
new_part_name:          20190220_20190220_37825_37851_2
parts_to_merge:         ['20190220_20190220_37825_37830_1','20190220_20190220_37831_37836_1','20190220_20190220_37837_37842_1','20190220_20190220_37843_37848_1','20190220_20190220_37849_37849_0','20190220
_20190220_37850_37850_0','20190220_20190220_37851_37851_0']
is_detach:              0
is_currently_executing: 0
num_tries:              3273
last_exception:         Code: 432, e.displayText() = DB::Exception: Unknown codec family code : 4: (while reading column request): (while reading from part /data/clickhouse/data/db/table/20
190220_20190220_37849_37849_0/ from mark 0 with max_rows_to_read = 8192): Cannot fetch required block. Stream MergeTreeSequentialBlockInputStream, part 4, e.what() = DB::Exception
last_attempt_time:      2019-02-21 15:29:09
num_postponed:          43
postpone_reason:        Not executing log entry for part 20190220_20190220_37825_37851_2 because source parts size (283.90 MiB) is greater than the current maximum (19.80 MiB).
last_postpone_time:     2019-02-21 11:20:16
```

**How to reproduce**
* Which ClickHouse server version to use
19.1.6
* Which interface to use, if matters
clickhouse-client

**Expected behavior**
1. example query executed successfully
2. in case of broken part it should be downloaded from replica

So, there are 2 problems:
1. `Unknown codec family code : 4:` error
2. Unability to download broken part from second replica