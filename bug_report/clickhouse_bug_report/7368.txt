ID: 7368
Title: Recovery After Complete Data Loss
Description:
I made 3 servers for ClickHouse replication testing with zookeeper. After replication testing, I added a new server. And I copied all metadata of tables to new server.(All tables are created as ReplicatedMergeTree engine) But, The ClickHouse server was not started.

The error content is below.(`/home/clickhouse-server/clickhouse-server.err.log`)

```
2019.10.17 18:26:47.503784 [ 1 ] {} <Error> Application: DB::Exception: Cannot create table from metadata file /var/lib/clickhouse/metadata/data_architect//extension2.sql, error: Coordination::Exception: No node, path: /clickhouse/tables/05-01/extension2 /replicas/clickh4/parts, stack trace:
0. 0x55cb9f9ce640 StackTrace::StackTrace() /usr/bin/clickhouse
1. 0x55cba3601560 Coordination::Exception::Exception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, int) /usr/bin/clickhouse
2. 0x55cba3601e53 Coordination::Exception::Exception(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /usr/bin/clickhouse
3. 0x55cb9f875bbf ? /usr/bin/clickhouse
4. 0x55cba2fa5e3d DB::StorageReplicatedMergeTree::checkParts(bool) /usr/bin/clickhouse
5. 0x55cba2fb987b DB::StorageReplicatedMergeTree::StorageReplicatedMergeTree(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, DB::ColumnsDescription const&, DB::IndicesDescription const&, DB::ConstraintsDescription const&, DB::Context&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::IAST> const&, DB::MergeTreeData::MergingParams const&, std::unique_ptr<DB::MergeTreeSettings, std::default_delete<DB::MergeTreeSettings> >, bool) /usr/bin/clickhouse
6. 0x55cba3117444 ? /usr/bin/clickhouse
7. 0x55cba3119075 std::_Function_handler<std::shared_ptr<DB::IStorage> (DB::StorageFactory::Arguments const&), std::shared_ptr<DB::IStorage> (*)(DB::StorageFactory::Arguments const&)>::_M_invoke(std::_Any_data const&, DB::StorageFactory::Arguments const&) /usr/bin/clickhouse
8. 0x55cba2f414f1 DB::StorageFactory::get(DB::ASTCreateQuery&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, DB::Context&, DB::Context&, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, bool, bool) const /usr/bin/clickhouse
9. 0x55cba2cac851 DB::createTableFromDefinition(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, DB::Context&, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /usr/bin/clickhouse
10. 0x55cba335b3ef ? /usr/bin/clickhouse
11. 0x55cba335ba2f ? /usr/bin/clickhouse
12. 0x55cb9fa19b6e ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::_List_iterator<ThreadFromGlobalPool>) /usr/bin/clickhouse
13. 0x55cb9fa1a17e ThreadFromGlobalPool::ThreadFromGlobalPool<ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::function<void ()>, int, std::optional<unsigned long>)::{lambda()#3}>(ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::function<void ()>, int, std::optional<unsigned long>)::{lambda()#3}&&)::{lambda()#1}::operator()() const /usr/bin/clickhouse
14. 0x55cb9fa1761c ThreadPoolImpl<std::thread>::worker(std::_List_iterator<std::thread>) /usr/bin/clickhouse
15. 0x55cba56deeb0 ? /usr/bin/clickhouse
16. 0x7fa8b687ae65 start_thread /usr/lib64/libpthread-2.17.so
17. 0x7fa8b619788d __clone /usr/lib64/libc-2.17.so
```

I checked the zookeeper client and '/clickhouse/tables/05-01/extension2' node was created.

FYI, I used the command of the document  `sudo -u clickhouse touch /var/lib/clickhouse/flags/force_restore_data`. I did not forget to use `chmod` and `chown` also.

I repeated this process several times with creating new server. becuz I can make a mistake. but All result are same.

-------------------------------------------------------------------------------------------------------
When I copied both the table directory and metadata, It was working. But, the document mention I can copy only metadata for recovery(only replicated table). I want to know how to do that.

