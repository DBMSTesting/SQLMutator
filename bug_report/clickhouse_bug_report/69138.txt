ID: 69138
Title: Sort order of blocks violated for column logical error
Description:
**Describe the bug**
During an optimization step, a logical error happens on a SummingMergeTree table with a dynamic column.

**How to reproduce**

```sql
SET allow_experimental_dynamic_type = 1;
CREATE TABLE t0 (c0 Dynamic) ENGINE = SummingMergeTree() ORDER BY (c0);
INSERT INTO t0 (c0) VALUES (TRUE), (2);
INSERT INTO t0 (c0) VALUES (18446694503080407866);
OPTIMIZE TABLE t0;
/*
Logical error: 'Sort order of blocks violated for column number 0, left: Int64_2, right: UInt64_58. Chunk 0, rows read 3.'
*/
```
Here is the full stack trace:
```
<Fatal> : Logical error: 'Sort order of blocks violated for column number 0, left: Int64_2, right: UInt64_58. Chunk 0, rows read 3.'.
2024.09.02 08:46:43.451977 [ 659001 ] {5e0cf6a2-4b8b-4125-a3c0-7d776d3cb8b6::all_1_2_1} <Fatal> : Stack trace (when copying this message, always include the lines below):

0. contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x00000000276464d1
1. src/Common/Exception.cpp:109: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x00000000162108cd
2. src/Common/Exception.h:110: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006c09d26
3. src/Common/Exception.h:128: DB::Exception::Exception<unsigned long&, String, String, unsigned long&, unsigned long&, String>(int, FormatStringHelperImpl<std::type_identity<unsigned long&>::type, std::type_identity<String>::type, std::type_identity<String>::type, std::type_identity<unsigned long&>::type, std::type_identity<unsigned long&>::type, std::type_identity<String>::type>, unsigned long&, String&&, String&&, unsigned long&, unsigned long&, String&&) @ 0x00000000264916b5
4. src/Processors/Transforms/CheckSortedTransform.cpp:44: DB::CheckSortedTransform::transform(DB::Chunk&)::$_0::operator()(std::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn>>> const&, unsigned long, std::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn>>> const&, unsigned long) const @ 0x00000000264910d3
5. src/Processors/Transforms/CheckSortedTransform.cpp:70: DB::CheckSortedTransform::transform(DB::Chunk&) @ 0x0000000026490249
6. src/Processors/ISimpleTransform.h:32: DB::ISimpleTransform::transform(DB::Chunk&, DB::Chunk&) @ 0x000000001680727f
7. src/Processors/ISimpleTransform.cpp:89: DB::ISimpleTransform::work() @ 0x00000000261eb1da
8. src/Processors/Executors/ExecutionThreadContext.cpp:47: DB::ExecutionThreadContext::executeTask() @ 0x000000002622ebae
9. src/Processors/Executors/PipelineExecutor.cpp:283: DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x0000000026213330
10. src/Processors/Executors/PipelineExecutor.cpp:157: DB::PipelineExecutor::executeStep(std::atomic<bool>*) @ 0x00000000262124d9
11. src/Processors/Executors/PullingPipelineExecutor.cpp:54: DB::PullingPipelineExecutor::pull(DB::Chunk&) @ 0x0000000026238ff9
12. src/Processors/Executors/PullingPipelineExecutor.cpp:65: DB::PullingPipelineExecutor::pull(DB::Block&) @ 0x0000000026239459
13. src/Storages/MergeTree/MergeTask.cpp:683: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::executeImpl() @ 0x0000000025567a18
14. src/Storages/MergeTree/MergeTask.cpp:520: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::execute() @ 0x000000002556497a
15. src/Storages/MergeTree/MergeTask.cpp:1181: DB::MergeTask::execute() @ 0x000000002557143e
16. src/Storages/MergeTree/MergePlainMergeTreeTask.cpp:57: DB::MergePlainMergeTreeTask::executeStep() @ 0x0000000025c98c16
17. src/Storages/MergeTree/MergePlainMergeTreeTask.h:104: DB::StorageMergeTree::merge(bool, String const&, bool, bool, std::vector<String, std::allocator<String>> const&, bool, std::shared_ptr<DB::MergeTreeTransaction> const&, PreformattedMessage&, bool) @ 0x0000000025c43ed4
18. src/Storages/StorageMergeTree.cpp:1634: DB::StorageMergeTree::optimize(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::shared_ptr<DB::IAST> const&, bool, bool, std::vector<String, std::allocator<String>> const&, bool, std::shared_ptr<DB::Context const>) @ 0x0000000025c4e4e1
19. src/Interpreters/InterpreterOptimizeQuery.cpp:84: DB::InterpreterOptimizeQuery::execute() @ 0x00000000235194ae
20. src/Interpreters/executeQuery.cpp:1236: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000234805da
21. src/Interpreters/executeQuery.cpp:1402: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000023479709
22. src/Server/TCPHandler.cpp:564: DB::TCPHandler::runImpl() @ 0x000000002608f665
23. src/Server/TCPHandler.cpp:2484: DB::TCPHandler::run() @ 0x00000000260be8a9
24. base/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x00000000277f54ef
25. base/poco/Net/src/TCPServerDispatcher.cpp:115: Poco::Net::TCPServerDispatcher::run() @ 0x00000000277f60f7
26. base/poco/Foundation/src/ThreadPool.cpp:205: Poco::PooledThread::run() @ 0x000000002772477c
27. base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x000000002771f428
28. asan_thread_start(void*) @ 0x0000000006bbebcd
29. ? @ 0x000078a80de9ca94
30. ? @ 0x000078a80df29c3c

2024.09.02 08:46:43.452244 [ 659000 ] {} <Trace> BaseDaemon: Received signal 6
2024.09.02 08:46:43.452555 [ 659690 ] {} <Fatal> BaseDaemon: ########## Short fault info ############
2024.09.02 08:46:43.452640 [ 659690 ] {} <Fatal> BaseDaemon: (version 24.9.1.1, build id: 1C23728A2FF4880F6118DDE99C35D3D28680D87A, git hash: 589a63a256d546c73efda05779cc2c20ee52c888, architecture: x86_64) (from thread 659001) Received signal 6
2024.09.02 08:46:43.452678 [ 659690 ] {} <Fatal> BaseDaemon: Signal description: Aborted
2024.09.02 08:46:43.452704 [ 659690 ] {} <Fatal> BaseDaemon: 
2024.09.02 08:46:43.452757 [ 659690 ] {} <Fatal> BaseDaemon: Stack trace: 0x00005d67749e132d 0x00005d6774f2cbb2 0x000078a80de45320 0x000078a80de9eb1d 0x000078a80de4526e 0x000078a80de288ff 0x00005d6774982588 0x00005d6774983d9f 0x00005d676537cd26 0x00005d6784c046b5 0x00005d6784c040d3 0x00005d6784c03249 0x00005d6774f7a27f 0x00005d678495e1da 0x00005d67849a1bae 0x00005d6784986330 0x00005d67849854d9 0x00005d67849abff9 0x00005d67849ac459 0x00005d6783cdaa18 0x00005d6783cd797a 0x00005d6783ce443e 0x00005d678440bc16 0x00005d67843b6ed4 0x00005d67843c14e1 0x00005d6781c8c4ae 0x00005d6781bf35da 0x00005d6781bec709 0x00005d6784802665 0x00005d67848318a9 0x00005d6785f684ef 0x00005d6785f690f7 0x00005d6785e9777c 0x00005d6785e92428 0x00005d6765331bcd 0x000078a80de9ca94 0x000078a80df29c3c
2024.09.02 08:46:43.452789 [ 659690 ] {} <Fatal> BaseDaemon: ########################################
2024.09.02 08:46:43.452829 [ 659690 ] {} <Fatal> BaseDaemon: (version 24.9.1.1, build id: 1C23728A2FF4880F6118DDE99C35D3D28680D87A, git hash: 589a63a256d546c73efda05779cc2c20ee52c888) (from thread 659001) (query_id: 5e0cf6a2-4b8b-4125-a3c0-7d776d3cb8b6::all_1_2_1) (query: ) Received signal Aborted (6)
2024.09.02 08:46:43.452857 [ 659690 ] {} <Fatal> BaseDaemon: 
2024.09.02 08:46:43.452876 [ 659690 ] {} <Fatal> BaseDaemon: Stack trace: 0x00005d67749e132d 0x00005d6774f2cbb2 0x000078a80de45320 0x000078a80de9eb1d 0x000078a80de4526e 0x000078a80de288ff 0x00005d6774982588 0x00005d6774983d9f 0x00005d676537cd26 0x00005d6784c046b5 0x00005d6784c040d3 0x00005d6784c03249 0x00005d6774f7a27f 0x00005d678495e1da 0x00005d67849a1bae 0x00005d6784986330 0x00005d67849854d9 0x00005d67849abff9 0x00005d67849ac459 0x00005d6783cdaa18 0x00005d6783cd797a 0x00005d6783ce443e 0x00005d678440bc16 0x00005d67843b6ed4 0x00005d67843c14e1 0x00005d6781c8c4ae 0x00005d6781bf35da 0x00005d6781bec709 0x00005d6784802665 0x00005d67848318a9 0x00005d6785f684ef 0x00005d6785f690f7 0x00005d6785e9777c 0x00005d6785e92428 0x00005d6765331bcd 0x000078a80de9ca94 0x000078a80df29c3c
2024.09.02 08:46:43.495102 [ 659690 ] {} <Fatal> BaseDaemon: 0.0. inlined from src/Common/StackTrace.cpp:372: StackTrace::tryCapture()
2024.09.02 08:46:43.495148 [ 659690 ] {} <Fatal> BaseDaemon: 0. src/Common/StackTrace.cpp:341: StackTrace::StackTrace(ucontext_t const&) @ 0x000000001626e32d
2024.09.02 08:46:43.550942 [ 659690 ] {} <Fatal> BaseDaemon: 1. src/Common/SignalHandlers.cpp:85: signalHandler(int, siginfo_t*, void*) @ 0x00000000167b9bb2
2024.09.02 08:46:43.550977 [ 659690 ] {} <Fatal> BaseDaemon: 2. ? @ 0x000078a80de45320
2024.09.02 08:46:43.550996 [ 659690 ] {} <Fatal> BaseDaemon: 3. ? @ 0x000078a80de9eb1d
2024.09.02 08:46:43.551014 [ 659690 ] {} <Fatal> BaseDaemon: 4. ? @ 0x000078a80de4526e
2024.09.02 08:46:43.551036 [ 659690 ] {} <Fatal> BaseDaemon: 5. ? @ 0x000078a80de288ff
2024.09.02 08:46:43.631590 [ 659690 ] {} <Fatal> BaseDaemon: 6. src/Common/Exception.cpp:48: DB::abortOnFailedAssertion(String const&, void* const*, unsigned long, unsigned long) @ 0x000000001620f588
2024.09.02 08:46:43.705417 [ 659690 ] {} <Fatal> BaseDaemon: 7.0. inlined from src/Common/Exception.cpp:71: DB::handle_error_code(String const&, int, bool, std::vector<void*, std::allocator<void*>> const&)
2024.09.02 08:46:43.705457 [ 659690 ] {} <Fatal> BaseDaemon: 7. src/Common/Exception.cpp:115: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x0000000016210d9f
2024.09.02 08:46:43.743539 [ 659690 ] {} <Fatal> BaseDaemon: 8.0. inlined from src/Common/Exception.h:110: Exception
2024.09.02 08:46:43.743576 [ 659690 ] {} <Fatal> BaseDaemon: 8. src/Common/Exception.h:63: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x0000000006c09d26
2024.09.02 08:46:43.785615 [ 659690 ] {} <Fatal> BaseDaemon: 9. src/Common/Exception.h:128: DB::Exception::Exception<unsigned long&, String, String, unsigned long&, unsigned long&, String>(int, FormatStringHelperImpl<std::type_identity<unsigned long&>::type, std::type_identity<String>::type, std::type_identity<String>::type, std::type_identity<unsigned long&>::type, std::type_identity<unsigned long&>::type, std::type_identity<String>::type>, unsigned long&, String&&, String&&, unsigned long&, unsigned long&, String&&) @ 0x00000000264916b5
2024.09.02 08:46:43.825589 [ 659690 ] {} <Fatal> BaseDaemon: 10. src/Processors/Transforms/CheckSortedTransform.cpp:44: DB::CheckSortedTransform::transform(DB::Chunk&)::$_0::operator()(std::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn>>> const&, unsigned long, std::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn>>> const&, unsigned long) const @ 0x00000000264910d3
2024.09.02 08:46:43.865326 [ 659690 ] {} <Fatal> BaseDaemon: 11. src/Processors/Transforms/CheckSortedTransform.cpp:70: DB::CheckSortedTransform::transform(DB::Chunk&) @ 0x0000000026490249
2024.09.02 08:46:43.919306 [ 659690 ] {} <Fatal> BaseDaemon: 12. src/Processors/ISimpleTransform.h:32: DB::ISimpleTransform::transform(DB::Chunk&, DB::Chunk&) @ 0x000000001680727f
2024.09.02 08:46:43.955148 [ 659690 ] {} <Fatal> BaseDaemon: 13. src/Processors/ISimpleTransform.cpp:89: DB::ISimpleTransform::work() @ 0x00000000261eb1da
2024.09.02 08:46:43.973254 [ 659690 ] {} <Fatal> BaseDaemon: 14.0. inlined from src/Processors/Executors/ExecutionThreadContext.cpp:47: DB::executeJob(DB::ExecutingGraph::Node*, DB::ReadProgressCallback*)
2024.09.02 08:46:43.973299 [ 659690 ] {} <Fatal> BaseDaemon: 14. src/Processors/Executors/ExecutionThreadContext.cpp:96: DB::ExecutionThreadContext::executeTask() @ 0x000000002622ebae
2024.09.02 08:46:44.000147 [ 659638 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 706.29 MiB, peak 706.29 MiB, free memory in arenas 0.00 B, will set to 847.13 MiB (RSS), difference: 140.83 MiB
2024.09.02 08:46:44.034487 [ 659690 ] {} <Fatal> BaseDaemon: 15. src/Processors/Executors/PipelineExecutor.cpp:283: DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x0000000026213330
2024.09.02 08:46:44.094285 [ 659690 ] {} <Fatal> BaseDaemon: 16. src/Processors/Executors/PipelineExecutor.cpp:157: DB::PipelineExecutor::executeStep(std::atomic<bool>*) @ 0x00000000262124d9
2024.09.02 08:46:44.121219 [ 659690 ] {} <Fatal> BaseDaemon: 17. src/Processors/Executors/PullingPipelineExecutor.cpp:54: DB::PullingPipelineExecutor::pull(DB::Chunk&) @ 0x0000000026238ff9
2024.09.02 08:46:44.148681 [ 659690 ] {} <Fatal> BaseDaemon: 18. src/Processors/Executors/PullingPipelineExecutor.cpp:65: DB::PullingPipelineExecutor::pull(DB::Block&) @ 0x0000000026239459
2024.09.02 08:46:44.453116 [ 659690 ] {} <Fatal> BaseDaemon: 19. src/Storages/MergeTree/MergeTask.cpp:683: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::executeImpl() @ 0x0000000025567a18
2024.09.02 08:46:44.744189 [ 659690 ] {} <Fatal> BaseDaemon: 20. src/Storages/MergeTree/MergeTask.cpp:520: DB::MergeTask::ExecuteAndFinalizeHorizontalPart::execute() @ 0x000000002556497a
2024.09.02 08:46:45.000155 [ 659638 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 847.13 MiB, peak 847.13 MiB, free memory in arenas 0.00 B, will set to 963.00 MiB (RSS), difference: 115.88 MiB
2024.09.02 08:46:45.052611 [ 659690 ] {} <Fatal> BaseDaemon: 21. src/Storages/MergeTree/MergeTask.cpp:1181: DB::MergeTask::execute() @ 0x000000002557143e
2024.09.02 08:46:45.084687 [ 659690 ] {} <Fatal> BaseDaemon: 22. src/Storages/MergeTree/MergePlainMergeTreeTask.cpp:57: DB::MergePlainMergeTreeTask::executeStep() @ 0x0000000025c98c16
2024.09.02 08:46:45.311582 [ 659690 ] {} <Fatal> BaseDaemon: 23.0. inlined from src/Storages/MergeTree/MergePlainMergeTreeTask.h:104: DB::executeHere(std::shared_ptr<DB::MergePlainMergeTreeTask>)
2024.09.02 08:46:45.311630 [ 659690 ] {} <Fatal> BaseDaemon: 23. src/Storages/StorageMergeTree.cpp:1189: DB::StorageMergeTree::merge(bool, String const&, bool, bool, std::vector<String, std::allocator<String>> const&, bool, std::shared_ptr<DB::MergeTreeTransaction> const&, PreformattedMessage&, bool) @ 0x0000000025c43ed4
2024.09.02 08:46:45.607285 [ 659690 ] {} <Fatal> BaseDaemon: 24. src/Storages/StorageMergeTree.cpp:1634: DB::StorageMergeTree::optimize(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::shared_ptr<DB::IAST> const&, bool, bool, std::vector<String, std::allocator<String>> const&, bool, std::shared_ptr<DB::Context const>) @ 0x0000000025c4e4e1
2024.09.02 08:46:45.638403 [ 659690 ] {} <Fatal> BaseDaemon: 25. src/Interpreters/InterpreterOptimizeQuery.cpp:84: DB::InterpreterOptimizeQuery::execute() @ 0x00000000235194ae
2024.09.02 08:46:45.841956 [ 659690 ] {} <Fatal> BaseDaemon: 26. src/Interpreters/executeQuery.cpp:1236: DB::executeQueryImpl(char const*, char const*, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum, DB::ReadBuffer*) @ 0x00000000234805da
2024.09.02 08:46:46.000143 [ 659638 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 963.00 MiB, peak 963.00 MiB, free memory in arenas 0.00 B, will set to 1.02 GiB (RSS), difference: 82.88 MiB
2024.09.02 08:46:46.000188 [ 659638 ] {} <Debug> MemoryTracker: Current memory usage (total): 1.02 GiB.
2024.09.02 08:46:46.069319 [ 659690 ] {} <Fatal> BaseDaemon: 27. src/Interpreters/executeQuery.cpp:1402: DB::executeQuery(String const&, std::shared_ptr<DB::Context>, DB::QueryFlags, DB::QueryProcessingStage::Enum) @ 0x0000000023479709
2024.09.02 08:46:46.209782 [ 659690 ] {} <Fatal> BaseDaemon: 28. src/Server/TCPHandler.cpp:564: DB::TCPHandler::runImpl() @ 0x000000002608f665
2024.09.02 08:46:46.444603 [ 659690 ] {} <Fatal> BaseDaemon: 29. src/Server/TCPHandler.cpp:2484: DB::TCPHandler::run() @ 0x00000000260be8a9
2024.09.02 08:46:46.451572 [ 659690 ] {} <Fatal> BaseDaemon: 30. base/poco/Net/src/TCPServerConnection.cpp:43: Poco::Net::TCPServerConnection::start() @ 0x00000000277f54ef
2024.09.02 08:46:46.462455 [ 659690 ] {} <Fatal> BaseDaemon: 31. base/poco/Net/src/TCPServerDispatcher.cpp:115: Poco::Net::TCPServerDispatcher::run() @ 0x00000000277f60f7
2024.09.02 08:46:46.475204 [ 659690 ] {} <Fatal> BaseDaemon: 32. base/poco/Foundation/src/ThreadPool.cpp:205: Poco::PooledThread::run() @ 0x000000002772477c
2024.09.02 08:46:46.486994 [ 659690 ] {} <Fatal> BaseDaemon: 33. base/poco/Foundation/src/Thread_POSIX.cpp:335: Poco::ThreadImpl::runnableEntry(void*) @ 0x000000002771f428
2024.09.02 08:46:46.552999 [ 659690 ] {} <Fatal> BaseDaemon: 34. asan_thread_start(void*) @ 0x0000000006bbebcd
2024.09.02 08:46:46.553041 [ 659690 ] {} <Fatal> BaseDaemon: 35. ? @ 0x000078a80de9ca94
2024.09.02 08:46:46.553063 [ 659690 ] {} <Fatal> BaseDaemon: 36. ? @ 0x000078a80df29c3c
2024.09.02 08:46:46.553084 [ 659690 ] {} <Fatal> BaseDaemon: Integrity check of the executable skipped because the reference checksum could not be read.
2024.09.02 08:46:46.553114 [ 659690 ] {} <Fatal> BaseDaemon: This ClickHouse version is not official and should be upgraded to the official build.
2024.09.02 08:46:46.553298 [ 659690 ] {} <Fatal> BaseDaemon: Changed settings: workload = 'default'
Aborted (core dumped)
```
