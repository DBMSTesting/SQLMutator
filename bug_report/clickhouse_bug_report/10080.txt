ID: 10080
Title: (version 19.6.2.1) (from thread 328) Received signal Aborted (6)
Description:
(you don't have to strictly follow this form)

**Describe the bug**
ClickHouse server crashed often.

**How to reproduce**
* Which ClickHouse server version to use
 version 19.6.2.1
* Queries to run that lead to unexpected result
There were only some select query around problem time.

**Expected behavior**
Please help to verify whether it is caused by any bug.

**Error message and/or stacktrace**
```
2020.04.07 15:28:24.671520 [ 557 ] {} <Error> BaseDaemon: ########################################
2020.04.07 15:28:24.671569 [ 557 ] {} <Error> BaseDaemon: (version 19.6.2.1) (from thread 328) Received signal Aborted (6).
2020.04.07 15:28:24.726177 [ 557 ] {} <Error> BaseDaemon: 0. /lib64/libc.so.6(gsignal+0x35) [0x3f0c632625]
2020.04.07 15:28:24.726212 [ 557 ] {} <Error> BaseDaemon: 1. /lib64/libc.so.6(abort+0x175) [0x3f0c633e05]
2020.04.07 15:28:24.726222 [ 557 ] {} <Error> BaseDaemon: 2. clickhouse-server() [0x307d0d7]
2020.04.07 15:28:24.726231 [ 557 ] {} <Error> BaseDaemon: 3. clickhouse-server() [0x6824396]
2020.04.07 15:28:24.726240 [ 557 ] {} <Error> BaseDaemon: 4. clickhouse-server() [0x6824656]
2020.04.07 15:28:24.726254 [ 557 ] {} <Error> BaseDaemon: 5. clickhouse-server(DB::CachedCompressedReadBuffer::nextImpl()+0xdd3) [0x6602553]
2020.04.07 15:28:24.726270 [ 557 ] {} <Error> BaseDaemon: 6. clickhouse-server(DB::DataTypeNumberBase<long>::deserializeBinaryBulk(DB::IColumn&, DB::ReadBuffer&, unsigned long, double) const+0x1c9) [0x5e5ea99]
2020.04.07 15:28:24.726285 [ 557 ] {} <Error> BaseDaemon: 7. clickhouse-server(DB::MergeTreeReader::readData(std::string const&, DB::IDataType const&, DB::IColumn&, unsigned long, bool, unsigned long, bool)+0x2c5) [0x651d1e5]
2020.04.07 15:28:24.726296 [ 557 ] {} <Error> BaseDaemon: 8. clickhouse-server(DB::MergeTreeReader::readRows(unsigned long, bool, unsigned long, DB::Block&)+0x2e2) [0x651d832]
2020.04.07 15:28:24.726308 [ 557 ] {} <Error> BaseDaemon: 9. clickhouse-server(DB::MergeTreeRangeReader::DelayedStream::finalize(DB::Block&)+0x66) [0x6518a46]
2020.04.07 15:28:24.726320 [ 557 ] {} <Error> BaseDaemon: 10. clickhouse-server(DB::MergeTreeRangeReader::continueReadingChain(DB::MergeTreeRangeReader::ReadResult&)+0x147) [0x651adb7]
2020.04.07 15:28:24.726332 [ 557 ] {} <Error> BaseDaemon: 11. clickhouse-server(DB::MergeTreeRangeReader::read(unsigned long, std::vector<DB::MarkRange, std::allocator<DB::MarkRange> >&)+0x2b1) [0x651b491]
2020.04.07 15:28:24.726343 [ 557 ] {} <Error> BaseDaemon: 12. clickhouse-server(DB::MergeTreeBaseSelectBlockInputStream::readFromPart()+0x898) [0x650c298]
2020.04.07 15:28:24.726353 [ 557 ] {} <Error> BaseDaemon: 13. clickhouse-server(DB::MergeTreeBaseSelectBlockInputStream::readImpl()+0xa3) [0x650d973]
2020.04.07 15:28:24.726372 [ 557 ] {} <Error> BaseDaemon: 14. clickhouse-server(DB::IBlockInputStream::read()+0x135) [0x5dcfeb5]
2020.04.07 15:28:24.726392 [ 557 ] {} <Error> BaseDaemon: 15. clickhouse-server(DB::FilterBlockInputStream::readImpl()+0x9e) [0x634f39e]
2020.04.07 15:28:24.726410 [ 557 ] {} <Error> BaseDaemon: 16. clickhouse-server(DB::IBlockInputStream::read()+0x135) [0x5dcfeb5]
2020.04.07 15:28:24.726426 [ 557 ] {} <Error> BaseDaemon: 17. clickhouse-server(DB::ExpressionBlockInputStream::readImpl()+0x1a) [0x634e81a]
2020.04.07 15:28:24.726438 [ 557 ] {} <Error> BaseDaemon: 18. clickhouse-server(DB::IBlockInputStream::read()+0x135) [0x5dcfeb5]
2020.04.07 15:28:24.726463 [ 557 ] {} <Error> BaseDaemon: 19. clickhouse-server(DB::ParallelInputsProcessor<DB::ParallelAggregatingBlockInputStream::Handler>::thread(std::shared_ptr<DB::ThreadGroupStatus>, unsigned long)+0x28d) [0x63797dd]
2020.04.07 15:28:24.726473 [ 557 ] {} <Error> BaseDaemon: 20. clickhouse-server(_ZZN20ThreadFromGlobalPoolC4IZN2DB23ParallelInputsProcessorINS1_35ParallelAggregatingBlockInputStream7HandlerEE7processEvEUlvE_JEEEOT_DpOT0_ENKUlvE_clEv+0x59) [0x6379fb9]
2020.04.07 15:28:24.726484 [ 557 ] {} <Error> BaseDaemon: 21. clickhouse-server(ThreadPoolImpl<std::thread>::worker(std::_List_iterator<std::thread>)+0x187) [0x68385e7]
2020.04.07 15:28:24.726493 [ 557 ] {} <Error> BaseDaemon: 22. clickhouse-server() [0x71fbd8f]
2020.04.07 15:28:24.726502 [ 557 ] {} <Error> BaseDaemon: 23. /lib64/libpthread.so.0() [0x3f0ca07aa1]
2020.04.07 15:28:24.726518 [ 557 ] {} <Error> BaseDaemon: ########################################
2020.04.07 15:28:24.726532 [ 557 ] {} <Error> BaseDaemon: (version 19.6.2.1) (from thread 178) Received signal Aborted (6).
2020.04.07 15:28:24.779752 [ 557 ] {} <Error> BaseDaemon: 0. /lib64/libc.so.6(gsignal+0x35) [0x3f0c632625]
2020.04.07 15:28:24.779775 [ 557 ] {} <Error> BaseDaemon: 1. /lib64/libc.so.6(abort+0x175) [0x3f0c633e05]
2020.04.07 15:28:24.779785 [ 557 ] {} <Error> BaseDaemon: 2. clickhouse-server() [0x307d0d7]
2020.04.07 15:28:24.779793 [ 557 ] {} <Error> BaseDaemon: 3. clickhouse-server() [0x6824396]
2020.04.07 15:28:24.779802 [ 557 ] {} <Error> BaseDaemon: 4. clickhouse-server() [0x6824656]
2020.04.07 15:28:24.779813 [ 557 ] {} <Error> BaseDaemon: 5. clickhouse-server(DB::CachedCompressedReadBuffer::nextImpl()+0xdd3) [0x6602553]
2020.04.07 15:28:24.779826 [ 557 ] {} <Error> BaseDaemon: 6. clickhouse-server(DB::DataTypeNumberBase<long>::deserializeBinaryBulk(DB::IColumn&, DB::ReadBuffer&, unsigned long, double) const+0x1c9) [0x5e5ea99]
2020.04.07 15:28:24.779840 [ 557 ] {} <Error> BaseDaemon: 7. clickhouse-server(DB::MergeTreeReader::readData(std::string const&, DB::IDataType const&, DB::IColumn&, unsigned long, bool, unsigned long, bool)+0x2c5) [0x651d1e5]
2020.04.07 15:28:24.779851 [ 557 ] {} <Error> BaseDaemon: 8. clickhouse-server(DB::MergeTreeReader::readRows(unsigned long, bool, unsigned long, DB::Block&)+0x2e2) [0x651d832]
2020.04.07 15:28:24.779861 [ 557 ] {} <Error> BaseDaemon: 9. clickhouse-server(DB::MergeTreeRangeReader::DelayedStream::finalize(DB::Block&)+0x66) [0x6518a46]
2020.04.07 15:28:24.779872 [ 557 ] {} <Error> BaseDaemon: 10. clickhouse-server(DB::MergeTreeRangeReader::continueReadingChain(DB::MergeTreeRangeReader::ReadResult&)+0x147) [0x651adb7]
2020.04.07 15:28:24.779884 [ 557 ] {} <Error> BaseDaemon: 11. clickhouse-server(DB::MergeTreeRangeReader::read(unsigned long, std::vector<DB::MarkRange, std::allocator<DB::MarkRange> >&)+0x2b1) [0x651b491]
2020.04.07 15:28:24.779894 [ 557 ] {} <Error> BaseDaemon: 12. clickhouse-server(DB::MergeTreeBaseSelectBlockInputStream::readFromPart()+0x898) [0x650c298]
2020.04.07 15:28:24.779905 [ 557 ] {} <Error> BaseDaemon: 13. clickhouse-server(DB::MergeTreeBaseSelectBlockInputStream::readImpl()+0xa3) [0x650d973]
2020.04.07 15:28:24.779915 [ 557 ] {} <Error> BaseDaemon: 14. clickhouse-server(DB::IBlockInputStream::read()+0x135) [0x5dcfeb5]
2020.04.07 15:28:24.779932 [ 557 ] {} <Error> BaseDaemon: 15. clickhouse-server(DB::FilterBlockInputStream::readImpl()+0x9e) [0x634f39e]
2020.04.07 15:28:24.779942 [ 557 ] {} <Error> BaseDaemon: 16. clickhouse-server(DB::IBlockInputStream::read()+0x135) [0x5dcfeb5]
2020.04.07 15:28:24.779952 [ 557 ] {} <Error> BaseDaemon: 17. clickhouse-server(DB::ExpressionBlockInputStream::readImpl()+0x1a) [0x634e81a]
2020.04.07 15:28:24.779962 [ 557 ] {} <Error> BaseDaemon: 18. clickhouse-server(DB::IBlockInputStream::read()+0x135) [0x5dcfeb5]
2020.04.07 15:28:24.779974 [ 557 ] {} <Error> BaseDaemon: 19. clickhouse-server(DB::ParallelInputsProcessor<DB::ParallelAggregatingBlockInputStream::Handler>::thread(std::shared_ptr<DB::ThreadGroupStatus>, unsigned long)+0x28d) [0x63797dd]
2020.04.07 15:28:24.779988 [ 557 ] {} <Error> BaseDaemon: 20. clickhouse-server(_ZZN20ThreadFromGlobalPoolC4IZN2DB23ParallelInputsProcessorINS1_35ParallelAggregatingBlockInputStream7HandlerEE7processEvEUlvE_JEEEOT_DpOT0_ENKUlvE_clEv+0x59) [0x6379fb9]
2020.04.07 15:28:24.779999 [ 557 ] {} <Error> BaseDaemon: 21. clickhouse-server(ThreadPoolImpl<std::thread>::worker(std::_List_iterator<std::thread>)+0x187) [0x68385e7]
2020.04.07 15:28:24.780009 [ 557 ] {} <Error> BaseDaemon: 22. clickhouse-server() [0x71fbd8f]
2020.04.07 15:28:24.780017 [ 557 ] {} <Error> BaseDaemon: 23. /lib64/libpthread.so.0() [0x3f0ca07aa1]

```
**Additional context**
Add any other context about the problem here.
