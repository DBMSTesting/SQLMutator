ID: 35686
Title: Unable to move JOIN engine table from Ordinary database to Atomic
Description:
> You have to provide the following information whenever possible.

If you try to move / rename a JOIN table from an Ordinary database to an Atomic one you receive an error like:
```
2022.03.28 11:44:26.179907 [ 22857 ] {b31d150a-a25b-4ab8-9964-ee194a7ee414} <Error> executeQuery: std::exception. Code: 1001, type: std::__1::__fs::filesystem::filesystem_error, e.what() = filesystem error: in rename: No such file or directory [/mnt/disks/tb/clickhouse/data/d_147057/j_c715fa68dc8d409ab4d06c7c275f91fb/] [/mnt/disks/tb/clickhouse/store/de4/de446b15-43b9-48d3-9e44-6b1543b9d8d3/]
Cannot print extra info for Poco::Exception (version 21.9.5.16 (official build)) (from 127.0.0.1:36028) (in query: RENAME TABLE d_147057.j_c715fa68dc8d409ab4d06c7c275f91fb TO d_147057__atomic_database.j_c715fa68dc8d409ab4d06c7c275f91fb_tmp;), Stack trace (when copying this message, always include the lines below):

0. std::__1::system_error::system_error(std::__1::error_code, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x1656060f in /usr/lib/debug/.build-id/3f/0b96ecd2a2596f770f590c8b21d623be199371.debug
1. std::__1::__fs::filesystem::filesystem_error::filesystem_error(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::__fs::filesystem::path const&, std::__1::__fs::filesystem::path const&, std::__1::error_code) @ 0x164f41c0 in /usr/lib/debug/.build-id/3f/0b96ecd2a2596f770f590c8b21d623be199371.debug
2. void std::__1::__fs::filesystem::__throw_filesystem_error<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::__fs::filesystem::path const&, std::__1::__fs::filesystem::path const&, std::__1::error_code const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::__fs::filesystem::path const&, std::__1::__fs::filesystem::path const&, std::__1::error_code const&) @ 0x164f391d in /usr/lib/debug/.build-id/3f/0b96ecd2a2596f770f590c8b21d623be199371.debug
3. std::__1::__fs::filesystem::detail::(anonymous namespace)::ErrorHandler<void>::report(std::__1::error_code const&) const (.llvm.11389027630038897480) @ 0x164f6f22 in /usr/lib/debug/.build-id/3f/0b96ecd2a2596f770f590c8b21d623be199371.debug
4. std::__1::__fs::filesystem::__rename(std::__1::__fs::filesystem::path const&, std::__1::__fs::filesystem::path const&, std::__1::error_code*) @ 0x164faff5 in /usr/lib/debug/.build-id/3f/0b96ecd2a2596f770f590c8b21d623be199371.debug
5. DB::DiskLocal::replaceFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x10661ef6 in /usr/lib/debug/.build-id/3f/0b96ecd2a2596f770f590c8b21d623be199371.debug
6. DB::StorageSetOrJoinBase::rename(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::StorageID const&) @ 0x112f1db1 in /usr/lib/debug/.build-id/3f/0b96ecd2a2596f770f590c8b21d623be199371.debug
7. DB::DatabaseOnDisk::renameTable(std::__1::shared_ptr<DB::Context const>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::IDatabase&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, bool) @ 0x1063bd5d in /usr/lib/debug/.build-id/3f/0b96ecd2a2596f770f590c8b21d623be199371.debug
8. DB::InterpreterRenameQuery::executeToTables(DB::ASTRenameQuery const&, std::__1::vector<DB::RenameDescription, std::__1::allocator<DB::RenameDescription> > const&, std::__1::map<DB::UniqueTableName, std::__1::unique_ptr<DB::DDLGuard, std::__1::default_delete<DB::DDLGuard> >, std::__1::less<DB::UniqueTableName>, std::__1::allocator<std::__1::pair<DB::UniqueTableName const, std::__1::unique_ptr<DB::DDLGuard, std::__1::default_delete<DB::DDLGuard> > > > >&) @ 0x10b4e065 in /usr/lib/debug/.build-id/3f/0b96ecd2a2596f770f590c8b21d623be199371.debug
9. DB::InterpreterRenameQuery::execute() @ 0x10b4d493 in /usr/lib/debug/.build-id/3f/0b96ecd2a2596f770f590c8b21d623be199371.debug
10. DB::executeQueryImpl(char const*, char const*, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum, bool, DB::ReadBuffer*) @ 0x10f2bbe4 in /usr/lib/debug/.build-id/3f/0b96ecd2a2596f770f590c8b21d623be199371.debug
11. DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum, bool) @ 0x10f29c83 in /usr/lib/debug/.build-id/3f/0b96ecd2a2596f770f590c8b21d623be199371.debug
12. DB::TCPHandler::runImpl() @ 0x117efee4 in /usr/lib/debug/.build-id/3f/0b96ecd2a2596f770f590c8b21d623be199371.debug
13. DB::TCPHandler::run() @ 0x11803039 in /usr/lib/debug/.build-id/3f/0b96ecd2a2596f770f590c8b21d623be199371.debug
14. Poco::Net::TCPServerConnection::start() @ 0x143c2dcf in /usr/lib/debug/.build-id/3f/0b96ecd2a2596f770f590c8b21d623be199371.debug
15. Poco::Net::TCPServerDispatcher::run() @ 0x143c485a in /usr/lib/debug/.build-id/3f/0b96ecd2a2596f770f590c8b21d623be199371.debug
16. Poco::PooledThread::run() @ 0x144f6ad9 in /usr/lib/debug/.build-id/3f/0b96ecd2a2596f770f590c8b21d623be199371.debug
17. Poco::ThreadImpl::runnableEntry(void*) @ 0x144f2d6a in /usr/lib/debug/.build-id/3f/0b96ecd2a2596f770f590c8b21d623be199371.debug
18. start_thread @ 0x76db in /lib/x86_64-linux-gnu/libpthread-2.27.so
19. clone @ 0x12161f in /lib/x86_64-linux-gnu/libc-2.27.so
```

> A clear and concise description of what works not as it is supposed to.

It should work as it works with any other table engine type, resulting on the table being moved to the other database.

**Does it reproduce on recent release?**

Tested on 21.9 and master, so I'm guessing it has never worked.


**How to reproduce**

Minimal test with ch-local:
```
CREATE DATABASE atomic ENGINE = Atomic
CREATE DATABASE ordinary ENGINE = Ordinary
CREATE TABLE ordinary.join_table ( `a` Int64 ) ENGINE = Join(`ALL`, LEFT, a)
RENAME TABLE ordinary.join_table TO atomic.join_table
```

```
Received exception:
Code: 1001. DB::Exception: std::__1::__fs::filesystem::filesystem_error: filesystem error: in rename: No such file or directory [/tmp/clickhouse-local-443172-1648486601-8575748121127656435/data/ordinary/join_table/] [/tmp/clickhouse-local-443172-1648486601-8575748121127656435/store/a06/a06dbd4f-2235-481d-91d9-93da53388b8e/]. (STD_EXCEPTION)
```


Note that moving the table between 2 ordinary databases works:

```
CREATE DATABASE ordinary4 ENGINE = Ordinary
CREATE TABLE ordinary.join_table_d (`a` Int64) ENGINE = Join(`ALL`, LEFT, a)
RENAME TABLE ordinary.join_table_d TO ordinary4.join_table_d
```

```
Query id: 1380ad06-35ed-4126-9ebc-e3e49c9aacd2

Ok.

0 rows in set. Elapsed: 0.000 sec. 
````

And it also works if you move between atomic databases:

```
CREATE DATABASE atomic2
CREATE TABLE atomic.join_table_atomic (`a` Int64) ENGINE = Join(`ALL`, LEFT, a)
RENAME TABLE atomic.join_table_atomic TO atomic2.join_table_atomic
```

```
Query id: 42a45072-8601-4762-8d68-1c48dbee4ce7

Ok.

0 rows in set. Elapsed: 0.000 sec.
```