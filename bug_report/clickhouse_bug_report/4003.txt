ID: 4003
Title: Sequential HTTP requests can lead to "Session is locked" error
Description:
Hi, I'm getting a `(373) DB::Exception: Session is locked by a concurrent client.` error sometimes upon executing two sequential HTTP requests with the same `session_id`. Below you can see an example of the interleaved request handling in the logs.

Is it possible that the MemoryTracker holds the session lock and introduces a considerable delay between sending back the HTTP response and releasing the lock?

```2019.01.04 15:23:02.500858 [ 29 ] {} <Trace> HTTPHandler-factory: HTTP Request for HTTPHandler-factory. Method: get, Address: 172.18.0.1:57776, User-Agent: Go-http-client/1.1, Length: 51
2019.01.04 15:23:02.501270 [ 29 ] {} <Trace> HTTPHandler: Request URI: /?buffer_size=10485760&session_id=60deb0c49f83c57c2c7a&wait_end_of_query=1
2019.01.04 15:23:02.502458 [ 29 ] {5f732f12-0336-4bd7-b01c-da7183ecec25} <Debug> executeQuery: (from 172.18.0.1:57776) select count() as amount from resources format JSON
2019.01.04 15:23:02.504188 [ 29 ] {5f732f12-0336-4bd7-b01c-da7183ecec25} <Trace> InterpreterSelectQuery: FetchColumns -> Complete
2019.01.04 15:23:02.504738 [ 29 ] {5f732f12-0336-4bd7-b01c-da7183ecec25} <Debug> executeQuery: Query pipeline:
Expression
 Expression
  Aggregating
   Concat
    Expression
     Null

2019.01.04 15:23:02.508067 [ 29 ] {5f732f12-0336-4bd7-b01c-da7183ecec25} <Trace> Aggregator: Aggregating
2019.01.04 15:23:02.508445 [ 29 ] {5f732f12-0336-4bd7-b01c-da7183ecec25} <Trace> Aggregator: Aggregation method: without_key
2019.01.04 15:23:02.508903 [ 29 ] {5f732f12-0336-4bd7-b01c-da7183ecec25} <Trace> Aggregator: Aggregated. 0 to 1 rows (from 0.000 MiB) in 0.000 sec. (0.000 rows/sec., 0.000 MiB/sec.)
2019.01.04 15:23:02.509057 [ 29 ] {5f732f12-0336-4bd7-b01c-da7183ecec25} <Trace> Aggregator: Merging aggregated data
2019.01.04 15:23:02.509367 [ 29 ] {5f732f12-0336-4bd7-b01c-da7183ecec25} <Trace> virtual DB::MergingAndConvertingBlockInputStream::~MergingAndConvertingBlockInputStream(): Waiting for threads to finish
2019.01.04 15:23:02.510634 [ 29 ] {5f732f12-0336-4bd7-b01c-da7183ecec25} <Debug> MemoryTracker: Peak memory usage (total): 4.08 KiB.
2019.01.04 15:23:02.519388 [ 31 ] {} <Trace> HTTPHandler-factory: HTTP Request for HTTPHandler-factory. Method: post, Address: 172.18.0.1:57778, User-Agent: Go-http-client/1.1, Length: 496
2019.01.04 15:23:02.519505 [ 31 ] {} <Trace> HTTPHandler: Request URI: /?buffer_size=10485760&query=insert+into+resources+format+JSONEachRow&query_id=ingest%2FTestClickhouseBatchIngestAndQuery%2Fmultiple_unifications&session_id=60deb0c49f83c57c2c7a&wait_end_of_query=1
2019.01.04 15:23:02.519692 [ 31 ] {ingest/TestClickhouseBatchIngestAndQuery/multiple_unifications} <Debug> MemoryTracker: Peak memory usage (for query): 0.00 B.
2019.01.04 15:23:02.519798 [ 29 ] {5f732f12-0336-4bd7-b01c-da7183ecec25} <Debug> MemoryTracker: Peak memory usage (for query): 3.50 MiB.
2019.01.04 15:23:02.519986 [ 29 ] {} <Information> HTTPHandler: Done processing query
2019.01.04 15:23:02.576599 [ 31 ] {} <Error> HTTPHandler: Code: 373, e.displayText() = DB::Exception: Session is locked by a concurrent client., e.what() = DB::Exception, Stack trace:

0. /usr/bin/clickhouse-server(StackTrace::StackTrace()+0x16) [0x99e9cd6]
1. /usr/bin/clickhouse-server(DB::Exception::Exception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)+0x22) [0x30872b2]
2. /usr/bin/clickhouse-server(DB::Context::acquireSession(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, bool) const+0x2ee) [0x757c9be]
3. /usr/bin/clickhouse-server(DB::HTTPHandler::processQuery(Poco::Net::HTTPServerRequest&, HTMLForm&, Poco::Net::HTTPServerResponse&, DB::HTTPHandler::Output&)+0x780) [0x309fce0]
4. /usr/bin/clickhouse-server(DB::HTTPHandler::handleRequest(Poco::Net::HTTPServerRequest&, Poco::Net::HTTPServerResponse&)+0x3be) [0x30a4cee]
5. /usr/bin/clickhouse-server(Poco::Net::HTTPServerConnection::run()+0x332) [0x9b6fb82]
6. /usr/bin/clickhouse-server(Poco::Net::TCPServerConnection::start()+0xf) [0x9b6842f]
7. /usr/bin/clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x16a) [0x9b6880a]
8. /usr/bin/clickhouse-server(Poco::PooledThread::run()+0x77) [0x9c855e7]
9. /usr/bin/clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x38) [0x9c81158]
10. /usr/bin/clickhouse-server() [0xa3dafcf]
11. /lib/x86_64-linux-gnu/libpthread.so.0(+0x76db) [0x7fd2c500f6db]
12. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3f) [0x7fd2c458e88f]```