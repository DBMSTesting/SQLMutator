ID: 5833
Title: topKWeighted give random result with large sets
Description:
**Describe the bug**
`TopKWeighted` function is suppose to give an approximation based with a value and a weight, seem that the approximation give way too much random result

**How to reproduce**
`ClickHouse server version 19.8.3 revision 54420`

Table definition :
```
DROP TABLE IF EXISTS test.insert_number_query;

CREATE TABLE test.insert_number_query (
    record UInt32
) Engine = Log;

INSERT INTO test.insert_number_query SELECT * from system.numbers LIMIT 100000;
```

```
SELECT topKWeighted(5)(record, record)
FROM test.insert_number_query 

┌─topKWeighted(5)(record, record)─┐
│ [46,45,44,43,42]                │
└─────────────────────────────────┘
```

**Expected behavior**
Theorically, I know the function return an approximation, but it should give something more similar at :

```
SELECT topKWeighted(5)(record, record)
FROM test.insert_number_query 

┌─topKWeighted(5)(record, record)─┐
│ [99999,99998,99997,99996,99995] │
└─────────────────────────────────┘
```

As with the second argument, it should emulate than for the row with record = 99999, this record was present 99999 times, for the record 99998, to be present 99998 times, etc...

**Additional context**

Note that it seem for small record, the function seem to work fine. This following query return the expected results. (a variant of the test we can find on the repository)

```
SELECT topKWeighted(2)(x, weight)
FROM 
(
    SELECT 
        t.1 AS x, 
        t.2 AS weight
    FROM 
    (
        SELECT arrayJoin([('hello', 1), ('hello', 2), ('goodbye', 2), ('abc', 1)]) AS t
    ) 
) 

┌─topKWeighted(2)(x, weight)─┐
│ ['hello','goodbye']        │
└────────────────────────────┘
```

Seem also with changing the `load_factor`, it give an answer who is more precise. But it seem that we need to fit in ram all keys to have correct results.