ID: 66634
Title: Unable to pass argument containing space to the 'executable'
Description:
Currently it is not possible to pass values requiring quotes to the `executable`.

Steps to reproduce:
* create `argument_test.sh` with following content in the user scripts directory:
```bash
#!/bin/bash

first="$1"
echo $first
```
* `chmod +x ./argument_test.sh`
* when invoked from shell as `./argument_test.sh 'a b'` or `./argument_test.sh "a b"`  script outputs `a b`
* try to get the same output using `select * from executable('argument_test.sh', LineAsString, 'value String')`

Tried several variants but non worked:
```sql
ch :) select * from executable('argument_test.sh ''a b''', LineAsString, 'value String')

SELECT *
FROM executable('argument_test.sh \'a b\'', LineAsString, 'value String')

   ┌─value─┐
1. │ 'a    │
   └───────┘
   
ch :) select * from executable('argument_test.sh "a b"', LineAsString, 'value String')

SELECT *
FROM executable('argument_test.sh "a b"', LineAsString, 'value String')

   ┌─value─┐
1. │ "a    │
   └───────┘
   
ch :) select * from executable('argument_test.sh \\''a b\\''', LineAsString, 'value String')

SELECT *
FROM executable('argument_test.sh \\\'a b\\\'', LineAsString, 'value String')

   ┌─value─┐
1. │ \'a   │
   └───────┘

ch :) select * from executable('argument_test.sh \\"a b\\"', LineAsString, 'value String')

SELECT *
FROM executable('argument_test.sh \\"a b\\"', LineAsString, 'value String')

   ┌─value─┐
1. │ \"a   │
   └───────┘
   
ch :) select * from executable('argument_test.sh \\\'a b\\\'', LineAsString, 'value String')

SELECT *
FROM executable('argument_test.sh \\\'a b\\\'', LineAsString, 'value String')

   ┌─value─┐
1. │ \'a   │
   └───────┘

```