ID: 28524
Title: Received signal Segmentation fault (11) when reading LowCardinality(String)
Description:
I have the following in the logs

```
2021.09.02 13:04:47.539273 [ 119318 ] {} <Fatal> BaseDaemon: (version 21.7.8.58 (official build), build id: 95F91F78B10AC6F0E542A4C4F8D7B8162144DE39) (from thread 119143) (query_id: 0fdd62c1-93f2-42de-86c4-a8fb2f4f6027) Received signal Segmentation fault (11)
2021.09.02 13:04:47.539445 [ 119318 ] {} <Fatal> BaseDaemon: Address: NULL pointer. Access: read. Unknown si_code.
2021.09.02 13:04:47.539516 [ 119318 ] {} <Fatal> BaseDaemon: Stack trace: 0xf55dff7 0xf55c9f8 0xf55b40e 0xfedf848 0x1024eb61 0x1024e072 0xfac2a12 0xfacc76b 0xfaccdec 0xfacce89 0x106a4d8f 0x1069d5f9 0x106b0359 0x1338918f 0x1338ac1a 0x134bda99 0x134b9d2a 0x7fc5317f3609 0x7fc531709293
2021.09.02 13:04:47.539918 [ 119318 ] {} <Fatal> BaseDaemon: 1. DB::ReverseIndex<unsigned long, DB::ColumnString>::insert(StringRef const&) @ 0xf55dff7 in /usr/bin/clickhouse
2021.09.02 13:04:47.539973 [ 119318 ] {} <Fatal> BaseDaemon: 2. COW<DB::IColumn>::mutable_ptr<DB::IColumn> DB::ColumnUnique<DB::ColumnString>::uniqueInsertRangeImpl<char8_t>(DB::IColumn const&, unsigned long, unsigned long, unsigned long, DB::ColumnVector<char8_t>::MutablePtr&&, DB::ReverseIndex<unsigned long, DB::ColumnString>*, unsigned long) @ 0xf55c9f8 in /usr/bin/clickhouse
2021.09.02 13:04:47.539997 [ 119318 ] {} <Fatal> BaseDaemon: 3. DB::ColumnUnique<DB::ColumnString>::uniqueInsertRangeFrom(DB::IColumn const&, unsigned long, unsigned long) @ 0xf55b40e in /usr/bin/clickhouse
2021.09.02 13:04:47.540028 [ 119318 ] {} <Fatal> BaseDaemon: 4. DB::ColumnLowCardinality::insertRangeFrom(DB::IColumn const&, unsigned long, unsigned long) @ 0xfedf848 in /usr/bin/clickhouse
2021.09.02 13:04:47.540058 [ 119318 ] {} <Fatal> BaseDaemon: 5. DB::BufferBlockOutputStream::insertIntoBuffer(DB::Block const&, DB::StorageBuffer::Buffer&) @ 0x1024eb61 in /usr/bin/clickhouse
2021.09.02 13:04:47.540087 [ 119318 ] {} <Fatal> BaseDaemon: 6. DB::BufferBlockOutputStream::write(DB::Block const&) @ 0x1024e072 in /usr/bin/clickhouse
2021.09.02 13:04:47.540112 [ 119318 ] {} <Fatal> BaseDaemon: 7. DB::PushingToViewsBlockOutputStream::write(DB::Block const&) @ 0xfac2a12 in /usr/bin/clickhouse
2021.09.02 13:04:47.540134 [ 119318 ] {} <Fatal> BaseDaemon: 8. DB::AddingDefaultBlockOutputStream::write(DB::Block const&) @ 0xfacc76b in /usr/bin/clickhouse
2021.09.02 13:04:47.540152 [ 119318 ] {} <Fatal> BaseDaemon: 9. DB::SquashingBlockOutputStream::finalize() @ 0xfaccdec in /usr/bin/clickhouse
2021.09.02 13:04:47.540170 [ 119318 ] {} <Fatal> BaseDaemon: 10. DB::SquashingBlockOutputStream::writeSuffix() @ 0xfacce89 in /usr/bin/clickhouse
2021.09.02 13:04:47.540196 [ 119318 ] {} <Fatal> BaseDaemon: 11. DB::TCPHandler::processInsertQuery(DB::Settings const&) @ 0x106a4d8f in /usr/bin/clickhouse
2021.09.02 13:04:47.540214 [ 119318 ] {} <Fatal> BaseDaemon: 12. DB::TCPHandler::runImpl() @ 0x1069d5f9 in /usr/bin/clickhouse
2021.09.02 13:04:47.540227 [ 119318 ] {} <Fatal> BaseDaemon: 13. DB::TCPHandler::run() @ 0x106b0359 in /usr/bin/clickhouse
2021.09.02 13:04:47.540249 [ 119318 ] {} <Fatal> BaseDaemon: 14. Poco::Net::TCPServerConnection::start() @ 0x1338918f in /usr/bin/clickhouse
2021.09.02 13:04:47.540270 [ 119318 ] {} <Fatal> BaseDaemon: 15. Poco::Net::TCPServerDispatcher::run() @ 0x1338ac1a in /usr/bin/clickhouse
2021.09.02 13:04:47.540297 [ 119318 ] {} <Fatal> BaseDaemon: 16. Poco::PooledThread::run() @ 0x134bda99 in /usr/bin/clickhouse
2021.09.02 13:04:47.540317 [ 119318 ] {} <Fatal> BaseDaemon: 17. Poco::ThreadImpl::runnableEntry(void*) @ 0x134b9d2a in /usr/bin/clickhouse
2021.09.02 13:04:47.540336 [ 119318 ] {} <Fatal> BaseDaemon: 18. start_thread @ 0x9609 in /usr/lib/x86_64-linux-gnu/libpthread-2.31.so
2021.09.02 13:04:47.540361 [ 119318 ] {} <Fatal> BaseDaemon: 19. clone @ 0x122293 in /usr/lib/x86_64-linux-gnu/libc-2.31.so
2021.09.02 13:04:47.779004 [ 119318 ] {} <Fatal> BaseDaemon: Checksum of the binary: D7592FD563E371A1433D336C2554BBA8, integrity check passed.
```

I am using native protocol and modified Go client. I assume this is a problem with the client (or the way it closes connections, because this happens more often during app restarts). Could anyone give a hint what is the likely cause from the provided stacktrace? I've already reviewed Go client code that encodes LC(String) and can't find anything suspicious...

PS Most of the time the app works correctly, inserts billions of rows, and CH does not crash. So the client works reasonably well.