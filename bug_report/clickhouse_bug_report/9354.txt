ID: 9354
Title: Aggregate functions of (LowCardinality IN set) don't work on sharded tables (version 19.16)
Description:
Aggregate functions don't work with argument containing LowCardinality column with IN operator. Table was created with Distributed engine. Query works ok if rewritten like `countIf(lowCardinalityColumn != 'a' AND lowCardinalityColumn != 'b' ...) `.

```sql
SELECT countIf(lowCardinalityColumn NOT IN ('a', 'b', 'c', 'd'))
FROM <db>.<table>

â†’ Progress: 0.00 rows, 0.00 B (0.00 rows/s., 0.00 B/s.) Received exception from server (version 19.16.11):
Code: 70. DB::Exception: Received from localhost:9000. DB::Exception: Conversion from AggregateFunction(countIf, UInt8) to AggregateFunction(countIf, LowCardinality(UInt8)) is not supported.

0 rows in set. Elapsed: 0.139 sec.
```

Stack trace:
```
2020.02.25 11:18:09.100639 [ 226 ] {c7a66457-bb72-467b-93b0-286288aec11b} <Error> virtual DB::UnionBlockInputStream::~UnionBlockInputStream(): Code: 70, e.displayText() = DB::Exception: Conversion from AggregateFunction(countIf, UInt8) to AggregateFunction(countIf, LowCardinality(UInt8)) is not supported:
Code: 70, e.displayText() = DB::Exception: Conversion from AggregateFunction(countIf, UInt8) to AggregateFunction(countIf, LowCardinality(UInt8)) is not supported (version 19.16.11.47 (official build)):
Code: 70, e.displayText() = DB::Exception: Conversion from AggregateFunction(countIf, UInt8) to AggregateFunction(countIf, LowCardinality(UInt8)) is not supported (version 19.16.11.47 (official build)), Stack trace:

0. 0x5611d63fc780 StackTrace::StackTrace() /usr/bin/clickhouse
1. 0x5611d63fc555 DB::Exception::Exception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int) /usr/bin/clickhouse
2. 0x5611d683038f DB::FunctionCast::prepareImpl(std::shared_ptr<DB::IDataType const> const&, std::shared_ptr<DB::IDataType const> const&, bool) const /usr/bin/clickhouse
3. 0x5611d683065a DB::FunctionCast::prepareUnpackDictionaries(std::shared_ptr<DB::IDataType const> const&, std::shared_ptr<DB::IDataType const> const&) const /usr/bin/clickhouse
4. 0x5611d6830ad6 DB::FunctionCast::prepare(DB::Block const&, std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long) const /usr/bin/clickhouse
5. 0x5611d989647a DB::castColumn(DB::ColumnWithTypeAndName const&, std::shared_ptr<DB::IDataType const> const&, DB::Context const&) /usr/bin/clickhouse
6. 0x5611d962bdd2 DB::RemoteBlockInputStream::readImpl() /usr/bin/clickhouse
7. 0x5611d9614817 DB::IBlockInputStream::read() /usr/bin/clickhouse
8. 0x5611d978c922 DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>::loop(unsigned long) /usr/bin/clickhouse
9. 0x5611d978cfe5 DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>::thread(std::shared_ptr<DB::ThreadGroupStatus>, unsigned long) /usr/bin/clickhouse
10. 0x5611d978d95d ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>::*)(std::shared_ptr<DB::ThreadGroupStatus>, unsigned long), DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>*, std::shared_ptr<DB::ThreadGroupStatus>, unsigned long&>(void (DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>::*&&)(std::shared_ptr<DB::ThreadGroupStatus>, unsigned long), DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>*&&, std::shared_ptr<DB::ThreadGroupStatus>&&, unsigned long&)::{lambda()#1}::operator()() const /usr/bin/clickhouse
11. 0x5611d6446bec ThreadPoolImpl<std::thread>::worker(std::_List_iterator<std::thread>) /usr/bin/clickhouse
12. 0x5611dc169a60 ? /usr/bin/clickhouse
13. 0x7fe83b70a4a4 start_thread /lib/x86_64-linux-gnu/libpthread-2.24.so
14. 0x7fe83b040d0f clone /lib/x86_64-linux-gnu/libc-2.24.so
 (version 19.16.11.47 (official build))
```
