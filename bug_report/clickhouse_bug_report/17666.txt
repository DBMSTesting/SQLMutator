ID: 17666
Title: Functions *JSON* do not work
Description:
**Describe the bug**
I have 2 instance of ClickHouse: on my laptop (in virtualbox) and on prod server.
Both instances have the same ClickHouse version.
The isValidJSON function runs correctly on my laptop, but fails on the server. Similar behavior for JSONLength, JSONExtractString (I have not tested other functions with JSON in the function name). 
For both instances I tried jdbc and clickhouse-client (function runs correctly on my laptop and fails on the server regardless of the interface).

**How to reproduce**
* ClickHouse 20.9.3.45
* DataGrip (jdbc via hhtp) and clickhouse-client (tcp)
* No non-default settings

* `select '{"test": "test"}' as a, isValidJSON(a)`

**Expected behavior**
received `'{"test": "test"}', 1`

**Error message and/or stacktrace**
```
<DB>.<host> :) select '{"test": "test"}' as a, isValidJSON(a)

SELECT
    '{"test": "test"}' AS a,
    isValidJSON(a)

Query id: 901b27f2-711a-4f65-bc81-f24f61bbee4d

[<DB>] 2020.11.30 15:32:58.909502 [ 3223850 ] <Fatal> BaseDaemon: ########################################
[<DB>] 2020.11.30 15:32:58.909614 [ 3223850 ] <Fatal> BaseDaemon: (version 20.9.3.45 (official build), build id: 2A13FD5201226D52) (from thread 3223837) (query_id: 901b27f2-711a-4f65-bc81-f24f61bbee4d) Received signal Illegal instruction (4)
[<DB>] 2020.11.30 15:32:58.909655 [ 3223850 ] <Fatal> BaseDaemon: Illegal operand.
[<DB>] 2020.11.30 15:32:58.909705 [ 3223850 ] <Fatal> BaseDaemon: Stack trace: 0x1306cf8c 0x10465cf5 0x104731c2 0xfbaf8c6 0xfbafae2 0xfbb0375 0x15ae5c43 0x15ae6835 0x15ae6dad 0x15b84f2d 0x15b9056b 0x15b77b99 0x15b688f3 0x15b6a346 0x15b745c7 0x15b2aa8d 0x15b3144a 0x15b39542 0x15b3afd9 0x15cb33f7 0x15aa2e8f 0x15e2fc48 0x15e31732 0x164d93f5 0x164da160 0x18d391cb 0x18d3965b 0x18eb8136 0x18eb3530
[<DB>] 2020.11.30 15:32:58.909781 [ 3223850 ] <Fatal> BaseDaemon: 3. ? @ 0x1306cf8c in /usr/bin/clickhouse
[<DB>] 2020.11.30 15:32:58.909823 [ 3223850 ] <Fatal> BaseDaemon: 4. DB::SimdJSONParser::reserve(unsigned long) @ 0x10465cf5 in /usr/bin/clickhouse
[<DB>] 2020.11.30 15:32:58.909861 [ 3223850 ] <Fatal> BaseDaemon: 5. DB::FunctionJSONHelpers::Executor<DB::NameIsValidJSON, DB::IsValidJSONImpl, DB::SimdJSONParser>::run(DB::Block&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, unsigned long, unsigned long) @ 0x104731c2 in /usr/bin/clickhouse
[<DB>] 2020.11.30 15:32:58.909902 [ 3223850 ] <Fatal> BaseDaemon: 6. DB::ExecutableFunctionAdaptor::defaultImplementationForConstantArguments(DB::Block&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, unsigned long, unsigned long, bool) @ 0xfbaf8c6 in /usr/bin/clickhouse
[<DB>] 2020.11.30 15:32:58.909952 [ 3223850 ] <Fatal> BaseDaemon: 7. DB::ExecutableFunctionAdaptor::executeWithoutLowCardinalityColumns(DB::Block&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, unsigned long, unsigned long, bool) @ 0xfbafae2 in /usr/bin/clickhouse
[<DB>] 2020.11.30 15:32:58.910004 [ 3223850 ] <Fatal> BaseDaemon: 8. DB::ExecutableFunctionAdaptor::execute(DB::Block&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&, unsigned long, unsigned long, bool) @ 0xfbb0375 in /usr/bin/clickhouse
[<DB>] 2020.11.30 15:32:58.910046 [ 3223850 ] <Fatal> BaseDaemon: 9. DB::ExpressionAction::prepare(DB::Block&, DB::Settings const&, std::__1::unordered_set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&) @ 0x15ae5c43 in /usr/bin/clickhouse
[<DB>] 2020.11.30 15:32:58.910080 [ 3223850 ] <Fatal> BaseDaemon: 10. DB::ExpressionActions::addImpl(DB::ExpressionAction, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&) @ 0x15ae6835 in /usr/bin/clickhouse
[<DB>] 2020.11.30 15:32:58.910221 [ 3223850 ] <Fatal> BaseDaemon: 11. DB::ExpressionActions::add(DB::ExpressionAction const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&) @ 0x15ae6dad in /usr/bin/clickhouse
[<DB>] 2020.11.30 15:32:58.910329 [ 3223850 ] <Fatal> BaseDaemon: 12. DB::ScopeStack::addAction(DB::ExpressionAction const&) @ 0x15b84f2d in /usr/bin/clickhouse
[<DB>] 2020.11.30 15:32:58.910390 [ 3223850 ] <Fatal> BaseDaemon: 13. DB::ActionsMatcher::visit(DB::ASTFunction const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x15b9056b in /usr/bin/clickhouse
[<DB>] 2020.11.30 15:32:58.910438 [ 3223850 ] <Fatal> BaseDaemon: 14. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x15b77b99 in /usr/bin/clickhouse
[<DB>] 2020.11.30 15:32:58.910479 [ 3223850 ] <Fatal> BaseDaemon: 15. ? @ 0x15b688f3 in /usr/bin/clickhouse
[<DB>] 2020.11.30 15:32:58.910527 [ 3223850 ] <Fatal> BaseDaemon: 16. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x15b6a346 in /usr/bin/clickhouse
[<DB>] 2020.11.30 15:32:58.910574 [ 3223850 ] <Fatal> BaseDaemon: 17. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterInfo> const&, DB::Block const&) @ 0x15b745c7 in /usr/bin/clickhouse
[<DB>] 2020.11.30 15:32:58.910627 [ 3223850 ] <Fatal> BaseDaemon: 18. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x15b2aa8d in /usr/bin/clickhouse
[<DB>] 2020.11.30 15:32:58.910663 [ 3223850 ] <Fatal> BaseDaemon: 19. ? @ 0x15b3144a in /usr/bin/clickhouse
[<DB>] 2020.11.30 15:32:58.910694 [ 3223850 ] <Fatal> BaseDaemon: 20. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&) @ 0x15b39542 in /usr/bin/clickhouse
[<DB>] 2020.11.30 15:32:58.910768 [ 3223850 ] <Fatal> BaseDaemon: 21. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x15b3afd9 in /usr/bin/clickhouse
[<DB>] 2020.11.30 15:32:58.910817 [ 3223850 ] <Fatal> BaseDaemon: 22. DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x15cb33f7 in /usr/bin/clickhouse
[<DB>] 2020.11.30 15:32:58.910858 [ 3223850 ] <Fatal> BaseDaemon: 23. DB::InterpreterFactory::get(std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::QueryProcessingStage::Enum) @ 0x15aa2e8f in /usr/bin/clickhouse
[<DB>] 2020.11.30 15:32:58.910892 [ 3223850 ] <Fatal> BaseDaemon: 24. ? @ 0x15e2fc48 in /usr/bin/clickhouse
[<DB>] 2020.11.30 15:32:58.910967 [ 3223850 ] <Fatal> BaseDaemon: 25. DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool) @ 0x15e31732 in /usr/bin/clickhouse
[<DB>] 2020.11.30 15:32:58.911050 [ 3223850 ] <Fatal> BaseDaemon: 26. DB::TCPHandler::runImpl() @ 0x164d93f5 in /usr/bin/clickhouse
[<DB>] 2020.11.30 15:32:58.911093 [ 3223850 ] <Fatal> BaseDaemon: 27. DB::TCPHandler::run() @ 0x164da160 in /usr/bin/clickhouse
[<DB>] 2020.11.30 15:32:58.911148 [ 3223850 ] <Fatal> BaseDaemon: 28. Poco::Net::TCPServerConnection::start() @ 0x18d391cb in /usr/bin/clickhouse
[<DB>] 2020.11.30 15:32:58.911217 [ 3223850 ] <Fatal> BaseDaemon: 29. Poco::Net::TCPServerDispatcher::run() @ 0x18d3965b in /usr/bin/clickhouse
[<DB>] 2020.11.30 15:32:58.911276 [ 3223850 ] <Fatal> BaseDaemon: 30. Poco::PooledThread::run() @ 0x18eb8136 in /usr/bin/clickhouse
[<DB>] 2020.11.30 15:32:58.911309 [ 3223850 ] <Fatal> BaseDaemon: 31. Poco::ThreadImpl::runnableEntry(void*) @ 0x18eb3530 in /usr/bin/clickhouse

Exception on client:
Code: 32. DB::Exception: Attempt to read after eof: while receiving packet from localhost:9000

Connecting to localhost:9000 as user default.
Code: 210. DB::NetException: Connection reset by peer, while reading from socket (127.0.0.1:9000)
```

**Additional context**
VisitParam* functions work on both instances.
The server uses kvm virtualization. I was advised to attach a list of processor instructions available to the virtual machine.
```
cat /proc/cpuinfo |grep flags|head -1
flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl cpuid tsc_known_freq pni pclmulqdq vmx ssse3 cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer f16c rdrand hypervisor lahf_lm abm invpcid_single pti ssbd ibrs ibpb tpr_shadow vnmi flexpriority ept vpid fsgsbase bmi1 smep bmi2 erms invpcid
```