ID: 13408
Title: Creating Engine=Dictionary database causes queries to system.tables to fail
Description:
**Describe the bug**
Creating Engine=Dictionary database causes queries to system.tables to fail, if there are existing dictionaries. 
DROP DATABASE also does not work, so there is no way to fix it except for manual drop of metadata for related database. 

**How to reproduce**
```
create database djdicttest Engine=Dictionary;
select * from system.tables; -- fails
drop database djdicttest; -- fails
```

**Expected behavior**
Engine=Dictionary database is 'virtual' and shall not cause any problems for other metadata or system operation. 

**Error message and/or stacktrace**
```
2020.08.06 10:43:49.338333 [ 5562 ] {10b50bdf-a4de-40f4-9e6d-0367d46e287b} <Error> executeQuery: Code: 44, e.displayText() = DB::Exception: Cannot add column KEYID: column with this name already exists: While executing Tables (version 20.3.11.97 (official build)) (from [::ffff:10.10.10.153]:56993) (in query: select * from system.tables FORMAT TabSeparatedWithNamesAndTypes;), Stack trace (when copying this message, always include the lines below):

0. Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x1051b3a0 in /usr/bin/clickhouse
1. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x8f5172d in /usr/bin/clickhouse
2. ? @ 0xd63a5ed in /usr/bin/clickhouse
3. DB::ColumnsDescription::ColumnsDescription(DB::NamesAndTypesList, bool) @ 0xd63957f in /usr/bin/clickhouse
4. DB::DatabaseDictionary::listTables(DB::Context const&, std::__1::function<bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)> const&) @ 0xd0685e6 in /usr/bin/clickhouse
5. DB::DatabaseDictionary::getTablesIterator(DB::Context const&, std::__1::function<bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)> const&) @ 0xd068da1 in /usr/bin/clickhouse
6. DB::TablesBlockSource::generate() @ 0xcb1217d in /usr/bin/clickhouse
7. DB::ISource::work() @ 0xdb7ec3b in /usr/bin/clickhouse
8. DB::SourceWithProgress::work() @ 0xded5597 in /usr/bin/clickhouse
9. ? @ 0xdbb9581 in /usr/bin/clickhouse
10. DB::PipelineExecutor::executeSingleThread(unsigned long, unsigned long) @ 0xdbbd70d in /usr/bin/clickhouse
11. DB::PipelineExecutor::executeImpl(unsigned long) @ 0xdbbf7b8 in /usr/bin/clickhouse
12. DB::PipelineExecutor::execute(unsigned long) @ 0xdbbf985 in /usr/bin/clickhouse
13. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, DB::Context&, std::__1::function<void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>) @ 0xd53e665 in /usr/bin/clickhouse
14. DB::HTTPHandler::processQuery(Poco::Net::HTTPServerRequest&, HTMLForm&, Poco::Net::HTTPServerResponse&, DB::HTTPHandler::Output&) @ 0x8ffca56 in /usr/bin/clickhouse
15. DB::HTTPHandler::handleRequest(Poco::Net::HTTPServerRequest&, Poco::Net::HTTPServerResponse&) @ 0x8ffff13 in /usr/bin/clickhouse
16. Poco::Net::HTTPServerConnection::run() @ 0xe3626f4 in /usr/bin/clickhouse
17. Poco::Net::TCPServerConnection::start() @ 0xe39269b in /usr/bin/clickhouse
18. Poco::Net::TCPServerDispatcher::run() @ 0xe392b1d in /usr/bin/clickhouse
19. Poco::PooledThread::run() @ 0x105a9507 in /usr/bin/clickhouse
20. Poco::ThreadImpl::runnableEntry(void*) @ 0x105a530c in /usr/bin/clickhouse
21. ? @ 0x105a6cad in /usr/bin/clickhouse
22. start_thread @ 0x7e65 in /usr/lib64/libpthread-2.17.so
23. __clone @ 0xfe88d in /usr/lib64/libc-2.17.so

```

trying to drop it:
```
2020.08.06 10:42:22.833780 [ 2884 ] {d8d1790a-4b86-466b-86a5-d23eeb813f71} <Debug> executeQuery: (from [::ffff:10.10.10.153]:56951, user: xxx) drop database djdicttest
2020.08.06 10:42:22.834043 [ 2884 ] {d8d1790a-4b86-466b-86a5-d23eeb813f71} <Debug> MemoryTracker: Peak memory usage (total): 0.00 B.
2020.08.06 10:42:22.834248 [ 2884 ] {d8d1790a-4b86-466b-86a5-d23eeb813f71} <Error> executeQuery: Code: 44, e.displayText() = DB::Exception: Cannot add column KEYID: column with this name already exists (version 20.3.11.97 (official build)) (from [::ffff:10.10.10.153]:56951) (in query: drop database djdicttest), Stack trace (when copying this message, always include the lines below):

0. Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x1051b3a0 in /usr/bin/clickhouse
1. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x8f5172d in /usr/bin/clickhouse
2. ? @ 0xd63a5ed in /usr/bin/clickhouse
3. DB::ColumnsDescription::ColumnsDescription(DB::NamesAndTypesList, bool) @ 0xd63957f in /usr/bin/clickhouse
4. DB::DatabaseDictionary::listTables(DB::Context const&, std::__1::function<bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)> const&) @ 0xd0685e6 in /usr/bin/clickhouse
5. DB::DatabaseDictionary::getTablesIterator(DB::Context const&, std::__1::function<bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)> const&) @ 0xd068da1 in /usr/bin/clickhouse
6. DB::InterpreterDropQuery::executeToDatabase(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::ASTDropQuery::Kind, bool) @ 0xd0763b5 in /usr/bin/clickhouse
7. DB::InterpreterDropQuery::execute() @ 0xd0796e4 in /usr/bin/clickhouse
8. ? @ 0xd53ae58 in /usr/bin/clickhouse
9. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, DB::Context&, std::__1::function<void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>) @ 0xd53ddd9 in /usr/bin/clickhouse
10. DB::HTTPHandler::processQuery(Poco::Net::HTTPServerRequest&, HTMLForm&, Poco::Net::HTTPServerResponse&, DB::HTTPHandler::Output&) @ 0x8ffca56 in /usr/bin/clickhouse
11. DB::HTTPHandler::handleRequest(Poco::Net::HTTPServerRequest&, Poco::Net::HTTPServerResponse&) @ 0x8ffff13 in /usr/bin/clickhouse
12. Poco::Net::HTTPServerConnection::run() @ 0xe3626f4 in /usr/bin/clickhouse
13. Poco::Net::TCPServerConnection::start() @ 0xe39269b in /usr/bin/clickhouse
14. Poco::Net::TCPServerDispatcher::run() @ 0xe392b1d in /usr/bin/clickhouse
15. Poco::PooledThread::run() @ 0x105a9507 in /usr/bin/clickhouse
16. Poco::ThreadImpl::runnableEntry(void*) @ 0x105a530c in /usr/bin/clickhouse
17. ? @ 0x105a6cad in /usr/bin/clickhouse
18. start_thread @ 0x7e65 in /usr/lib64/libpthread-2.17.so
19. __clone @ 0xfe88d in /usr/lib64/libc-2.17.so
```

**Additional context**
Version: 20.3.11.97
