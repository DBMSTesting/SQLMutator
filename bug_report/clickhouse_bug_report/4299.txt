ID: 4299
Title: Unexpected logical error while adding block.
Description:
**Describe the bug**
When I added a column to a table, a client threw an exception.
```
Exception in thread "main" com.github.housepower.jdbc.ClickHouseSQLException: DB::ExceptionDB::Exception: Unexpected logical error while adding block 1262 with ID '20190108_6845589088256769588_14238188387757671126': Bad version, path /clickhouse/tables/test_cluster_1_1/data/columns. Stack trace:                                                           [91/1810]
                                                                                                                                                                                                                                                                                                                                                                            
0. clickhouse-server(StackTrace::StackTrace()+0x16) [0x5dfb326]                                                                                                                                                                                                                                                                                                             
1. clickhouse-server(DB::Exception::Exception(std::string const&, int)+0x1f) [0x2b9080f]                                                                                                                                                                                                                                                                                    
2. clickhouse-server(DB::ReplicatedMergeTreeBlockOutputStream::commitPart(std::shared_ptr<zkutil::ZooKeeper>&, std::shared_ptr<DB::MergeTreeDataPart>&, std::string const&)+0x95a) [0x50938ea]                                                                                                                                                                              
3. clickhouse-server(DB::ReplicatedMergeTreeBlockOutputStream::write(DB::Block const&)+0x43e) [0x5095fde]                                                                                                                                                                                                                                                                   
4. clickhouse-server(DB::PushingToViewsBlockOutputStream::write(DB::Block const&)+0x42) [0x51f0022]                                                                                                                                                                                                                                                                         
5. clickhouse-server(DB::SquashingBlockOutputStream::writeSuffix()+0x114) [0x51f9614]                                                                                                                                                                                                                                                                                       
6. clickhouse-server(DB::DistributedBlockOutputStream::writeToLocal(DB::Block const&, unsigned long)+0x80) [0x4fc0fc0]                                                                                                                                                                                                                                                      
7. clickhouse-server(DB::DistributedBlockOutputStream::writeAsyncImpl(DB::Block const&, unsigned long)+0x1db) [0x4fc4d3b]                                                                                                                                                                                                                                                   
8. clickhouse-server(DB::DistributedBlockOutputStream::writeSplitAsync(DB::Block const&)+0x7d) [0x4fc4f2d]                                                                                                                                                                                                                                                                  
9. clickhouse-server(DB::PushingToViewsBlockOutputStream::write(DB::Block const&)+0x42) [0x51f0022]                                                                                                                                                                                                                                                                         
10. clickhouse-server(DB::SquashingBlockOutputStream::writeSuffix()+0x114) [0x51f9614]                                                                                                                                                                                                                                                                                      
11. clickhouse-server(DB::TCPHandler::processInsertQuery(DB::Settings const&)+0x302) [0x2b9df32]                                                                                                                                                                                                                                                                            
12. clickhouse-server(DB::TCPHandler::runImpl()+0x815) [0x2b9e845]
13. clickhouse-server(DB::TCPHandler::run()+0x1c) [0x2b9f7dc]
14. clickhouse-server(Poco::Net::TCPServerConnection::start()+0xf) [0x5f7f86f]
15. clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x166) [0x5f7fc36]
16. clickhouse-server(Poco::PooledThread::run()+0x77) [0x6236987]
17. clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x38) [0x6232b48]
18. clickhouse-server() [0x69455bf]
19. /lib64/libpthread.so.0(+0x7e25) [0x7fe22a34ee25]
20. /lib64/libc.so.6(clone+0x6d) [0x7fe22996abad]
```

**How to reproduce**
* Which ClickHouse server version to use
ClickHouse server version 18.16.1 revision 54412.
* Create table
```
CREATE TABLE User
(
    dt DateTime, 
    name String
)
ENGINE = ReplicatedMergeTree('clickhouse/tables/test_cluster_{layer}_{shard}/User', '{replica}')
PARTITION BY toYYYYMMDD(dt)
PRIMARY KEY (dt, name)
ORDER BY (dt, name)
```

* To reproduce this case, follow below steps please.
  1. Run a client that perform insert queries to the `User` table.
  2. Execute `alter table User add column no int`
  3. The client throws an exception.
  4. If the client doesn't throw an exception, you can delete the `no` column and repeat from 2.
