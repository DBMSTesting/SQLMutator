ID: 11629
Title: CLEAR COLUMN command lead to crash
Description:
```sql
server.log:2020.06.12 19:08:37.065622 [ 38255 ] 
{db478a4d-9b7b-4374-8e59-e8d75a989bff} <Debug> executeQuery: (from 10.xxxxx:53366, user: xxxx) 
ALTER TABLE xxxx CLEAR COLUMN xxxx IN PARTITION '2020-06-03'
```


- version: `20.3.7.46`

- Crash log:

```sql

2020.06.12 19:08:37.098256 [ 35471 ] {} <Fatal> BaseDaemon: ########################################
2020.06.12 19:08:37.098319 [ 35471 ] {} <Fatal> BaseDaemon: (version 20.3.7.46 (official build)) (from thread 38255) (query_id: db478a4d-9b7b-4374-8e59-e8d75a989bff) Received signal Segmentation fault (11).
2020.06.12 19:08:37.098343 [ 35471 ] {} <Fatal> BaseDaemon: Address: NULL pointer. Access: read. Address not mapped to object.
2020.06.12 19:08:37.098359 [ 35471 ] {} <Fatal> BaseDaemon: Stack trace: 0xd90db43 0xd73542f 0xd73ad76 0xd0b6f5e 0xd561f98 0xd564bd1 0x90224d9 0x90234c0 0xe3b885b 0xe3b8cdd 0x105cf3c7 0x105cb1cc 0x105ccb6d 0x7f4d69e0cdc5 0x7f4d6a62273d
2020.06.12 19:08:37.098413 [ 35471 ] {} <Fatal> BaseDaemon: 3. DB::MergeTreeData::alterDataPart(DB::NamesAndTypesList const&, std::__1::vector<std::__1::shared_ptr<DB::ASTIndexDeclaration>, std::__1::allocator<std::__1::shared_ptr<DB::ASTIndexDeclaration> > > const&, bool, std::__1::unique_ptr<DB::MergeTreeData::AlterDataPartTransaction, std::__1::default_delete<DB::MergeTreeData::AlterDataPartTransaction> >&) @ 0xd90db43 in ?
2020.06.12 19:08:37.098434 [ 35471 ] {} <Fatal> BaseDaemon: 4. DB::StorageMergeTree::clearColumnOrIndexInPartition(std::__1::shared_ptr<DB::IAST> const&, DB::AlterCommand const&, DB::Context const&) @ 0xd73542f in ?
2020.06.12 19:08:37.098447 [ 35471 ] {} <Fatal> BaseDaemon: 5. DB::StorageMergeTree::alterPartition(std::__1::shared_ptr<DB::IAST> const&, DB::PartitionCommands const&, DB::Context const&) @ 0xd73ad76 in ?
2020.06.12 19:08:37.098460 [ 35471 ] {} <Fatal> BaseDaemon: 6. DB::InterpreterAlterQuery::execute() @ 0xd0b6f5e in ?
2020.06.12 19:08:37.098468 [ 35471 ] {} <Fatal> BaseDaemon: 7. ? @ 0xd561f98 in ?
2020.06.12 19:08:37.098482 [ 35471 ] {} <Fatal> BaseDaemon: 8. DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, bool) @ 0xd564bd1 in ?
2020.06.12 19:08:37.098499 [ 35471 ] {} <Fatal> BaseDaemon: 9. DB::TCPHandler::runImpl() @ 0x90224d9 in ?
2020.06.12 19:08:37.098508 [ 35471 ] {} <Fatal> BaseDaemon: 10. DB::TCPHandler::run() @ 0x90234c0 in ?
2020.06.12 19:08:37.098522 [ 35471 ] {} <Fatal> BaseDaemon: 11. Poco::Net::TCPServerConnection::start() @ 0xe3b885b in ?
2020.06.12 19:08:37.098533 [ 35471 ] {} <Fatal> BaseDaemon: 12. Poco::Net::TCPServerDispatcher::run() @ 0xe3b8cdd in ?
2020.06.12 19:08:37.098542 [ 35471 ] {} <Fatal> BaseDaemon: 13. Poco::PooledThread::run() @ 0x105cf3c7 in ?
2020.06.12 19:08:37.098551 [ 35471 ] {} <Fatal> BaseDaemon: 14. Poco::ThreadImpl::runnableEntry(void*) @ 0x105cb1cc in ?
2020.06.12 19:08:37.098561 [ 35471 ] {} <Fatal> BaseDaemon: 15. ? @ 0x105ccb6d in ?
2020.06.12 19:08:37.098583 [ 35471 ] {} <Fatal> BaseDaemon: 16. start_thread @ 0x7dc5 in /usr/lib64/libpthread-2.17.so
2020.06.12 19:08:37.098600 [ 35471 ] {} <Fatal> BaseDaemon: 17. __clone @ 0xf773d in /usr/lib64/libc-2.17.so
```