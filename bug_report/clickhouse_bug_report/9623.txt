ID: 9623
Title: Incorrect conversion from Int64 to Float64 in table with bloom filter index
Description:
**Describe the bug or unexpected behaviour**

We get following assertion in debug build

```Assertion failed: (target == which || (isInt64FieldType(target) && isInt64FieldType(which))), function get, file ../dbms/src/Core/Field.h, line 700.```

https://github.com/ClickHouse/ClickHouse/blob/e1b3c58746baa886f7b6b09b449918e0af83ccfb/dbms/src/Core/Field.h#L696-L701

While processing metadata for table with bloom filter
https://github.com/ClickHouse/ClickHouse/blob/master/dbms/src/Storages/MergeTree/MergeTreeIndexBloomFilter.cpp#L104


**How to reproduce**
- Debug build.
- Bad query: note **bloom_filter(0, 1)**
```sql
CREATE TABLE bloom_filter_idx_good
(
    `u64` UInt64,
    `i32` Int32,
    `f64` Float64,
    `d` Decimal(10, 2),
    `s` String,
    `e` Enum8('a' = 1, 'b' = 2, 'c' = 3),
    `dt` Date,
    INDEX bloom_filter_a i32 TYPE bloom_filter(0, 1) GRANULARITY 1
)
ENGINE = MergeTree()
ORDER BY u64
SETTINGS index_granularity = 8192
```
This table successfully created
```sql
CREATE TABLE bloom_filter_idx_bad
(
    `u64` UInt64,
    `i32` Int32,
    `f64` Float64,
    `d` Decimal(10, 2),
    `s` String,
    `e` Enum8('a' = 1, 'b' = 2, 'c' = 3),
    `dt` Date,
    INDEX bloom_filter_a i32 TYPE bloom_filter(0., 1.) GRANULARITY 1
)
ENGINE = MergeTree()
ORDER BY u64
SETTINGS index_granularity = 8192

Ok.
```

```
Assertion failed: (target == which || (isInt64FieldType(target) && isInt64FieldType(which))), function get, file ../dbms/src/Core/Field.h, line 700.
Process 26376 stopped
* thread #2, stop reason = signal SIGABRT
    frame #0: 0x00007fff6eaa47fa libsystem_kernel.dylib`__pthread_kill + 10
libsystem_kernel.dylib`__pthread_kill:
->  0x7fff6eaa47fa <+10>: jae    0x7fff6eaa4804            ; <+20>
    0x7fff6eaa47fc <+12>: movq   %rax, %rdi
    0x7fff6eaa47ff <+15>: jmp    0x7fff6ea9ea89            ; cerror_nocancel
    0x7fff6eaa4804 <+20>: retq
Target 0: (clickhouse-server) stopped.
(lldb) bt
* thread #2, stop reason = signal SIGABRT
  * frame #0: 0x00007fff6eaa47fa libsystem_kernel.dylib`__pthread_kill + 10
    frame #1: 0x00007fff6eb61bc1 libsystem_pthread.dylib`pthread_kill + 432
    frame #2: 0x00007fff6ea2ba1c libsystem_c.dylib`abort + 120
    frame #3: 0x00007fff6ea2acd6 libsystem_c.dylib`__assert_rtn + 314
    frame #4: 0x00000001002e09f9 clickhouse-server`double& DB::Field::get<double>(this=0x0000000139387b00) at Field.h:699:5
    frame #5: 0x00000001002e259d clickhouse-server`double const& DB::Field::get<double>(this=0x0000000139387b00) const at Field.h:364:30
    frame #6: 0x0000000106d691a2 clickhouse-server`DB::bloomFilterIndexCreatorNew(columns=0x0000700004825db8, node=std::__1::shared_ptr<DB::ASTIndexDeclaration>::element_type @ 0x0000000139387838 strong=3 weak=2, context=0x000000013b01d000) at MergeTreeIndexBloomFilter.cpp:104:111
    frame #7: 0x0000000106dbc0b1 clickhouse-server`decltype(__f=(0x00000001393877f8), __args=0x0000700004825db8, __args=nullptr, __args=0x000000013b01d000)(DB::NamesAndTypesList const&, std::__1::shared_ptr<DB::ASTIndexDeclaration>, DB::Context const&)>(fp)(std::__1::forward<DB::NamesAndTypesList const&>(fp0), std::__1::forward<std::__1::shared_ptr<DB::ASTIndexDeclaration> >(fp0), std::__1::forward<DB::Context const&>(fp0))) std::__1::__invoke<std::__1::unique_ptr<DB::IMergeTreeIndex, std::__1::default_delete<DB::IMergeTreeIndex> > (*&)(DB::NamesAndTypesList const&, std::__1::shared_ptr<DB::ASTIndexDeclaration>, DB::Context const&), DB::NamesAndTypesList const&, std::__1::shared_ptr<DB::ASTIndexDeclaration>, DB::Context const&>(std::__1::unique_ptr<DB::IMergeTreeIndex, std::__1::default_delete<DB::IMergeTreeIndex> > (*&)(DB::NamesAndTypesList const&, std::__1::shared_ptr<DB::ASTIndexDeclaration>, DB::Context const&), DB::NamesAndTypesList const&, std::__1::shared_ptr<DB::ASTIndexDeclaration>&&, DB::Context const&) at type_traits:3519:1
    frame #8: 0x0000000106dbc005 clickhouse-server`std::__1::unique_ptr<DB::IMergeTreeIndex, std::__1::default_delete<DB::IMergeTreeIndex> > std::__1::__invoke_void_return_wrapper<std::__1::unique_ptr<DB::IMergeTreeIndex, std::__1::default_delete<DB::IMergeTreeIndex> > >::__call<std::__1::unique_ptr<DB::IMergeTreeIndex, std::__1::default_delete<DB::IMergeTreeIndex> > (__args=(0x00000001393877f8), __args=0x0000700004825db8, __args=nullptr, __args=0x000000013b01d000)(DB::NamesAndTypesList const&, std::__1::shared_ptr<DB::ASTIndexDeclaration>, DB::Context const&), DB::NamesAndTypesList const&, std::__1::shared_ptr<DB::ASTIndexDeclaration>, DB::Context const&>(std::__1::unique_ptr<DB::IMergeTreeIndex, std::__1::default_delete<DB::IMergeTreeIndex> > (*&)(DB::NamesAndTypesList const&, std::__1::shared_ptr<DB::ASTIndexDeclaration>, DB::Context const&), DB::NamesAndTypesList const&, std::__1::shared_ptr<DB::ASTIndexDeclaration>&&, DB::Context const&) at __functional_base:317:16
    frame #9: 0x0000000106dbbf85 clickhouse-server`std::__1::__function::__alloc_func<std::__1::unique_ptr<DB::IMergeTreeIndex, std::__1::default_delete<DB::IMergeTreeIndex> > (*)(DB::NamesAndTypesList const&, std::__1::shared_ptr<DB::ASTIndexDeclaration>, DB::Context const&), std::__1::allocator<std::__1::unique_ptr<DB::IMergeTreeIndex, std::__1::default_delete<DB::IMergeTreeIndex> > (*)(DB::NamesAndTypesList const&, std::__1::shared_ptr<DB::ASTIndexDeclaration>, DB::Context const&)>, std::__1::unique_ptr<DB::IMergeTreeIndex, std::__1::default_delete<DB::IMergeTreeIndex> > (DB::NamesAndTypesList const&, std::__1::shared_ptr<DB::ASTIndexDeclaration>, DB::Context const&)>::operator(this=0x00000001393877f8, __arg=0x0000700004825db8, __arg=nullptr, __arg=0x000000013b01d000)(DB::NamesAndTypesList const&, std::__1::shared_ptr<DB::ASTIndexDeclaration>&&, DB::Context const&) at functional:1540:16
    frame #10: 0x0000000106dbac47 clickhouse-server`std::__1::__function::__func<std::__1::unique_ptr<DB::IMergeTreeIndex, std::__1::default_delete<DB::IMergeTreeIndex> > (*)(DB::NamesAndTypesList const&, std::__1::shared_ptr<DB::ASTIndexDeclaration>, DB::Context const&), std::__1::allocator<std::__1::unique_ptr<DB::IMergeTreeIndex, std::__1::default_delete<DB::IMergeTreeIndex> > (*)(DB::NamesAndTypesList const&, std::__1::shared_ptr<DB::ASTIndexDeclaration>, DB::Context const&)>, std::__1::unique_ptr<DB::IMergeTreeIndex, std::__1::default_delete<DB::IMergeTreeIndex> > (DB::NamesAndTypesList const&, std::__1::shared_ptr<DB::ASTIndexDeclaration>, DB::Context const&)>::operator(this=0x00000001393877f0, __arg=0x0000700004825db8, __arg=nullptr, __arg=0x000000013b01d000)(DB::NamesAndTypesList const&, std::__1::shared_ptr<DB::ASTIndexDeclaration>&&, DB::Context const&) at functional:1714:12
    frame #11: 0x0000000106db9e08 clickhouse-server`std::__1::__function::__value_func<std::__1::unique_ptr<DB::IMergeTreeIndex, std::__1::default_delete<DB::IMergeTreeIndex> > (DB::NamesAndTypesList const&, std::__1::shared_ptr<DB::ASTIndexDeclaration>, DB::Context const&)>::operator(this=0x00000001393877f0, __args=0x0000700004825db8, __args=nullptr, __args=0x000000013b01d000)(DB::NamesAndTypesList const&, std::__1::shared_ptr<DB::ASTIndexDeclaration>&&, DB::Context const&) const at functional:1867:16
    frame #12: 0x0000000106db6ee0 clickhouse-server`std::__1::function<std::__1::unique_ptr<DB::IMergeTreeIndex, std::__1::default_delete<DB::IMergeTreeIndex> > (DB::NamesAndTypesList const&, std::__1::shared_ptr<DB::ASTIndexDeclaration>, DB::Context const&)>::operator(this=0x00000001393877f0, __arg=0x0000700004825db8, __arg=nullptr, __arg=0x000000013b01d000)(DB::NamesAndTypesList const&, std::__1::shared_ptr<DB::ASTIndexDeclaration>, DB::Context const&) const at functional:2473:12
    frame #13: 0x0000000106db6c0b clickhouse-server`DB::MergeTreeIndexFactory::get(this=0x000000010afe3600, columns=0x0000700004825db8, node=std::__1::shared_ptr<DB::ASTIndexDeclaration>::element_type @ 0x0000000139387838 strong=3 weak=2, context=0x000000013b01d000) const at MergeTreeIndices.cpp:54:12
    frame #14: 0x0000000106c5f4a4 clickhouse-server`DB::MergeTreeData::setProperties(this=0x000000013a098600, metadata=0x0000700004827320, only_check=false) at MergeTreeData.cpp:442:52
    frame #15: 0x0000000106c5c0a3 clickhouse-server`DB::MergeTreeData::MergeTreeData(this=0x000000013a098600, table_id_=0x0000700004827e40, relative_data_path_="data/test/bloom_filter_idx/", metadata=0x0000700004827320, context_=0x000000013b01d000, date_column_name="", merging_params_=0x0000700004827a50, storage_settings_=unique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings> > @ 0x0000700004826db0, require_part_metadata_=false, attach=true, broken_part_callback_=DB::MergeTreeData::BrokenPartCallback @ 0x0000700004826df0)>) at MergeTreeData.cpp:158:5
    frame #16: 0x0000000106ab6069 clickhouse-server`DB::StorageMergeTree::StorageMergeTree(this=0x000000013a098600, table_id_=0x0000700004827e40, relative_data_path_="data/test/bloom_filter_idx/", metadata=0x0000700004827320, attach=true, context_=0x000000013b01d000, date_column_name="", merging_params_=0x0000700004827a50, storage_settings_=<unavailable>, has_force_restore_data_flag=false) at StorageMergeTree.cpp:63:7
    frame #17: 0x0000000106ab6c6a clickhouse-server`DB::StorageMergeTree::StorageMergeTree(this=0x000000013a098600, table_id_=0x0000700004827e40, relative_data_path_="data/test/bloom_filter_idx/", metadata=0x0000700004827320, attach=true, context_=0x000000013b01d000, date_column_name="", merging_params_=0x0000700004827a50, storage_settings_=<unavailable>, has_force_restore_data_flag=false) at StorageMergeTree.cpp:76:1
    frame #18: 0x0000000106e9a599 clickhouse-server`std::__1::shared_ptr<DB::StorageMergeTree> ext::shared_ptr_helper<DB::StorageMergeTree>::create<DB::StorageID const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::StorageInMemoryMetadata&, bool const&, DB::Context&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, DB::MergeTreeData::MergingParams&, std::__1::unique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings> >, bool const&>(args=0x0000700004827e40, args="data/test/bloom_filter_idx/", args=0x0000700004827320, args=0x0000700004827ed0, args=0x000000013b01d000, args="", args=0x0000700004827a50, args=0x0000700004827558, args=0x0000700004827ed1) at shared_ptr_helper.h:19:39
    frame #19: 0x0000000106e98bc8 clickhouse-server`DB::create(args=0x0000700004827e80) at registerStorageMergeTree.cpp:668:16
    frame #20: 0x0000000106ea2f7b clickhouse-server`decltype(__f=(0x0000000139344248), __args=0x0000700004827e80)(DB::StorageFactory::Arguments const&)>(fp)(std::__1::forward<DB::StorageFactory::Arguments const&>(fp0))) std::__1::__invoke<std::__1::shared_ptr<DB::IStorage> (*&)(DB::StorageFactory::Arguments const&), DB::StorageFactory::Arguments const&>(std::__1::shared_ptr<DB::IStorage> (*&)(DB::StorageFactory::Arguments const&), DB::StorageFactory::Arguments const&) at type_traits:3519:1
    frame #21: 0x0000000106ea2efb clickhouse-server`std::__1::shared_ptr<DB::IStorage> std::__1::__invoke_void_return_wrapper<std::__1::shared_ptr<DB::IStorage> >::__call<std::__1::shared_ptr<DB::IStorage> (__args=(0x0000000139344248), __args=0x0000700004827e80)(DB::StorageFactory::Arguments const&), DB::StorageFactory::Arguments const&>(std::__1::shared_ptr<DB::IStorage> (*&)(DB::StorageFactory::Arguments const&), DB::StorageFactory::Arguments const&) at __functional_base:317:16
    frame #22: 0x0000000106ea2e9b clickhouse-server`std::__1::__function::__alloc_func<std::__1::shared_ptr<DB::IStorage> (*)(DB::StorageFactory::Arguments const&), std::__1::allocator<std::__1::shared_ptr<DB::IStorage> (*)(DB::StorageFactory::Arguments const&)>, std::__1::shared_ptr<DB::IStorage> (DB::StorageFactory::Arguments const&)>::operator(this=0x0000000139344248, __arg=0x0000700004827e80)(DB::StorageFactory::Arguments const&) at functional:1540:16
    frame #23: 0x0000000106ea1bad clickhouse-server`std::__1::__function::__func<std::__1::shared_ptr<DB::IStorage> (*)(DB::StorageFactory::Arguments const&), std::__1::allocator<std::__1::shared_ptr<DB::IStorage> (*)(DB::StorageFactory::Arguments const&)>, std::__1::shared_ptr<DB::IStorage> (DB::StorageFactory::Arguments const&)>::operator(this=0x0000000139344240, __arg=0x0000700004827e80)(DB::StorageFactory::Arguments const&) at functional:1714:12
    frame #24: 0x000000010695ab8b clickhouse-server`std::__1::__function::__value_func<std::__1::shared_ptr<DB::IStorage> (DB::StorageFactory::Arguments const&)>::operator(this=0x0000000139344240, __args=0x0000700004827e80)(DB::StorageFactory::Arguments const&) const at functional:1867:16
    frame #25: 0x00000001069504c6 clickhouse-server`std::__1::function<std::__1::shared_ptr<DB::IStorage> (DB::StorageFactory::Arguments const&)>::operator(this=0x0000000139344240, __arg=0x0000700004827e80)(DB::StorageFactory::Arguments const&) const at functional:2473:12
    frame #26: 0x000000010694fbb6 clickhouse-server`DB::StorageFactory::get(this=0x000000010afe3328, query=0x00007000048285c0, relative_data_path="data/test/bloom_filter_idx/", local_context=0x000000013b01d000, context=0x000000013b01d000, columns=0x0000700004828378, constraints=0x0000700004828360, has_force_restore_data_flag=false) const at StorageFactory.cpp:183:12
    frame #27: 0x0000000105d41ac2 clickhouse-server`DB::createTableFromAST(ast_create_query=ASTCreateQuery @ 0x00007000048285c0, database_name="test", table_data_path_relative="data/test/bloom_filter_idx/", context=0x000000013b01d000, has_force_restore_data_flag=false) at DatabaseOnDisk.cpp:71:36
    frame #28: 0x0000000105d4e79f clickhouse-server`DB::(anonymous namespace)::tryAttachTable(context=0x000000013b01d000, query=0x000000013940fe18, database=0x0000000139382590, database_name="test", metadata_path="/Users/qoega/clickhouse-server/data/metadata/test/bloom_filter_idx.sql", has_force_restore_data_flag=false) at DatabaseOrdinary.cpp:63:19
    frame #29: 0x0000000105d4e5ed clickhouse-server`DB::DatabaseOrdinary::loadStoredObjects(this=0x000000013921d548)::$_1::operator()() const at DatabaseOrdinary.cpp:162:17
    frame #30: 0x0000000105d4e51d clickhouse-server`decltype(__f=0x000000013921d548)::$_1&>(fp)()) std::__1::__invoke<DB::DatabaseOrdinary::loadStoredObjects(DB::Context&, bool)::$_1&>(DB::DatabaseOrdinary::loadStoredObjects(DB::Context&, bool)::$_1&) at type_traits:3519:1
    frame #31: 0x0000000105d4e4cd clickhouse-server`void std::__1::__invoke_void_return_wrapper<void>::__call<DB::DatabaseOrdinary::loadStoredObjects(__args=0x000000013921d548)::$_1&>(DB::DatabaseOrdinary::loadStoredObjects(DB::Context&, bool)::$_1&) at __functional_base:348:9
    frame #32: 0x0000000105d4e49d clickhouse-server`std::__1::__function::__alloc_func<DB::DatabaseOrdinary::loadStoredObjects(DB::Context&, bool)::$_1, std::__1::allocator<DB::DatabaseOrdinary::loadStoredObjects(DB::Context&, bool)::$_1>, void ()>::operator(this=0x000000013921d548)() at functional:1540:16
    frame #33: 0x0000000105d4d3ee clickhouse-server`std::__1::__function::__func<DB::DatabaseOrdinary::loadStoredObjects(DB::Context&, bool)::$_1, std::__1::allocator<DB::DatabaseOrdinary::loadStoredObjects(DB::Context&, bool)::$_1>, void ()>::operator(this=0x000000013921d540)() at functional:1714:12
    frame #34: 0x00000001000fd015 clickhouse-server`std::__1::__function::__value_func<void ()>::operator(this=0x0000700004828a20)() const at functional:1867:16
    frame #35: 0x00000001000fcfb5 clickhouse-server`std::__1::function<void ()>::operator(this=0x0000700004828a20)() const at functional:2473:12
    frame #36: 0x000000010003fa4f clickhouse-server`ThreadPoolImpl<ThreadFromGlobalPool>::worker(this=0x00007ffeefbf80f8, thread_it=std::__1::list<ThreadFromGlobalPool, std::__1::allocator<ThreadFromGlobalPool> >::iterator @ 0x0000700004828a18) at ThreadPool.cpp:221:17
    frame #37: 0x000000010004ad04 clickhouse-server`void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(this=0x00000001392276c8)>, int, std::__1::optional<unsigned long long>)::'lambda1'()::operator()() const at ThreadPool.cpp:102:73
    frame #38: 0x000000010004accd clickhouse-server`decltype(__f=0x00000001392276c8)()) std::__1::__invoke_constexpr<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long long>)::'lambda1'() const&>(void&&) at type_traits:3525:1
    frame #39: 0x000000010004ac91 clickhouse-server`decltype(__f=0x00000001392276c8, __t=size=0, (null)=__tuple_indices<> @ 0x0000700004828ac8) std::__1::__apply_tuple_impl<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long long>)::'lambda1'() const&, std::__1::tuple<> const&>(void&&, std::__1::tuple<> const&, std::__1::__tuple_indices<>) at tuple:1415:1
    frame #40: 0x000000010004ac62 clickhouse-server`decltype(__f=0x00000001392276c8, __t=size=0) std::__1::apply<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long long>)::'lambda1'() const&, std::__1::tuple<> const&>(void&&, std::__1::tuple<> const&) at tuple:1424:1
    frame #41: 0x000000010004ab40 clickhouse-server`ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long long>)::'lambda1'()>(this=0x00000001392276b8)::'lambda'()::operator()() const at ThreadPool.h:159:17
    frame #42: 0x000000010004aabd clickhouse-server`decltype(__f=0x00000001392276b8)()) std::__1::__invoke<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long long>)::'lambda1'()>(void&&)::'lambda'()&>(void&&) at type_traits:3519:1
    frame #43: 0x000000010004aa6d clickhouse-server`void std::__1::__invoke_void_return_wrapper<void>::__call<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(__args=0x00000001392276b8)>, int, std::__1::optional<unsigned long long>)::'lambda1'()>(void&&)::'lambda'()&>(ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long long>)::'lambda1'()>(void&&)::'lambda'()&) at __functional_base:348:9
    frame #44: 0x000000010004aa3d clickhouse-server`std::__1::__function::__alloc_func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long long>)::'lambda1'()>(void&&)::'lambda'(), std::__1::allocator<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long long>)::'lambda1'()>(void&&)::'lambda'()>, void ()>::operator(this=0x00000001392276b8)() at functional:1540:16
    frame #45: 0x000000010004978e clickhouse-server`std::__1::__function::__func<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long long>)::'lambda1'()>(void&&)::'lambda'(), std::__1::allocator<ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long long>)::'lambda1'()>(void&&)::'lambda'()>, void ()>::operator(this=0x00000001392276b0)() at functional:1714:12
    frame #46: 0x00000001000fd015 clickhouse-server`std::__1::__function::__value_func<void ()>::operator(this=0x0000700004828ec0)() const at functional:1867:16
    frame #47: 0x00000001000fcfb5 clickhouse-server`std::__1::function<void ()>::operator(this=0x0000700004828ec0)() const at functional:2473:12
    frame #48: 0x000000010003dfaf clickhouse-server`ThreadPoolImpl<std::__1::thread>::worker(this=0x000000010afdb4c0, thread_it=std::__1::list<std::__1::thread, std::__1::allocator<std::__1::thread> >::iterator @ 0x0000700004828eb8) at ThreadPool.cpp:221:17
    frame #49: 0x0000000100044994 clickhouse-server`void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(this=0x000000013921e2f8)>, int, std::__1::optional<unsigned long long>)::'lambda1'()::operator()() const at ThreadPool.cpp:102:73
    frame #50: 0x000000010004491d clickhouse-server`decltype(__f=0x000000013921e2f8)()) std::__1::__invoke<void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long long>)::'lambda1'()>(void&&) at type_traits:3519:1
    frame #51: 0x00000001000448c5 clickhouse-server`void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long long>)::'lambda1'()>(__t=size=2, (null)=__tuple_indices<> @ 0x0000700004828f58)>, int, std::__1::optional<unsigned long long>)::'lambda1'()>&, std::__1::__tuple_indices<>) at thread:273:5
    frame #52: 0x0000000100044546 clickhouse-server`void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long long>)::'lambda1'()> >(__vp=0x000000013921e2f0) at thread:284:5
    frame #53: 0x00007fff6eb61e65 libsystem_pthread.dylib`_pthread_start + 148
    frame #54: 0x00007fff6eb5d83b libsystem_pthread.dylib`thread_start + 15
```