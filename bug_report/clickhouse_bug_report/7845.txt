ID: 7845
Title: Queries to merge table now fail with: DB::Exception: Default database is not selected (version 19.17.3.7 (official build))
Description:
Any SELECT query fails with a 404 response code and the stated error message, when the table definition is a Merge table defined like this:

Merge(currentDatabase(), '.')

Version: 19.17.3.7 on Ubuntu Server 18.04 LTS
 
**How to reproduce**
Send a SELECT query to a merge table defined with 
`Merge(currentDatabase(), '.')`

The query can even have the database name with dot notation, for example:

select * FROM test.table 

* Which interface to use, if matters
Any

* Queries to run that lead to unexpected result
Any SELECT queries

**Expected behavior**
The query result should be returned.

**Error message and/or stacktrace**
Error message:
```
Code: 81, e.displayText() = DB::Exception: Default database is not selected (version 19.17.3.7 (official build))
```

Stack trace:

```
2019.11.19 16:54:26.007104 [ 58 ] {bdda3f4b-29a5-4fe8-9db0-9dd086c19990} <Error> executeQuery: Code: 81, e.displayText() = DB::Exception: Default database is not selected (version 19.17.3.7 (official build)) (from 127.0.0.1:51592) (in query: SELECT sumMerge(mse.units) FROM mse WHERE (productid IN '29456757') FORMAT JSONCompact), Stack trace:

0. 0x55c20bd9cac0 StackTrace::StackTrace() /usr/bin/clickhouse
1. 0x55c20bd9c895 DB::Exception::Exception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int) /usr/bin/clickhouse
2. 0x55c20bab977d ? /usr/bin/clickhouse
3. 0x55c20f0f22f6 DB::Context::getDatabase(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const /usr/bin/clickhouse
4. 0x55c20f38ab8d DB::StorageMerge::getDatabaseIterator(DB::Context const&) const /usr/bin/clickhouse
5. 0x55c20f38ade4 DB::StorageMerge::isRemote() const /usr/bin/clickhouse
6. 0x55c20f8cb1fd DB::ExpressionAnalyzer::initGlobalSubqueriesAndExternalTables(bool) /usr/bin/clickhouse
7. 0x55c20f8cb6a0 DB::ExpressionAnalyzer::ExpressionAnalyzer(std::shared_ptr<DB::IAST> const&, std::shared_ptr<DB::SyntaxAnalyzerResult const> const&, DB::Context const&, unsigned long, bool) /usr/bin/clickhouse
8. 0x55c20f15c3c5 ? /usr/bin/clickhouse
9. 0x55c20f15d26e DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr<DB::IAST> const&, DB::Context const&, std::shared_ptr<DB::IBlockInputStream> const&, std::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) /usr/bin/clickhouse
10. 0x55c20f15dc67 DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) /usr/bin/clickhouse
11. 0x55c20f1814f8 DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) /usr/bin/clickhouse
12. 0x55c20f139fb8 DB::InterpreterFactory::get(std::shared_ptr<DB::IAST>&, DB::Context&, DB::QueryProcessingStage::Enum) /usr/bin/clickhouse
13. 0x55c20f282c2a ? /usr/bin/clickhouse
14. 0x55c20f284213 DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, DB::Context&, std::function<void (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>, std::function<void (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>) /usr/bin/clickhouse
15. 0x55c20be30fae DB::HTTPHandler::processQuery(Poco::Net::HTTPServerRequest&, HTMLForm&, Poco::Net::HTTPServerResponse&, DB::HTTPHandler::Output&) /usr/bin/clickhouse
16. 0x55c20be33329 DB::HTTPHandler::handleRequest(Poco::Net::HTTPServerRequest&, Poco::Net::HTTPServerResponse&) /usr/bin/clickhouse
17. 0x55c20fd223a9 Poco::Net::HTTPServerConnection::run() /usr/bin/clickhouse
18. 0x55c20fd1e920 Poco::Net::TCPServerConnection::start() /usr/bin/clickhouse
19. 0x55c20fd1f03d Poco::Net::TCPServerDispatcher::run() /usr/bin/clickhouse
20. 0x55c2113f51b1 Poco::PooledThread::run() /usr/bin/clickhouse
21. 0x55c2113f2f5c Poco::ThreadImpl::runnableEntry(void*) /usr/bin/clickhouse
22. 0x55c211b690c0 ? /usr/bin/clickhouse
23. 0x7f99b95de6db start_thread /lib/x86_64-linux-gnu/libpthread-2.27.so
24. 0x7f99b8efb88f clone /lib/x86_64-linux-gnu/libc-2.27.so
```
