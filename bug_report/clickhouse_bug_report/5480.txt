ID: 5480
Title: DB::Exception: Unknown codec family code: 0: (while reading column date)
Description:
After upgraded to version 19.5.3.8 periodically getting the following error:

``
2019.05.29 14:31:45.578065 [ 118 ] {713fc5cf-65bd-4588-b6c2-10348cfb98f3} <Error> executeQuery: Code: 432, e.displayText() = DB::Exception: Received from db-ch-node2.a1s:9000, 172.16.101.61. DB::Exception: Unknown codec family code: 0: (while reading column date): (while reading from part /var/lib/clickhouse/data/db_shard/cdr/20190107-107_0_10594_10/ from mark 4312 with max_rows_to_read = 8192). 
``

Stack trace:
```
0. /usr/bin/clickhouse-server(StackTrace::StackTrace()+0x16) [0x73fd046]
1. /usr/bin/clickhouse-server(DB::Exception::Exception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)+0x22) [0x377e942]
2. /usr/bin/clickhouse-server(DB::CompressionCodecFactory::get(unsigned char) const+0xca) [0x70059aa]
3. /usr/bin/clickhouse-server(DB::CompressedReadBufferBase::readCompressedData(unsigned long&, unsigned long&)+0x1426) [0x7001126]
4. /usr/bin/clickhouse-server(DB::CompressedReadBufferFromFile::nextImpl()+0x37) [0x7001d37]
5. /usr/bin/clickhouse-server(DB::CompressedReadBufferFromFile::seek(unsigned long, unsigned long)+0x79) [0x7002b39]
6. /usr/bin/clickhouse-server(DB::MergeTreeReaderStream::seekToMark(unsigned long)+0x83) [0x6bb6fb3]
7. /usr/bin/clickhouse-server() [0x6f0d53f]
8. /usr/bin/clickhouse-server(DB::IDataType::deserializeBinaryBulkWithMultipleStreams(DB::IColumn&, unsigned long, DB::IDataType::DeserializeBinaryBulkSettings&, std::shared_ptr<DB::IDataType::DeserializeBinaryBulkState>&) const+0x28) [0x38fb148]
9. /usr/bin/clickhouse-server(DB::MergeTreeReader::readData(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, DB::IDataType const&, DB::IColumn&, unsigned long, bool, unsigned long, bool)+0x2da) [0x6f0e17a]
10. /usr/bin/clickhouse-server(DB::MergeTreeReader::readRows(unsigned long, bool, unsigned long, DB::Block&)+0x349) [0x6f0e799]
11. /usr/bin/clickhouse-server(DB::MergeTreeRangeReader::DelayedStream::finalize(DB::Block&)+0x176) [0x6f0a766]
12. /usr/bin/clickhouse-server(DB::MergeTreeRangeReader::startReadingChain(unsigned long, std::vector<DB::MarkRange, std::allocator<DB::MarkRange> >&)+0x1bd) [0x6f0b42d]
13. /usr/bin/clickhouse-server(DB::MergeTreeRangeReader::read(unsigned long, std::vector<DB::MarkRange, std::allocator<DB::MarkRange> >&)+0x559) [0x6f0cbb9]
14. /usr/bin/clickhouse-server(DB::MergeTreeRangeReader::read(unsigned long, std::vector<DB::MarkRange, std::allocator<DB::MarkRange> >&)+0xba) [0x6f0c71a]
15. /usr/bin/clickhouse-server(DB::MergeTreeBaseSelectBlockInputStream::readFromPart()+0x651) [0x6efdfb1]
16. /usr/bin/clickhouse-server(DB::MergeTreeBaseSelectBlockInputStream::readImpl()+0xbe) [0x6eff61e]
17. /usr/bin/clickhouse-server(DB::IBlockInputStream::read()+0x178) [0x677baf8]
18. /usr/bin/clickhouse-server(DB::FilterBlockInputStream::readImpl()+0xd9) [0x6d20409]
19. /usr/bin/clickhouse-server(DB::IBlockInputStream::read()+0x178) [0x677baf8]
20. /usr/bin/clickhouse-server(DB::ExpressionBlockInputStream::readImpl()+0x2d) [0x6d1f77d]
21. /usr/bin/clickhouse-server(DB::IBlockInputStream::read()+0x178) [0x677baf8]
22. /usr/bin/clickhouse-server(DB::LimitBlockInputStream::readImpl()+0x215) [0x6780a65]
23. /usr/bin/clickhouse-server(DB::IBlockInputStream::read()+0x178) [0x677baf8]
24. /usr/bin/clickhouse-server(DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>::thread(std::shared_ptr<DB::ThreadGroupStatus>, unsigned long)+0x2f1) [0x68bd811]
25. /usr/bin/clickhouse-server(ThreadFromGlobalPool::ThreadFromGlobalPool<DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>::process()::{lambda()#1}>(DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>::process()::{lambda()#1}&&)::{lambda()#1}::operator()() const+0x6d) [0x68be27d]
26. /usr/bin/clickhouse-server(ThreadPoolImpl<std::thread>::worker(std::_List_iterator<std::thread>)+0x1ab) [0x7402fdb]
27. /usr/bin/clickhouse-server() [0xb27522f]
28. /lib/x86_64-linux-gnu/libpthread.so.0(+0x74a4) [0x7f6fc22b84a4]
29. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3f) [0x7f6fc18ead0f]
 (version 19.5.3.8 (official build)) (from [::ffff:172.16.100.17]:52728) (in query: select `cdr_distributed`.`id`, `cdr_distributed`.`parent_id`, `cdr_distributed`.`date`, `cdr_distributed`.`operator_id`, `cdr_distributed`.`abonent`, `cdr_distributed`.`transaction_type`, `cdr_distributed`.`transport_platform`, `cdr_distributed`.`bill_processed`, `cdr_distributed`.`service_id`, `cdr_distributed`.`platform_transaction_id`, `cdr_distributed`.`smsc_id`, `cdr_distributed`.`num`, `cdr_distributed`.`bill_num`, `cdr_distributed`.`tarif`, `cdr_distributed`.`subproject_id`, `cdr_distributed`.`msg_type`, `cdr_distributed`.`transport_type`, `cdr_distributed`.`partner_id`, `cdr_distributed`.`count`, `cdr_distributed`.`count_delivered`, `cdr_distributed`.`count_billed`, `cdr_distributed`.`plugin_id`, `cdr_distributed`.`content_platform_id`, `cdr_distributed`.`content_owner_id`, `cdr_distributed`.`content_id`, `cdr_distributed`.`region_id`, `cdr_distributed`.`pushka_subscribe_id`, `cdr_distributed`.`ps_params_id`, `cdr_distributed`.`ps_subscribe_id`, `cdr_distributed`.`error_code`, `cdr_distributed`.`params`, `cdr_distributed`.`scope`, `cdr_distributed`.`direction`, `cdr_distributed`.`version`, `cdr_distributed`.`platform_transaction_id_least` from `cdr_distributed` where (toMonday(`cdr_distributed`.`date`) >= toMonday(toDate('2019-01-01')) and `date` >= '2019-01-01 00:00:00' and toMonday(`cdr_distributed`.`date`) <= toMonday(toDate('2019-01-31')) and `date` <= '2019-01-31 23:59:59' and `cdr_distributed`.`abonent` = <MSISDN>) limit 500 FORMAT TabSeparatedWithNamesAndTypes;), Stack trace:

0. /usr/bin/clickhouse-server(StackTrace::StackTrace()+0x16) [0x73fd046]
1. /usr/bin/clickhouse-server(DB::Exception::Exception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)+0x22) [0x377e942]
2. /usr/bin/clickhouse-server(DB::readException(DB::Exception&, DB::ReadBuffer&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x21f) [0x74248ff]
3. /usr/bin/clickhouse-server(DB::Connection::receiveException()+0x81) [0x6c2ade1]
4. /usr/bin/clickhouse-server(DB::Connection::receivePacket()+0x767) [0x6c30fe7]
5. /usr/bin/clickhouse-server(DB::MultiplexedConnections::receivePacket()+0x7e) [0x6c3f20e]
6. /usr/bin/clickhouse-server(DB::RemoteBlockInputStream::readImpl()+0x87) [0x6792377]
7. /usr/bin/clickhouse-server(DB::IBlockInputStream::read()+0x178) [0x677baf8]
8. /usr/bin/clickhouse-server(DB::LimitBlockInputStream::readImpl()+0x215) [0x6780a65]
9. /usr/bin/clickhouse-server(DB::IBlockInputStream::read()+0x178) [0x677baf8]
10. /usr/bin/clickhouse-server(DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>::thread(std::shared_ptr<DB::ThreadGroupStatus>, unsigned long)+0x2f1) [0x68bd811]
11. /usr/bin/clickhouse-server(ThreadFromGlobalPool::ThreadFromGlobalPool<DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>::process()::{lambda()#1}>(DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>::process()::{lambda()#1}&&)::{lambda()#1}::operator()() const+0x6d) [0x68be27d]
12. /usr/bin/clickhouse-server(ThreadPoolImpl<std::thread>::worker(std::_List_iterator<std::thread>)+0x1ab) [0x7402fdb]
13. /usr/bin/clickhouse-server() [0xb27522f]
14. /lib/x86_64-linux-gnu/libpthread.so.0(+0x74a4) [0x7f603d7e34a4]
15. /lib/x86_64-linux-gnu/libc.so.6(clone+0x3f) [0x7f603ce15d0f]
```

The query that produce exceptions:
``
select `cdr_distributed`.`id`, `cdr_distributed`.`parent_id`, `cdr_distributed`.`date`, `cdr_distributed`.`operator_id`, `cdr_distributed`.`abonent`, `cdr_distributed`.`transaction_type`, `cdr_distributed`.`transport_platform`, `cdr_distributed`.`bill_processed`, `cdr_distributed`.`service_id`, `cdr_distributed`.`platform_transaction_id`, `cdr_distributed`.`smsc_id`, `cdr_distributed`.`num`, `cdr_distributed`.`bill_num`, `cdr_distributed`.`tarif`, `cdr_distributed`.`subproject_id`, `cdr_distributed`.`msg_type`, `cdr_distributed`.`transport_type`, `cdr_distributed`.`partner_id`, `cdr_distributed`.`count`, `cdr_distributed`.`count_delivered`, `cdr_distributed`.`count_billed`, `cdr_distributed`.`plugin_id`, `cdr_distributed`.`content_platform_id`, `cdr_distributed`.`content_owner_id`, `cdr_distributed`.`content_id`, `cdr_distributed`.`region_id`, `cdr_distributed`.`pushka_subscribe_id`, `cdr_distributed`.`ps_params_id`, `cdr_distributed`.`ps_subscribe_id`, `cdr_distributed`.`error_code`, `cdr_distributed`.`params`, `cdr_distributed`.`scope`, `cdr_distributed`.`direction`, `cdr_distributed`.`version`, `cdr_distributed`.`platform_transaction_id_least` from `cdr_distributed` where (toMonday(`cdr_distributed`.`date`) >= toMonday(toDate('2019-01-01')) and `date` >= '2019-01-01 00:00:00' and toMonday(`cdr_distributed`.`date`) <= toMonday(toDate('2019-01-31')) and `date` <= '2019-01-31 23:59:59' and `cdr_distributed`.`abonent` = <MSISDN>) limit 500
``

The TABLE `cdr_distributed` is distributed version of table `cdr` with
ENGINE = ReplicatedReplacingMergeTree
PARTITION BY (toMonday(date), operator_id)

``
SYSTEM DROP MARK CACHE
``
doesn't solve the problem.
