ID: 5756
Title: Segfault when using Delta codec
Description:
_Tested on CH 19.9.2.4_

I've got a table which gets some data: one insert every 5 seconds, the size of insert - 10k-100k rows.

The structure is the following:
```sql
CREATE TABLE graphite_index (
  Date Date CODEC(Delta, LZ4),
  Level UInt32,
  Path String,
  Version UInt32
) ENGINE = ReplacingMergeTree(Version)
PARTITION BY toYYYYMM(Date)
ORDER BY (Level, Path, Date);
```

After a short period of time after I start to ingest it dies with one of the following:
```
2019.06.26 14:43:03.637851 [ 73 ] {} <Error> BaseDaemon: ########################################
2019.06.26 14:43:03.637915 [ 73 ] {} <Error> BaseDaemon: (version 19.9.2.4) (from thread 53) Received signal Segmentation fault (11).
2019.06.26 14:43:03.637952 [ 73 ] {} <Error> BaseDaemon: Address: 0x58
2019.06.26 14:43:03.637975 [ 73 ] {} <Error> BaseDaemon: Access: read.
2019.06.26 14:43:03.637998 [ 73 ] {} <Error> BaseDaemon: Address not mapped to object.
2019.06.26 14:43:03.657925 [ 73 ] {} <Error> BaseDaemon: 0. clickhouse-server(DB::IBlockInputStream::cancel(bool)+0x69) [0x597b4a9]
2019.06.26 14:43:03.658037 [ 73 ] {} <Error> BaseDaemon: 1. clickhouse-server(DB::IBlockInputStream::read()+0x4dc) [0x597e23c]
2019.06.26 14:43:03.658097 [ 73 ] {} <Error> BaseDaemon: 2. clickhouse-server(DB::copyData(DB::IBlockInputStream&, DB::IBlockOutputStream&, std::atomic<bool>*)+0x46) [0x599bbc6]
2019.06.26 14:43:03.658194 [ 73 ] {} <Error> BaseDaemon: 3. clickhouse-server(DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, DB::Context&, std::function<void (std::string const&)>, std::function<void (std::string const&)>)+0x58b) [0x5ba3c2b]
2019.06.26 14:43:03.658275 [ 73 ] {} <Error> BaseDaemon: 4. clickhouse-server(DB::HTTPHandler::processQuery(Poco::Net::HTTPServerRequest&, HTMLForm&, Poco::Net::HTTPServerResponse&, DB::HTTPHandler::Output&)+0x15d4) [0x31f3d14]
2019.06.26 14:43:03.658339 [ 73 ] {} <Error> BaseDaemon: 5. clickhouse-server(DB::HTTPHandler::handleRequest(Poco::Net::HTTPServerRequest&, Poco::Net::HTTPServerResponse&)+0x458) [0x31f6ab8]
2019.06.26 14:43:03.658400 [ 73 ] {} <Error> BaseDaemon: 6. clickhouse-server(Poco::Net::HTTPServerConnection::run()+0x2a9) [0x6663259]
2019.06.26 14:43:03.658474 [ 73 ] {} <Error> BaseDaemon: 7. clickhouse-server(Poco::Net::TCPServerConnection::start()+0xf) [0x665e22f]
2019.06.26 14:43:03.658537 [ 73 ] {} <Error> BaseDaemon: 8. clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0xe5) [0x665e915]
2019.06.26 14:43:03.658611 [ 73 ] {} <Error> BaseDaemon: 9. clickhouse-server(Poco::PooledThread::run()+0x81) [0x677fe71]
2019.06.26 14:43:03.658685 [ 73 ] {} <Error> BaseDaemon: 10. clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x38) [0x677bc38]
2019.06.26 14:43:03.658758 [ 73 ] {} <Error> BaseDaemon: 11. clickhouse-server() [0x6fb07ef]
2019.06.26 14:43:03.658827 [ 73 ] {} <Error> BaseDaemon: 12. /lib64/libpthread.so.0(+0x7dd5) [0x7f6dcb003dd5]
```
```
2019.06.26 15:29:54.341827 [ 71 ] {} <Error> BaseDaemon: ########################################
2019.06.26 15:29:54.341932 [ 71 ] {} <Error> BaseDaemon: (version 19.9.2.4) (from thread 33) Received signal Segmentation fault (11).
2019.06.26 15:29:54.341983 [ 71 ] {} <Error> BaseDaemon: Address: 0xffffffffffffffe8
2019.06.26 15:29:54.342027 [ 71 ] {} <Error> BaseDaemon: Access: read.
2019.06.26 15:29:54.342058 [ 71 ] {} <Error> BaseDaemon: Address not mapped to object.
2019.06.26 15:29:54.364728 [ 71 ] {} <Error> BaseDaemon: 0. clickhouse-server(std::string::compare(std::string const&) const+0xd) [0x320c6ed]
2019.06.26 15:29:54.364796 [ 71 ] {} <Error> BaseDaemon: 1. clickhouse-server(DB::MergeTreePartInfo::operator<(DB::MergeTreePartInfo const&) const+0x12) [0x5c8d4b2]
2019.06.26 15:29:54.364854 [ 71 ] {} <Error> BaseDaemon: 2. clickhouse-server(DB::MergeTreeData::modifyPartState(std::shared_ptr<DB::MergeTreeDataPart const> const&, DB::MergeTreeDataPart::State)+0x74) [0x5d358d4]
2019.06.26 15:29:54.364903 [ 71 ] {} <Error> BaseDaemon: 3. clickhouse-server(DB::MergeTreeData::renameTempPartAndReplace(std::shared_ptr<DB::MergeTreeDataPart>&, SimpleIncrement*, DB::MergeTreeData::Transaction*, std::unique_lock<std::mutex>&, std::vector<std::shared_ptr<DB::MergeTreeDataPart const>, std::allocator<std::shared_ptr<DB::MergeTreeDataPart const> > >*)+0xa7e) [0x5d2385e]
2019.06.26 15:29:54.364953 [ 71 ] {} <Error> BaseDaemon: 4. clickhouse-server(DB::MergeTreeData::renameTempPartAndReplace(std::shared_ptr<DB::MergeTreeDataPart>&, SimpleIncrement*, DB::MergeTreeData::Transaction*)+0x83) [0x5d23af3]
2019.06.26 15:29:54.365003 [ 71 ] {} <Error> BaseDaemon: 5. clickhouse-server(DB::MergeTreeDataMergerMutator::renameMergedTemporaryPart(std::shared_ptr<DB::MergeTreeDataPart>&, std::vector<std::shared_ptr<DB::MergeTreeDataPart const>, std::allocator<std::shared_ptr<DB::MergeTreeDataPart const> > > const&, DB::MergeTreeData::Transaction*)+0x32) [0x5d38022]
2019.06.26 15:29:54.365057 [ 71 ] {} <Error> BaseDaemon: 6. clickhouse-server(DB::StorageMergeTree::merge(bool, std::string const&, bool, bool, std::string*)+0x3b6) [0x5c89b06]
2019.06.26 15:29:54.365092 [ 71 ] {} <Error> BaseDaemon: 7. clickhouse-server(DB::StorageMergeTree::backgroundTask()+0x161) [0x5c8b441]
2019.06.26 15:29:54.365119 [ 71 ] {} <Error> BaseDaemon: 8. clickhouse-server(DB::BackgroundProcessingPool::threadFunction()+0x3e8) [0x5cefc18]
2019.06.26 15:29:54.365144 [ 71 ] {} <Error> BaseDaemon: 9. clickhouse-server() [0x5cf0614]
2019.06.26 15:29:54.365181 [ 71 ] {} <Error> BaseDaemon: 10. clickhouse-server(ThreadPoolImpl<std::thread>::worker(std::_List_iterator<std::thread>)+0x187) [0x6420fb7]
2019.06.26 15:29:54.365213 [ 71 ] {} <Error> BaseDaemon: 11. clickhouse-server() [0x6fb07ef]
2019.06.26 15:29:54.365244 [ 71 ] {} <Error> BaseDaemon: 12. /lib64/libpthread.so.0(+0x7dd5) [0x7fcda61e1dd5]
```
```
2019.06.26 15:30:29.194860 [ 70 ] {} <Error> BaseDaemon: ########################################
2019.06.26 15:30:29.194934 [ 70 ] {} <Error> BaseDaemon: (version 19.9.2.4) (from thread 64) Received signal Segmentation fault (11).
2019.06.26 15:30:29.194978 [ 70 ] {} <Error> BaseDaemon: Address: 0xffe8
2019.06.26 15:30:29.195003 [ 70 ] {} <Error> BaseDaemon: Access: read.
2019.06.26 15:30:29.195026 [ 70 ] {} <Error> BaseDaemon: Address not mapped to object.
2019.06.26 15:30:29.215477 [ 70 ] {} <Error> BaseDaemon: 0. clickhouse-server(Poco::Net::NameValueCollection::set(std::string const&, std::string const&)+0x3c) [0x6642c4c]
2019.06.26 15:30:29.215563 [ 70 ] {} <Error> BaseDaemon: 1. clickhouse-server(DB::setResponseDefaultHeaders(Poco::Net::HTTPServerResponse&, unsigned int)+0xa8) [0x64316e8]
2019.06.26 15:30:29.215592 [ 70 ] {} <Error> BaseDaemon: 2. clickhouse-server(DB::WriteBufferFromHTTPServerResponse::startSendHeaders()+0x95) [0x64516f5]
2019.06.26 15:30:29.215619 [ 70 ] {} <Error> BaseDaemon: 3. clickhouse-server(DB::WriteBufferFromHTTPServerResponse::finalize()+0x66) [0x6452676]
2019.06.26 15:30:29.215667 [ 70 ] {} <Error> BaseDaemon: 4. clickhouse-server(DB::HTTPHandler::processQuery(Poco::Net::HTTPServerRequest&, HTMLForm&, Poco::Net::HTTPServerResponse&, DB::HTTPHandler::Output&)+0x1969) [0x31f40a9]
2019.06.26 15:30:29.215704 [ 70 ] {} <Error> BaseDaemon: 5. clickhouse-server(DB::HTTPHandler::handleRequest(Poco::Net::HTTPServerRequest&, Poco::Net::HTTPServerResponse&)+0x458) [0x31f6ab8]
2019.06.26 15:30:29.215738 [ 70 ] {} <Error> BaseDaemon: 6. clickhouse-server(Poco::Net::HTTPServerConnection::run()+0x2a9) [0x6663259]
2019.06.26 15:30:29.215772 [ 70 ] {} <Error> BaseDaemon: 7. clickhouse-server(Poco::Net::TCPServerConnection::start()+0xf) [0x665e22f]
2019.06.26 15:30:29.215805 [ 70 ] {} <Error> BaseDaemon: 8. clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0xe5) [0x665e915]
2019.06.26 15:30:29.215842 [ 70 ] {} <Error> BaseDaemon: 9. clickhouse-server(Poco::PooledThread::run()+0x81) [0x677fe71]
2019.06.26 15:30:29.215906 [ 70 ] {} <Error> BaseDaemon: 10. clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x38) [0x677bc38]
2019.06.26 15:30:29.215938 [ 70 ] {} <Error> BaseDaemon: 11. clickhouse-server() [0x6fb07ef]
2019.06.26 15:30:29.215962 [ 70 ] {} <Error> BaseDaemon: 12. /lib64/libpthread.so.0(+0x7dd5) [0x7f1bbb0f3dd5]
```

Points:
* I'm not sure why it dies one way or another. I've seen even more backtraces, can post if needed
* If I remove `Delta` codec things become stable - I see no crashes
* Delta codec on other UInt32 columns does not seem to cause crashes
* The only values which end up in `Date` column are `1970-02-12` and `2019-06-26`, but by inserting them manually I could not reproduce the segfault. Although I used `clickhouse-client` and not HTTP
* This is 100% reproducible on my setup, if some tests are needed - let me know
