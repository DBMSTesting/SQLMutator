ID: 25988
Title: Dictionary Updates with updateField not working (Postgres) 
Description:
**Describe the bug**

I've created an external dictionary with a Postgres source. The table has a `updateAt` column. When Clickhouse tries to refetch the updated columns, Postgres throws an error because the timestamp provided is not valid.

I see following error in clickhouse:
```
std::exception. Code: 1001, type: pqxx::data_exception, e.what() = ERROR:  date/time field value out of range: "1625475272"
LINE 1: ...tes" FROM "my_dictionary" WHERE "updatedAt" >= '162547527...
                                                             ^
HINT:  Perhaps you need a different "datestyle" setting.
 (version 21.3.9.83 (official build))
```

Is there a way to set a custom date format? it should be either a valid Unix timestamp or Iso timstamp

**How to reproduce**

* Which ClickHouse server version to use
ClickHouse 21.3.9.83

**Schema** 
Postgres:
```sql
CREATE TABLE my_dictionary (
    "userId" character varying,
    "projectId" character varying,
    notes character varying NOT NULL DEFAULT ''::character varying,
    "updatedAt" timestamp(3) without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP
);
```

Clickhouse:
```sql
CREATE DICTIONARY my_dictionary (
  `userId` String,
  `projectId` String,
  `notes` String
) 
PRIMARY KEY projectId,userId 
SOURCE(
  POSTGRESQL(
    PORT 5432 HOST 'db' USER 'postgres' PASSWORD 'postgres' DB 'mydb' TABLE 'my_dictionary' UPDATE_FIELD '"updatedAt"'
  )
) LIFETIME(MIN 5 MAX 15) 
LAYOUT(COMPLEX_KEY_HASHED())
```


**Expected behavior**
There `where updatedAt` query should be using a valid timestamp depending on the source. postgres doesn't accept the format

**Error message and/or stacktrace**
```
std::exception. Code: 1001, type: pqxx::data_exception, e.what() = ERROR:  date/time field value out of range: "1625475272"
LINE 1: ...tes" FROM "my_dictionary" WHERE "updatedAt" >= '162547527...
                                                             ^
HINT:  Perhaps you need a different "datestyle" setting.
 (version 21.3.9.83 (official build))
```
