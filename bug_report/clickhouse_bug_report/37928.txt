ID: 37928
Title: Join fails when join_algorithm set to partial_merge
Description:
> You have to provide the following information whenever possible.

**Describe what's wrong**
We are running queries of following format:

```
CREATE TABLE final_table
ENGINE = MergeTree
ORDER BY tuple() as
select 
	   'smth1' as col1,
            'smth2' as  col2,
            'smth3'  as col3,
            'some_string_here' as col4,
			'even_longer_string_here' as col5
from "source_table"
        join joined_table on
				joined_table.col9 = source_table.col6
			and joined_table.col10 = source_table.col7
			and joined_table.col11 = source_table.col8
			and joined_table.col12 = 'R' -- this clause makes query fail when join_algorithm is partial_merge               
        SETTINGS max_parser_depth = 100000, join_algorithm = 'partial_merge'
```


We get the following error:
`Code: 44. DB::Exception: Conflicting column name '--': While executing JoiningTransform. (ILLEGAL_COLUMN) (version 22.5.1.2079 (official build))`

It is only reproducible when join_algorithm param is set to partial_merge and clause contains constant filter ( joined_table.col12 = 'R' ).

When we insert the filter to sub-select , our query finishes successfully:
```
CREATE TABLE final_table
ENGINE = MergeTree
ORDER BY tuple() as
            select 
			'smth1' as col1,
            'smth2' as  col2,
            'smth3'  as col3,
            'some_string_here' as col4,
			'even_longer_string_here' as col5
from "source_table"
        join (select * from joined_table where joined_table .col12 = 'R')  on
				joined_table.col9 = source_table.col6
			and joined_table.col10 = source_table.col7
			and joined_table.col11 = source_table.col8             
        SETTINGS max_parser_depth = 100000, join_algorithm = 'partial_merge'
```

**Does it reproduce on recent release?**

Reproducible on 22.5.1.2079 

**Error message and/or stacktrace**

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0xb4903fa in /usr/bin/clickhouse
1. DB::Exception::Exception<char const*, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, long&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(int, fmt::v8::basic_format_string<char, fmt::v8::type_identity<char const*>::type, fmt::v8::type_identity<char const*>::type, fmt::v8::type_identity<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::type, fmt::v8::type_identity<long&>::type, fmt::v8::type_identity<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::type>, char const*&&, char const*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&, long&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&) @ 0xb4a8843 in /usr/bin/clickhouse
2. MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0xb4a8575 in /usr/bin/clickhouse
3. MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0xb4a7fb7 in /usr/bin/clickhouse
4. MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0xb4a7fb7 in /usr/bin/clickhouse
5. MemoryTracker::allocImpl(long, bool, MemoryTracker*) @ 0xb4a7fb7 in /usr/bin/clickhouse
6. Allocator<true, true>::realloc(void*, unsigned long, unsigned long, unsigned long) @ 0xb29778c in /usr/bin/clickhouse
7. HashTable<wide::integer<128ul, unsigned int>, HashMapCell<wide::integer<128ul, unsigned int>, DB::RowRefList, UInt128TrivialHash, HashTableNoState>, UInt128TrivialHash, HashTableGrower<8ul>, Allocator<true, true> >::resize(unsigned long, unsigned long) @ 0x1594fd01 in /usr/bin/clickhouse
8. ? @ 0x1594fa7a in /usr/bin/clickhouse
9. ? @ 0x159476d6 in /usr/bin/clickhouse
10. DB::HashJoin::addJoinedBlock(DB::Block const&, bool) @ 0x1591bcd4 in /usr/bin/clickhouse
11. DB::JoinSwitcher::addJoinedBlock(DB::Block const&, bool) @ 0x15e1ec93 in /usr/bin/clickhouse
12. DB::FillingRightJoinSideTransform::work() @ 0x16ee4ca1 in /usr/bin/clickhouse
13. DB::ExecutionThreadContext::executeTask() @ 0x16d18ee8 in /usr/bin/clickhouse
14. DB::PipelineExecutor::executeStepImpl(unsigned long, std::__1::atomic<bool>*) @ 0x16d0cbfe in /usr/bin/clickhouse
15. ? @ 0x16d0e4c4 in /usr/bin/clickhouse
16. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0xb53fc47 in /usr/bin/clickhouse
17. ? @ 0xb54367d in /usr/bin/clickhouse
18. ? @ 0x7f88e94f7609 in ?
19. __clone @ 0x7f88e941c163 in ?

**Additional context**

> Add any other context about the problem here.
