ID: 16849
Title: ClickHouse server crash after modify column type from Int64 to Float64
Description:
**Describe the bug**
Developer guy executed .
Then all the servers in the cluster crashed, we got following error log.
And the servers can not be restarted.

**How to reproduce**
Not sure.
* Which ClickHouse server version to use
19.11.9.52
* Queries to run that lead to unexpected result
ALTER TABLE {db_name}.{table_name} ON CLUSTER {cluster_name} MODIFY COLUMN `var_content_produce_num` Float64

**Error message and/or stacktrace**
`2020.11.11 10:51:13.487660 [ 94 ] {} <Error> BaseDaemon: ########################################
2020.11.11 10:51:13.487756 [ 94 ] {} <Error> BaseDaemon: (version 19.11.9.52) (from thread 68) Received signal Segmentation fault (11).
2020.11.11 10:51:13.487786 [ 94 ] {} <Error> BaseDaemon: Address: 0x140 Access: read. Address not mapped to object.
2020.11.11 10:51:13.524459 [ 94 ] {} <Error> BaseDaemon: 0. clickhouse-server(StackTrace::StackTrace(ucontext const&)+0x30) [0x6d84df0]
1. clickhouse-server() [0x32095e5]
2. /lib64/libpthread.so.0(+0xf5e0) [0x7f9154e305e0]
3. clickhouse-server() [0x6406f76]
4. clickhouse-server(DB::IMergedBlockOutputStream::writeFinalMark(std::string const&, std::shared_ptr<DB::IDataType const>, std::set<std::string, std::less<std::string>, std::allocator<std::string> >&, bool, std::vector<DB::IDataType::Substream, std::allocator<DB::IDataType::Substream> >&)+0x9d) [0x640492d]
5. clickhouse-server(DB::MergedColumnOnlyOutputStream::writeSuffixAndGetChecksums()+0x230) [0x60546c0]
6. clickhouse-server(DB::MergeTreeData::alterDataPart(DB::NamesAndTypesList const&, std::vector<std::shared_ptr<DB::ASTIndexDeclaration>, std::allocator<std::shared_ptr<DB::ASTIndexDeclaration> > > const&, bool, std::unique_ptr<DB::MergeTreeData::AlterDataPartTransaction, std::default_delete<DB::MergeTreeData::AlterDataPartTransaction> >&)+0x825) [0x5fcb5a5]
7. clickhouse-server(DB::ReplicatedMergeTreeAlterThread::run()+0x5e3) [0x6059a13]
8. clickhouse-server(DB::BackgroundSchedulePoolTaskInfo::execute()+0xd1) [0x61869a1]
9. clickhouse-server(DB::BackgroundSchedulePool::threadFunction()+0xaa) [0x618727a]
10. clickhouse-server() [0x6187424]
11. clickhouse-server(ThreadPoolImpl<std::thread>::worker(std::_List_iterator<std::thread>)+0x1b8) [0x66bb4c8]
12. clickhouse-server() [0x75275df]
13. /lib64/libpthread.so.0(+0x7e25) [0x7f9154e28e25]
14. /lib64/libc.so.6(clone+0x6d) [0x7f915485434d]
`

**Additional context**
How to fix?
