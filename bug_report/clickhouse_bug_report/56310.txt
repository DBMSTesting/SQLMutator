ID: 56310
Title: Subquery in TTL expression breaks ClickHouse in interesting ways 
Description:
```
localhost.localdomain :) create or replace table temp (
    a UInt32
)
engine = MergeTree
order by a;

CREATE OR REPLACE TABLE temp
(
    `a` UInt32
)
ENGINE = MergeTree
ORDER BY a

Query id: eb5acca0-06b7-4f98-b5bf-fd61dc3caa02

Connecting to localhost:9000 as user default.
Connected to ClickHouse server version 23.11.1 revision 54466.

ClickHouse client version is older than ClickHouse server. It may lack support for new features.

Ok.

0 rows in set. Elapsed: 0.167 sec. 

localhost.localdomain :) create or replace table t_temp (
    a UInt32,
    timestamp DateTime
)
engine = MergeTree
order by a
TTL timestamp + INTERVAL 10 SECOND WHERE a in (select a from temp);

CREATE OR REPLACE TABLE t_temp
(
    `a` UInt32,
    `timestamp` DateTime
)
ENGINE = MergeTree
ORDER BY a
TTL timestamp + toIntervalSecond(10) WHERE a IN (
    SELECT a
    FROM temp
)

Query id: 2b3ff155-f68a-4521-93b4-6e02f9bb0dbe

Ok.

0 rows in set. Elapsed: 0.047 sec. 

localhost.localdomain :) drop table temp sync

```

1. The DROP TABLE query gets stuck, probably because `t_temp` somehow holds StoragePtr to `temp`: https://pastila.nl/?00878e84/81745d3d73536fd629767fd73c65f170#TweT5ex5mIeBkv7pg4qyvg==
2. If you restart the server, it fails to start: https://pastila.nl/?003b5a76/f5f4005581b70d1d75816245e1eecaef#sKJtoYflnRc0JPm9TU15Ag==
3. It's also possible to reproduce https://github.com/ClickHouse/ClickHouse/issues/52991