ID: 20265
Title: Some strange issues related to ConfigReloader, Roles and who knows what else
Description:
I'm hitting a nasty bug with v20.3, a pointer gets garbled and ConfigReloader never releases shared context lock.

Look at begin and end pointers, it doesn't make sense for end to be increment of 16 bytes + 1 bit.

```
(gdb) frame 1
#1  DB::GenericRoleSet::match (this=0x7f46c882d298, user_id=..., enabled_roles=...) at ../src/Access/GenericRoleSet.cpp:262
262	../src/Access/GenericRoleSet.cpp: No such file or directory.
(gdb) info args
this = 0x7f46c882d298
user_id = @0x7f45ed1468b8: {t = {low = 201939704, high = 139938307008696}}
enabled_roles = @0x7f45ed1468c8: {<std::__1::__vector_base<StrongTypedef<DB::UInt128, DB::UUIDTag>, std::__1::allocator<StrongTypedef<DB::UInt128, DB::UUIDTag> > >> = {<std::__1::__vector_base_common<true>> = {<No data fields>}, __begin_ = 0x7f45ed1468a0, __end_ = 0x7f4600000001,
    __end_cap_ = {<std::__1::__compressed_pair_elem<StrongTypedef<DB::UInt128, DB::UUIDTag>*, 0, false>> = {
        __value_ = 0x7f46b6e10360}, <std::__1::__compressed_pair_elem<std::__1::allocator<StrongTypedef<DB::UInt128, DB::UUIDTag> >, 1, true>> = {<std::__1::allocator<StrongTypedef<DB::UInt128, DB::UUIDTag> >> = {<No data fields>}, <No data fields>}, <No data fields>}}, <No data fields>}
(gdb)
```

I can't properly trigger the bug, spent whole day on trying to reproduce it and succeeded one time with v20.3 and one time with the master. Now you probably don't care that much about 20.3 so here is the thread sanitizer report for commit 6181daf92d from PR #20088. This is close to current master.

Although user access code changed very much from 20.3 to current master I'm inclined to believe that the issue is caused by a similar data race due to bad synchronization.

[tsan_47c610be14_master.txt](https://github.com/ClickHouse/ClickHouse/files/5953876/tsan_47c610be14_master.txt)

^ 20.3 with TSAN reports a data race for the same code.

---

I'll try to clean up test I'm using to trigger this and will try to upload it in a day.

Is a guard missed here https://github.com/ClickHouse/ClickHouse/blob/master/src/Access/ContextAccess.cpp#L158?

cc @vitlibar 