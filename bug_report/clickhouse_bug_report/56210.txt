ID: 56210
Title: clickhouse marks parts broken when “too many open files” in ReplicatedMergeTreePartCheckThread
Description:
**Describe what's wrong**

Just like the issue [#6269](https://github.com/ClickHouse/ClickHouse/issues/6269). After “too many open files” error in ReplicatedMergeTreePartCheckThread , parts is marked broken and is not really broken. 

**Does it reproduce on recent release?**

yes

**How to reproduce**

* ClickHouse server version 23.9.3 revision 54466.
* ReplicatedMergeTree backgroud mutation or merge
* "too many open files" happens

**Expected behavior**

not marks parts broken.

**Error message and/or stacktrace**

```
2023.11.01 16:57:04.030761 [ 49435 ] {} <Error> default.largefactor (ReplicatedMergeTreePartCheckThread): ReplicatedCheckResult DB::ReplicatedMergeTreePartCheckThread::checkPartImpl(const String &): Code: 76. DB::ErrnoException: Cannot open file /var/lib/clickhouse/store/cc1/cc127596-1c04-4e4b-9367-7dddfcfd452e/all_4_4_0/columns.txt, errno: 24, strerror: Too many open files. (CANNOT_OPEN_FILE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000000c73d977 in /usr/bin/clickhouse
1. DB::ErrnoException::ErrnoException(String const&, int, int, std::optional<String> const&) @ 0x000000000c73eed4 in /usr/bin/clickhouse
2. DB::throwFromErrnoWithPath(String const&, String const&, int, int) @ 0x000000000c73f260 in /usr/bin/clickhouse
3. DB::OpenedFile::open() const @ 0x0000000010d76a8f in /usr/bin/clickhouse
4. DB::OpenedFile::getFD() const @ 0x0000000010d76b35 in /usr/bin/clickhouse
5. DB::createReadBufferFromFileBase(String const&, DB::ReadSettings const&, std::optional<unsigned long>, std::optional<unsigned long>, int, char*, unsigned long)::$_0::operator()(unsigned long, unsigned long, int) const @ 0x0000000010d73620 in /usr/bin/clickhouse
6. DB::createReadBufferFromFileBase(String const&, DB::ReadSettings const&, std::optional<unsigned long>, std::optional<unsigned long>, int, char*, unsigned long) @ 0x0000000010d730cb in /usr/bin/clickhouse
7. DB::DiskLocal::readFile(String const&, DB::ReadSettings const&, std::optional<unsigned long>, std::optional<unsigned long>) const @ 0x000000001162ce3d in /usr/bin/clickhouse
8. DB::DataPartStorageOnDiskFull::readFile(String const&, DB::ReadSettings const&, std::optional<unsigned long>, std::optional<unsigned long>) const @ 0x0000000012d00f33 in /usr/bin/clickhouse
9. DB::checkDataPart(std::shared_ptr<DB::IMergeTreeDataPart const>, DB::IDataPartStorage const&, DB::NamesAndTypesList const&, DB::MergeTreeDataPartType const&, std::unordered_set<String, std::hash<String>, std::equal_to<String>, std::allocator<String>> const&, DB::ReadSettings const&, bool, std::function<bool ()>) @ 0x0000000013100754 in /usr/bin/clickhouse
10. DB::checkDataPart(std::shared_ptr<DB::IMergeTreeDataPart const>, bool, std::function<bool ()>) @ 0x00000000131001ba in /usr/bin/clickhouse
11. DB::ReplicatedMergeTreePartCheckThread::checkPartImpl(String const&) @ 0x000000001307a9e9 in /usr/bin/clickhouse
12. DB::ReplicatedMergeTreePartCheckThread::checkPartAndFix(String const&, std::optional<long>*) @ 0x000000001307c8ce in /usr/bin/clickhouse
13. void std::__function::__policy_invoker<void ()>::__call_impl<std::__function::__default_alloc_func<DB::ReplicatedMergeTreePartCheckThread::ReplicatedMergeTreePartCheckThread(DB::StorageReplicatedMergeTree&)::$_0, void ()>>(std::__function::__policy_storage const*) @ 0x0000000013081d7c in /usr/bin/clickhouse
14. DB::BackgroundSchedulePool::threadFunction() @ 0x00000000111fe23f in /usr/bin/clickhouse
15. void std::__function::__policy_invoker<void ()>::__call_impl<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<DB::BackgroundSchedulePool::BackgroundSchedulePool(unsigned long, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>, char const*)::$_0>(DB::BackgroundSchedulePool::BackgroundSchedulePool(unsigned long, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>, StrongTypedef<unsigned long, CurrentMetrics::MetricTag>, char const*)::$_0&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0x00000000111ff291 in /usr/bin/clickhouse
16. void* std::__thread_proxy[abi:v15000]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0x000000000c826da7 in /usr/bin/clickhouse
17. start_thread @ 0x0000000000007ea7 in /usr/lib/x86_64-linux-gnu/libpthread-2.31.so
18. ? @ 0x00000000000fba2f in /usr/lib/x86_64-linux-gnu/libc-2.31.so
 (version 23.9.3.12 (official build))
2023.11.01 16:57:04.030807 [ 49435 ] {} <Error> default.largefactor (ReplicatedMergeTreePartCheckThread): Part all_4_4_0 looks broken. Removing it and will try to fetch.
2023.11.01 16:57:04.030819 [ 49435 ] {} <Warning> default.largefactor (ReplicatedMergeTreePartCheckThread): Part all_4_4_0 exists in ZooKeeper and the local part was broken. Detaching it, removing from ZooKeeper and queueing a fetch.
2023.11.01 16:57:04.030847 [ 49435 ] {} <Warning> default.largefactor (cc127596-1c04-4e4b-9367-7dddfcfd452e): Directory broken_all_4_4_0 (to detach to) already exists. Will detach to directory with '_tryN' suffix.
2023.11.01 16:57:04.030861 [ 49435 ] {} <Warning> default.largefactor (cc127596-1c04-4e4b-9367-7dddfcfd452e): Directory broken_all_4_4_0_try1 (to detach to) already exists. Will detach to directory with '_tryN' suffix.
2023.11.01 16:57:04.030875 [ 49435 ] {} <Warning> default.largefactor (cc127596-1c04-4e4b-9367-7dddfcfd452e): Directory broken_all_4_4_0_try2 (to detach to) already exists. Will detach to directory with '_tryN' suffix.
2023.11.01 16:57:04.030899 [ 49435 ] {} <Warning> default.largefactor (cc127596-1c04-4e4b-9367-7dddfcfd452e): Directory broken_all_4_4_0_try3 (to detach to) already exists. Will detach to directory with '_tryN' suffix.
```
