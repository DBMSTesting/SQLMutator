ID: 23882
Title: Use of HAVING and prefer_column_name_to_alias=1 lead to Exception 
Description:
**Describe the bug**
prefer_column_name_to_alias=1 work flawlessly unless you try to use``` HAVING _statement_``` in your query
Use of HAVING lead to unexpected DB::Exception

**Does it reproduce on recent release?**
Reproduce on recent stable release

**How to reproduce**
* Which ClickHouse server version to use
21.4.5.46-stable
* Which interface to use, if matters
CLI. HTTP API
* Non-default settings, if any
```sql
SET prefer_column_name_to_alias=1;
```
* `CREATE TABLE` statements for all tables involved
```sql
CREATE TABLE IF NOT EXISTS mytable (
    start_ts UInt32,
    end_ts UInt32,
    uuid String,
) ENGINE = MergeTree()
ORDER BY start_ts
```

* Queries to run that lead to unexpected result
```sql
SET prefer_column_name_to_alias=1;

SELECT
    any(uuid) AS id,
    max(end_ts) - any(start_ts) AS time_delta,
    any(start_ts) AS start_ts,
    max(end_ts) AS end_ts,
FROM mytable
GROUP BY uuid
HAVING max(end_ts) < 1620141001
ORDER BY any(start_ts) DESC
```
or 
```sql
SELECT
    any(uuid) AS id,
    max(end_ts) - any(start_ts) AS time_delta,
    any(start_ts) AS start_ts,
    max(end_ts) AS end_ts,
FROM mytable
GROUP BY uuid
HAVING max(end_ts) < 1620141001
ORDER BY any(start_ts) DESC
SETTINGS prefer_column_name_to_alias=1
```

**Expected behavior**
Expected to receive query result

**Error message and/or stacktrace**
Code: 184. DB::Exception: Received from localhost:9000. DB::Exception: Aggregate function max(end_ts) is found inside another aggregate function in query: While processing max(end_ts) AS end_ts. 