ID: 55040
Title: High Volume of Error Logs; Possibly Issues with Merging and Replication
Description:
In my 2-node ClickHouse 23.3 cluster, there's a sudden surge in error logs. I've attached a sample for reference. The logs aren't providing clear indications of the root cause. I suspect these issues are affecting replication and merges.

```
(version 23.3.2.37 (official build))
2023.09.26 21:25:04.115141 [ 290 ] {} <Error> void DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(DB::TaskRuntimeDataPtr) [Queue = DB::DynamicRuntimeQueue]: Code: 49. DB::Exception: Written 0 elements of column query_id, but 195058 rows of PK columns. (LOGICAL_ERROR), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0xbaded44 in /usr/bin/clickhouse
1. ? @ 0x103039a8 in /usr/bin/clickhouse
2. DB::MergeTask::VerticalMergeStage::finalizeVerticalMergeForOneColumn() const @ 0x10e857c4 in /usr/bin/clickhouse
3. bool std::__function::__policy_invoker<bool ()>::__call_impl<std::__function::__default_alloc_func<DB::MergeTask::VerticalMergeStage::subtasks::'lambda0'(), bool ()>>(std::__function::__policy_storage const*) @ 0x10e8bb48 in /usr/bin/clickhouse
4. DB::MergeTask::VerticalMergeStage::execute() @ 0x10e87cfc in /usr/bin/clickhouse
5. DB::MergeTask::execute() @ 0x10e87730 in /usr/bin/clickhouse
6. DB::MergePlainMergeTreeTask::executeStep() @ 0x11174018 in /usr/bin/clickhouse
7. DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(std::shared_ptr<DB::TaskRuntimeData>) @ 0x7cfdfa0 in /usr/bin/clickhouse
8. DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::threadFunction() @ 0x7cfdc50 in /usr/bin/clickhouse
9. ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0xbb98490 in /usr/bin/clickhouse
10. void std::__function::__policy_invoker<void ()>::__call_impl<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0xbb9addc in /usr/bin/clickhouse
11. ThreadPoolImpl<std::thread>::worker(std::__list_iterator<std::thread, void*>) @ 0xbb94864 in /usr/bin/clickhouse
12. ? @ 0xbb99d08 in /usr/bin/clickhouse
13. ? @ 0x7d5c8 in /usr/lib/aarch64-linux-gnu/libc.so.6
14. ? @ 0xe5d1c in /usr/lib/aarch64-linux-gnu/libc.so.6
 (version 23.3.2.37 (official build))
2023.09.26 21:25:04.121203 [ 302 ] {} <Error> void DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(DB::TaskRuntimeDataPtr) [Queue = DB::DynamicRuntimeQueue]: Code: 131. DB::Exception: Too large string size: 4611686018427396214. The maximum is: 17179869184.: (while reading column query_id): While executing MergeTreeSequentialSource. (TOO_LARGE_STRING_SIZE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0xbaded44 in /usr/bin/clickhouse
1. ? @ 0x8569fc4 in /usr/bin/clickhouse
2. ? @ 0xf997b70 in /usr/bin/clickhouse
3. DB::ISerialization::deserializeBinaryBulkWithMultipleStreams(COW<DB::IColumn>::immutable_ptr<DB::IColumn>&, unsigned long, DB::ISerialization::DeserializeBinaryBulkSettings&, std::shared_ptr<DB::ISerialization::DeserializeBinaryBulkState>&, std::unordered_map<String, COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::hash<String>, std::equal_to<String>, std::allocator<std::pair<String const, COW<DB::IColumn>::immutable_ptr<DB::IColumn>>>>*) const @ 0xf95f80c in /usr/bin/clickhouse
4. DB::MergeTreeReaderCompact::readData(DB::NameAndTypePair const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn>&, unsigned long, unsigned long, unsigned long, unsigned long, std::optional<unsigned long>) @ 0x10fc8a90 in /usr/bin/clickhouse
5. DB::MergeTreeReaderCompact::readRows(unsigned long, unsigned long, bool, unsigned long, std::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn>>>&) @ 0x10fc84f0 in /usr/bin/clickhouse
6. DB::MergeTreeSequentialSource::generate() @ 0x10fd8458 in /usr/bin/clickhouse
7. DB::ISource::tryGenerate() @ 0x112bc38c in /usr/bin/clickhouse
8. DB::ISource::work() @ 0x112bbe90 in /usr/bin/clickhouse
9. DB::ExecutionThreadContext::executeTask() @ 0x112d20cc in /usr/bin/clickhouse
10. DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x112c88f8 in /usr/bin/clickhouse
11. DB::PipelineExecutor::executeStep(std::atomic<bool>*) @ 0x112c7e34 in /usr/bin/clickhouse
12. DB::PullingPipelineExecutor::pull(DB::Chunk&) @ 0x112d6e84 in /usr/bin/clickhouse
13. DB::PullingPipelineExecutor::pull(DB::Block&) @ 0x112d713c in /usr/bin/clickhouse
14. DB::MergeTask::ExecuteAndFinalizeHorizontalPart::executeImpl() @ 0x10e83908 in /usr/bin/clickhouse
15. DB::MergeTask::ExecuteAndFinalizeHorizontalPart::execute() @ 0x10e8385c in /usr/bin/clickhouse
16. DB::MergeTask::execute() @ 0x10e87730 in /usr/bin/clickhouse
17. DB::MergePlainMergeTreeTask::executeStep() @ 0x11174018 in /usr/bin/clickhouse
18. DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(std::shared_ptr<DB::TaskRuntimeData>) @ 0x7cfdfa0 in /usr/bin/clickhouse
19. DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::threadFunction() @ 0x7cfdc50 in /usr/bin/clickhouse
20. ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0xbb98490 in /usr/bin/clickhouse
21. void std::__function::__policy_invoker<void ()>::__call_impl<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0xbb9addc in /usr/bin/clickhouse
22. ThreadPoolImpl<std::thread>::worker(std::__list_iterator<std::thread, void*>) @ 0xbb94864 in /usr/bin/clickhouse
23. ? @ 0xbb99d08 in /usr/bin/clickhouse
24. ? @ 0x7d5c8 in /usr/lib/aarch64-linux-gnu/libc.so.6
25. ? @ 0xe5d1c in /usr/lib/aarch64-linux-gnu/libc.so.6
 (version 23.3.2.37 (official build))
2023.09.26 21:25:04.122510 [ 304 ] {} <Error> 0d4ff800-8689-4965-bb20-e4fcbf643a79::6b835db7e1e7a1eae7d8645bd0b5d7bc_314414_411847_1152 (MergeFromLogEntryTask): virtual bool DB::ReplicatedMergeMutateTaskBase::executeStep(): Code: 49. DB::Exception: Invalid number of rows in Chunk column UInt8 position 7: expected 3884, got 1571: While executing MergeTreeSequentialSource. (LOGICAL_ERROR), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0xbaded44 in /usr/bin/clickhouse
1. ? @ 0x81074a8 in /usr/bin/clickhouse
2. DB::Chunk::checkNumRowsIsConsistent() @ 0x112afa38 in /usr/bin/clickhouse
3. DB::MergeTreeSequentialSource::generate() @ 0x10fd8774 in /usr/bin/clickhouse
4. DB::ISource::tryGenerate() @ 0x112bc38c in /usr/bin/clickhouse
5. DB::ISource::work() @ 0x112bbe90 in /usr/bin/clickhouse
6. DB::ExecutionThreadContext::executeTask() @ 0x112d20cc in /usr/bin/clickhouse
7. DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x112c88f8 in /usr/bin/clickhouse
8. DB::PipelineExecutor::executeStep(std::atomic<bool>*) @ 0x112c7e34 in /usr/bin/clickhouse
9. DB::PullingPipelineExecutor::pull(DB::Chunk&) @ 0x112d6e84 in /usr/bin/clickhouse
10. DB::PullingPipelineExecutor::pull(DB::Block&) @ 0x112d713c in /usr/bin/clickhouse
11. DB::MergeTask::ExecuteAndFinalizeHorizontalPart::executeImpl() @ 0x10e83908 in /usr/bin/clickhouse
12. DB::MergeTask::ExecuteAndFinalizeHorizontalPart::execute() @ 0x10e8385c in /usr/bin/clickhouse
13. DB::MergeTask::execute() @ 0x10e87730 in /usr/bin/clickhouse
14. DB::ReplicatedMergeMutateTaskBase::executeImpl() @ 0x110aaef4 in /usr/bin/clickhouse
15. DB::ReplicatedMergeMutateTaskBase::executeStep() @ 0x110aa0f0 in /usr/bin/clickhouse
16. DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(std::shared_ptr<DB::TaskRuntimeData>) @ 0x7cfdfa0 in /usr/bin/clickhouse
17. DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::threadFunction() @ 0x7cfdc50 in /usr/bin/clickhouse
18. ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0xbb98490 in /usr/bin/clickhouse
19. void std::__function::__policy_invoker<void ()>::__call_impl<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0xbb9addc in /usr/bin/clickhouse
20. ThreadPoolImpl<std::thread>::worker(std::__list_iterator<std::thread, void*>) @ 0xbb94864 in /usr/bin/clickhouse
21. ? @ 0xbb99d08 in /usr/bin/clickhouse
22. ? @ 0x7d5c8 in /usr/lib/aarch64-linux-gnu/libc.so.6
23. ? @ 0xe5d1c in /usr/lib/aarch64-linux-gnu/libc.so.6
 (version 23.3.2.37 (official build))
2023.09.26 21:25:04.123117 [ 302 ] {} <Error> 0d4ff800-8689-4965-bb20-e4fcbf643a79::e15c93e836a6e33e7d62f94a6ec427c3_0_33_11 (MergeFromLogEntryTask): virtual bool DB::ReplicatedMergeMutateTaskBase::executeStep(): Code: 33. DB::Exception: Cannot read all data. Bytes read: 57453. Bytes expected: 580237.: (while reading column device_id2): While executing MergeTreeSequentialSource. (CANNOT_READ_ALL_DATA), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0xbaded44 in /usr/bin/clickhouse
1. ? @ 0x7eff3b8 in /usr/bin/clickhouse
2. ? @ 0x7eff2cc in /usr/bin/clickhouse
3. ? @ 0xf997afc in /usr/bin/clickhouse
4. DB::ISerialization::deserializeBinaryBulkWithMultipleStreams(COW<DB::IColumn>::immutable_ptr<DB::IColumn>&, unsigned long, DB::ISerialization::DeserializeBinaryBulkSettings&, std::shared_ptr<DB::ISerialization::DeserializeBinaryBulkState>&, std::unordered_map<String, COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::hash<String>, std::equal_to<String>, std::allocator<std::pair<String const, COW<DB::IColumn>::immutable_ptr<DB::IColumn>>>>*) const @ 0xf95f80c in /usr/bin/clickhouse
5. DB::SerializationNullable::deserializeBinaryBulkWithMultipleStreams(COW<DB::IColumn>::immutable_ptr<DB::IColumn>&, unsigned long, DB::ISerialization::DeserializeBinaryBulkSettings&, std::shared_ptr<DB::ISerialization::DeserializeBinaryBulkState>&, std::unordered_map<String, COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::hash<String>, std::equal_to<String>, std::allocator<std::pair<String const, COW<DB::IColumn>::immutable_ptr<DB::IColumn>>>>*) const @ 0xf985c58 in /usr/bin/clickhouse
6. DB::MergeTreeReaderCompact::readData(DB::NameAndTypePair const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn>&, unsigned long, unsigned long, unsigned long, unsigned long, std::optional<unsigned long>) @ 0x10fc8a90 in /usr/bin/clickhouse
7. DB::MergeTreeReaderCompact::readRows(unsigned long, unsigned long, bool, unsigned long, std::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn>>>&) @ 0x10fc84f0 in /usr/bin/clickhouse
8. DB::MergeTreeSequentialSource::generate() @ 0x10fd8458 in /usr/bin/clickhouse
9. DB::ISource::tryGenerate() @ 0x112bc38c in /usr/bin/clickhouse
10. DB::ISource::work() @ 0x112bbe90 in /usr/bin/clickhouse
11. DB::ExecutionThreadContext::executeTask() @ 0x112d20cc in /usr/bin/clickhouse
12. DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x112c88f8 in /usr/bin/clickhouse
13. DB::PipelineExecutor::executeStep(std::atomic<bool>*) @ 0x112c7e34 in /usr/bin/clickhouse
14. DB::PullingPipelineExecutor::pull(DB::Chunk&) @ 0x112d6e84 in /usr/bin/clickhouse
15. DB::PullingPipelineExecutor::pull(DB::Block&) @ 0x112d713c in /usr/bin/clickhouse
16. DB::MergeTask::ExecuteAndFinalizeHorizontalPart::executeImpl() @ 0x10e83908 in /usr/bin/clickhouse
17. DB::MergeTask::ExecuteAndFinalizeHorizontalPart::execute() @ 0x10e8385c in /usr/bin/clickhouse
18. DB::MergeTask::execute() @ 0x10e87730 in /usr/bin/clickhouse
19. DB::ReplicatedMergeMutateTaskBase::executeImpl() @ 0x110aaef4 in /usr/bin/clickhouse
20. DB::ReplicatedMergeMutateTaskBase::executeStep() @ 0x110aa0f0 in /usr/bin/clickhouse
21. DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(std::shared_ptr<DB::TaskRuntimeData>) @ 0x7cfdfa0 in /usr/bin/clickhouse
22. DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::threadFunction() @ 0x7cfdc50 in /usr/bin/clickhouse
23. ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0xbb98490 in /usr/bin/clickhouse
24. void std::__function::__policy_invoker<void ()>::__call_impl<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0xbb9addc in /usr/bin/clickhouse
25. ThreadPoolImpl<std::thread>::worker(std::__list_iterator<std::thread, void*>) @ 0xbb94864 in /usr/bin/clickhouse
26. ? @ 0xbb99d08 in /usr/bin/clickhouse
27. ? @ 0x7d5c8 in /usr/lib/aarch64-linux-gnu/libc.so.6
28. ? @ 0xe5d1c in /usr/lib/aarch64-linux-gnu/libc.so.6
 (version 23.3.2.37 (official build))
2023.09.26 21:25:04.123266 [ 298 ] {} <Error> 0d4ff800-8689-4965-bb20-e4fcbf643a79::e9528b3aafdb8788edb3ad1bc1bea52c_0_7_3 (MergeFromLogEntryTask): virtual bool DB::ReplicatedMergeMutateTaskBase::executeStep(): Code: 33. DB::Exception: Cannot read all data. Bytes read: 14930. Bytes expected: 239743.: (while reading column dvce_make): While executing MergeTreeSequentialSource. (CANNOT_READ_ALL_DATA), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0xbaded44 in /usr/bin/clickhouse
1. ? @ 0x7eff3b8 in /usr/bin/clickhouse
2. ? @ 0x7eff2cc in /usr/bin/clickhouse
3. ? @ 0xf997afc in /usr/bin/clickhouse
4. DB::ISerialization::deserializeBinaryBulkWithMultipleStreams(COW<DB::IColumn>::immutable_ptr<DB::IColumn>&, unsigned long, DB::ISerialization::DeserializeBinaryBulkSettings&, std::shared_ptr<DB::ISerialization::DeserializeBinaryBulkState>&, std::unordered_map<String, COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::hash<String>, std::equal_to<String>, std::allocator<std::pair<String const, COW<DB::IColumn>::immutable_ptr<DB::IColumn>>>>*) const @ 0xf95f80c in /usr/bin/clickhouse
5. DB::SerializationNullable::deserializeBinaryBulkWithMultipleStreams(COW<DB::IColumn>::immutable_ptr<DB::IColumn>&, unsigned long, DB::ISerialization::DeserializeBinaryBulkSettings&, std::shared_ptr<DB::ISerialization::DeserializeBinaryBulkState>&, std::unordered_map<String, COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::hash<String>, std::equal_to<String>, std::allocator<std::pair<String const, COW<DB::IColumn>::immutable_ptr<DB::IColumn>>>>*) const @ 0xf985c58 in /usr/bin/clickhouse
6. DB::MergeTreeReaderCompact::readData(DB::NameAndTypePair const&, COW<DB::IColumn>::immutable_ptr<DB::IColumn>&, unsigned long, unsigned long, unsigned long, unsigned long, std::optional<unsigned long>) @ 0x10fc8a90 in /usr/bin/clickhouse
7. DB::MergeTreeReaderCompact::readRows(unsigned long, unsigned long, bool, unsigned long, std::vector<COW<DB::IColumn>::immutable_ptr<DB::IColumn>, std::allocator<COW<DB::IColumn>::immutable_ptr<DB::IColumn>>>&) @ 0x10fc84f0 in /usr/bin/clickhouse
8. DB::MergeTreeSequentialSource::generate() @ 0x10fd8458 in /usr/bin/clickhouse
9. DB::ISource::tryGenerate() @ 0x112bc38c in /usr/bin/clickhouse
10. DB::ISource::work() @ 0x112bbe90 in /usr/bin/clickhouse
11. DB::ExecutionThreadContext::executeTask() @ 0x112d20cc in /usr/bin/clickhouse
12. DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x112c88f8 in /usr/bin/clickhouse
13. DB::PipelineExecutor::executeStep(std::atomic<bool>*) @ 0x112c7e34 in /usr/bin/clickhouse
14. DB::PullingPipelineExecutor::pull(DB::Chunk&) @ 0x112d6e84 in /usr/bin/clickhouse
15. DB::PullingPipelineExecutor::pull(DB::Block&) @ 0x112d713c in /usr/bin/clickhouse
16. DB::MergeTask::ExecuteAndFinalizeHorizontalPart::executeImpl() @ 0x10e83908 in /usr/bin/clickhouse
17. DB::MergeTask::ExecuteAndFinalizeHorizontalPart::execute() @ 0x10e8385c in /usr/bin/clickhouse
18. DB::MergeTask::execute() @ 0x10e87730 in /usr/bin/clickhouse
19. DB::ReplicatedMergeMutateTaskBase::executeImpl() @ 0x110aaef4 in /usr/bin/clickhouse
20. DB::ReplicatedMergeMutateTaskBase::executeStep() @ 0x110aa0f0 in /usr/bin/clickhouse
21. DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::routine(std::shared_ptr<DB::TaskRuntimeData>) @ 0x7cfdfa0 in /usr/bin/clickhouse
22. DB::MergeTreeBackgroundExecutor<DB::DynamicRuntimeQueue>::threadFunction() @ 0x7cfdc50 in /usr/bin/clickhouse
23. ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::worker(std::__list_iterator<ThreadFromGlobalPoolImpl<false>, void*>) @ 0xbb98490 in /usr/bin/clickhouse
24. void std::__function::__policy_invoker<void ()>::__call_impl<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false>>::scheduleImpl<void>(std::function<void ()>, long, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0xbb9addc in /usr/bin/clickhouse
25. ThreadPoolImpl<std::thread>::worker(std::__list_iterator<std::thread, void*>) @ 0xbb94864 in /usr/bin/clickhouse
26. ? @ 0xbb99d08 in /usr/bin/clickhouse
27. ? @ 0x7d5c8 in /usr/lib/aarch64-linux-gnu/libc.so.6
28. ? @ 0xe5d1c in /usr/lib/aarch64-linux-gnu/libc.so.6
 ```