ID: 15539
Title: "Missing columns" error in CREATE VIEW AS SELECT although SELECT alone works
Description:
**How to reproduce**
This may be related to issue #9715 as I have a problem of column/alias name clash that I try to solve by using fully qualified table_alias.column. This works for my SELECT statement but if it fails if I try to create a view with the same SELECT.

```
root@chhost1:/# clickhouse-client
ClickHouse client version 20.5.4.40 (official build).
Connecting to localhost:9000 as user default.
Connected to ClickHouse server version 20.5.4 revision 54435.

CREATE TABLE IF NOT EXISTS vmr_global_variables(
   uts    DateTime DEFAULT now(),
   id     UInt64,
   nvalue Float64,
   value_isnull UInt8
)
    ENGINE = ReplacingMergeTree(uts)
        ORDER BY (id);

SELECT max(uts) AS udate, id
     , if(argMax(value_isnull, uts)=1,null,argMax(nvalue, uts)) AS nvalue
     , argMax(value_isnull, uts) AS value_isnull
FROM vmr_global_variables
GROUP BY id;

=> Code: 184. DB::Exception: Received from localhost:9000. DB::Exception: Aggregate function argMax(value_isnull, uts) is found inside another aggregate function in query.

```
Same request with a table alias to resolve ambiguity:

```
SELECT max(uts) AS udate, id
     , if(argMax(t.value_isnull, uts)=1,null,argMax(nvalue, uts)) AS nvalue
     , argMax(t.value_isnull, uts) AS value_isnull
FROM vmr_global_variables t
GROUP BY id;

=> Ok

```
Create a view based on this request:

```
CREATE OR REPLACE VIEW vma_global_variables
AS
SELECT max(uts) AS udate, id
     , if(argMax(t.value_isnull, uts)=1,null,argMax(nvalue, uts)) AS nvalue
     , argMax(t.value_isnull, uts) AS value_isnull
FROM vmr_global_variables t
GROUP BY id;

=> Code: 47. DB::Exception: Received from localhost:9000. DB::Exception: Missing columns: 't.value_isnull' while processing query: 'SELECT max(uts) AS udate, id, if(argMax(t.value_isnull, uts) = 1, NULL, argMax(nvalue, uts)) AS nvalue, argMax(t.value_isnull, uts) AS value_isnull FROM default.vmr_global_variables GROUP BY id', required columns: 'id' 'uts' 't.value_isnull' 'nvalue', source columns: 'nvalue' 'value_isnull' 'id' 'uts'.

```