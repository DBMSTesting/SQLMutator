ID: 5287
Title: Handle Broken HTTP Pooled Connections For Replication
Description:
While investigating #4970 I noticed that replicas are using a connection pool to manage their connections to the mater nodes.

https://github.com/yandex/ClickHouse/blob/98359a6a0978dfa3d7e171ad8c30db9e814a8b9d/dbms/src/Storages/StorageReplicatedMergeTree.cpp#L2766-L2770
https://github.com/yandex/ClickHouse/blob/98359a6a0978dfa3d7e171ad8c30db9e814a8b9d/dbms/src/Storages/MergeTree/DataPartsExchange.cpp#L189-L197

We're fetching the pool from a cache keyed by the host:
https://github.com/yandex/ClickHouse/blob/98359a6a0978dfa3d7e171ad8c30db9e814a8b9d/dbms/src/IO/HTTPCommon.cpp#L153

But on that connection, `reset` never gets called, even though it should be:
https://pocoproject.org/docs/Poco.Net.HTTPClientSession.html#21613

In the code, both `receiveResponse` and `sendRequest` get called many times without being wrapped in a try/catch block or otherwise doing some error checking that would need to be followed-up with a `reset()` call.

I think this may be why people are seeing issues with Kubernetes when restarting pods or in any dynamic dns deployment.  My C++ is not that great though, so please let me know if I'm barking up the wrong tree.  :dog: 

Thanks for the awesome work!