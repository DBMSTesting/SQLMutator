ID: 1393
Title: UUID and replication
Description:
The replication doesn't work in case of using UUID types, CH version 1.1.54284 

```
database:               stats
table:                  events_local
replica_name:           ch1
position:               1
node_name:              queue-0000000006
type:                   MERGE_PARTS
create_time:            2017-08-24 10:31:06
required_quorum:        0
source_replica:         ch1
new_part_name:          20170821_20170824_0_5_1
parts_to_merge:         ['20170824_20170824_0_0_0','20170824_20170824_1_1_0','20170821_20170824_2_2_0','20170824_20170824_3_3_0','20170824_20170824_4_4_0','20170824_20170824_5_5_0']
is_detach:              0
is_currently_executing: 0
num_tries:              55
last_exception:         Code: 169, e.displayText() = DB::Exception: Bad type of Field, e.what() = DB::Exception
last_attempt_time:      2017-08-24 10:32:46
num_postponed:          0
postpone_reason:        
last_postpone_time:     0000-00-00 00:00:00
```

and stacktrace:

```
2017.08.24 10:33:18.209109 [ 9 ] <Error> DB::StorageReplicatedMergeTree::queueTask()::<lambda(DB::StorageReplicatedMergeTree::LogEntryPtr&)>: Code: 169, e.displayText() = DB::Exception: Bad type of Field, e.what() = DB::Exception, Stack trace:

0. clickhouse-server(StackTrace::StackTrace()+0x16) [0x2bed4a6]
1. clickhouse-server(std::decay<DB::FieldVisitorToString>::type::ResultType DB::applyVisitor<DB::FieldVisitorToString, DB::Field>(DB::FieldVisitorToString&&, DB::Field&&)+0x14d) [0x2ed33bd]
2. clickhouse-server(DB::CollapsingSortedBlockInputStream::reportIncorrectData()+0x323) [0x2ed09c3]
3. clickhouse-server(DB::CollapsingSortedBlockInputStream::insertRows(std::vector<DB::IColumn*, std::allocator<DB::IColumn*> >&, unsigned long&, bool)+0x3d8) [0x2ed1928]
4. clickhouse-server(void DB::CollapsingSortedBlockInputStream::merge<DB::SortCursor>(std::vector<DB::IColumn*, std::allocator<DB::IColumn*> >&, std::priority_queue<DB::SortCursor, std::vector<DB::SortCursor, std::allocator<DB::SortCursor> >, std::less<std::vector<DB::SortCursor, std::allocator<DB::SortCursor> >::value_type> >&)+0x660) [0x2ed71f0]
5. clickhouse-server(DB::CollapsingSortedBlockInputStream::readImpl()+0x3f6) [0x2ed22e6]
6. clickhouse-server(DB::IProfilingBlockInputStream::read()+0x221) [0x255db11]
7. clickhouse-server(DB::MergeTreeDataMerger::mergePartsToTemporaryPart(std::vector<std::shared_ptr<DB::MergeTreeDataPart const>, std::allocator<std::shared_ptr<DB::MergeTreeDataPart const> > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, DB::MergeListEntry&, unsigned long, long, DB::DiskSpaceMonitor::Reservation*, bool)+0x2aa7) [0x2e078f7]
8. clickhouse-server(DB::StorageReplicatedMergeTree::executeLogEntry(DB::ReplicatedMergeTreeLogEntry const&)+0xfd2) [0x2ce9c72]
9. clickhouse-server() [0x2cec68d]
10. clickhouse-server(DB::ReplicatedMergeTreeQueue::processEntry(std::function<std::shared_ptr<zkutil::ZooKeeper> ()>, std::shared_ptr<DB::ReplicatedMergeTreeLogEntry>&, std::function<bool (std::shared_ptr<DB::ReplicatedMergeTreeLogEntry>&)>)+0x4a) [0x2d7bc6a]
11. clickhouse-server(DB::StorageReplicatedMergeTree::queueTask()+0x150) [0x2cd7540]
12. clickhouse-server(DB::BackgroundProcessingPool::threadFunction()+0x3de) [0x2de074e]
13. clickhouse-server() [0x399ca5f]
14. /lib/x86_64-linux-gnu/libpthread.so.0(+0x76ba) [0x7f6568e866ba]
15. /lib/x86_64-linux-gnu/libc.so.6(clone+0x6d) [0x7f65684a73dd]
```