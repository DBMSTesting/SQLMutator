ID: 7986
Title: Crash if OptimizedRegularExpression: cannot compile re2
Description:
**Describe the bug or unexpected behaviour**
`DB::Exception: OptimizedRegularExpression: cannot compile re2`

**How to reproduce**
`version 19.15.2.2 (official build)`

* Queries to run that lead to unexpected result
```
"SELECT Path FROM graphite_index WHERE ((Level=20005) AND (Path LIKE 'summarize(maxSeries(daemon.prod.geo.%' AND match(Path, '^summarize(maxSeries(daemon[.]prod[.]geo[.]([^.]*?)[.]crash)([^.]*?)[.]?$'))) AND (Date='1970-02-12') GROUP BY Path"
```

**Expected behavior**
Just error and no crash

**Error message and/or stacktrace**
```
2019.12.02 15:39:04.485568 [ 84 ] {4ebb8c752284b4d719672a631fb98aaa::29c503ba28578c17} <Error> HTTPHandler: Code: 427, e.displayText() = DB::Exception: OptimizedRegularExpression: cannot compile re2: ^summarize(maxSeries(daemon[.]prod[.]geo[.]([^.]*?)[.]crash)([^.]*?)[.]?$, error: missing ): ^summarize(maxSeries(daemon[.]prod[.]geo[.]([^.]*?)[.]crash)([^.]*?)[.]?$. Look at https://github.com/google/re2/wiki/Syntax for reference., Stack trace:

0. 0x5562f4a687a0 StackTrace::StackTrace() /usr/bin/clickhouse
1. 0x5562f4a68575 DB::Exception::Exception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int) /usr/bin/clickhouse
2. 0x5562f8905ae3 OptimizedRegularExpressionImpl<false>::OptimizedRegularExpressionImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int) /usr/bin/clickhouse
3. 0x5562f5286dfa std::unique_ptr<OptimizedRegularExpressionImpl<false>, DB::SimpleObjectPool<OptimizedRegularExpressionImpl<false> >::Deleter> DB::Regexps::get<false, true>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /usr/bin/clickhouse
4. 0x5562f52892d0 DB::MatchImpl<false, false>::vector_constant(DB::PODArray<unsigned char, 4096ul, Allocator<false, false>, 15ul, 16ul> const&, DB::PODArray<unsigned long, 4096ul, Allocator<false, false>, 15ul, 16ul> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, DB::PODArray<unsigned char, 4096ul, Allocator<false, false>, 15ul, 16ul>&) /usr/bin/clickhouse
5. 0x5562f5289972 DB::FunctionsStringSearch<DB::MatchImpl<false, false>, DB::NameMatch>::executeImpl(DB::Block&, std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long, unsigned long) /usr/bin/clickhouse
6. 0x5562f7bebae4 DB::PreparedFunctionImpl::execute(DB::Block&, std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long, unsigned long, bool) /usr/bin/clickhouse
7. 0x5562f84e5bb1 DB::ExpressionAction::execute(DB::Block&, bool) const /usr/bin/clickhouse
8. 0x5562f84e72c5 DB::ExpressionActions::execute(DB::Block&, bool) const /usr/bin/clickhouse
9. 0x5562f8387c68 DB::FilterBlockInputStream::readImpl() /usr/bin/clickhouse
10. 0x5562f7c74447 DB::IBlockInputStream::read() /usr/bin/clickhouse
11. 0x5562f838044f DB::ExpressionBlockInputStream::readImpl() /usr/bin/clickhouse
12. 0x5562f7c74447 DB::IBlockInputStream::read() /usr/bin/clickhouse
13. 0x5562f83b9bc3 DB::ParallelInputsProcessor<DB::ParallelAggregatingBlockInputStream::Handler>::thread(std::shared_ptr<DB::ThreadGroupStatus>, unsigned long) /usr/bin/clickhouse
14. 0x5562f83ba62d ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::ParallelInputsProcessor<DB::ParallelAggregatingBlockInputStream::Handler>::*)(std::shared_ptr<DB::ThreadGroupStatus>, unsigned long), DB::ParallelInputsProcessor<DB::ParallelAggregatingBlockInputStream::Handler>*, std::shared_ptr<DB::ThreadGroupStatus>, unsigned long&>(void (DB::ParallelInputsProcessor<DB::ParallelAggregatingBlockInputStream::Handler>::*&&)(std::shared_ptr<DB::ThreadGroupStatus>, unsigned long), DB::ParallelInputsProcessor<DB::ParallelAggregatingBlockInputStream::Handler>*&&, std::shared_ptr<DB::ThreadGroupStatus>&&, unsigned long&)::{lambda()#1}::operator()() const /usr/bin/clickhouse
15. 0x5562f4ab177c ThreadPoolImpl<std::thread>::worker(std::_List_iterator<std::thread>) /usr/bin/clickhouse
16. 0x5562fa776df0 ? /usr/bin/clickhouse
17. 0x7f13973d56db start_thread /lib/x86_64-linux-gnu/libpthread-2.27.so
18. 0x7f1396cf288f clone /build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97
```
