ID: 16669
Title: mysqlxx::ConnectionFailed: Unknown SSL error ((nullptr):3306)
Description:
Hi,

When running a lot simultaneous queries, I sometimes have this error ;

2020.11.04 13:59:05.780190 [ 28010 ] {4ba503de-ff9a-4347-8549-533dc0409650} <Error> DynamicQueryHandler: Poco::Exception. Code: 1000, e.code() = 2026, e.displayText() = mysqlxx::ConnectionFailed: Unknown SSL error ((nullptr):3306), Stack trace (when copying this message, always include the lines below):

```
0. Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x18e1b360 in /usr/bin/clickhouse
1. ? @ 0x18c95d86 in /usr/bin/clickhouse
2. mysqlxx::Pool::allocConnection(bool) @ 0x18c9f361 in /usr/bin/clickhouse
3. mysqlxx::Pool::initialize() @ 0x18c9f70d in /usr/bin/clickhouse
4. mysqlxx::Pool::get() @ 0x18c9f918 in /usr/bin/clickhouse
5. DB::TableFunctionMySQL::executeImpl(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const @ 0x15288f50 in /usr/bin/clickhouse
6. DB::ITableFunction::execute(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const @ 0x1588d0d1 in /usr/bin/clickhouse
7. DB::Context::executeTableFunction(std::__1::shared_ptr<DB::IAST> const&) @ 0x1585ad9e in /usr/bin/clickhouse
8. DB::JoinedTables::getLeftTableStorage() @ 0x15cffb64 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, s$
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_tra$
11. DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, $
12. DB::StorageView::read(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::$
13. DB::ReadFromStorageStep::ReadFromStorageStep(std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl>, std::__1::shared_ptr<DB::StorageInMemoryMetadata const>&, DB::SelectQueryOptions, std::__1::shared_ptr<DB::IStorage>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<$
14. DB::InterpreterSelectQuery::executeFetchColumns(DB::QueryProcessingStage::Enum, DB::QueryPlan&, std::__1::shared_ptr<DB::PrewhereInfo> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_t$
15. DB::InterpreterSelectQuery::executeImpl(DB::QueryPlan&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>) @ 0x15b36a23 in /usr/bin/clickhouse
16. DB::InterpreterSelectQuery::buildQueryPlan(DB::QueryPlan&) @ 0x15b38514 in /usr/bin/clickhouse
17. DB::InterpreterSelectWithUnionQuery::buildQueryPlan(DB::QueryPlan&) @ 0x15cb2258 in /usr/bin/clickhouse
18. DB::InterpreterSelectWithUnionQuery::execute() @ 0x15cb242a in /usr/bin/clickhouse
19. DB::SubqueryForSet::makeSource(std::__1::shared_ptr<DB::InterpreterSelectWithUnionQuery>&, std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::all$
20. DB::SelectQueryExpressionAnalyzer::makeTableJoin(DB::ASTTablesInSelectQueryElement const&) @ 0x15b738bc in /usr/bin/clickhouse
21. DB::SelectQueryExpressionAnalyzer::appendJoin(DB::ExpressionActionsChain&) @ 0x15b73d07 in /usr/bin/clickhouse
22. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterInfo> const&, DB::Block const&) @ 0x15b742ba in /usr/bin/clickhouse
23. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x15b2aa8d in /usr/bin/clickhouse
24. ? @ 0x15b3144a in /usr/bin/clickhouse
25. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, $
26. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_tra$
27. DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, $
28. DB::JoinedTables::makeLeftTableSubquery(DB::SelectQueryOptions const&) @ 0x15cff9e4 in /usr/bin/clickhouse
29. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, $
30. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_tra$
31. DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, $
 (version 20.9.3.45 (official build))
2020.11.04 13:59:20.324682 [ 13960 ] {69d4445f-5ef4-48c5-b0af-88b4bcb40f08} <Error> Application: mysqlxx::ConnectionFailed


```
The query is doing a select on a Clickhouse table with a join on a view.
In this view I am doing a select ... **FROM mysql**('10.x.x.x:3306', db, table, user, pwd) 

On a regular basis (normal load) we do not have the issue, it's only during some load tests.

Is it an issue related to mysql or clickhouse ?

Thanks,
Aubry