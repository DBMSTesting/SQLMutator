ID: 16805
Title: toStartOfHour(ts) in table ORDER BY prevent's from using String or UInt32 for comparation in WHERE
Description:
**Describe the bug**
You can't compare DateTime with string or UInt32 in case you have used some time functions over DateTime in table ORDER BY, because they can't be used against string or UInt32.

**How to reproduce**
Clickhouse 20.8
```
CREATE TABLE test_table_ts (timestamp DateTime) ENGINE=MergeTree() PARTITION BY tuple() ORDER BY (toStartOfHour(timestamp));
SELECT * FROM test_table_ts WHERE timestamp BETWEEN 31231231 AND 1321313123;
executeQuery: Code: 43, e.displayText() = DB::Exception: Illegal type UInt32 of argument of function toStartOfHour. Should be a date or a date with time (version 20.8.3.18 (official build)) (from 127.0.0.1:44624) (in query: SELECT * FROM test_table_ts WHERE timestamp BETWEEN 31231231 AND 1321313123;), Stack trace (when copying this message, always include the lines below):
```

**Error message and/or stacktrace**
```
executeQuery: Code: 43, e.displayText() = DB::Exception: Illegal type UInt32 of argument of function toStartOfHour. Should be a date or a date with time (version 20.8.3.18 (official build)) (from 127.0.0.1:44624) (in query: SELECT * FROM test_table_ts WHERE timestamp BETWEEN 31231231 AND 1321313123;), Stack trace (when copying this message, always include the lines below):

0. Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x1a80cd70 in /usr/bin/clickhouse
1. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0xff9e75d in /usr/bin/clickhouse
2. DB::FunctionDateOrDateTimeToSomething<DB::DataTypeDateTime, DB::ToStartOfHourImpl>::getReturnTypeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&) const @ 0x140bcdfb in /usr/bin/clickhouse
3. DB::DefaultOverloadResolver::getReturnType(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&) const @ 0x11340515 in /usr/bin/clickhouse
4. DB::FunctionOverloadResolverAdaptor::getReturnTypeWithoutLowCardinality(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&) const @ 0x113672da in /usr/bin/clickhouse
5. DB::FunctionOverloadResolverAdaptor::getReturnType(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&) const @ 0x113676d5 in /usr/bin/clickhouse
6. DB::FunctionOverloadResolverAdaptor::build(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&) const @ 0x1136d57c in /usr/bin/clickhouse
7. DB::KeyCondition::canConstantBeWrappedByMonotonicFunctions(std::__1::shared_ptr<DB::IAST> const&, unsigned long&, std::__1::shared_ptr<DB::IDataType const>&, DB::Field&, std::__1::shared_ptr<DB::IDataType const>&) @ 0x17bb1c49 in /usr/bin/clickhouse
8. DB::KeyCondition::tryParseAtomFromAST(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::Block&, DB::KeyCondition::RPNElement&) @ 0x17bb7fb3 in /usr/bin/clickhouse
9. DB::KeyCondition::traverseAST(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::Block&) @ 0x17bb90c0 in /usr/bin/clickhouse
10. DB::KeyCondition::traverseAST(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::Block&) @ 0x17bb8e22 in /usr/bin/clickhouse
11. DB::KeyCondition::KeyCondition(DB::SelectQueryInfo const&, DB::Context const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::ExpressionActions> const&) @ 0x17bb997c in /usr/bin/clickhouse
12. DB::MergeTreeDataSelectExecutor::readFromParts(std::__1::vector<std::__1::shared_ptr<DB::IMergeTreeDataPart const>, std::__1::allocator<std::__1::shared_ptr<DB::IMergeTreeDataPart const> > >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo const&, DB::Context const&, unsigned long, unsigned int, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, long, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, long> > > const*) const @ 0x17c87b24 in /usr/bin/clickhouse
13. DB::MergeTreeDataSelectExecutor::read(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo const&, DB::Context const&, unsigned long, unsigned int, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, long, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, long> > > const*) const @ 0x17c8d192 in /usr/bin/clickhouse
14. DB::StorageMergeTree::read(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::SelectQueryInfo const&, DB::Context const&, DB::QueryProcessingStage::Enum, unsigned long, unsigned int) @ 0x179dfcb4 in /usr/bin/clickhouse
15. DB::ReadFromStorageStep::ReadFromStorageStep(std::__1::shared_ptr<DB::RWLockImpl::LockHolderImpl>, std::__1::shared_ptr<DB::StorageInMemoryMetadata const>&, DB::SelectQueryOptions, std::__1::shared_ptr<DB::IStorage>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, DB::SelectQueryInfo const&, std::__1::shared_ptr<DB::Context>, DB::QueryProcessingStage::Enum, unsigned long, unsigned long) @ 0x181e870a in /usr/bin/clickhouse
16. DB::InterpreterSelectQuery::executeFetchColumns(DB::QueryProcessingStage::Enum, DB::QueryPlan&, std::__1::shared_ptr<DB::PrewhereInfo> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x174b9321 in /usr/bin/clickhouse
17. DB::InterpreterSelectQuery::executeImpl(DB::QueryPlan&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>) @ 0x174bd1b2 in /usr/bin/clickhouse
18. DB::InterpreterSelectQuery::buildQueryPlan(DB::QueryPlan&) @ 0x174be964 in /usr/bin/clickhouse
19. DB::InterpreterSelectWithUnionQuery::buildQueryPlan(DB::QueryPlan&) @ 0x1763b478 in /usr/bin/clickhouse
20. DB::InterpreterSelectWithUnionQuery::execute() @ 0x1763b64a in /usr/bin/clickhouse
21. ? @ 0x177d9262 in /usr/bin/clickhouse
22. DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool) @ 0x177dabc2 in /usr/bin/clickhouse
23. DB::TCPHandler::runImpl() @ 0x17ea1a25 in /usr/bin/clickhouse
24. DB::TCPHandler::run() @ 0x17ea2790 in /usr/bin/clickhouse
25. Poco::Net::TCPServerConnection::start() @ 0x1a72abdb in /usr/bin/clickhouse
26. Poco::Net::TCPServerDispatcher::run() @ 0x1a72b06b in /usr/bin/clickhouse
27. Poco::PooledThread::run() @ 0x1a8a9b46 in /usr/bin/clickhouse
28. Poco::ThreadImpl::runnableEntry(void*) @ 0x1a8a4f40 in /usr/bin/clickhouse
29. start_thread @ 0x9609 in /usr/lib/x86_64-linux-gnu/libpthread-2.31.so
30. clone @ 0x122293 in /usr/lib/x86_64-linux-gnu/libc-2.31.so


Received exception from server (version 20.8.3):
Code: 43. DB::Exception: Received from localhost:9000. DB::Exception: Illegal type UInt32 of argument of function toStartOfHour. Should be a date or a date with time.

0 rows in set. Elapsed: 0.003 sec.
```
