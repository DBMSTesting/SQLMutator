ID: 19907
Title: [Unexpected behaviour] Bad size of marks file - Data Skipping Indexes
Description:
**Problem Statement:**
I am using the following table structure

> CREATE TABLE dbpolaris1.KES_BPARTYSTATS_1612165944757_BATCH_local
> (
>     `imsi` Int64 CODEC(Delta(8), Default),
>     `nparty` String,
>     `startdate` DateTime CODEC(Delta(4), Default),
>     `enddate` DateTime CODEC(Delta(4), Default),
>     `count` Int64 CODEC(T64, Default),
>     `type` LowCardinality(String),
>     INDEX imsi_index1 imsi TYPE minmax GRANULARITY 3,
>     INDEX startdate_index2 startdate TYPE minmax GRANULARITY 1,
>     INDEX enddate_index3 enddate TYPE minmax GRANULARITY 1
> )
> ENGINE = MergeTree()
> PARTITION BY toYYYYMMDD(startdate)
> ORDER BY (imsi, startdate, type, nparty)
> SETTINGS index_granularity = 8192
> 


After ingesting the data when we fire below query to fetch result :
`select sum(count) from KES_BPARTYSTATS_1612165944757_BATCH_local where imsi in (422029770707007) and type='V' and ((startdate<'2020-11-25 00:21:13' or startdate<'2020-12-02 00:21:13') and (enddate>='2020-11-25 00:21:13' or enddate>='2020-12-02 00:21:13'))
`

After firing the query we are getting the error :

> Received exception from server (version 20.12.5):
> Code: 246. DB::Exception: Received from 10.49.4.108:9100. DB::Exception: Bad size of marks file '/var/lib/clickhouse/store/3b5/3b5fa367-da5a-419a-a5b6-c1e4a4eddb4f/20201119_108_814_1/skp_idx_imsi_index1.mrk3': 48, must be: 24. 
> 

In the table after ingestion, we have about **12 million** rows.
**Is there any reason or fix for it?**
Also, this problem seems to resolve if I change `INDEX imsi_index1 imsi TYPE minmax GRANULARITY 3` with `INDEX imsi_index1 imsi TYPE minmax GRANULARITY 1`. 


**ClickHouse Version Used:**

> ClickHouse client version 20.12.5.14 (official build).
> Connected to ClickHouse server version 20.12.5 revision 54442
> 

Error logs :

> 2021.02.01 12:04:01.014491 [ 11081 ] {f6011046-7dc5-4e13-ae76-60bda588cb33} <Error> TCPHandler: Code: 246, e.displayText() = DB::Exception: Received from 10.49.4.108:9100. DB::Exception: Bad size of marks file '/var/lib/clickhouse/store/3b5/3b5fa367-da5a-419a-a5b6-c1e4a4eddb4f/20201119_108_814_1/skp_idx_imsi_index1.mrk3': 48, must be: 24. Stack trace:
> 
> 0. DB::MergeTreeMarksLoader::loadMarksImpl() @ 0xe5ccc4c in ?
> 1. DB::MergeTreeMarksLoader::loadMarks() @ 0xe5cbef9 in ?
> 2. DB::MergeTreeReaderStream::seekToMark(unsigned long) @ 0xe5d3cff in ?
> 3. DB::MergeTreeDataSelectExecutor::filterMarksUsingIndex(std::__1::shared_ptr<DB::IMergeTreeIndex const>, std::__1::shared_ptr<DB::IMergeTreeIndexCondition>, std::__1::shared_ptr<DB::IMergeTreeDataPart const>, std::__1::deque<DB::MarkRange, std::__1::allocator<DB::MarkRange> > const&, DB::Settings const&, DB::MergeTreeReaderSettings const&, Poco::Logger*) @ 0xe571386 in ?
> 4. ? @ 0xe56492e in ?
> 5. ? @ 0xe574fd7 in ?
> 6. ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0x7dc870d in ?
> 7. ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()&&...)::'lambda'()::operator()() @ 0x7dcac6f in ?
> 8. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x7dc5b3d in ?
> 9. ? @ 0x7dc96f3 in ?
> 10. start_thread @ 0x3f8b2079d1 in ?
> 11. clone @ 0x3f8aee89dd in ?
> : While executing Remote, Stack trace:
> 
> 0. DB::readException(DB::ReadBuffer&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x7ddf301 in ?
> 1. DB::Connection::receiveException() @ 0xe6b5b34 in ?
> 2. DB::Connection::receivePacket() @ 0xe6bc753 in ?
> 3. DB::MultiplexedConnections::receivePacketUnlocked() @ 0xe6cc5ea in ?
> 4. DB::MultiplexedConnections::receivePacket() @ 0xe6cc512 in ?
> 5. DB::RemoteQueryExecutor::read() @ 0xd8b5355 in ?
> 6. DB::RemoteSource::generate() @ 0xe8d640a in ?
> 7. DB::ISource::work() @ 0xe77e93a in ?
> 8. DB::SourceWithProgress::work() @ 0xe8dbeba in ?
> 9. ? @ 0xe7b747c in ?
> 10. DB::PipelineExecutor::executeStepImpl(unsigned long, unsigned long, std::__1::atomic<bool>*) @ 0xe7b45a7 in ?
> 11. ? @ 0xe7b9555 in ?
> 12. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x7dc5b3d in ?
> 13. ? @ 0x7dc96f3 in ?
> 14. start_thread @ 0x3f8b2079d1 in ?
> 15. clone @ 0x3f8aee89dd in ?
> 


