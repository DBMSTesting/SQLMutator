ID: 53157
Title: Missing columns on: INSERT INTO ... SELECT c1 FROM file('test.parquet') WHERE c2>0
Description:
**Describe what's wrong**

Loading data **from a Parquet file** and adding to a table using **INSERT INTO** with a **WHERE condition on an unselected column** makes ClickHouse fail with a `Missing columns` exception, even if the column is in the Parquet file.

https://fiddle.clickhouse.com/28ad92b3-5850-4672-80e4-0142c51dd2b4

**Does it reproduce on recent release?**

It does. It is reproducible on the latest stable (official build).

**How to reproduce**

* Which ClickHouse server version to use: 23.8.1.1048
* Which interface to use, if matters: CLI
* Non-default settings, if any: none
* `CREATE TABLE` statements for all tables involved: `CREATE TABLE test(c1 INT) ENGINE = Memory;`
* Sample data for all these tables, use [clickhouse-obfuscator](https://github.com/ClickHouse/ClickHouse/blob/master/programs/obfuscator/Obfuscator.cpp#L42-L80) if necessary: not necessary, as the table is empty
* Queries to run that lead to unexpected result:

```sql
SELECT c1, c2
FROM VALUES((1, 2))
INTO OUTFILE 'test.parquet';

INSERT INTO test
SELECT c1
FROM file('test.parquet')
WHERE c2 > 0;
```

**Expected behavior**

The query should just work.

**Error message and/or stacktrace**

```
Code: 47. DB::Exception: Missing columns: 'c2' while processing query: 'SELECT c1 FROM file('test.parquet') WHERE c2 > 0', required columns: 'c1' 'c2', maybe you meant: 'c1'. (UNKNOWN_IDENTIFIER)
```

**Additional context**

There is no error if the following cases:
1. `INSERT INTO` is not used
2. `WHERE` is not used
3. `WHERE` only refers to selected columns
4. File is a CSV instead of a Parquet

Changing the ENGINE to MergeTree or PostgreSQL does not seem to have any effect.

Workaround:
```sql
INSERT INTO test
WITH input AS (
  SELECT c1, c2
  FROM file('test.parquet')
  WHERE c2 > 0
)
SELECT c1
FROM input
```