ID: 18894
Title: Alias Clashes Reported when Left Join Multiple Tables
Description:
(you don't have to strictly follow this form)

**Describe the bug**

When
1. Alias name equals table column name
2. Multiple left join involved
Alias clash reported

**How to reproduce**

create 3 tables with the following statements:
```
CREATE TABLE test.base
(
    `id` UInt64,
    `id2` UInt64,
    `d` UInt64,
    `value` UInt64
)
ENGINE = MergeTree()
PARTITION BY d
ORDER BY (id, id2, d)

CREATE TABLE test.derived1
(
    `id1` UInt64,
    `d1` UInt64,
    `value1` UInt64
)
ENGINE = MergeTree()
PARTITION BY d1
ORDER BY (id1, d1)

CREATE TABLE test.derived2
(
    `id2` UInt64,
    `d2` UInt64,
    `value2` UInt64
)
ENGINE = MergeTree()
PARTITION BY d2
ORDER BY (id2, d2)
```
run the query below:
```
SELECT
    base.id AS `base.id`,
    derived2.value2 AS `derived2.value2`,
    derived1.value1 AS `derived1.value1`
FROM test.base AS base
LEFT JOIN test.derived2 AS derived2 ON base.id2 = derived2.id2
LEFT JOIN test.derived1 AS derived1 ON base.id = derived1.id1
```
One left join SQL works
```
SELECT
    base.id AS `base.id`,
    derived1.value1 AS `derived1.value1`
FROM test.base AS base
LEFT JOIN test.derived1 AS derived1 ON base.id = derived1.id1

Query id: 9341a65f-98c8-4868-afc1-998c0435e4e4

Ok.
```
**Error message and/or stacktrace**

Received exception from server (version 20.11.5):
Code: 352. DB::Exception: Received from 127.0.0.1:9000. DB::Exception: Alias clashes with qualified column 'base.id': While processing SELECT base.id AS `base.id`, derived2.value2 AS `derived2.value2`, derived1.value1 AS `derived1.value1` FROM test.base AS base LEFT JOIN test.derived2 AS derived2 ON base.id2 = derived2.id2 LEFT JOIN test.derived1 AS derived1 ON base.id = derived1.id1.

0 rows in set. Elapsed: 0.009 sec.

**Additional context**

This was found when using Looker+Clickhouse. Change the table column alias works.
