ID: 69762
Title: FULL OUTER JOIN with new JSON type logical error
Description:
**Describe the bug**
This may be a follow-up to https://github.com/ClickHouse/ClickHouse/issues/68679 There's a block stream mismatch with the new JSON type.

**How to reproduce**
Run Fiddle:

https://fiddle.clickhouse.com/31cc615d-a6eb-496c-9dca-0bf599042886

Stack trace:
```
<Fatal> : Logical error: 'Block structure mismatch in joined block stream: different columns:
__table3.c1.Float32 Dynamic Dynamic(size = 0, Variant(size = 0, UInt8(size = 0), UInt64(size = 0), String(size = 0)))
__table3.c1.Float32 Dynamic Dynamic(size = 1, Variant(size = 1, UInt8(size = 1), UInt64(size = 1), String(size = 0)))'.
<Fatal> : Stack trace (when copying this message, always include the lines below):

0. contrib/llvm-project/libcxx/include/exception:141: Poco::Exception::Exception(String const&, int) @ 0x000000003721cf91
1. src/Common/Exception.cpp:109: DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) @ 0x000000001e50a36d
2. src/Common/Exception.h:110: DB::Exception::Exception(PreformattedMessage&&, int) @ 0x000000000e683066
3. src/Common/Exception.h:128: DB::Exception::Exception<std::basic_string_view<char, std::char_traits<char>>&, String, String>(int, FormatStringHelperImpl<std::type_identity<std::basic_string_view<char, std::char_traits<char>>&>::type, std::type_identity<String>::type, std::type_identity<String>::type>, std::basic_string_view<char, std::char_traits<char>>&, String&&, String&&) @ 0x000000002a0dd981
4. src/Core/Block.cpp:36: void DB::onError<void, std::basic_string_view<char, std::char_traits<char>>&, String, String>(int, FormatStringHelperImpl<std::type_identity<std::basic_string_view<char, std::char_traits<char>>&>::type, std::type_identity<String>::type, std::type_identity<String>::type>, std::basic_string_view<char, std::char_traits<char>>&, String&&, String&&) @ 0x000000002a0d7fc9
5. src/Core/Block.cpp:84: void DB::checkColumnStructure<void>(DB::ColumnWithTypeAndName const&, DB::ColumnWithTypeAndName const&, std::basic_string_view<char, std::char_traits<char>>, bool, int) @ 0x000000002a0c7607
6. src/Core/Block.cpp:128: void DB::checkBlockStructure<void>(DB::Block const&, DB::Block const&, std::basic_string_view<char, std::char_traits<char>>, bool) @ 0x000000002a0d42ea
7. src/Interpreters/HashJoin/HashJoin.cpp:539: DB::HashJoin::addBlockToJoin(DB::Block const&, bool) @ 0x000000002c95962e
8. src/Processors/Transforms/JoiningTransform.cpp:308: DB::FillingRightJoinSideTransform::work() @ 0x000000002fef8377
9. src/Processors/Executors/ExecutionThreadContext.cpp:47: DB::ExecutionThreadContext::executeTask() @ 0x000000002f8e980e
10. src/Processors/Executors/PipelineExecutor.cpp:283: DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x000000002f8cdfb0
11. src/Processors/Executors/PipelineExecutor.cpp:249: DB::PipelineExecutor::executeSingleThread(unsigned long) @ 0x000000002f8ce9ea
12. src/Processors/Executors/PipelineExecutor.cpp:424: DB::PipelineExecutor::executeImpl(unsigned long, bool) @ 0x000000002f8cba9b
13. src/Processors/Executors/PipelineExecutor.cpp:120: DB::PipelineExecutor::execute(unsigned long, bool) @ 0x000000002f8cae57
14. src/Processors/Executors/PullingAsyncPipelineExecutor.cpp:83: void std::__function::__policy_invoker<void ()>::__call_impl<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<true, true>::ThreadFromGlobalPoolImpl<DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0>(DB::PullingAsyncPipelineExecutor::pull(DB::Chunk&, unsigned long)::$_0&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0x000000002f8f175d
15. contrib/llvm-project/libcxx/include/__functional/function.h:848: ? @ 0x000000001e6b8f7e
16. src/Common/ThreadPool.cpp:252: void* std::__thread_proxy[abi:v15007]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0x000000001e6c3d0d
17. asan_thread_start(void*) @ 0x000000000e637bcd
18. ? @ 0x00007ffff7c9ca94
19. ? @ 0x00007ffff7d29c3c
```