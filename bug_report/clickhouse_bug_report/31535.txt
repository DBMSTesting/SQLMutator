ID: 31535
Title: 21.11 optimize_arithmetic_operations_in_aggregate_functions break window functions
Description:
```
SELECT
    *,
    if((number % 2) = 0, 0.5, 1) AS a,
    30 AS b,
    sum(a * b) OVER (ORDER BY number ASC) AS s
FROM numbers(10)
```

Versions before 21.11 work properly. 

21.11 with `optimize_arithmetic_operations_in_aggregate_functions=1` (default):

```

Received exception from server (version 21.11.4):
Code: 215. DB::Exception: Received from localhost:9000. DB::Exception: Column `number` is not under aggregate function and not in GROUP BY: While processing number, if((rand() % 2) = 0, 0.5, 1) AS a, 30 AS b, sum(a) * b AS s. Stack trace:

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b605d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x12081371 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x12089098 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x12058577 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x1205838b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x12062dc9 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x12067a30 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x122ee50d in /usr/bin/clickhouse
8. ? @ 0x122e7064 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x122e1ac7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x122e0454 in /usr/bin/clickhouse
11. DB::InterpreterSelectWithUnionQuery::buildCurrentChildInterpreter(std::__1::shared_ptr<DB::IAST> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x125067a2 in /usr/bin/clickhouse
12. DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12504e80 in /usr/bin/clickhouse
13. DB::InterpreterFactory::get(std::__1::shared_ptr<DB::IAST>&, std::__1::shared_ptr<DB::Context>, DB::SelectQueryOptions const&) @ 0x12284a96 in /usr/bin/clickhouse
14. ? @ 0x1273b346 in /usr/bin/clickhouse
15. DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::Context>, bool, DB::QueryProcessingStage::Enum) @ 0x12739533 in /usr/bin/clickhouse
16. DB::TCPHandler::runImpl() @ 0x130ca0d0 in /usr/bin/clickhouse
17. DB::TCPHandler::run() @ 0x130ddb79 in /usr/bin/clickhouse
18. Poco::Net::TCPServerConnection::start() @ 0x15d18faf in /usr/bin/clickhouse
19. Poco::Net::TCPServerDispatcher::run() @ 0x15d1b3a1 in /usr/bin/clickhouse
20. Poco::PooledThread::run() @ 0x15e2fd49 in /usr/bin/clickhouse
21. Poco::ThreadImpl::runnableEntry(void*) @ 0x15e2d480 in /usr/bin/clickhouse
22. start_thread @ 0x9609 in /usr/lib/x86_64-linux-gnu/libpthread-2.31.so
23. __clone @ 0x122293 in /usr/lib/x86_64-linux-gnu/libc-2.31.so
. (NOT_AN_AGGREGATE)
```

with `optimize_arithmetic_operations_in_aggregate_functions=0` the result is as expected.

```
SELECT
    *,
    if((number % 2) = 0, 0.5, 1) AS a,
    30 AS b,
    sum(a * b) OVER (ORDER BY number ASC) AS s
FROM numbers(10)

┌─number─┬───a─┬──b─┬───s─┐
│      0 │ 0.5 │ 30 │  15 │
│      1 │   1 │ 30 │  45 │
│      2 │ 0.5 │ 30 │  60 │
│      3 │   1 │ 30 │  90 │
│      4 │ 0.5 │ 30 │ 105 │
│      5 │   1 │ 30 │ 135 │
│      6 │ 0.5 │ 30 │ 150 │
│      7 │   1 │ 30 │ 180 │
│      8 │ 0.5 │ 30 │ 195 │
│      9 │   1 │ 30 │ 225 │
└────────┴─────┴────┴─────┘
```