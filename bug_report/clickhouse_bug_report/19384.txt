ID: 19384
Title: Clickhouse-copier cannot copy tables with TTL columns
Description:
Clickhouse-copier seems to try to replicate column definitions to the dot for the part tables, which causes an issue if an individual column is set up to have a TTL.

Error:
```
Will retry: Code: 36, e.displayText() = DB::Exception: Engine Distributed doesn't support TTL clause. Currently only the following engines have support for the feature: [MergeTree, ReplicatedVersionedCollapsingMergeTree, ReplacingMergeTree, ReplicatedSummingMergeTree, ReplicatedAggregatingMergeTree, ReplicatedCollapsingMergeTree, ReplicatedGraphiteMergeTree, ReplicatedMergeTree, ReplicatedReplacingMergeTree, VersionedCollapsingMergeTree, SummingMergeTree, GraphiteMergeTree, CollapsingMergeTree, AggregatingMergeTree], Stack trace (when copying this message, always include the lines below):

0. ? @ 0xf329b97 in /usr/bin/clickhouse
1. DB::StorageFactory::get(DB::ASTCreateQuery const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, DB::Context&, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, bool) const @ 0xf3283d2 in /usr/bin/clickhouse
2. DB::InterpreterCreateQuery::doCreateTable(DB::ASTCreateQuery&, DB::InterpreterCreateQuery::TableProperties const&) @ 0xedca49e in /usr/bin/clickhouse
3. DB::InterpreterCreateQuery::createTable(DB::ASTCreateQuery&) @ 0xedc7d2d in /usr/bin/clickhouse
4. DB::InterpreterCreateQuery::execute() @ 0xedcc9d7 in /usr/bin/clickhouse
5. DB::ClusterCopier::dropAndCreateLocalTable(std::__1::shared_ptr<DB::IAST> const&) @ 0x8750595 in /usr/bin/clickhouse
6. DB::ClusterCopier::createShardInternalTables(DB::ConnectionTimeouts const&, DB::TaskShard&, bool) @ 0x874d37d in /usr/bin/clickhouse
7. DB::ClusterCopier::getShardPartitions(DB::ConnectionTimeouts const&, DB::TaskShard&) @ 0x8752d2a in /usr/bin/clickhouse
8. DB::ClusterCopier::discoverShardPartitions(DB::ConnectionTimeouts const&, std::__1::shared_ptr<DB::TaskShard> const&) @ 0x8724c30 in /usr/bin/clickhouse
9. ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0x86441bd in /usr/bin/clickhouse
10. ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()&&...)::'lambda'()::operator()() @ 0x864671f in /usr/bin/clickhouse
11. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x86415ed in /usr/bin/clickhouse
12. ? @ 0x86451a3 in /usr/bin/clickhouse
13. start_thread @ 0x9609 in /usr/lib/x86_64-linux-gnu/libpthread-2.31.so
14. __clone @ 0x122293 in /usr/lib/x86_64-linux-gnu/libc-2.31.so
 (version 21.1.2.15 (official build))
```

The task definition itself doesn't have TTL in it, so I assume this comes purely from the source table's column definitions (or maybe the source table itself?).