ID: 6510
Title: Set index checkASTUseless detection
Description:
Bug found by @orloffv
 
Clickhouse 19.13.1
```
SET allow_experimental_data_skipping_indices = 1;
DROP TABLE test_index;
CREATE TABLE test_index
(
    primary_key String,
    index_array Array(UInt64),
    INDEX additional_index_array (index_array) TYPE set(10000) GRANULARITY 1
) ENGINE = MergeTree()
ORDER BY (primary_key);

INSERT INTO test_index
select 
  toString(intDiv(number, 1000000)) as primary_key,
  array(number) as index_array
from system.numbers
limit 10000000;

select count() from test_index where has(index_array, 333);
1 rows in set. Elapsed: 0.059 sec. Processed 10.00 million rows, 160.00 MB (170.66 million rows/s., 2.73 GB/s.)
```


Expected:
Like this
```
select count() from test_index where has(index_array, 333) = 1;                                    
                                                                                                                    
SELECT count()                                                                                                      
FROM test_index                                                                                                     
WHERE has(index_array, 333) = 1                                                                                     
                                                                                                                    
┌─count()─┐                                                                                                         
│       1 │                                                                                                         
└─────────┘                                                                                                         
                                                                                                                    
1 rows in set. Elapsed: 0.392 sec. Processed 8.19 thousand rows, 131.07 KB (20.90 thousand rows/s., 334.37 KB/s.)                                                                                                                
```