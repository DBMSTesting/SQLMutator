ID: 6546
Title: Cannot convert column XXX because it is constant but values of constants are different in source and result
Description:
Hi,

sometimes I get the error in the subject usign an INSERT with a SELECT with UNION ALL.
I saw some similar bugs solved in the past but the CH version I'm using is quite recent...


**Describe the bug**
Sometimes the query:
INSERT INTO my2.status
SELECT now() AS timestamp, metric, value FROM system.metrics
UNION ALL SELECT now(), metric, cast(value, 'Int64') FROM system.asynchronous_metrics
UNION ALL SELECT now(), event, cast(value, 'Int64') FROM system.events;

Gives the error:
<Error> executeQuery: Code: 171, e.displayText() = DB::Exception: Cannot convert column timestamp because it is constant but values of constants are different in source and result (version 19.13.1.11)

**How to reproduce**
* Which ClickHouse server version to use
19.13.1.11
* Which interface to use, if matters
* Non-default settings, if any
* `CREATE TABLE` statements for all tables involved
CREATE TABLE my2.status (timestamp DateTime,  metric String,  value Int64)
 ENGINE = MergeTree
 PARTITION BY toYYYYMM(timestamp)
 ORDER BY (timestamp, metric)
 SETTINGS index_granularity = 8192;

* Sample data for all these tables, use [clickhouse-obfuscator](https://github.com/yandex/ClickHouse/blob/master/dbms/programs/obfuscator/Obfuscator.cpp#L42-L80) if necessary
* Queries to run that lead to unexpected result
INSERT INTO my2.status
SELECT now() AS timestamp, metric, value FROM system.metrics
UNION ALL SELECT now(), metric, cast(value, 'Int64') FROM system.asynchronous_metrics
UNION ALL SELECT now(), event, cast(value, 'Int64') FROM system.events;

**Expected behavior**
I use the query to collect perfermance statistics of ClickHouse in ClickHouse itself.
It runs every 10 minutes and gives the error only few times.
I have non problem to rewrite the INSERT... but maybe it can be useful to find out a bug

**Error message and/or stacktrace**
2019.08.19 02:40:02.149859 [ 42 ] {7c2406bc-669c-4b59-b149-e26f37184747} <Error> executeQuery: Code: 171, e.displayText() = DB::Exception: Cannot convert column timestamp because it is constant but values of constants are different in source and result (version 19.13.1.11) (from [::1]:40526) (in query: INSERT INTO my2.status SELECT now() AS timestamp, metric, value FROM system.metrics UNION ALL SELECT now(), metric, cast(value, 'Int64') FROM system.asynchronous_metrics UNION ALL SELECT now(), event, cast(value, 'Int64') FROM system.events), Stack trace:

0. clickhouse-server(StackTrace::StackTrace()+0x30) [0x6f18ee0]
1. clickhouse-server(DB::ConvertingBlockInputStream::ConvertingBlockInputStream(DB::Context const&, std::shared_ptr<DB::IBlockInputStream> const&, DB::Block const&, DB::ConvertingBlockInputStream::MatchColumnsMode)+0xd2e) [0x638940e]
2. clickhouse-server(DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams()+0x15f) [0x5db6f1f]
3. clickhouse-server(DB::InterpreterSelectWithUnionQuery::execute()+0x26) [0x5db8576]
4. clickhouse-server(DB::InterpreterInsertQuery::execute()+0x725) [0x5d864c5]
5. clickhouse-server() [0x5eace3e]
6. clickhouse-server(DB::executeQuery(std::string const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool)+0x162) [0x5eaf462]
7. clickhouse-server(DB::TCPHandler::runImpl()+0x622) [0x31a0062]
8. clickhouse-server(DB::TCPHandler::run()+0x1c) [0x31a176c]
9. clickhouse-server(Poco::Net::TCPServerConnection::start()+0xf) [0x6a5e54f]
10. clickhouse-server(Poco::Net::TCPServerDispatcher::run()+0x166) [0x6a5e916]
11. clickhouse-server(Poco::PooledThread::run()+0x77) [0x70ede07]
12. clickhouse-server(Poco::ThreadImpl::runnableEntry(void*)+0x38) [0x70e9fc8]
13. clickhouse-server() [0x76bbfff]
14. /lib64/libpthread.so.0(+0x7dd5) [0x7f6cf7cf6dd5]
15. /lib64/libc.so.6(clone+0x6d) [0x7f6cf771dead]


**Additional context**
Thanks for the attention!
