ID: 5220
Title: bitmap* functions crash the server 
Description:
**Describe the bug**
Server crashes when I run queries like `select bitmapAndCardinality(z, bitmapBuild(cast([19,7] as Array(UInt32)))) from test_bitmap` where `test_bitmap.z` column is of type `AggregateFunction(groupBitmap, UInt32)`. Basically all the variants of bitmapAnd/Or/etc.. reproduce this crash. 
Statement `select bitmapToArray(z) from test_bitmap` works just fine.

**How to reproduce**
* ClickHouse server version: 19.5.3 revision 54417
* Which interface to use, if matters: it should not matter, but it was native cli.
* Non-default settings, if any: none.
* `CREATE TABLE` statements for all tables involved:
```sql
CREATE TABLE default.test_bitmap (
`z` AggregateFunction(groupBitmap, UInt32), 
`t` DateTime
) ENGINE = MergeTree 
PARTITION BY toYYYYMMDD(t) 
ORDER BY t
```
* Sample data for all these tables:
```sql
insert into test_bitmap values (bitmapBuild(cast([3,19,47] as Array(UInt32))), now());
```

* Queries to run that lead to unexpected result:
```sql
select bitmapAndCardinality(z, bitmapBuild(cast([19,7] as Array(UInt32)))) from test_bitmap
```

**Expected behavior**
Expected to produce meaningful results.

**Error message and/or stacktrace**
```
2019.05.08 07:00:36.969374 [ 30 ] {} <Error> BaseDaemon: (version 19.5.3.1) (from thread 27) Received signal Segmentation fault (11).
2019.05.08 07:00:36.969382 [ 30 ] {} <Error> BaseDaemon: Address: 0x40
2019.05.08 07:00:36.969389 [ 30 ] {} <Error> BaseDaemon: Access: read.
2019.05.08 07:00:36.969395 [ 30 ] {} <Error> BaseDaemon: Address not mapped to object.
2019.05.08 07:00:36.990486 [ 30 ] {} <Error> BaseDaemon: 0. clickhouse-server(DB::FunctionBitmapCardinality<DB::BitmapAndCardinalityImpl, DB::NameBitmapAndCardinality>::executeImpl(DB::Block&, std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long, unsigned long)+0x310) [0x329fb80]
2019.05.08 07:00:36.990528 [ 30 ] {} <Error> BaseDaemon: 1. clickhouse-server(DB::PreparedFunctionImpl::execute(DB::Block&, std::vector<unsigned long, std::allocator<unsigned long> > const&, unsigned long, unsigned long, bool)+0x378) [0x614b568]
2019.05.08 07:00:36.990538 [ 30 ] {} <Error> BaseDaemon: 2. clickhouse-server(DB::ExpressionAction::execute(DB::Block&, bool) const+0x264) [0x62e0414]
2019.05.08 07:00:36.990554 [ 30 ] {} <Error> BaseDaemon: 3. clickhouse-server(DB::ExpressionActions::execute(DB::Block&, bool) const+0x45) [0x62e1ff5]
2019.05.08 07:00:36.990563 [ 30 ] {} <Error> BaseDaemon: 4. clickhouse-server(DB::ExpressionBlockInputStream::readImpl()+0x35) [0x61ae2d5]
2019.05.08 07:00:36.990572 [ 30 ] {} <Error> BaseDaemon: 5. clickhouse-server(DB::IBlockInputStream::read()+0x135) [0x5c44675]
2019.05.08 07:00:36.990580 [ 30 ] {} <Error> BaseDaemon: 6. clickhouse-server(DB::ExpressionBlockInputStream::readImpl()+0x1a) [0x61ae2ba]
2019.05.08 07:00:36.990589 [ 30 ] {} <Error> BaseDaemon: 7. clickhouse-server(DB::IBlockInputStream::read()+0x135) [0x5c44675]
2019.05.08 07:00:36.990598 [ 30 ] {} <Error> BaseDaemon: 8. clickhouse-server(DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>::thread(std::shared_ptr<DB::ThreadGroupStatus>, unsigned long)+0x296) [0x5d7ac46]
2019.05.08 07:00:36.990609 [ 30 ] {} <Error> BaseDaemon: 9. clickhouse-server(_ZZN20ThreadFromGlobalPoolC4IZN2DB23ParallelInputsProcessorINS1_21UnionBlockInputStream7HandlerEE7processEvEUlvE_JEEEOT_DpOT0_ENKUlvE_clEv+0x59) [0x5d7b639]
2019.05.08 07:00:36.990619 [ 30 ] {} <Error> BaseDaemon: 10. clickhouse-server(ThreadPoolImpl<std::thread>::worker(std::_List_iterator<std::thread>)+0x187) [0x66c4bb7]
2019.05.08 07:00:36.990627 [ 30 ] {} <Error> BaseDaemon: 11. clickhouse-server() [0x71eee5f]
2019.05.08 07:00:36.990635 [ 30 ] {} <Error> BaseDaemon: 12. /lib64/libpthread.so.0(+0x7dd5) [0x7f49ead77dd5]
```



