ID: 69259
Title: Attempted access has violated the permissions assigned to the memory area in ClickHouse Server (24.8 LTS). The server restarts whenever a particular View is accessed.
Description:

The ClickHouse server running in AWS EC2 (arm64) restarts whenever a particular view is accessed. Observed this on 24.8.2.3 LTS release. This view was working fine earlier (in v23.12.x). The only option we had was to downgrade the ClickHouse back to v23.12.x to avoid this restart loop.


```
2024.09.03 21:23:46.065638 [ 2937059 ] {} <Fatal> BaseDaemon: ########## Short fault info ############
2024.09.03 21:23:46.065691 [ 2937059 ] {} <Fatal> BaseDaemon: (version 24.8.2.3 (official build), build id: C4631B124584FD4B23FD6894E5A61D8066D112C9, git hash: b54f79ed323f9
640c6a01ea227345088f3db1eef) (from thread 2936602) Received signal 11
2024.09.03 21:23:46.065718 [ 2937059 ] {} <Fatal> BaseDaemon: Signal description: Segmentation fault
2024.09.03 21:23:46.065731 [ 2937059 ] {} <Fatal> BaseDaemon: Address: 0xf26060170000. Access: . Attempted access has violated the permissions assigned to the memory area.
2024.09.03 21:23:46.065753 [ 2937059 ] {} <Fatal> BaseDaemon: Stack trace: 0x000000000c558748 0x0000f260b41bf9d0 0x0000f260b4037ecd 0x000000000fbbe63c 0x000000000fbbdb98 0x0
000000010fae034 0x0000000010f7f908 0x0000000010d2dbb0 0x0000000010d243f0 0x0000000010d258c4 0x000000000c389a7c 0x000000000c38d4d0 0x000000000c38c2ec 0x0000f260b401d5c8 0x000
0f260b4085edc
2024.09.03 21:23:46.065769 [ 2937059 ] {} <Fatal> BaseDaemon: ########################################
2024.09.03 21:23:46.065798 [ 2937059 ] {} <Fatal> BaseDaemon: (version 24.8.2.3 (official build), build id: C4631B124584FD4B23FD6894E5A61D8066D112C9, git hash: b54f79ed323f9
640c6a01ea227345088f3db1eef) (from thread 2936602) (query_id: 318ad714-0023-4859-9d2f-bc24e1218afe) (query: INSERT INTO default.<distributed_table>(
    Column1,
    .
    .
    .
    ColumnN
)
SELECT
    Column1,
    .
    .
    .
    ColumnN
FROM default.<view>
where <ID> = 14039 and MODIFIEDDATETIME >='2024-09-03 21:21:54.284') Received signal Segmentation fault (11)
2024.09.03 21:23:46.065841 [ 2937059 ] {} <Fatal> BaseDaemon: Address: 0xf26060170000. Access: . Attempted access has violated the permissions assigned to the memory area.
2024.09.03 21:23:46.065855 [ 2937059 ] {} <Fatal> BaseDaemon: Stack trace: 0x000000000c558748 0x0000f260b41bf9d0 0x0000f260b4037ecd 0x000000000fbbe63c 0x000000000fbbdb98 0x0000000010fae034 0x0000000010f7f908 0x0000000010d2dbb0 0x0000000010d243f0 0x0000000010d258c4 0x000000000c389a7c 0x000000000c38d4d0 0x000000000c38c2ec 0x0000f260b401d5c8 0x0000f260b4085edc
2024.09.03 21:23:46.065913 [ 2937059 ] {} <Fatal> BaseDaemon: 0. signalHandler(int, siginfo_t*, void*) @ 0x000000000c558748
2024.09.03 21:23:46.065934 [ 2937059 ] {} <Fatal> BaseDaemon: 1. ? @ 0x0000f260b41bf9d0
2024.09.03 21:23:46.065966 [ 2937059 ] {} <Fatal> BaseDaemon: 2. ? @ 0x0000000000097ecd
2024.09.03 21:23:46.065994 [ 2937059 ] {} <Fatal> BaseDaemon: 3. DB::Squashing::squash(std::vector<DB::Chunk, std::allocator<DB::Chunk>>&&, DB::CollectionOfDerivedItems<DB::ChunkInfo>&&) @ 0x000000000fbbe63c
2024.09.03 21:23:46.066011 [ 2937059 ] {} <Fatal> BaseDaemon: 4. DB::Squashing::squash(DB::Chunk&&) @ 0x000000000fbbdb98
2024.09.03 21:23:46.066033 [ 2937059 ] {} <Fatal> BaseDaemon: 5. DB::SimpleSquashingChunksTransform::consume(DB::Chunk) @ 0x0000000010fae034
2024.09.03 21:23:46.066048 [ 2937059 ] {} <Fatal> BaseDaemon: 6. DB::IInflatingTransform::work() @ 0x0000000010f7f908
2024.09.03 21:23:46.066066 [ 2937059 ] {} <Fatal> BaseDaemon: 7. DB::ExecutionThreadContext::executeTask() @ 0x0000000010d2dbb0
2024.09.03 21:23:46.066084 [ 2937059 ] {} <Fatal> BaseDaemon: 8. DB::PipelineExecutor::executeStepImpl(unsigned long, std::atomic<bool>*) @ 0x0000000010d243f0
2024.09.03 21:23:46.066107 [ 2937059 ] {} <Fatal> BaseDaemon: 9. void std::__function::__policy_invoker<void ()>::__call_impl<std::__function::__default_alloc_func<DB::PipelineExecutor::spawnThreads()::$_0, void ()>>(std::__function::__policy_storage const*) @ 0x0000000010d258c4
2024.09.03 21:23:46.066129 [ 2937059 ] {} <Fatal> BaseDaemon: 10. ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::worker(std::__list_iterator<ThreadFromGlobalPoolImpl<false, true>, void*>) @ 0x000000000c389a7c
2024.09.03 21:23:46.066167 [ 2937059 ] {} <Fatal> BaseDaemon: 11. void std::__function::__policy_invoker<void ()>::__call_impl<std::__function::__default_alloc_func<ThreadFromGlobalPoolImpl<false, true>::ThreadFromGlobalPoolImpl<void ThreadPoolImpl<ThreadFromGlobalPoolImpl<false, true>>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()>(void&&)::'lambda'(), void ()>>(std::__function::__policy_storage const*) @ 0x000000000c38d4d0
2024.09.03 21:23:46.066195 [ 2937059 ] {} <Fatal> BaseDaemon: 12. void* std::__thread_proxy[abi:v15007]<std::tuple<std::unique_ptr<std::__thread_struct, std::default_delete<std::__thread_struct>>, void ThreadPoolImpl<std::thread>::scheduleImpl<void>(std::function<void ()>, Priority, std::optional<unsigned long>, bool)::'lambda0'()>>(void*) @ 0x000000000c38c2ec
2024.09.03 21:23:46.066212 [ 2937059 ] {} <Fatal> BaseDaemon: 13. ? @ 0x000000000007d5c8
2024.09.03 21:23:46.066227 [ 2937059 ] {} <Fatal> BaseDaemon: 14. ? @ 0x00000000000e5edc
2024.09.03 21:23:46.066239 [ 2937059 ] {} <Fatal> BaseDaemon: Integrity check of the executable skipped because the reference checksum could not be read.
2024.09.03 21:23:46.066371 [ 2937059 ] {} <Fatal> BaseDaemon: Report this error to https://github.com/ClickHouse/ClickHouse/issues
```

Redacted the SQL due to confidential data involved.

**Expected behavior**

The server should not restart as before.



**Additional context**

> AWS EC2 Instance (8 core CPU and 128 GB RAM, aarch64)
> The view is on top of multiple distributed tables and joins the data from these tables
> 'auto' join algorithm is used
