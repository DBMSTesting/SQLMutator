ID: 71830
Title: The analyzer can remove CAST from constants to make distributed queries invalid.
Description:
This works
```
:) select s2RectUnion(number + 1, toUInt64(1), toUInt64(1), toUInt64(1)) as c from numbers(1) where c.1 in (1)

SELECT s2RectUnion(number + 1, toUInt64(1), toUInt64(1), toUInt64(1)) AS c
FROM numbers(1)
WHERE (c.1) IN (1)

Query id: 47881df5-0972-445e-abec-991b182e0943

   ┌─c─────┐
1. │ (1,1) │
   └───────┘

```
This fails
```
:) select s2RectUnion(number + 1, toUInt64(1), toUInt64(1), toUInt64(1)) as c from remote('127.0.0.{1,2}', numbers(1)) where c.1 in (1)

SELECT s2RectUnion(number + 1, toUInt64(1), toUInt64(1), toUInt64(1)) AS c
FROM remote('127.0.0.{1,2}', numbers(1))
WHERE (c.1) IN (1)

Query id: 33a0a719-e45a-46a2-890c-e03daf98a92b


Elapsed: 0.005 sec. 

Received exception from server (version 24.11.1):
Code: 43. DB::Exception: Received from localhost:9000. DB::Exception: Illegal type UInt8 of argument 2 of function s2RectUnion. Must be UInt64: In scope SELECT s2RectUnion(__table1.number + 1, _CAST(1, 'UInt64'), _CAST(1, 'UInt64'), _CAST(1, 'UInt64')) AS c FROM numbers(1) AS __table1 WHERE (s2RectUnion(__table1.number + 1, 1, 1, 1).1) IN (1). (ILLEGAL_TYPE_OF_ARGUMENT)
```

This is because we have removed the CAST from `WHERE (s2RectUnion(__table1.number + 1, 1, 1, 1).1) IN (1)` part.

