ID: 23547
Title: Transform data using clickhouse-local 21.4.4.30 does not print data as it should be
Description:
After update to version v21.4.4.30-stable I have noticed that clickhouse-local has an unexpected behavior while using to transformed data. The version. Running the same command the version 21.1.2.15 print the transformed data at the terminal, but v21.4.4.30 don't.


### using this csv

```txt
start,stop,event,age,year,surgery,transplant,id
0,50,1,-17.1553730321697,0.123203285420945,0,0,1
0,6,1,3.83572895277207,0.254620123203285,0,0,2
0,1,0,6.29705681040383,0.265571526351814,0,0,3
1,16,1,6.29705681040383,0.265571526351814,0,1,3
0,36,0,-7.73716632443532,0.490075290896646,0,0,4

```

### running this comand

```bash

clickhouse-local --input_format_with_names_use_header=0 --format_csv_allow_single_quotes=1 --date_time_input_format="best_effort" --input_format_null_as_default=1 --input_format_defaults_for_omitted_fields=1 --input_format_tsv_empty_as_default=1 --input_format_csv_unquoted_null_literal_as_null=1 --input-format=CSVWithNames --format_csv_delimiter="," --file=heart.csv -S "start String,stop String,event String,age String,year String,surgery String,transplant String,id String" --output-format=TabSeparatedWithNames --query="select cast(toInt64OrNull(replaceAll(toString(start), ',', '')) as Nullable(Int64)) as start,cast(toInt64OrNull(replaceAll(toString(stop), ',', '')) as Nullable(Int64)) as stop,cast(toInt64OrNull(replaceAll(toString(event), ',', '')) as Nullable(Int64)) as event,cast(floor(toFloat64OrNull(replaceAll(toString(age), ',', '')), 2) as Nullable(Float64)) as age,cast(floor(toFloat64OrNull(replaceAll(toString(year), ',', '')), 2) as Nullable(Float64)) as year,cast(toInt64OrNull(replaceAll(toString(surgery), ',', '')) as Nullable(Int64)) as surgery,cast(toInt64OrNull(replaceAll(toString(transplant), ',', '')) as Nullable(Int64)) as transplant,cast(toInt64OrNull(replaceAll(toString(id), ',', '')) as Nullable(Int64)) as id from table" 

````

### while on v21.4.4.30-stable and above (print only the CSV header)
#### expected = print header + data
#### unexpected = where is the data?

```bash
start	stop	event	age	year	surgery	transplant	id
```

### while on 21.1.2.15 prints the transformed CSV (everything is ok)

```bash
start	stop	event	age	year	surgery	transplant	id
0	50	1	-17.16	0.12	0	0	1
0	6	1	3.83	0.25	0	0	2
0	1	0	6.29	0.26	0	0	3
1	16	1	6.29	0.26	0	1	3
0	36	0	-7.74	0.49	0	0	4
```

