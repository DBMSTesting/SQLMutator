ID: 1753
Title: Sometimes two different merges are created for the same set of parts
Description:
We run OPTIMIZE statements on a regular basis, and sometimes OPTIMIZE starts when there is another merge running for the same table. In this case the merge that finishes earlier deletes some parts and the other merge cannot find them later.
An example:
```
2018.01.11 06:19:20.824646 [ 17641958 ] <Debug> db.table (Merger): Selected 6 parts from 19700101_19700101_771325_771423_21 to 19700101_19700101_771428_771428_0
2018.01.11 06:19:21.002302 [ 1182 ] <Debug> db.table (ReplicatedMergeTreeQueue): Pulling 1 entries to queue: log-0001027197 - log-0001027197
2018.01.11 06:19:21.066067 [ 1182 ] <Debug> db.table (ReplicatedMergeTreeQueue): Pulled 1 entries to queue.
2018.01.11 06:19:21.628280 [ 8 ] <Trace> db.table (StorageReplicatedMergeTree): Executing log entry to merge parts 19700101_19700101_771325_771423_21, 19700101_19700101_771424_771424_0, 19700101_19700101_771425_771425_0, 19700101_19700101_771426_771426_0, 19700101_19700101_771427_771427_0, 19700101_19700101_771428_771428_0 to 19700101_19700101_771325_771428_22
2018.01.11 06:19:21.628523 [ 8 ] <Debug> db.table (Merger): Merging 6 parts: from 19700101_19700101_771325_771423_21 to 19700101_19700101_771428_771428_0 into tmp_merge_19700101_19700101_771325_771428_22
...
2018.01.11 06:19:21.980310 [ 18024451 ] <Debug> executeQuery: (from [::1]:48252) optimize table table partition 197001 final
2018.01.11 06:19:22.323666 [ 18024451 ] <Debug> db.table (Merger): Selected 7 parts from 19700101_19700101_199_771324_15592 to 19700101_19700101_771428_771428_0
...
2018.01.11 06:19:24.488542 [ 8 ] <Trace> db.table (Data): Renaming temporary part tmp_merge_19700101_19700101_771325_771428_22 to 19700101_19700101_771325_771428_22.
2018.01.11 06:19:24.488932 [ 8 ] <Trace> db.table (Merger): Merged 6 parts: from 19700101_19700101_771325_771423_21 to 19700101_19700101_771428_771428_0
2018.01.11 06:19:24.523468 [ 8 ] <Debug> MemoryTracker: Peak memory usage: 51.77 MiB.
...
2018.01.11 06:19:27.520783 [ 12 ] <Debug> db.table (ReplicatedMergeTreeQueue): Not executing log entry for part 19700101_19700101_199_771428_15593 because its size (434.29 MiB) is greater than current maximum (4.61 MiB).
...
2018.01.11 06:19:37.624231 [ 10 ] <Trace> db.table (StorageReplicatedMergeTree): Executing log entry to merge parts 19700101_19700101_199_771324_15592, 19700101_19700101_771325_771423_21, 19700101_19700101_771424_771424_0, 19700101_19700101_771425_771425_0, 19700101_19700101_771426_771426_0, 19700101_19700101_771427_771427_0, 19700101_19700101_771428_771428_0 to 19700101_19700101_199_771428_15593
2018.01.11 06:19:37.624249 [ 10 ] <Warning> db.table (StorageReplicatedMergeTree): Part 19700101_19700101_771325_771423_21 is covered by 19700101_19700101_771325_771428_22 but should be merged into 19700101_19700101_199_771428_15593. This shouldn't happen often.
2018.01.11 06:19:37.624264 [ 10 ] <Debug> db.table (StorageReplicatedMergeTree): Don't have all parts for merge 19700101_19700101_199_771428_15593; will try to fetch it instead
...
2018.01.11 06:19:40.040912 [ 13122424 ] <Warning> db.table (StorageReplicatedMergeTree, PartCheckThread): Checking part 19700101_19700101_199_771428_15593
2018.01.11 06:19:40.041023 [ 10 ] <Information> db.table (StorageReplicatedMergeTree): DB::Exception: No active replica has part 19700101_19700101_199_771428_15593 or covering part
2018.01.11 06:19:40.071165 [ 13122424 ] <Warning> db.table (StorageReplicatedMergeTree, PartCheckThread): Checking if anyone has a part covering 19700101_19700101_199_771428_15593.
2018.01.11 06:19:40.106366 [ 13122424 ] <Warning> db.table (StorageReplicatedMergeTree, PartCheckThread): Found parts with the same min block and with the same max block as the missing part 19700101_19700101_199_771428_15593. Hoping that it will eventually appear as a result of a merge.
```