ID: 10410
Title: Potential race condition in CREATE TABLE
Description:
With TiDB 3.0.0-beta.1, on a five-node EC2 cluster running Debian Stretch, TiDB can return successfully from a `create table` command, then return `Table ... doesn't exist` errors when the same client attempts to insert a record into the table it just created.

1. What did you do?

Our Jepsen test runs the following pair of commands to verify the cluster is ready to serve requests:

```clj
          (j/execute! c ["create table if not exists jepsen_await (id int primary key, val int)"])
          (j/insert! c "jepsen_await" {:id  (swap! await-id inc)
                                       :val (rand-int 5)})
```

2. What did you expect to see?

If the `create table command completes`, one would expect the subsequent insert to observe that table's existence.

3. What did you see instead?

Instead, the `insert!` call throws:

`java.sql.SQLSyntaxErrorException: (conn=1) Table 'test.jepsen_await' doesn't exist`.

4. What version of TiDB are you using (`tidb-server -V` or run `select tidb_version();` on TiDB)?

3.0.0-beta.1.

You can reproduce this problem with Jepsen dd9a7a53ddcbc8bf691134598f144e14213e241d by running something like

```
lein run test-all --concurrency 2n --time-limit 30
```

I haven't seen this in my LXC cluster, but on EC2, roughly 1 in 15 tests crash during cluster setup because of this behavior.