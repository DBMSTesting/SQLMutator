ID: 55260
Title: The collation of `information_schema` tables are not consistent with the behavior
Description:
## Bug Report

Please answer these questions before submitting your issue. Thanks!

### 1. Minimal reproduce step (Required)

```
mysql> select * from information_schema.table_constraints where TABLE_SCHEMA = 'performance_schema';
+--------------------+--------------------+-----------------+--------------------+-------------------------------------+-----------------+
| CONSTRAINT_CATALOG | CONSTRAINT_SCHEMA  | CONSTRAINT_NAME | TABLE_SCHEMA       | TABLE_NAME                          | CONSTRAINT_TYPE |
+--------------------+--------------------+-----------------+--------------------+-------------------------------------+-----------------+
| def                | PERFORMANCE_SCHEMA | SCHEMA_NAME     | PERFORMANCE_SCHEMA | events_statements_summary_by_digest | UNIQUE          |
+--------------------+--------------------+-----------------+--------------------+-------------------------------------+-----------------+
1 row in set (0.00 sec)

mysql> select * from information_schema.table_constraints where CONSTRAINT_CATALOG = 'DEF';
Empty set (0.00 sec)

mysql> show create table information_schema.table_constraints;
+-------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Table             | Create Table                                                                                                                                                                                                                                                                                                                                                                    |
+-------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| TABLE_CONSTRAINTS | CREATE TABLE `TABLE_CONSTRAINTS` (
  `CONSTRAINT_CATALOG` varchar(512) DEFAULT NULL,
  `CONSTRAINT_SCHEMA` varchar(64) DEFAULT NULL,
  `CONSTRAINT_NAME` varchar(64) DEFAULT NULL,
  `TABLE_SCHEMA` varchar(64) DEFAULT NULL,
  `TABLE_NAME` varchar(64) DEFAULT NULL,
  `CONSTRAINT_TYPE` varchar(64) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin |
+-------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

```

All columns of the `information_schema.table_constraints` are case insensitive (or sensitive).

I think it'd be better to make it case insensitive to keep the compatibility with MySQL (and TiDB's backward behavior). However, TiDB declares it as `utf8mb4_bin` collation in `show create table ...`.

It's cause by the different logic after pushing down the predicates to the `memtableRetriever`. All implementations in `infoschema_reader.go` are case insensitive, but the selection is case sensitive according to the column definition.
