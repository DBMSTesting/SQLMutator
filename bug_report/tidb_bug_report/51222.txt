ID: 51222
Title: Combining 'IN' expressions with different numbers of values results in different SQL digests (requiring a separate bind for each case of values).
Description:
## Bug Report

Please answer these questions before submitting your issue. Thanks!

### 1. Minimal reproduce step (Required)

```
create table t1(a int, b int, c int, key a_idx(a));
create global binding for select * from t1 where (a,b) in((1,2), (3,4)) using select * from t1 use index() where (a,b) in((1,2), (3,4));
mysql> explain select * from t1 where (a,b) in((1,2), (3,4));
+-------------------------+----------+-----------+---------------+--------------------------------------------------------------------------------------+
| id                      | estRows  | task      | access object | operator info                                                                        |
+-------------------------+----------+-----------+---------------+--------------------------------------------------------------------------------------+
| TableReader_7           | 16.00    | root      |               | data:Selection_6                                                                     |
| └─Selection_6           | 16.00    | cop[tikv] |               | or(and(eq(test.t1.a, 1), eq(test.t1.b, 2)), and(eq(test.t1.a, 3), eq(test.t1.b, 4))) |
|   └─TableFullScan_5     | 10000.00 | cop[tikv] | table:t1      | keep order:false, stats:pseudo                                                       |
+-------------------------+----------+-----------+---------------+--------------------------------------------------------------------------------------+
3 rows in set (0.00 sec)

mysql> explain select * from t1 where (a,b) in((1,2), (3,4), (5,6));
+-------------------------------+---------+-----------+--------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
| id                            | estRows | task      | access object            | operator info                                                                                                                     |
+-------------------------------+---------+-----------+--------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
| IndexLookUp_11                | 24.00   | root      |                          |                                                                                                                                   |
| ├─IndexRangeScan_8(Build)     | 30.00   | cop[tikv] | table:t1, index:a_idx(a) | range:[1,1], [3,3], [5,5], keep order:false, stats:pseudo                                                                         |
| └─Selection_10(Probe)         | 24.00   | cop[tikv] |                          | or(and(eq(test.t1.a, 1), eq(test.t1.b, 2)), or(and(eq(test.t1.a, 3), eq(test.t1.b, 4)), and(eq(test.t1.a, 5), eq(test.t1.b, 6)))) |
|   └─TableRowIDScan_9          | 30.00   | cop[tikv] | table:t1                 | keep order:false, stats:pseudo                                                                                                    |
+-------------------------------+---------+-----------+--------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
4 rows in set (0.00 sec)
```

### 2. What did you expect to see? (Required)

binding work

### 3. What did you see instead (Required)

binding not work

### 4. What is your TiDB version? (Required)

Release Version: v8.0.0-alpha-268-g11f716e206
Edition: Community
Git Commit Hash: 11f716e206c30d5acca83710c7292637c2f6cf67
Git Branch: HEAD
UTC Build Time: 2024-02-21 07:03:18
GoVersion: go1.21.1
Race Enabled: false
Check Table Before Drop: false
Store: unistore

In fact, affect all version before.
