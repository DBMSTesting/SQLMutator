ID: 59662
Title: The estimated rows of RIGHT JOIN and INNER JOIN are not as expected
Description:
## Bug Report
We found a problem when testing the join function of tidb. The only difference between the following two statements is that statement 1 uses RIGHT JOIN, while statement 2 uses INNER JOIN. For the join function, the estimated rows of INNER JOIN should be less than that of RIGHT JOIN, because according to the SQL standard, INNER JOIN will extract data columns with matching values ​​in the two data tables; LEFT JOIN/RIGHT JOIN will extract all data columns in the left/right data table, as well as matching data columns in the other data table; but when we use the explain function to view the estimated rows of the two statements, we find that the estimated rows of INNER JOIN are greater than the estimated rows of RIGHT JOIN.
--EXPLAIN SELECT t1.c0, t0.c0 FROM  t0 RIGHT JOIN t1 ON CAST(845170773 AS DECIMAL) WHERE ((((((t1.c0)REGEXP(t0.c0)))NOT REGEXP(false)))^((((CASE t1.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 ELSE NULL END ))REGEXP((('0')<<(t0.c0)))))) GROUP BY t1.c0, t0.c0; --12
--EXPLAIN SELECT t1.c0, t0.c0 FROM  t0 INNER JOIN t1 ON CAST(845170773 AS DECIMAL) WHERE ((((((t1.c0)REGEXP(t0.c0)))NOT REGEXP(false)))^((((CASE t1.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 ELSE NULL END ))REGEXP((('0')<<(t0.c0)))))) GROUP BY t1.c0, t0.c0; --16

### 1. Minimal reproduce step (Required)

USE test;
DROP DATABASE IF EXISTS database0;
CREATE DATABASE database0;
USE database0;
CREATE TABLE t0(c0 FLOAT CHECK ((((BINARY (c0)))NOT LIKE(c0))) DEFAULT -1.348876934E9 UNIQUE , PRIMARY KEY(c0));
CREATE TABLE t1 LIKE t0;
INSERT IGNORE  INTO t1(c0) VALUES (-1.348876934E9);
INSERT IGNORE  INTO t1 VALUES (0.8315487383701061) ON DUPLICATE KEY UPDATE c0=-1.348876934E9;
REPLACE INTO t0 VALUES (0.9354973818128445);
INSERT INTO t0 VALUES (0.3195056333400965) ON DUPLICATE KEY UPDATE c0=t0.c0;
INSERT IGNORE  INTO t1 VALUES (0.3195056333400965), (0.43000735803901846);
CREATE UNIQUE INDEX i0 ON t0(c0);
REPLACE INTO t1(c0) VALUES (0.43000735803901846);
ALTER TABLE t1  ORDER BY c0;
INSERT INTO t0(c0) VALUES (0.7041592777063338);
TRUNCATE t1;
ADMIN CHECKSUM TABLE t0;
REPLACE INTO t1 VALUES (0.4137157096226288);
REPLACE INTO t1 VALUES (0.6592549619713133);
ALTER TABLE t1  CHANGE c0 c0 FLOAT NOT NULL ;
INSERT IGNORE  INTO t0 VALUES (0.9698309028807156);
REPLACE INTO t0(c0) VALUES (0.49137249362585456), (0.7241733517675685);
INSERT IGNORE  INTO t0(c0) VALUES (0.6330454599653699);
REPLACE INTO t1 VALUES (-1.348876934E9);
REPLACE INTO t1 VALUES (0.6680661941409498), (0.15110353958653877), (-1.348876934E9);
ANALYZE TABLE t1;
INSERT IGNORE  INTO t0 VALUES (0.15239134061785475), (0.14173298642761956), (0.15110353958653877);
INSERT INTO t0 VALUES (-1.348876934E9);
REPLACE INTO t0(c0) VALUES (0.6680661941409498);
REPLACE INTO t1 VALUES (0.5245843236336512);
REPLACE INTO t1 VALUES (-1.348876934E9), (0.40208650014571223);
REPLACE INTO t0(c0) VALUES (0.7241733517675685);
INSERT IGNORE  INTO t0 VALUES (NULL);
REPLACE INTO t0 VALUES (0.6665772710049386), (0.4575636709822247), (0.4923192839247498);
SET @@sql_mode='STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';
ANALYZE TABLE t0;
ANALYZE TABLE t1;

--EXPLAIN SELECT t1.c0, t0.c0 FROM  t0 RIGHT JOIN t1 ON CAST(845170773 AS DECIMAL) WHERE ((((((t1.c0)REGEXP(t0.c0)))NOT REGEXP(false)))^((((CASE t1.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 ELSE NULL END ))REGEXP((('0')<<(t0.c0)))))) GROUP BY t1.c0, t0.c0; --12
--EXPLAIN SELECT t1.c0, t0.c0 FROM  t0 INNER JOIN t1 ON CAST(845170773 AS DECIMAL) WHERE ((((((t1.c0)REGEXP(t0.c0)))NOT REGEXP(false)))^((((CASE t1.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 ELSE NULL END ))REGEXP((('0')<<(t0.c0)))))) GROUP BY t1.c0, t0.c0; --16

### 2. What did you expect to see? (Required)
The estimated rows of statement 2 should be less than or equal to the estimated rows of statement 1

### 3. What did you see instead (Required)
The estimated rows of statement 2 greater than the estimated rows of statement 1

### 4. What is your TiDB version? (Required)
Release Version: v7.5.1


