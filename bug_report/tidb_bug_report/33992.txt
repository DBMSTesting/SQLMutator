ID: 33992
Title: Wrong result when used EXPLAIN WITH cte
Description:
## Bug Report

### 1. Minimal reproduce step 
```sql
CREATE TABLE d (
col_int int(11) DEFAULT NULL,
col_time_key time DEFAULT NULL,
pk int(11) NOT NULL AUTO_INCREMENT,
col_datetime_key datetime DEFAULT NULL,
col_int_key int(11) DEFAULT NULL,
col_blob_key blob,
col_varchar_key varchar(1) DEFAULT NULL,
col_varchar varchar(1) DEFAULT NULL,
col_time time DEFAULT NULL,
col_blob blob,
col_date date DEFAULT NULL,
col_datetime datetime DEFAULT NULL,
col_date_key date DEFAULT NULL,
PRIMARY KEY (pk),
KEY col_time_key (col_time_key),
KEY col_datetime_key (col_datetime_key),
KEY col_int_key (col_int_key),
KEY col_blob_key (col_blob_key(255)),
KEY col_varchar_key (col_varchar_key),
KEY col_date_key (col_date_key)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;
CREATE OR REPLACE VIEW view_d AS SELECT * FROM d;
CREATE TABLE dd (
col_datetime datetime DEFAULT NULL,
col_varchar varchar(1) DEFAULT NULL,
col_blob_key blob,
col_date date DEFAULT NULL,
col_datetime_key datetime DEFAULT NULL,
col_blob blob,
col_varchar_key varchar(1) DEFAULT NULL,
col_int int(11) DEFAULT NULL,
col_date_key date DEFAULT NULL,
col_time time DEFAULT NULL,
pk int(11) NOT NULL AUTO_INCREMENT,
col_time_key time DEFAULT NULL,
col_int_key int(11) DEFAULT NULL,
PRIMARY KEY (pk),
KEY col_blob_key (col_blob_key(255)),
KEY col_datetime_key (col_datetime_key),
KEY col_varchar_key (col_varchar_key),
KEY col_date_key (col_date_key),
KEY col_time_key (col_time_key),
KEY col_int_key (col_int_key)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=latin1;
CREATE OR REPLACE VIEW view_dd AS SELECT * FROM dd;
EXPLAIN WITH cte AS (
SELECT
alias1 . col_date AS field1 ,
alias1 . col_blob AS field2 ,
alias1 . pk AS field3 ,
alias1 . pk AS field4
FROM  dd AS alias1  LEFT  JOIN d AS alias2
ON  alias1 . col_varchar_key =  alias2 . col_varchar_key
WHERE  alias2 . pk != 0
OR  alias2 . col_varchar_key >= 'v'
ORDER BY field4 )
DELETE /*+ NO_MERGE(outrcte) */  outr2.*
FROM d AS outr1 JOIN d AS outr2
ON ( outr1 . col_datetime_key = outr2 . col_date )
JOIN cte AS outrcte
ON outr1 . pk = outrcte.field1
WHERE outr1 . col_int_key = (
SELECT  innr1 . col_int AS y
FROM dd AS innr1 INNER JOIN cte AS innrcte
ON innr1.col_int_key = innrcte.field1
WHERE innr1 . col_blob_key = 'h'
ORDER BY innr1 . col_varchar );
```


### 2. What did you expect to see? 
### 3. What did you see instead 
```sql
+---------------------+---------+------+---------------+---------------+
| id                  | estRows | task | access object | operator info |
+---------------------+---------+------+---------------+---------------+
| Delete_109          | N/A     | root |               | N/A           |
| └─TableDual_112     | 0.00    | root |               | rows:0        |
+---------------------+---------+------+---------------+---------------+
2 rows in set (0.02 sec)
```

### 4. What is your TiDB version? 
```
tidb_version(): Release Version: v6.1.0-alpha-197-gd3e076c24
Edition: Community
Git Commit Hash: d3e076c2424c16329786a5433dfe1a27985eb113
Git Branch: master
UTC Build Time: 2022-04-14 18:25:36
GoVersion: go1.17.2
Race Enabled: false
TiKV Min Version: v3.0.0-60965b006877ca7234adaced7890d7b029ed1306
Check Table Before Drop: false
```


