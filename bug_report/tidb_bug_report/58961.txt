ID: 58961
Title: Error triggered by using keywords such as FIELD and LEFT  OUTER JOIN simultaneously
Description:
## Bug Report

Please answer these questions before submitting your issue. Thanks!

### 1. Minimal reproduce step (Required)

DROP DATABASE IF EXISTS database5;
CREATE DATABASE database5;
USE database5;
CREATE TABLE t0(c0 BLOB(496) , c1 NUMERIC , c2 CHAR DEFAULT '[' );
CREATE TABLE t1(c0 TINYINT UNSIGNED ZEROFILL CHECK (c0) );
set @@tidb_opt_insubq_to_join_and_agg=1;
INSERT INTO t0(c0) VALUES ('9g') ON DUPLICATE KEY UPDATE c1=((true)NOT LIKE(CEIL(t0.c0)));
TRUNCATE t0;
set @@tidb_enable_window_function=1;
REPLACE INTO t0(c2, c0, c1) VALUES ('1', '', 1174771409);
REPLACE INTO t0 VALUES ('1416709513', 1167325546, '[');
INSERT DELAYED INTO t0(c1, c0, c2) VALUES (533578369, '9g', '['), (275009087, '[]', '1'), (1939748196, '275009087', '-');
set @@tidb_distsql_scan_concurrency=394;
set @@tidb_init_chunk_size=3;
CREATE INDEX i0 ON t0(c2 ASC, c1 DESC, c0(148));
REPLACE INTO t0(c2, c1) VALUES ('1', 1158740954);
INSERT INTO t0 VALUES ('', 275009087, '9');
INSERT IGNORE  INTO t0(c2) VALUES ('F');
CREATE OR REPLACE VIEW v0(c0) AS SELECT CEILING('ï¯š\r-FDsi') FROM t0 WHERE t0.c2;

1. SELECT t0.c0, v0.c0, t0.c1, t1.c0 FROM t0,  v0 LEFT JOIN t1 ON '';
2. SELECT t0.c0, v0.c0, t0.c1, t1.c0 FROM t0,  v0 LEFT  OUTER JOIN t1 ON '' WHERE FIELD(v0.c0, (~ (((((t0.c2)AND(t0.c1)))<<(t1.c0)))), 'F', '8') UNION ALL SELECT t0.c0, v0.c0, t0.c1, t1.c0 FROM t0,  v0 LEFT  OUTER JOIN t1 ON '' WHERE (NOT (FIELD(v0.c0, (~ (((((t0.c2)AND(t0.c1)))<<(t1.c0)))), 'F', '8'))) UNION ALL SELECT t0.c0, v0.c0, t0.c1, t1.c0 FROM t0,  v0 LEFT JOIN t1 ON '' WHERE ((FIELD(v0.c0, (~ (((((t0.c2)AND(t0.c1)))<<(t1.c0)))), 'F', '8')) IS NULL);


### 2. What did you expect to see? (Required)
I think these two query results should be the same. The first query does not have a where condition, and the second query returns union all results for true, false, and unknown under the same condition. According to the three value logic, these two results should be the same, but in fact, they return different amounts of data
1. mysql> SELECT t0.c0, v0.c0, t0.c1, t1.c0 FROM t0,  v0 LEFT JOIN t1 ON '';
+------------+----+------------+------+
| c0         | c0 | c1         | c0   |
+------------+----+------------+------+
|            |  0 | 1174771409 | NULL |
|            |  0 | 1174771409 | NULL |
|            |  0 | 1174771409 | NULL |
|            |  0 | 1174771409 | NULL |
| 1416709513 |  0 | 1167325546 | NULL |
| 1416709513 |  0 | 1167325546 | NULL |
| 1416709513 |  0 | 1167325546 | NULL |
| 1416709513 |  0 | 1167325546 | NULL |
| 9g         |  0 |  533578369 | NULL |
| 9g         |  0 |  533578369 | NULL |
| 9g         |  0 |  533578369 | NULL |
| 9g         |  0 |  533578369 | NULL |
| []         |  0 |  275009087 | NULL |
| []         |  0 |  275009087 | NULL |
| []         |  0 |  275009087 | NULL |
| []         |  0 |  275009087 | NULL |
| 275009087  |  0 | 1939748196 | NULL |
| 275009087  |  0 | 1939748196 | NULL |
| 275009087  |  0 | 1939748196 | NULL |
| 275009087  |  0 | 1939748196 | NULL |
| NULL       |  0 | 1158740954 | NULL |
| NULL       |  0 | 1158740954 | NULL |
| NULL       |  0 | 1158740954 | NULL |
| NULL       |  0 | 1158740954 | NULL |
|            |  0 |  275009087 | NULL |
|            |  0 |  275009087 | NULL |
|            |  0 |  275009087 | NULL |
|            |  0 |  275009087 | NULL |
| NULL       |  0 |       NULL | NULL |
| NULL       |  0 |       NULL | NULL |
| NULL       |  0 |       NULL | NULL |
| NULL       |  0 |       NULL | NULL |
+------------+----+------------+------+
32 rows in set, 6 warnings (0.01 sec)

2. mysql> SELECT t0.c0, v0.c0, t0.c1, t1.c0 FROM t0,  v0 LEFT  OUTER JOIN t1 ON '' WHERE FIELD(v0.c0, (~ (((((t0.c2)AND(t0.c1)))<<(t1.c0)))), 'F', '8') UNION ALL SELECT t0.c0, v0.c0, t0.c1, t1.c0 FROM t0,  v0 LEFT  OUTER JOIN t1 ON '' WHERE (NOT (FIELD(v0.c0, (~ (((((t0.c2)AND(t0.c1)))<<(t1.c0)))), 'F', '8'))) UNION ALL SELECT t0.c0, v0.c0, t0.c1, t1.c0 FROM t0,  v0 LEFT JOIN t1 ON '' WHERE ((FIELD(v0.c0, (~ (((((t0.c2)AND(t0.c1)))<<(t1.c0)))), 'F', '8')) IS NULL);
Empty set, 29 warnings (0.01 sec)

### 3. What did you see instead (Required)
These two results should be the same.

### 4. What is your TiDB version? (Required)
Release Version: v7.5.1
Edition: Community
Git Commit Hash: https://github.com/pingcap/tidb/commit/7d16cc79e81bbf573124df3fd9351c26963f3e70
Git Branch: heads/refs/tags/v7.5.1
UTC Build Time: 2024-02-27 14:28:32
GoVersion: go1.21.6
Race Enabled: false
Check Table Before Drop: false
Store: unistore


