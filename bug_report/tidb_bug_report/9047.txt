ID: 9047
Title: Lost connection to MySQL server during query-index out of range
Description:
## Bug Report

Please answer these questions before submitting your issue. Thanks!

1. What did you do?
If possible, provide a recipe for reproducing the error.
``` sql
SELECT d.* FROM (SELECT t1.classid AS classid, t1.author, t1.createtime, t1.years, t1.sx AS sx, t2.classid AS mobile_classid, t2.sx AS mobile_sx, t1.url, t1.title, t1.pc_week2 AS week2, t1.pc_last_year_week AS last_year_week, t1.pc_last_week AS last_week, if(t2.mobile_week2 IS NULL,'0|0|0|0|0',t2.mobile_week2) AS mobile_field, if(t2.mobile_last_year_week IS NULL,'0|0|0|0|0',t2.mobile_last_year_week) AS mobile_last_year_week, t1.sortField, if(t2.mobile_last_week IS NULL,'0|0|0|0|0',t2.mobile_last_week) AS mobile_last_week from (SELECT a.classid,c.sx,a.createtime,a.years,a.author,c.classpath AS url,a.dn,c.classname AS title,a.device,a.week2 AS pc_week2,b.week2 AS pc_last_year_week, a.week1 AS pc_last_week, CAST(SUBSTRING_INDEX(SUBSTRING_INDEX(a.week2,"|",2),"|",-1) AS signed) AS sortField FROM (SELECT * FROM news_class_data_week WHERE dn="acc"AND years=2019 AND device='pc') a LEFT JOIN (SELECT * FROM news_class_data_week WHERE dn ="acc"AND years =2018 AND device = 'pc') b ON a.url = b.url LEFT JOIN (SELECT * FROM news_class WHERE dn ="acc"AND device = 'pc') c ON a.classid = c.classid WHERE 1=1) t1 LEFT JOIN (SELECT a.classid, c.sx, a.url AS url, a.dn, a.device, a.week2 AS mobile_week2 , b.week2 AS mobile_last_year_week, a.week1 AS mobile_last_week, CAST(SUBSTRING_INDEX(SUBSTRING_INDEX(a.week2 ,"|",2),"|",-1) AS signed) AS sortField FROM (SELECT * FROM news_class_data_week WHERE dn="acc"AND years=2019 AND device='mobile') a LEFT JOIN (SELECT * FROM news_class_data_week WHERE dn="acc"AND years=2018 AND device = 'mobile') b ON a.url = b.url LEFT JOIN (SELECT * FROM news_class WHERE dn="acc"AND device = 'mobile') c ON a.classid = c.classid) t2 ON t1.url=t2.url AND t1.dn=t2.dn GROUP BY t1.url, t1.title ORDER BY t1.sortField*1 DESC) d WHERE d.url LIKE CONCAT('%','zhongjizhicheng','%') LIMIT 0, 10
```
执行一个固定的sql时，在我的环境里面，每10次以内，必产生“Lost connection to MySQL server during query”

2. What did you expect to see?
获取到正确的结果。

3. What did you see instead?
``` sql
 runtime error: index out of range, goroutine 26457 [running]:
github.com/pingcap/tidb/server.(*clientConn).Run.func1(0xc00422cc30, 0xc0263eddff)
	/home/jenkins/workspace/build_tidb_2.1/go/src/github.com/pingcap/tidb/server/conn.go:436 +0x10c
panic(0x11ebd00, 0x2234510)
	/usr/local/go/src/runtime/panic.go:513 +0x1b9
github.com/pingcap/tidb/server.(*clientConn).writeResultset.func1(0x0, 0x1546a60, 0xc001a7ebe0, 0xc0263edbf8, 0xc00422cc30)
	/home/jenkins/workspace/build_tidb_2.1/go/src/github.com/pingcap/tidb/server/conn.go:953 +0x32f
panic(0x11ebd00, 0x2234510)
	/usr/local/go/src/runtime/panic.go:513 +0x1b9
github.com/pingcap/tidb/util/chunk.(*column).isNull(...)
	/home/jenkins/workspace/build_tidb_2.1/go/src/github.com/pingcap/tidb/util/chunk/column.go:71
github.com/pingcap/tidb/util/chunk.Row.IsNull(...)
	/home/jenkins/workspace/build_tidb_2.1/go/src/github.com/pingcap/tidb/util/chunk/row.go:222
github.com/pingcap/tidb/util/chunk.cmpInt64(0xc026f545a0, 0xd, 0x0, 0xc026f545a0, 0x18, 0x0, 0x1)
	/home/jenkins/workspace/build_tidb_2.1/go/src/github.com/pingcap/tidb/util/chunk/compare.go:69 +0x167
github.com/pingcap/tidb/executor.(*topNChunkHeap).greaterRow(0xc0008255d8, 0xc026f545a0, 0xd, 0xc026f545a0, 0x18, 0xc016862a00)
	/home/jenkins/workspace/build_tidb_2.1/go/src/github.com/pingcap/tidb/executor/sort.go:264 +0xea
github.com/pingcap/tidb/executor.(*topNChunkHeap).keyChunksGreater(0xc0008255d8, 0x1, 0x0, 0xc026f54500)
	/home/jenkins/workspace/build_tidb_2.1/go/src/github.com/pingcap/tidb/executor/sort.go:252 +0x9b
github.com/pingcap/tidb/executor.(*topNChunkHeap).Less(0xc0008255d8, 0x1, 0x0, 0xc026f54500)
	/home/jenkins/workspace/build_tidb_2.1/go/src/github.com/pingcap/tidb/executor/sort.go:244 +0x52
container/heap.down(0x1540c60, 0xc0008255d8, 0x0, 0xa, 0xc0168820c0)
	/usr/local/go/src/container/heap/heap.go:115 +0xbf
container/heap.Fix(0x1540c60, 0xc0008255d8, 0x0)
	/usr/local/go/src/container/heap/heap.go:88 +0x61
github.com/pingcap/tidb/executor.(*TopNExec).processChildChk(0xc022624000, 0xc026f54540, 0xc026f54510, 0xc026f54540, 0x0)
	/home/jenkins/workspace/build_tidb_2.1/go/src/github.com/pingcap/tidb/executor/sort.go:426 +0x17a
github.com/pingcap/tidb/executor.(*TopNExec).executeTopN(0xc022624000, 0x153eb20, 0xc001a7cb80, 0x0, 0x0)
	/home/jenkins/workspace/build_tidb_2.1/go/src/github.com/pingcap/tidb/executor/sort.go:383 +0x14c
github.com/pingcap/tidb/executor.(*TopNExec).Next(0xc022624000, 0x153eb20, 0xc001a7cb80, 0xc0124ef920, 0x0, 0x0)
	/home/jenkins/workspace/build_tidb_2.1/go/src/github.com/pingcap/tidb/executor/sort.go:316 +0x1a1
github.com/pingcap/tidb/executor.(*ProjectionExec).unParallelExecute(0xc017706a50, 0x153eb20, 0xc001a7cb80, 0xc0124ef950, 0xc0124ef950, 0xc01fe4d300)
	/home/jenkins/workspace/build_tidb_2.1/go/src/github.com/pingcap/tidb/executor/projection.go:163 +0x66
github.com/pingcap/tidb/executor.(*ProjectionExec).Next(0xc017706a50, 0x153eb20, 0xc001a7cb80, 0xc0124ef950, 0x0, 0x0)
	/home/jenkins/workspace/build_tidb_2.1/go/src/github.com/pingcap/tidb/executor/projection.go:152 +0x86
github.com/pingcap/tidb/executor.(*recordSet).Next(0xc004db48a0, 0x153eb20, 0xc001a7cb80, 0xc0124ef950, 0xc004db48a0, 0xc0124ef950)
	/home/jenkins/workspace/build_tidb_2.1/go/src/github.com/pingcap/tidb/executor/adapter.go:97 +0x56
github.com/pingcap/tidb/server.(*tidbResultSet).Next(0xc001a7ebe0, 0x153eb20, 0xc001a7cb80, 0xc0124ef950, 0x4, 0x400)
	/home/jenkins/workspace/build_tidb_2.1/go/src/github.com/pingcap/tidb/server/driver_tidb.go:346 +0x51
github.com/pingcap/tidb/server.(*clientConn).writeChunks(0xc00422cc30, 0x153eb20, 0xc001a7cb80, 0x1546a60, 0xc001a7ebe0, 0xc00000db00, 0xc00422cc30, 0xc0124d79d0)
	/home/jenkins/workspace/build_tidb_2.1/go/src/github.com/pingcap/tidb/server/conn.go:1002 +0x33d
github.com/pingcap/tidb/server.(*clientConn).writeResultset(0xc00422cc30, 0x153eb20, 0xc001a7cb80, 0x1546a60, 0xc001a7ebe0, 0xc000007900, 0x0, 0x0, 0x0)
	/home/jenkins/workspace/build_tidb_2.1/go/src/github.com/pingcap/tidb/server/conn.go:966 +0x1bc
github.com/pingcap/tidb/server.(*clientConn).handleQuery(0xc00422cc30, 0x153eb20, 0xc001a7cb80, 0xc01
2019/01/14 18:07:43.702 server.go:316: [info] con:63 close connection
```


4. What version of TiDB are you using (`tidb-server -V` or run `select tidb_version();` on TiDB)?

Release Version: v2.1.2-1-g8ba8096
Git Commit Hash: 8ba809622668a1287e9f7152bfd34ad6be220304
Git Branch: release-2.1
UTC Build Time: 2018-12-21 03:45:55
GoVersion: go version go1.11.2 linux/amd64
Race Enabled: false
TiKV Min Version: 2.1.0-alpha.1-ff3dd160846b7d1aed9079c389fc188f7f5ea13e
Check Table Before Drop: false