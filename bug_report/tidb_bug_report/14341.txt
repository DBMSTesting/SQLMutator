ID: 14341
Title: Some linters report issues
Description:
I will try to fix .
```
golangci-lint run ./... --disable-all --enable=golint --enable=govet --enable=ineffassign -v --deadline=30m
INFO [config_reader] Config search paths: [./ /home/xiekeyi/dev/src/github.com/tidb /home/xiekeyi/dev/src/github.com /home/xiekeyi/dev/src /home/xiekeyi/dev /home/xiekeyi /home /] 
INFO [lintersdb] Active 3 linters: [golint govet ineffassign] 
INFO [loader] Go packages loading at mode 575 (types_sizes|compiled_files|imports|name|deps|exports_file|files) took 15.934322591s 
INFO [runner/filename_unadjuster] Pre-built 0 adjustments in 293.486469ms 
INFO [runner/goanalysis_metalinter/goanalysis] analyzers took 22.619523552s with top 10 stages: golint: 5.754058394s, inspect: 4.842161399s, ineffassign: 3.825193207s, ctrlflow: 2.446612615s, printf: 2.311278998s, bools: 393.854919ms, errorsas: 344.817003ms, copylocks: 325.687591ms, unusedresult: 317.119213ms, assign: 279.591002ms 
INFO [runner/max_same_issues] 10/13 issues with text "should not use basic type string as key in context.WithValue" were hidden, use --max-same-issues 
INFO [runner] Issues before processing: 38, after processing: 28 
INFO [runner] Processors filtering stat (out/in): skip_files: 38/38, autogenerated_exclude: 38/38, exclude: 38/38, path_shortener: 28/28, cgo: 38/38, skip_dirs: 38/38, identifier_marker: 38/38, exclude-rules: 38/38, nolint: 38/38, diff: 38/38, filename_unadjuster: 38/38, source_code: 28/28, max_per_file_from_linter: 38/38, uniq_by_line: 38/38, max_same_issues: 28/38, max_from_linter: 28/28, path_prettifier: 38/38 
INFO [runner] processing took 63.718602ms with stages: nolint: 58.8337ms, exclude: 1.58176ms, source_code: 1.500329ms, identifier_marker: 967.918µs, path_prettifier: 316.784µs, autogenerated_exclude: 275.467µs, skip_dirs: 104.121µs, max_same_issues: 78.603µs, uniq_by_line: 19.293µs, path_shortener: 14.22µs, max_from_linter: 9.269µs, cgo: 7.593µs, filename_unadjuster: 4.62µs, max_per_file_from_linter: 2.982µs, exclude-rules: 703ns, diff: 694ns, skip_files: 546ns 
INFO [runner] linters took 11.115355146s with stages: goanalysis_metalinter: 11.051498411s 
util/rowcodec/decoder.go:38:75: exported func NewDecoder returns unexported type *github.com/pingcap/tidb/util/rowcodec.decoder, which can be annoying to use (golint)
func NewDecoder(columns []ColInfo, handleColID int64, loc *time.Location) *decoder {
                                                                          ^
util/codec/codec.go:66:4: should replace `size += 1` with `size++` (golint)
                        size += 1
                        ^
kv/union_store.go:64:52: exported func NewExistErrInfo returns unexported type *github.com/pingcap/tidb/kv.existErrInfo, which can be annoying to use (golint)
func NewExistErrInfo(idxName string, value string) *existErrInfo {
                                                   ^
types/convert_test.go:769:4: should replace `warningCount += 1` with `warningCount++` (golint)
                        warningCount += 1
                        ^
util/chunk/iterator.go:314:48: exported func NewIterator4RowContainer returns unexported type *github.com/pingcap/tidb/util/chunk.iterator4RowContainer, which can be annoying to use (golint)
func NewIterator4RowContainer(c *RowContainer) *iterator4RowContainer {
                                               ^
privilege/privileges/cache.go:252:3: should replace `head += 1` with `head++` (golint)
                head += 1
                ^
table/tables/tables.go:486:4: should replace `stmtCtx.BaseRowID += 1` with `stmtCtx.BaseRowID++` (golint)
                        stmtCtx.BaseRowID += 1
                        ^
statistics/histogram.go:788:6: should replace `rowCount += 1` with `rowCount++` (golint)
                                        rowCount += 1
                                        ^
statistics/histogram.go:907:6: should replace `totalCount += 1` with `totalCount++` (golint)
                                        totalCount += 1
                                        ^
util/stmtsummary/statement_summary.go:744:4: should replace `ssElement.backoffTypes[backoffType] += 1` with `ssElement.backoffTypes[backoffType]++` (golint)
                        ssElement.backoffTypes[backoffType] += 1
                        ^
util/stmtsummary/statement_summary_test.go:251:2: should replace `expectedSummaryElement.sumBackoffTimes += 1` with `expectedSummaryElement.sumBackoffTimes++` (golint)
        expectedSummaryElement.sumBackoffTimes += 1
        ^
util/stmtsummary/statement_summary_test.go:346:2: should replace `expectedSummaryElement.sumBackoffTimes += 1` with `expectedSummaryElement.sumBackoffTimes++` (golint)
        expectedSummaryElement.sumBackoffTimes += 1
        ^
domain/domain.go:767:36: exported method SysSessionPool returns unexported type *github.com/pingcap/tidb/domain.sessionPool, which can be annoying to use (golint)
func (do *Domain) SysSessionPool() *sessionPool {
                                   ^
planner/core/logical_plan_builder.go:2260:36: exported method TableHints returns unexported type *github.com/pingcap/tidb/planner/core.tableHintInfo, which can be annoying to use (golint)
func (b *PlanBuilder) TableHints() *tableHintInfo {
                                   ^
planner/core/logical_plan_builder.go:3538:3: should replace `newColIndex += 1` with `newColIndex++` (golint)
                newColIndex += 1
                ^
planner/core/planbuilder.go:314:38: exported method GetVisitInfo returns unexported type []github.com/pingcap/tidb/planner/core.visitInfo, which can be annoying to use (golint)
func (b *PlanBuilder) GetVisitInfo() []visitInfo {
                                     ^
planner/core/rule_inject_extra_projection.go:34:24: exported func NewProjInjector returns unexported type *github.com/pingcap/tidb/planner/core.projInjector, which can be annoying to use (golint)
func NewProjInjector() *projInjector {
                       ^
expression/constraint_propagation.go:316:32: exported func NewPartitionPruneSolver returns unexported type github.com/pingcap/tidb/expression.constraintSolver, which can be annoying to use (golint)
func NewPartitionPruneSolver() constraintSolver {
                               ^
expression/partition_pruner.go:40:3: should replace `p.numColumn += 1` with `p.numColumn++` (golint)
                p.numColumn += 1
                ^
executor/adapter.go:192:77: exported method PointGet returns unexported type *github.com/pingcap/tidb/executor.recordSet, which can be annoying to use (golint)
func (a *ExecStmt) PointGet(ctx context.Context, is infoschema.InfoSchema) (*recordSet, error) {
                                                                            ^
executor/table_readers_required_rows_test.go:94:8: should not use basic type string as key in context.WithValue (golint)
        ctx = context.WithValue(ctx, "totalRows", totalRows)
              ^
executor/table_readers_required_rows_test.go:95:8: should not use basic type string as key in context.WithValue (golint)
        ctx = context.WithValue(ctx, "expectedRowsRet", expectedRowsRet)
              ^
session/session.go:1717:69: exported func CreateSessionWithDomain returns unexported type *github.com/pingcap/tidb/session.session, which can be annoying to use (golint)
func CreateSessionWithDomain(store kv.Storage, dom *domain.Domain) (*session, error) {
                                                                    ^
store/tikv/gcworker/gc_worker.go:842:9: should not use basic type string as key in context.WithValue (golint)
                ctx = context.WithValue(ctx, "injectedBackoff", struct{}{})
                      ^
executor/executor_test.go:913:23: should replace `i += 1` with `i++` (golint)
        for i := 3; i <= 10; i += 1 {
                             ^
executor/executor_test.go:917:24: should replace `i += 1` with `i++` (golint)
        for i := 11; i <= 20; i += 1 {
                              ^
executor/executor_test.go:920:24: should replace `i += 1` with `i++` (golint)
        for i := 21; i <= 30; i += 1 {
                              ^
executor/executor_test.go:2945:3: should replace `count += 1` with `count++` (golint)
                count += 1
                ^
INFO File cache stats: 21 entries of total size 912.0KiB 
INFO Memory: 259 samples, avg is 389.1MB, max is 1477.8MB 
INFO Execution took 27.351202867s                 
```