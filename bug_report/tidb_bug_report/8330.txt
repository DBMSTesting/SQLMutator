ID: 8330
Title: plan-cache memory leak
Description:
## Bug Report

1. What did you do?
If possible, provide a recipe for reproducing the error.

- enable plan-cache and set a big plan-cache capacity
- open mulitple connections to tidb and for each of them do a dead loop to "prepare -> execute -> deallocate" 
- see memory metric from granafna or htop.

can reproduce using this java code

```java
		Connection connection = null;
		PreparedStatement ps = null;
		try {
			connection = dataSource.getConnection();
			ps = connection.prepareStatement(" INSERT INTO TEST_TBL (COL0,COL1,COL2,COL3,COL4,COL5,COL6,COL7,COL8) VALUES(?,?,?,?,?,?,?,?,NOW(3)) ON DUPLICATE KEY UPDATE COL6=values(col6), COL7=values(col7), COL8=values(col8)");
			while (true) {
				try {
					for (int i1 = 0; i1 < 100; i1++) {
						ps.setString(1, i1 + "1");
						ps.setInt(2, 1);
						ps.setString(3, "1");
						ps.setInt(4, 1);
						ps.setInt(5, 1);
						ps.setString(6, "1");
						ps.setString(7, "1");
						ps.setDate(8, new Date(System.currentTimeMillis()));
						ps.addBatch();
					}
					ps.executeBatch();
					System.out.println("write one batch");
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			closeAll(connection, ps);
		}
```

with jdbc url param:

```
spring.datasource.hikari.data-source-properties.useServerPrepStmts=true
spring.datasource.hikari.data-source-properties.rewriteBatchedStatements=true
spring.datasource.hikari.data-source-properties.allowMultiQueries=true
```

2. What did you expect to see?

tidb memory increase then keep a value

3. What did you see instead?

always increase and OOM

4. What version of TiDB are you using (`tidb-server -V` or run `select tidb_version();` on TiDB)?

- 2.0.1.rc5
