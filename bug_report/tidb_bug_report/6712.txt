ID: 6712
Title: agg/selection after using join will lost redundant column info
Description:
## Description
agg/selection after using join lost redundant schema info

1. What did you do?
If possible, provide a recipe for reproducing the error.

```
drop table t1,t2;
create table t1 (t1 int , t0 int);
create table t2 (t2 int, t0 int);
insert into t1 select 11, 1;
insert into t2 select 22, 1;
```

2. What did you expect to see?

```
mysql> select t1.t0, t2.t0 from t1 join t2 using(t0) group by t1.t0;
+------+------+
| t0   | t0   |
+------+------+
|    1 |    1 |
+------+------+
1 row in set (0.00 sec)

mysql> select t1.t0, t2.t0 from t1 join t2 using(t0) having t1.t0 > 0;
+------+------+
| t0   | t0   |
+------+------+
|    1 |    1 |
+------+------+
1 row in set (0.00 sec)
```

3. What did you see instead?

```
mysql> select t1.t0, t2.t0 from t1 join t2 using(t0) group by t1.t0;
ERROR 1054 (42S22): Unknown column 't2.t0' in 'field list'

mysql> select t1.t0, t2.t0 from t1 join t2 using(t0) having t1.t0 > 0;
ERROR 1054 (42S22): Unknown column 't1.t0' in 'having clause'
```

4. What version of TiDB are you using (`tidb-server -V` or run `select tidb_version();` on TiDB)?

```
Release Version: v2.0.0-rc.4-256-gfdad516a-dirty
Git Commit Hash: fdad516a1b2283b009a9117f63adeb656bc7d889
Git Branch: dev/fix-decimal-test-suit
UTC Build Time: 2018-05-30 02:38:30
GoVersion: go version go1.10.1 linux/amd64
Race Enabled: false
TiKV Min Version: 2.0.0-rc.4.1
```

Current, It seems that `JOIN USING` will save redundant column info into `LogicalJoin.redundantSchema` after [colasced](https://github.com/pingcap/tidb/blob/ff7c0cedb86f0271674abb81443a780f79eda7ca/plan/logical_plan_builder.go#L434), then [lookup](https://github.com/pingcap/tidb/blob/9150b0f25ef9c8c3a22d32db7798d59460d0907f/plan/expression_rewriter.go#L1164) `LogicalJoin.redundantSchema` when later build projection.

But, when a `agg` or `selection` after `join`, they only [copy output schemas](https://github.com/pingcap/tidb/blob/ff7c0cedb86f0271674abb81443a780f79eda7ca/plan/logical_plan_builder.go#L114) but redundant info is lost, then projection will meet this error.
## SIG slack channel

 [#sig-planner](https://slack.tidb.io/invite?team=tidb-community&channel=sig-planner&ref=high-performance)

## Score

- 300

## Mentor

* @lzmhhh123
