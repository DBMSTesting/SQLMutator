ID: 39398
Title: br, after flashback, pitr restore data to downstram, data inconsistent with upstream
Description:
## Bug Report

Please answer these questions before submitting your issue. Thanks!

### 1. Minimal reproduce step (Required)

1. start pitr task in upstream
    tiup br log start -s "s3://tmp/br-lt-log-backup-new?access-key=minioadmin&secret-access-key=minioadmin&endpoint=http%3a%2f%2fminio.pingcap.net%3a9000&force-path-style=true" --task-name="pitr" --check-requirements=false
2. br full backup
    tiup br backup full --pd 172.16.6.46:2379 --backupts '2022-11-25 11:30:00' --storage "s3://tmp/backup-46-snapshot-20221125113000?access-key=minioadmin&secret-access-key=minioadmin&endpoint=http%3a%2f%2fminio.pingcap.net%3a9000&force-path-style=true" --ratelimit 128 --log-file backupfull-46.log
3. run workload
4. pause pitr task, execute flashback  in upstream, during flashback, resume pitr task
5. pitr restore to downstream
    tiup br restore point --pd=172.16.5.101:2379 --storage="s3://tmp/br-lt-log-backup-new?access-key=minioadmin&secret-access-key=minioadmin&endpoint=http%3a%2f%2fminio.pingcap.net%3a9000&force-path-style=true"   --restored-ts="2022-11-25 14:44:00+0800" --concurrency 64 --full-backup-storage="s3://tmp/backup-46-snapshot-20221125113000?access-key=minioadmin&secret-access-key=minioadmin&endpoint=http%3a%2f%2fminio.pingcap.net%3a9000&force-path-style=true"

### 2. What did you expect to see? (Required)
上游
```sql
MySQL [flashback]> select count(*) from user_data1 as of timestamp  '2022-11-25 14:44:00';
+----------+
| count(*) |
+----------+
|    86892 |
+----------+
1 row in set (0.31 sec)

MySQL [flashback]> select count(*) from user_data2 as of timestamp  '2022-11-25 14:44:00';
+----------+
| count(*) |
+----------+
|    86414 |
+----------+
1 row in set (0.12 sec)

MySQL [flashback]> select count(*) from user_data3 as of timestamp  '2022-11-25 14:44:00';
+----------+
| count(*) |
+----------+
|    86516 |
+----------+
1 row in set (0.21 sec)

MySQL [flashback]> select count(*) from user_data4 as of timestamp  '2022-11-25 14:44:00';
+----------+
| count(*) |
+----------+
|    86204 |
+----------+
1 row in set (0.24 sec)

MySQL [flashback]> select count(*) from user_data5 as of timestamp  '2022-11-25 14:44:00';
+----------+
| count(*) |
+----------+
|    86021 |
+----------+
1 row in set (0.01 sec)

MySQL [flashback]> select count(*) from user_data6 as of timestamp  '2022-11-25 14:44:00';
+----------+
| count(*) |
+----------+
|    86591 |
+----------+
1 row in set (0.22 sec)

MySQL [flashback]> select count(*) from user_data7 as of timestamp  '2022-11-25 14:44:00';
+----------+
| count(*) |
+----------+
|    86572 |
+----------+
1 row in set (0.23 sec)

MySQL [flashback]> select count(*) from user_data8 as of timestamp  '2022-11-25 14:44:00';
+----------+
| count(*) |
+----------+
|    86504 |
+----------+
1 row in set (0.24 sec)

MySQL [flashback]> select count(*) from user_data9 as of timestamp  '2022-11-25 14:44:00';
+----------+
| count(*) |
+----------+
|    86737 |
+----------+
1 row in set (0.00 sec)

MySQL [flashback]> select count(*) from user_data10 as of timestamp '2022-11-25 14:44:00';
+----------+
| count(*) |
+----------+
|    86585 |
+----------+
1 row in set (0.05 sec)

MySQL [flashback]> select count(*) from user_data1 ;
+----------+
| count(*) |
+----------+
|    86892 |
+----------+
1 row in set (0.01 sec)

MySQL [flashback]> select count(*) from user_data1 ;
+----------+
| count(*) |
+----------+
|    86892 |
+----------+
1 row in set (0.00 sec)

MySQL [flashback]> select count(*) from user_data2 ;
+----------+
| count(*) |
+----------+
|    86414 |
+----------+
1 row in set (0.00 sec)

MySQL [flashback]> select count(*) from user_data3 ;
+----------+
| count(*) |
+----------+
|    86516 |
+----------+
1 row in set (0.20 sec)

MySQL [flashback]> select count(*) from user_data4 ;
+----------+
| count(*) |
+----------+
|    86204 |
+----------+
1 row in set (0.00 sec)

MySQL [flashback]> select count(*) from user_data5 ;
+----------+
| count(*) |
+----------+
|    86021 |
+----------+
1 row in set (0.00 sec)

MySQL [flashback]> select count(*) from user_data6 ;
+----------+
| count(*) |
+----------+
|    86591 |
+----------+
1 row in set (0.01 sec)

MySQL [flashback]> select count(*) from user_data7 ;
+----------+
| count(*) |
+----------+
|    86572 |
+----------+
1 row in set (0.00 sec)

MySQL [flashback]> select count(*) from user_data8 ;
+----------+
| count(*) |
+----------+
|    86504 |
+----------+
1 row in set (0.00 sec)

MySQL [flashback]> select count(*) from user_data9 ;
+----------+
| count(*) |
+----------+
|    86737 |
+----------+
1 row in set (0.00 sec)

MySQL [flashback]> select count(*) from user_data10;
+----------+
| count(*) |
+----------+
|    86585 |
+----------+
1 row in set (0.00 sec)
```
### 3. What did you see instead (Required)
in downstream:
```sql
mysql> select count(*) from user_data1 ;
+----------+
| count(*) |
+----------+
|   113265 |
+----------+
1 row in set (0.08 sec)

mysql> select count(*) from user_data1 ;
+----------+
| count(*) |
+----------+
|   113265 |
+----------+
1 row in set (0.00 sec)

mysql> select count(*) from user_data2 ;
+----------+
| count(*) |
+----------+
|   112831 |
+----------+
1 row in set (0.12 sec)

mysql> select count(*) from user_data3 ;
+----------+
| count(*) |
+----------+
|   146457 |
+----------+
1 row in set (0.13 sec)

mysql> select count(*) from user_data4 ;
+----------+
| count(*) |
+----------+
|   112133 |
+----------+
1 row in set (0.10 sec)

mysql> select count(*) from user_data5 ;
+----------+
| count(*) |
+----------+
|   107855 |
+----------+
1 row in set (0.12 sec)

mysql> select count(*) from user_data6 ;
+----------+
| count(*) |
+----------+
|   106603 |
+----------+
1 row in set (0.08 sec)

mysql> select count(*) from user_data7 ;
+----------+
| count(*) |
+----------+
|   110279 |
+----------+
1 row in set (0.13 sec)

mysql> select count(*) from user_data8 ;
+----------+
| count(*) |
+----------+
|   107949 |
+----------+
1 row in set (0.11 sec)

mysql> select count(*) from user_data9 ;
+----------+
| count(*) |
+----------+
|   106527 |
+----------+
1 row in set (0.09 sec)

mysql> select count(*) from user_data10;
+----------+
| count(*) |
+----------+
|   137416 |
+----------+
1 row in set (0.12 sec)

```
### 4. What is your TiDB version? (Required)

iup is checking updates for component br ...
Starting component `br`: /root/.tiup/components/br/v6.4.0/br -V
Release Version: v6.4.0
Git Commit Hash: d6622378fdedab75aeb65fe0412a0e528c07c7f0
Git Branch: heads/refs/tags/v6.4.0

