ID: 8393
Title: Some statement is troublesome on retry or rollback
Description:
## Feature Request

**Is your feature request related to a problem? Please describe:**
<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->
```
begin;
set variable = xxx;
// do something meet transaction conflict
rollback
```

The "set variable" executes locally, so it always success, while the transaction may conflict and retry.
During retrying, the previous `set variable` may take effect, and may cause some trouble.

"set variable = xxx" is one of the example, actually there are many kinds of similar statement.
`set @@tidb_snapshot` ...
`prepare stmt ...`  ... prepared twice during retry?
`execute stmt use ...` ... execute using the wrong environment ?
`dealloc stmt ...` dealloc twice ?

There are two kinds of statement mixed in the `begin ... commit` transaction, some of them executes locally so always guarantee to success, and other may fail. During retry or rollback, it's quite troublesome.

**Describe the feature you'd like:**
<!-- A clear and concise description of what you want to happen. -->

We should find a general mechanism to handle the problem.

**Describe alternatives you've considered:**
<!-- A clear and concise description of any alternative solutions or features you've considered. -->

An open discuss is welcomed in this thread.

**Teachability, Documentation, Adoption, Migration Strategy:**
<!-- If you can, explain some scenarios how users might use this, situations it would be helpful in. Any API designs, mockups, or diagrams are also helpful. -->