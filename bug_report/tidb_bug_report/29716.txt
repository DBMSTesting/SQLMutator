ID: 29716
Title: executor: SQL after IndexLookUpExecutor may be slow
Description:
## Bug Report

Please answer these questions before submitting your issue. Thanks!

### 1. Minimal reproduce step (Required)

- 1. Create a table with a non-unique index, generate about 10,000,000 rows(I use this [script](https://gist.github.com/you06/c4f5032b6492864e72afea2119207c85)).
- 2. Make an indexlookup query with limit, once it's done, do `select 1;`.
- 3. Repeat step2.

### 2. What did you expect to see? (Required)

The `select 1;` query should be fast, at least less than 10ms.

### 3. What did you see instead (Required)

```sql
MySQL [test]> select * from t force index(i) where c2 > 1 and c2 < 12000000 and c3 in (3) order by c2 desc limit 11; select 1;
+----------+----------+------+
| c1       | c2       | c3   |
+----------+----------+------+
|  2925230 | 11999949 |    3 |
|  4950694 | 11999947 |    3 |
| 11778881 | 11999851 |    3 |
|  2244706 | 11999851 |    3 |
| 10488089 | 11999821 |    3 |
|  5891917 | 11999812 |    3 |
| 11706844 | 11999801 |    3 |
| 10178503 | 11999619 |    3 |
| 13321140 | 11999576 |    3 |
|  5117855 | 11999563 |    3 |
|  9638867 | 11999561 |    3 |
+----------+----------+------+
11 rows in set (0.00 sec)

+---+
| 1 |
+---+
| 1 |
+---+
1 row in set (0.49 sec)
```

The `select 1;` costs about half a second.

### 4. What is your TiDB version? (Required)

```
Release Version: v5.4.0-alpha-87-g58c02d5bb
Edition: Community
Git Commit Hash: 58c02d5bb7b25aa810c8279c5eb7de95a0362356
Git Branch: master
UTC Build Time: 2021-11-11 11:47:06
GoVersion: go1.16.4
Race Enabled: false
TiKV Min Version: v3.0.0-60965b006877ca7234adaced7890d7b029ed1306
Check Table Before Drop: false
```

