ID: 53600
Title: index out of range [1] with length 1 in `executor.(*PipelinedWindowExec).getRow`
Description:
## Bug Report

Please answer these questions before submitting your issue. Thanks!

### 1. Minimal reproduce step (Required)
First execute the following valid.sql
[valid.txt](https://github.com/pingcap/tidb/files/15463528/valid.txt)
Then a crash occurs when executing the error.sql below
[error.txt](https://github.com/pingcap/tidb/files/15463530/error.txt)
<!-- a step by step guide for reproducing the bug. -->

### 2. What did you expect to see? (Required)
Expect no crashes

### 3. What did you see instead (Required)
```
runtime error: index out of range [1] with length 1
```
tidb.log:
```
[2024/05/27 12:54:12.442 +00:00] [INFO] [conn.go:1151] ["command dispatched failed"] [conn=1776287798] [session_alias=] [connInfo="id:1776287798, addr:10.1.2.1:57088 status:10, collation:utf8mb4_0900_ai_ci, user:tester"] [command=Query] [status="inTxn:0, autocommit:1"]  [txn_mode=PESSIMISTIC] [timestamp=450052607790022658] [err="runtime error: index out of range [1] with length 1
github.com/pingcap/errors.AddStack
	/root/go/pkg/mod/github.com/pingcap/errors@v0.11.5-0.20240318064555-6bd07397691f/errors.go:178
github.com/pingcap/errors.Trace
	/root/go/pkg/mod/github.com/pingcap/errors@v0.11.5-0.20240318064555-6bd07397691f/juju_adaptor.go:15
github.com/pingcap/tidb/pkg/util.GetRecoverError
	/workspace/source/tidb/pkg/util/util.go:304
github.com/pingcap/tidb/pkg/executor/internal/exec.Next.func1
	/workspace/source/tidb/pkg/executor/internal/exec/executor.go:394
runtime.gopanic
	/usr/local/go/src/runtime/panic.go:914
runtime.goPanicIndexU
	/usr/local/go/src/runtime/panic.go:120
github.com/pingcap/tidb/pkg/executor.(*PipelinedWindowExec).getRow
	/workspace/source/tidb/pkg/executor/pipelined_window.go:244
github.com/pingcap/tidb/pkg/executor.(*PipelinedWindowExec).getEnd
	/workspace/source/tidb/pkg/executor/pipelined_window.go:306
github.com/pingcap/tidb/pkg/executor.(*PipelinedWindowExec).enoughToProduce
	/workspace/source/tidb/pkg/executor/pipelined_window.go:437
github.com/pingcap/tidb/pkg/executor.(*PipelinedWindowExec).Next
	/workspace/source/tidb/pkg/executor/pipelined_window.go:120
github.com/pingcap/tidb/pkg/executor/internal/exec.Next
	/workspace/source/tidb/pkg/executor/internal/exec/executor.go:410
github.com/pingcap/tidb/pkg/executor.(*shuffleWorker).run
	/workspace/source/tidb/pkg/executor/shuffle.go:409
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1650"]
```
### 4. What is your TiDB version? (Required)
```
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| tidb_version()                                                                                                                                                                                                                                                   |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Release Version: v8.2.0-alpha-216-gfe5858b
Edition: Community
Git Commit Hash: fe5858b00cd63808ac414c6e102a353778b0aaa7
Git Branch: HEAD
UTC Build Time: 2024-05-23 01:44:42
GoVersion: go1.21.10
Race Enabled: false
Check Table Before Drop: false
Store: tikv |
+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
```
<!-- Paste the output of SELECT tidb_version() -->
We are the BASS team from the School of Cyber Science and Technology at Beihang University. Our main focus is on system software security, operating systems, and program analysis research, as well as the development of automated program testing frameworks for detecting software defects. Using our self-developed database vulnerability testing tool, we have identified the above-mentioned vulnerabilities in TiDB that may lead to database crashes.