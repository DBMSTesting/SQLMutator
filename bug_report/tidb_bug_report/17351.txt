ID: 17351
Title: (copr test fails) TopN gets wrong ordered results
Description:
## Bug Report

Please answer these questions before submitting your issue. Thanks!

### 1. Minimal reproduce step (Required)

Test case sources are available in https://github.com/tikv/copr-test/tree/master/push-down-test/prepare

```
[2020-05-21T03:10:12.084Z] Test case: sql/randgen-topn/3_compare_2.sql
[2020-05-21T03:10:12.084Z] Statement: #507 -  SELECT COALESCE( `col_tinyint_unsigned`, ( COALESCE( ( LEAST( `col_double_unsigned_key`, 4556, ( '2000-01-09' >= ( STRCMP( `col_time_key`, `col_smallint_unsigned_key` ) ) ) ) ), ( ( STRCMP( ( `col_float_unsigned` IS NOT TRUE ), `col_char_255_key` ) ) > ( 'nmo' != -15482 ) ), '1990-06-16 17:22:56.005534' ) ), '2007-07-03', `col_float`, ( `col_float` BETWEEN 0 AND ( ( GREATEST( ( ( `col_set` <=> '2027-11-11' ) <> ( ( ( COALESCE( 'moxqnhbnkyxksjwoaajpbxxobggqewsbvtlqqjkkakmuskosyzsuhdlvfrhobgixtbeqjisgazsdqtccshcxarzvuxsjteeyxmzfxpu', 'p' ) ) IS NULL ) < ( STRCMP( ( `col_int_key` >= 'oxqnhbnkyxksjwoaajpbxxobggqewsbvtlqqjkkakmuskosyzsuhdlvfrhobgixtbeqjisgazsdqtccshcxarzvuxsjteeyxmzfxpuenwuwdczcyaumvpzhxuzftshcwrycsohwtdkrljskkbbbpvsxhzmlpqxozpcrpvqevuvdosgxtlunuhjyomjbucywsqgvbwromzotrdldqfpqvjaxfyhndbzyuuupvchaxe' ), ( -24369 != 'xqnhbnkyxksjwoaajpbxxobggqewsbvtlqqjkkakmuskosyzsuhdlvfrhobgixtbeqjisgazsdqtccshcxarzvuxsjteeyxmzfxpuenwuwdczcyaumvpzhxuzftshcwrycsohwtdkrljskkbbbpvsxhzmlpqxozpcrpvqevuvdosgxtlunuhjyomjbucywsqgvbwromz' ) ) ) ) ), '20:14:46.019164' ) ) <> 'j' ) ) ) AS field1, ISNULL( ( ( ( STRCMP( ( `col_year` IS FALSE ), 7334674943126274048 ) ) IN ( -607985949695016960, `col_varbinary_32`, '2023-03-02 19:05:21.008216', ( 0 < 0 ), `col_set_key` ) ) NOT BETWEEN ( ( 51 IS NOT NULL ) NOT IN ( NULL, ( ISNULL( ( `col_varbinary_32_key` IS UNKNOWN ) ) ) ) ) AND `col_binary_8_key` ) ) AS field2, LEAST( `col_varbinary_32_key`, `col_text_key` ) AS field3 FROM `table1000_int_autoinc` WHERE ( 0 <> `col_decimal_unsigned_key` ) IN ( ( COALESCE( ( `col_double_unsigned` = `col_char_2` ), `col_datetime_key` ) ), ( INTERVAL( ( COALESCE( '04:24:43.033324' ) ), `col_text` ) ) ) ORDER BY field1, field2, field3 LIMIT 7 /* QNO 509 CON_ID 196 */ ;
[2020-05-21T03:10:12.084Z] NoPushDown Output: 
[2020-05-21T03:10:12.084Z] field1	field2	field3
[2020-05-21T03:10:12.084Z] 0	0	NULL
[2020-05-21T03:10:12.084Z] 0	0	NULL
[2020-05-21T03:10:12.084Z] 0	0	NULL
[2020-05-21T03:10:12.084Z] 0	0	NULL
[2020-05-21T03:10:12.084Z] 0	0	NULL
[2020-05-21T03:10:12.084Z] 0	0	NULL
[2020-05-21T03:10:12.084Z] 0	0	NULL
[2020-05-21T03:10:12.084Z] 
[2020-05-21T03:10:12.084Z] 
[2020-05-21T03:10:12.084Z] WithPushDown Output: 
[2020-05-21T03:10:12.084Z] field1	field2	field3
[2020-05-21T03:10:12.084Z] 0	0	NULL
[2020-05-21T03:10:12.084Z] 0	0	NULL
[2020-05-21T03:10:12.084Z] 0	0	NULL
[2020-05-21T03:10:12.084Z] 0	0	NULL
[2020-05-21T03:10:12.084Z] 0	0	0
[2020-05-21T03:10:12.084Z] 0	0	1622605824
[2020-05-21T03:10:12.084Z] 0	0	NULL
[2020-05-21T03:10:12.084Z] 
[2020-05-21T03:10:12.084Z] 
[2020-05-21T03:10:12.084Z] 
[2020-05-21T03:10:12.084Z] NoPushDown Plan: 
[2020-05-21T03:10:12.084Z] id	estRows	task	access object	operator info
[2020-05-21T03:10:12.085Z] Projection_7	7.00	root		coalesce(cast(push_down_test_db.table1000_int_autoinc.col_tinyint_unsigned, var_string(20)), coalesce(cast(least(push_down_test_db.table1000_int_autoinc.col_double_unsigned_key, 4556, cast(ge(2000, strcmp(cast(push_down_test_db.table1000_int_autoinc.col_time_key, var_string(10)), cast(push_down_test_db.table1000_int_autoinc.col_smallint_unsigned_key, var_string(20)))), double BINARY)), var_string(23)), cast(gt(strcmp(cast(not(istrue(push_down_test_db.table1000_int_autoinc.col_float_unsigned)), var_string(20)), push_down_test_db.table1000_int_autoinc.col_char_255_key), 1), var_string(20)), 1990-06-16 17:22:56.005534), 2007-07-03, cast(push_down_test_db.table1000_int_autoinc.col_float, var_string(12)), cast(and(ge(push_down_test_db.table1000_int_autoinc.col_float, 0), le(push_down_test_db.table1000_int_autoinc.col_float, cast(ne(greatest(cast(ne(nulleq(push_down_test_db.table1000_int_autoinc.col_set, 2027-11-11), lt(0, strcmp(cast(ge(push_down_test_db.table1000_int_autoinc.col_int_key, 0), var_string(20)), 1))), double BINARY), 20), 0), double BINARY))), var_string(20)))->Column#62, isnull(not(and(ge(or(or(eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), -607985949695016960), eq(cast(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), double BINARY), cast(push_down_test_db.table1000_int_autoinc.col_varbinary_32, double BINARY))), or(eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), 2023), or(eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), 0), eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), cast(push_down_test_db.table1000_int_autoinc.col_set_key, bigint(20) BINARY))))), not(in(1, <nil>, isnull(isnull(push_down_test_db.table1000_int_autoinc.col_varbinary_32_key))))), le(cast(or(or(eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), -607985949695016960), eq(cast(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), double BINARY), cast(push_down_test_db.table1000_int_autoinc.col_varbinary_32, double BINARY))), or(eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), 2023), or(eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), 0), eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), cast(push_down_test_db.table1000_int_autoinc.col_set_key, bigint(20) BINARY))))), double BINARY), cast(push_down_test_db.table1000_int_autoinc.col_binary_8_key, double BINARY)))))->Column#63, least(push_down_test_db.table1000_int_autoinc.col_varbinary_32_key, push_down_test_db.table1000_int_autoinc.col_text_key)->Column#64
[2020-05-21T03:10:12.085Z] └─Projection_14	7.00	root		push_down_test_db.table1000_int_autoinc.col_decimal_unsigned_key, push_down_test_db.table1000_int_autoinc.col_int_key, push_down_test_db.table1000_int_autoinc.col_double_unsigned_key, push_down_test_db.table1000_int_autoinc.col_tinyint_unsigned, push_down_test_db.table1000_int_autoinc.col_char_2, push_down_test_db.table1000_int_autoinc.col_set_key, push_down_test_db.table1000_int_autoinc.col_datetime_key, push_down_test_db.table1000_int_autoinc.col_float_unsigned, push_down_test_db.table1000_int_autoinc.col_binary_8_key, push_down_test_db.table1000_int_autoinc.col_float, push_down_test_db.table1000_int_autoinc.col_char_255_key, push_down_test_db.table1000_int_autoinc.col_double_unsigned, push_down_test_db.table1000_int_autoinc.col_set, push_down_test_db.table1000_int_autoinc.col_smallint_unsigned_key, push_down_test_db.table1000_int_autoinc.col_time_key, push_down_test_db.table1000_int_autoinc.col_varbinary_32_key, push_down_test_db.table1000_int_autoinc.col_text, push_down_test_db.table1000_int_autoinc.col_text_key, push_down_test_db.table1000_int_autoinc.col_year, push_down_test_db.table1000_int_autoinc.col_varbinary_32
[2020-05-21T03:10:12.085Z]   └─TopN_10	7.00	root		Column#65, Column#66, Column#67, offset:0, count:7
[2020-05-21T03:10:12.085Z]     └─Projection_15	8000.00	root		push_down_test_db.table1000_int_autoinc.col_decimal_unsigned_key, push_down_test_db.table1000_int_autoinc.col_int_key, push_down_test_db.table1000_int_autoinc.col_double_unsigned_key, push_down_test_db.table1000_int_autoinc.col_tinyint_unsigned, push_down_test_db.table1000_int_autoinc.col_char_2, push_down_test_db.table1000_int_autoinc.col_set_key, push_down_test_db.table1000_int_autoinc.col_datetime_key, push_down_test_db.table1000_int_autoinc.col_float_unsigned, push_down_test_db.table1000_int_autoinc.col_binary_8_key, push_down_test_db.table1000_int_autoinc.col_float, push_down_test_db.table1000_int_autoinc.col_char_255_key, push_down_test_db.table1000_int_autoinc.col_double_unsigned, push_down_test_db.table1000_int_autoinc.col_set, push_down_test_db.table1000_int_autoinc.col_smallint_unsigned_key, push_down_test_db.table1000_int_autoinc.col_time_key, push_down_test_db.table1000_int_autoinc.col_varbinary_32_key, push_down_test_db.table1000_int_autoinc.col_text, push_down_test_db.table1000_int_autoinc.col_text_key, push_down_test_db.table1000_int_autoinc.col_year, push_down_test_db.table1000_int_autoinc.col_varbinary_32, coalesce(cast(push_down_test_db.table1000_int_autoinc.col_tinyint_unsigned, var_string(20)), coalesce(cast(least(push_down_test_db.table1000_int_autoinc.col_double_unsigned_key, 4556, cast(ge(2000, strcmp(cast(push_down_test_db.table1000_int_autoinc.col_time_key, var_string(10)), cast(push_down_test_db.table1000_int_autoinc.col_smallint_unsigned_key, var_string(20)))), double BINARY)), var_string(23)), cast(gt(strcmp(cast(not(istrue(push_down_test_db.table1000_int_autoinc.col_float_unsigned)), var_string(20)), push_down_test_db.table1000_int_autoinc.col_char_255_key), 1), var_string(20)), 1990-06-16 17:22:56.005534), 2007-07-03, cast(push_down_test_db.table1000_int_autoinc.col_float, var_string(12)), cast(and(ge(push_down_test_db.table1000_int_autoinc.col_float, 0), le(push_down_test_db.table1000_int_autoinc.col_float, cast(ne(greatest(cast(ne(nulleq(push_down_test_db.table1000_int_autoinc.col_set, 2027-11-11), lt(0, strcmp(cast(ge(push_down_test_db.table1000_int_autoinc.col_int_key, 0), var_string(20)), 1))), double BINARY), 20), 0), double BINARY))), var_string(20)))->Column#65, isnull(not(and(ge(or(or(eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), -607985949695016960), eq(cast(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), double BINARY), cast(push_down_test_db.table1000_int_autoinc.col_varbinary_32, double BINARY))), or(eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), 2023), or(eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), 0), eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), cast(push_down_test_db.table1000_int_autoinc.col_set_key, bigint(20) BINARY))))), not(in(1, <nil>, isnull(isnull(push_down_test_db.table1000_int_autoinc.col_varbinary_32_key))))), le(cast(or(or(eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), -607985949695016960), eq(cast(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), double BINARY), cast(push_down_test_db.table1000_int_autoinc.col_varbinary_32, double BINARY))), or(eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), 2023), or(eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), 0), eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), cast(push_down_test_db.table1000_int_autoinc.col_set_key, bigint(20) BINARY))))), double BINARY), cast(push_down_test_db.table1000_int_autoinc.col_binary_8_key, double BINARY)))))->Column#66, least(push_down_test_db.table1000_int_autoinc.col_varbinary_32_key, push_down_test_db.table1000_int_autoinc.col_text_key)->Column#67
[2020-05-21T03:10:12.086Z]       └─Selection_11	8000.00	root		or(eq(cast(ne(0, push_down_test_db.table1000_int_autoinc.col_decimal_unsigned_key)), cast(coalesce(cast(eq(push_down_test_db.table1000_int_autoinc.col_double_unsigned, cast(push_down_test_db.table1000_int_autoinc.col_char_2))), cast(push_down_test_db.table1000_int_autoinc.col_datetime_key)))), eq(ne(0, push_down_test_db.table1000_int_autoinc.col_decimal_unsigned_key), interval(4, cast(push_down_test_db.table1000_int_autoinc.col_text))))
[2020-05-21T03:10:12.086Z]         └─TableReader_13	10000.00	root		data:TableFullScan_12
[2020-05-21T03:10:12.086Z]           └─TableFullScan_12	10000.00	cop[tikv]	table:table1000_int_autoinc	keep order:false, stats:pseudo
[2020-05-21T03:10:12.086Z] 
[2020-05-21T03:10:12.086Z] 
[2020-05-21T03:10:12.086Z] WithPushDown Plan: 
[2020-05-21T03:10:12.086Z] id	estRows	task	access object	operator info
[2020-05-21T03:10:12.086Z] Projection_7	7.00	root		coalesce(cast(push_down_test_db.table1000_int_autoinc.col_tinyint_unsigned, var_string(20)), coalesce(cast(least(push_down_test_db.table1000_int_autoinc.col_double_unsigned_key, 4556, cast(ge(2000, strcmp(cast(push_down_test_db.table1000_int_autoinc.col_time_key, var_string(10)), cast(push_down_test_db.table1000_int_autoinc.col_smallint_unsigned_key, var_string(20)))), double BINARY)), var_string(23)), cast(gt(strcmp(cast(not(istrue(push_down_test_db.table1000_int_autoinc.col_float_unsigned)), var_string(20)), push_down_test_db.table1000_int_autoinc.col_char_255_key), 1), var_string(20)), 1990-06-16 17:22:56.005534), 2007-07-03, cast(push_down_test_db.table1000_int_autoinc.col_float, var_string(12)), cast(and(ge(push_down_test_db.table1000_int_autoinc.col_float, 0), le(push_down_test_db.table1000_int_autoinc.col_float, cast(ne(greatest(cast(ne(nulleq(push_down_test_db.table1000_int_autoinc.col_set, 2027-11-11), lt(0, strcmp(cast(ge(push_down_test_db.table1000_int_autoinc.col_int_key, 0), var_string(20)), 1))), double BINARY), 20), 0), double BINARY))), var_string(20)))->Column#62, isnull(not(and(ge(or(or(eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), -607985949695016960), eq(cast(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), double BINARY), cast(push_down_test_db.table1000_int_autoinc.col_varbinary_32, double BINARY))), or(eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), 2023), or(eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), 0), eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), cast(push_down_test_db.table1000_int_autoinc.col_set_key, bigint(20) BINARY))))), not(in(1, <nil>, isnull(isnull(push_down_test_db.table1000_int_autoinc.col_varbinary_32_key))))), le(cast(or(or(eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), -607985949695016960), eq(cast(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), double BINARY), cast(push_down_test_db.table1000_int_autoinc.col_varbinary_32, double BINARY))), or(eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), 2023), or(eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), 0), eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), cast(push_down_test_db.table1000_int_autoinc.col_set_key, bigint(20) BINARY))))), double BINARY), cast(push_down_test_db.table1000_int_autoinc.col_binary_8_key, double BINARY)))))->Column#63, least(push_down_test_db.table1000_int_autoinc.col_varbinary_32_key, push_down_test_db.table1000_int_autoinc.col_text_key)->Column#64
[2020-05-21T03:10:12.086Z] └─Projection_14	7.00	root		push_down_test_db.table1000_int_autoinc.col_decimal_unsigned_key, push_down_test_db.table1000_int_autoinc.col_int_key, push_down_test_db.table1000_int_autoinc.col_double_unsigned_key, push_down_test_db.table1000_int_autoinc.col_tinyint_unsigned, push_down_test_db.table1000_int_autoinc.col_char_2, push_down_test_db.table1000_int_autoinc.col_set_key, push_down_test_db.table1000_int_autoinc.col_datetime_key, push_down_test_db.table1000_int_autoinc.col_float_unsigned, push_down_test_db.table1000_int_autoinc.col_binary_8_key, push_down_test_db.table1000_int_autoinc.col_float, push_down_test_db.table1000_int_autoinc.col_char_255_key, push_down_test_db.table1000_int_autoinc.col_double_unsigned, push_down_test_db.table1000_int_autoinc.col_set, push_down_test_db.table1000_int_autoinc.col_smallint_unsigned_key, push_down_test_db.table1000_int_autoinc.col_time_key, push_down_test_db.table1000_int_autoinc.col_varbinary_32_key, push_down_test_db.table1000_int_autoinc.col_text, push_down_test_db.table1000_int_autoinc.col_text_key, push_down_test_db.table1000_int_autoinc.col_year, push_down_test_db.table1000_int_autoinc.col_varbinary_32
[2020-05-21T03:10:12.086Z]   └─TopN_10	7.00	root		Column#65, Column#66, Column#67, offset:0, count:7
[2020-05-21T03:10:12.087Z]     └─Projection_15	8000.00	root		push_down_test_db.table1000_int_autoinc.col_decimal_unsigned_key, push_down_test_db.table1000_int_autoinc.col_int_key, push_down_test_db.table1000_int_autoinc.col_double_unsigned_key, push_down_test_db.table1000_int_autoinc.col_tinyint_unsigned, push_down_test_db.table1000_int_autoinc.col_char_2, push_down_test_db.table1000_int_autoinc.col_set_key, push_down_test_db.table1000_int_autoinc.col_datetime_key, push_down_test_db.table1000_int_autoinc.col_float_unsigned, push_down_test_db.table1000_int_autoinc.col_binary_8_key, push_down_test_db.table1000_int_autoinc.col_float, push_down_test_db.table1000_int_autoinc.col_char_255_key, push_down_test_db.table1000_int_autoinc.col_double_unsigned, push_down_test_db.table1000_int_autoinc.col_set, push_down_test_db.table1000_int_autoinc.col_smallint_unsigned_key, push_down_test_db.table1000_int_autoinc.col_time_key, push_down_test_db.table1000_int_autoinc.col_varbinary_32_key, push_down_test_db.table1000_int_autoinc.col_text, push_down_test_db.table1000_int_autoinc.col_text_key, push_down_test_db.table1000_int_autoinc.col_year, push_down_test_db.table1000_int_autoinc.col_varbinary_32, coalesce(cast(push_down_test_db.table1000_int_autoinc.col_tinyint_unsigned, var_string(20)), coalesce(cast(least(push_down_test_db.table1000_int_autoinc.col_double_unsigned_key, 4556, cast(ge(2000, strcmp(cast(push_down_test_db.table1000_int_autoinc.col_time_key, var_string(10)), cast(push_down_test_db.table1000_int_autoinc.col_smallint_unsigned_key, var_string(20)))), double BINARY)), var_string(23)), cast(gt(strcmp(cast(not(istrue(push_down_test_db.table1000_int_autoinc.col_float_unsigned)), var_string(20)), push_down_test_db.table1000_int_autoinc.col_char_255_key), 1), var_string(20)), 1990-06-16 17:22:56.005534), 2007-07-03, cast(push_down_test_db.table1000_int_autoinc.col_float, var_string(12)), cast(and(ge(push_down_test_db.table1000_int_autoinc.col_float, 0), le(push_down_test_db.table1000_int_autoinc.col_float, cast(ne(greatest(cast(ne(nulleq(push_down_test_db.table1000_int_autoinc.col_set, 2027-11-11), lt(0, strcmp(cast(ge(push_down_test_db.table1000_int_autoinc.col_int_key, 0), var_string(20)), 1))), double BINARY), 20), 0), double BINARY))), var_string(20)))->Column#65, isnull(not(and(ge(or(or(eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), -607985949695016960), eq(cast(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), double BINARY), cast(push_down_test_db.table1000_int_autoinc.col_varbinary_32, double BINARY))), or(eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), 2023), or(eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), 0), eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), cast(push_down_test_db.table1000_int_autoinc.col_set_key, bigint(20) BINARY))))), not(in(1, <nil>, isnull(isnull(push_down_test_db.table1000_int_autoinc.col_varbinary_32_key))))), le(cast(or(or(eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), -607985949695016960), eq(cast(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), double BINARY), cast(push_down_test_db.table1000_int_autoinc.col_varbinary_32, double BINARY))), or(eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), 2023), or(eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), 0), eq(strcmp(cast(isfalse(push_down_test_db.table1000_int_autoinc.col_year), var_string(20)), 7334674943126274048), cast(push_down_test_db.table1000_int_autoinc.col_set_key, bigint(20) BINARY))))), double BINARY), cast(push_down_test_db.table1000_int_autoinc.col_binary_8_key, double BINARY)))))->Column#66, least(push_down_test_db.table1000_int_autoinc.col_varbinary_32_key, push_down_test_db.table1000_int_autoinc.col_text_key)->Column#67
[2020-05-21T03:10:12.087Z]       └─Selection_11	8000.00	root		or(eq(cast(ne(0, push_down_test_db.table1000_int_autoinc.col_decimal_unsigned_key)), cast(coalesce(cast(eq(push_down_test_db.table1000_int_autoinc.col_double_unsigned, cast(push_down_test_db.table1000_int_autoinc.col_char_2))), cast(push_down_test_db.table1000_int_autoinc.col_datetime_key)))), eq(ne(0, push_down_test_db.table1000_int_autoinc.col_decimal_unsigned_key), interval(4, cast(push_down_test_db.table1000_int_autoinc.col_text))))
[2020-05-21T03:10:12.087Z]         └─TableReader_13	10000.00	root		data:TableFullScan_12
[2020-05-21T03:10:12.087Z]           └─TableFullScan_12	10000.00	cop[tikv]	table:table1000_int_autoinc	keep order:false, stats:pseudo
[2020-05-21T03:10:12.087Z] 

```

https://internal.pingcap.net/idc-jenkins/blue/organizations/jenkins/tidb_ghpr_integration_copr_test/detail/tidb_ghpr_integration_copr_test/4964/pipeline

<!-- a step by step guide for reproducing the bug. -->

### 2. What did you expect to see? (Required)

### 3. What did you see instead (Required)

### 4. Affected version (Required)

<!-- v3.0.0, v4.0.0, etc -->

Seen in https://github.com/pingcap/tidb/pull/16078#issuecomment-631852723

### 5. Root Cause Analysis

<!-- should be filled by the investigator before it's closed -->
