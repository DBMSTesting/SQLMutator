ID: 31240
Title: `tidb_isolation_read_engines` affects exhausting physical plans
Description:
## Bug Report

Please answer these questions before submitting your issue. Thanks!

### 1. Minimal reproduce step (Required)

```sql
create table t(a int, b int);
alter table t set tiflash replica 1;
explain select count(*) from t;  -- plan 1
set @@tidb_isolation_read_engines="tiflash,tidb";
explain select count(*) from t;  -- plan 2
```


### 2. What did you expect to see? (Required)

```
> explain select count(*) from t;  -- plan 1
+----------------------------+----------+-------------------+---------------+---------------------------------+
| id                         | estRows  | task              | access object | operator info                   |
+----------------------------+----------+-------------------+---------------+---------------------------------+
| StreamAgg_20               | 1.00     | root              |               | funcs:count(Column#6)->Column#4 |
| └─TableReader_21           | 1.00     | root              |               | data:StreamAgg_8                |
|   └─StreamAgg_8            | 1.00     | batchCop[tiflash] |               | funcs:count(1)->Column#6        |
|     └─TableFullScan_19     | 10000.00 | batchCop[tiflash] | table:t       | keep order:false, stats:pseudo  |
+----------------------------+----------+-------------------+---------------+---------------------------------+

> explain select count(*) from t;  -- plan 2
+----------------------------+----------+-------------------+---------------+---------------------------------+
| id                         | estRows  | task              | access object | operator info                   |
+----------------------------+----------+-------------------+---------------+---------------------------------+
| StreamAgg_20               | 1.00     | root              |               | funcs:count(Column#6)->Column#4 |
| └─TableReader_21           | 1.00     | root              |               | data:StreamAgg_8                |
|   └─StreamAgg_8            | 1.00     | batchCop[tiflash] |               | funcs:count(1)->Column#6        |
|     └─TableFullScan_19     | 10000.00 | batchCop[tiflash] | table:t       | keep order:false, stats:pseudo  |
+----------------------------+----------+-------------------+---------------+---------------------------------+
```

### 3. What did you see instead (Required)

```
> explain select count(*) from t;  -- plan 1
+----------------------------+----------+-------------------+---------------+---------------------------------+
| id                         | estRows  | task              | access object | operator info                   |
+----------------------------+----------+-------------------+---------------+---------------------------------+
| StreamAgg_20               | 1.00     | root              |               | funcs:count(Column#6)->Column#4 |
| └─TableReader_21           | 1.00     | root              |               | data:StreamAgg_8                |
|   └─StreamAgg_8            | 1.00     | batchCop[tiflash] |               | funcs:count(1)->Column#6        |
|     └─TableFullScan_19     | 10000.00 | batchCop[tiflash] | table:t       | keep order:false, stats:pseudo  |
+----------------------------+----------+-------------------+---------------+---------------------------------+

> explain select count(*) from t;  -- plan 2
+----------------------------+----------+-------------------+---------------+---------------------------------+
| id                         | estRows  | task              | access object | operator info                   |
+----------------------------+----------+-------------------+---------------+---------------------------------+
| HashAgg_11                 | 1.00     | root              |               | funcs:count(Column#5)->Column#4 |
| └─TableReader_12           | 1.00     | root              |               | data:HashAgg_6                  |
|   └─HashAgg_6              | 1.00     | batchCop[tiflash] |               | funcs:count(1)->Column#5        |
|     └─TableFullScan_10     | 10000.00 | batchCop[tiflash] | table:t       | keep order:false, stats:pseudo  |
+----------------------------+----------+-------------------+---------------+---------------------------------+

```

In fact, you can use `/*+ nth_plan() */` hint to enumerate the possible physical plans generated by default. You will find that it will not generate pushed-down `StreamAgg` if you remove `tikv` from `tidb_isolation_read_engines`.

The main reason I find so far is the following code in `getStreamAggs` and `getHashAggs`:
```
if !la.canPushToCop(kv.TiKV) {
			taskTypes = []property.TaskType{property.RootTaskType}
}
```
If you remove `tikv` from `tidb_isolation_read_engines`, then there will be no `tikv` access path, then it's impossible to push to TiKV. But we shouldn't remove `CopTiFlashLocalReadTaskType`.

### 4. What is your TiDB version? (Required)

master

