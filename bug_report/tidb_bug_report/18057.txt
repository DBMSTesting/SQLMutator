ID: 18057
Title: executor: avoid goroutine leak in TableReader along with memory leak 
Description:
## Bug Report

Please answer these questions before submitting your issue. Thanks!

### 1. Minimal reproduce step (Required)

<!-- a step by step guide for reproducing the bug. -->
The [source code](https://github.com/pingcap/tidb/blob/ddcc89dc793fbc89852071702996ea212c342efb/store/tikv/coprocessor.go#L529) only generates go routines, but not handle errors if some exceptions happens.
To to reproduce this issue using failpoint.

On the other hand, if the main thread is cancelled, those generated goroutines should stop correctly.

detail problems:

- [ ] TableReader->Next() is blocked, how to stop the execution once cancel the query manually?
- [ ] When call TableReader->Close(), how to stop coprocessor workers?
- [ ] When coprocessor workes panic, how to cancel the query correctly?
- [ ] what about IndexReader?


### 2. What did you expect to see? (Required)
all goroutine stops and return errors.

### 3. What did you see instead (Required)
other goroutine runs normally and occupy many memory .

### 4. Affected version (Required)
v4.0.x, v3
<!-- v3.0.0, v4.0.0, etc -->

### 5. Root Cause Analysis
lack handing exceptions.

<!-- should be filled by the investigator before it's closed -->
