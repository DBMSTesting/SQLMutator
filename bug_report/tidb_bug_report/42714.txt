ID: 42714
Title: tikv raststore panic when destroy peer
Description:
## Bug Report

Please answer these questions before submitting your issue. Thanks!

### 1. Minimal reproduce step (Required)

jepsen-append test

### 2. What did you expect to see? (Required)
no unexpected error

### 3. What did you see instead (Required)
```code


{:latency-graph {:valid? true},
  :rate-graph {:valid? true},
  :valid? true},
 :workload {:valid? true},
 :valid? true}


Everything looks good! ヽ(‘ー`)ノ
store/TiDB master append auto-retry auto-retry-limit :default txn-mode optimistic isolation :read-committed/20230329T231153.000Z/node-2.node-peer.jepsen-tps-1662379-1-771/kv.log:[2023/03/29 23:18:37.934 +00:00] [FATAL] [[lib.rs:491](http://lib.rs:491/)] ["[region 18634] 18639 failed to get mailbox"] [backtrace="   0: tikv_util::set_panic_hook::{{closure}}\n             at /home/jenkins/agent/workspace/build-common/go/src/[github.com/pingcap/tikv/components/tikv_util/src/lib.rs:490:18\n](http://github.com/pingcap/tikv/components/tikv_util/src/lib.rs:490:18/n)   1: std::panicking::rust_panic_with_hook\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/[panicking.rs:702](http://panicking.rs:702/):17\n   2: std::panicking::begin_panic_handler::{{closure}}\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/[panicking.rs:588](http://panicking.rs:588/):13\n   3: std::sys_common::backtrace::__rust_end_short_backtrace\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys_common/[backtrace.rs:138](http://backtrace.rs:138/):18\n   4: rust_begin_unwind\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/[panicking.rs:584](http://panicking.rs:584/):5\n   5: core::panicking::panic_fmt\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/[panicking.rs:143](http://panicking.rs:143/):14\n   6: raftstore::store::fsm::peer::PeerFsmDelegate<EK,ER,T>::maybe_delay_destroy\n             at /home/jenkins/agent/workspace/build-common/go/src/[github.com/pingcap/tikv/components/raftstore/src/store/fsm/peer.rs:3155:21\n](http://github.com/pingcap/tikv/components/raftstore/src/store/fsm/peer.rs:3155:21/n)      raftstore::store::fsm::peer::PeerFsmDelegate<EK,ER,T>::destroy_peer\n             at /home/jenkins/agent/workspace/build-common/go/src/[github.com/pingcap/tikv/components/raftstore/src/store/fsm/peer.rs:3212:31\n](http://github.com/pingcap/tikv/components/raftstore/src/store/fsm/peer.rs:3212:31/n)   7: raftstore::store::fsm::peer::PeerFsmDelegate<EK,ER,T>::on_apply_res\n             at /home/jenkins/agent/workspace/build-common/go/src/[github.com/pingcap/tikv/components/raftstore/src/store/fsm/peer.rs:2122:21\n](http://github.com/pingcap/tikv/components/raftstore/src/store/fsm/peer.rs:2122:21/n)      raftstore::store::fsm::peer::PeerFsmDelegate<EK,ER,T>::handle_msgs\n             at /home/jenkins/agent/workspace/build-common/go/src/[github.com/pingcap/tikv/components/raftstore/src/store/fsm/peer.rs:659:21\n](http://github.com/pingcap/tikv/components/raftstore/src/store/fsm/peer.rs:659:21/n)   8: <raftstore::store::fsm::store::RaftPoller<EK,ER,T> as batch_system::batch::PollHandler<raftstore::store::fsm::peer::PeerFsm<EK,ER>,raftstore::store::fsm::store::StoreFsm<EK>>>::handle_normal\n             at /home/jenkins/agent/workspace/build-common/go/src/[github.com/pingcap/tikv/components/raftstore/src/store/fsm/store.rs:900:9\n](http://github.com/pingcap/tikv/components/raftstore/src/store/fsm/store.rs:900:9/n)   9: batch_system::batch::Poller<N,C,Handler>::poll\n             at /home/jenkins/agent/workspace/build-common/go/src/[github.com/pingcap/tikv/components/batch-system/src/batch.rs:421:27\n](http://github.com/pingcap/tikv/components/batch-system/src/batch.rs:421:27/n)  10: raftstore::store::worker::refresh_config::PoolController<N,C,H>::increase_by::{{closure}}\n             at /home/jenkins/agent/workspace/build-common/go/src/[github.com/pingcap/tikv/components/raftstore/src/store/worker/refresh_config.rs:76:21\n](http://github.com/pingcap/tikv/components/raftstore/src/store/worker/refresh_config.rs:76:21/n)      std::sys_common::backtrace::__rust_begin_short_backtrace\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys_common/[backtrace.rs:122](http://backtrace.rs:122/):18\n  11: std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/[mod.rs:498](http://mod.rs:498/):17\n      <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic/[unwind_safe.rs:271](http://unwind_safe.rs:271/):9\n      std::panicking::try::do_call\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/[panicking.rs:492](http://panicking.rs:492/):40\n      std::panicking::try\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/[panicking.rs:456](http://panicking.rs:456/):19\n      std::panic::catch_unwind\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/[panic.rs:137](http://panic.rs:137/):14\n      std::thread::Builder::spawn_unchecked_::{{closure}}\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/[mod.rs:497](http://mod.rs:497/):30\n      core::ops::function::FnOnce::call_once{{vtable.shim}}\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/[function.rs:227](http://function.rs:227/):5\n  12: <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/[boxed.rs:1854](http://boxed.rs:1854/):9\n      <alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/[boxed.rs:1854](http://boxed.rs:1854/):9\n      std::sys::unix::thread::Thread::new::thread_start\n             at /rust/toolchains/nightly-2022-02-14-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/unix/[thread.rs:108](http://thread.rs:108/):17\n  13: start_thread\n  14: clone\n"] [location=/home/jenkins/agent/workspace/build-common/go/src/[github.com/pingcap/tikv/components/raftstore/src/store/fsm/peer.rs:3155](http://github.com/pingcap/tikv/components/raftstore/src/store/fsm/peer.rs:3155)] [thread_name=raftstore-7-0]
2023-03-29T23:19:13.809Z plan-exec-1662379-re0-4035708799 ERROR [user:?] - server panicked unexpectedly or data might be inconsistent
```
### 4. What is your TiDB version? (Required)

6.1.1 hotfix

