ID: 15858
Title: Query with RIGHT JOIN causes a server panic
Description:
Consider the following statements:

```sql
CREATE TABLE t0(c0 INT);
CREATE VIEW v0(c0) AS SELECT 0 FROM t0 ORDER BY -t0.c0;
SELECT * FROM v0 RIGHT JOIN t0 ON false; -- connection running loop panic
```
Unexpectedly, the query causes a server panic:
```
[2020/03/30 13:55:01.447 +02:00] [ERROR] [conn.go:659] ["connection running loop panic"] [conn=3] [lastSQL="SELECT * FROM v0 RIGHT JOIN t0 ON false"] [err="runtime error: invalid memory address or nil pointer dereference"] [stack="goroutine 2341 [running]:\ngithub.com/pingcap/tidb/server.(*clientConn).Run.func1(0x2cd7160, 0xc0091aedb0, 0xc00c307d40)\n\t/tidb/server/conn.go:657 +0xee\npanic(0x2662340, 0x3d81c30)\n\t/usr/lib/go-1.13/src/runtime/panic.go:679 +0x1b2\ngithub.com/pingcap/tidb/planner/core.(*rootTask).count(0xc00aa74860, 0x40e0ce4000000000)\n\t/tidb/planner/core/task.go:749 +0x3b\ngithub.com/pingcap/tidb/planner/core.(*PhysicalHashJoin).attach2Task(0xc00967fb00, 0xc00aa746e0, 0x2, 0x2, 0x0, 0x0)\n\t/tidb/planner/core/task.go:523 +0x236\ngithub.com/pingcap/tidb/planner/core.(*baseLogicalPlan).findBestTask(0xc00967f9a0, 0xc00a438d20, 0x0, 0x0, 0x0, 0x0)\n\t/tidb/planner/core/find_best_task.go:195 +0x408\ngithub.com/pingcap/tidb/planner/core.(*baseLogicalPlan).findBestTask(0xc00aa780d0, 0xc00a438cd0, 0x0, 0x0, 0x0, 0x0)\n\t/tidb/planner/core/find_best_task.go:179 +0x61f\ngithub.com/pingcap/tidb/planner/core.physicalOptimize(0x2d0e480, 0xc00aa780b0, 0x21a2, 0x2d0e480, 0xc00aa780b0, 0x2d0e480, 0xc00aa780b0)\n\t/tidb/planner/core/optimizer.go:179 +0xb3\ngithub.com/pingcap/tidb/planner/core.DoOptimize(0x2cd7160, 0xc0091aedb0, 0x2d0f780, 0xc000039700, 0x21a2, 0x2d0e480, 0xc00aa780b0, 0x0, 0x0, 0x0, ...)\n\t/tidb/planner/core/optimizer.go:130 +0xa7\ngithub.com/pingcap/tidb/planner.optimize(0x2cd7160, 0xc0091aedb0, 0x2d0f780, 0xc000039700, 0x2cd8d20, 0xc00a3e2a90, 0x2d048c0, 0xc00a748ff0, 0x0, 0x0, ...)\n\t/tidb/planner/optimize.go:178 +0x5a9\ngithub.com/pingcap/tidb/planner.Optimize(0x2cd7160, 0xc0091aedb0, 0x2d0f780, 0xc000039700, 0x2cd8d20, 0xc00a3e2a90, 0x2d048c0, 0xc00a748ff0, 0x0, 0x0, ...)\n\t/tidb/planner/optimize.go:62 +0x27f\ngithub.com/pingcap/tidb/executor.(*Compiler).Compile(0xc009a66dc8, 0x2cd7160, 0xc0091aedb0, 0x2cde5a0, 0xc00a3e2a90, 0x0, 0x0, 0x0)\n\t/tidb/executor/compiler.go:61 +0x253\ngithub.com/pingcap/tidb/session.(*session).execute(0xc000039700, 0x2cd7160, 0xc0091aedb0, 0xc00aa69801, 0x27, 0xc0091b0a20, 0x0, 0x0, 0xc009a67178, 0x23f13aa)\n\t/tidb/session/session.go:1133 +0x5cf\ngithub.com/pingcap/tidb/session.(*session).Execute(0xc000039700, 0x2cd7160, 0xc0091aedb0, 0xc00aa69801, 0x27, 0x0, 0x0, 0x0, 0x0, 0x0)\n\t/tidb/session/session.go:1084 +0xdb\ngithub.com/pingcap/tidb/server.(*TiDBContext).Execute(0xc0091af140, 0x2cd7160, 0xc0091aedb0, 0xc00aa69801, 0x27, 0xefe1e1, 0x2a00fd0, 0xc009a67278, 0xc009a67268, 0xf9e572)\n\t/tidb/server/driver_tidb.go:248 +0x7c\ngithub.com/pingcap/tidb/server.(*clientConn).handleQuery(0xc00c307d40, 0x2cd7160, 0xc0091aedb0, 0xc00aa69801, 0x27, 0x0, 0x0)\n\t/tidb/server/conn.go:1257 +0x91\ngithub.com/pingcap/tidb/server.(*clientConn).dispatch(0xc00c307d40, 0x2cd7160, 0xc0091aedb0, 0xc00aa69801, 0x28, 0x27, 0x0, 0x0)\n\t/tidb/server/conn.go:898 +0x5e2\ngithub.com/pingcap/tidb/server.(*clientConn).Run(0xc00c307d40, 0x2cd7160, 0xc0091aedb0)\n\t/tidb/server/conn.go:712 +0x27c\ngithub.com/pingcap/tidb/server.(*Server).onConn(0xc000730f20, 0xc00c307d40)\n\t/tidb/server/server.go:415 +0xaf9\ncreated by github.com/pingcap/tidb/server.(*Server).Run\n\t/tidb/server/server.go:333 +0x709\n"]
```
Environment:
```
mysql> select tidb_version();
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| tidb_version()                                                                                                                                                                                                                                                                                          |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Release Version: v4.0.0-beta.2-122-g03b510e4d
Git Commit Hash: 03b510e4dc7817490434ae4cf918a553aabbd7fc
Git Branch: master
UTC Build Time: 2020-03-30 11:44:27
GoVersion: go1.13.4
Race Enabled: false
TiKV Min Version: v3.0.0-60965b006877ca7234adaced7890d7b029ed1306
Check Table Before Drop: false |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)
```