ID: 14211
Title: performance_schema uses nanoseconds instead of picoseconds
Description:
## Bug Report

1. What did you do?

On: [v3.0/reference/performance/statement-summary.md](https://pingcap.com/docs/v3.0/reference/performance/statement-summary/)

The text here looked suspicious to me:
> "As shown in the result below, avg_latency of 1ms and 0.3ms are in the normal range. Therefore, it can be concluded that the server end is not the cause, and continue the troubleshooting with the client or the network."

So I tried it out with an example [on the employee database](https://github.com/datacharmer/test_db) and got the following results:
```
mysql> SELECT avg_latency, exec_count, query_sample_text
    ->     FROM performance_schema.events_statements_summary_by_digest
    ->     WHERE digest_text LIKE ‘select * from employee%’;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your TiDB version for the right syntax to use line 3 column 37 near "* from employee%’" 
mysql> SELECT avg_latency, exec_count, query_sample_text     FROM performance_schema.events_statements_summary_by_digest     WHERE digest_text LIKE 'select * from employee%';
+-------------+------------+-------------------------------------------------+
| avg_latency | exec_count | query_sample_text                               |
+-------------+------------+-------------------------------------------------+
|      533334 |          3 | select * from employees where emp_no=3100       |
|   204853794 |          3 | select * from employees where first_name='eric' |
+-------------+------------+-------------------------------------------------+
2 rows in set (0.00 sec)
```

2. What did you expect to see?

The average latency appears to be in nanoseconds (billionth of a second) not picoseconds (trillionth of a second) as in MySQL. This is a strange incompatibility to have, and not currently documented.. so I assume not intentional.

3. What did you see instead?

204853794 equals about 0.2 seconds (what my client reported). If you repeated this exercise in MySQL, it will be a much larger value.

4. What version of TiDB are you using (`tidb-server -V` or run `select tidb_version();` on TiDB)?

```
mysql> select tidb_version()\G
*************************** 1. row ***************************
tidb_version(): Release Version: v4.0.0-alpha-1246-g7f8c3c808
Git Commit Hash: 7f8c3c8083ced5a0d05684c1b55654577896a846
Git Branch: master
UTC Build Time: 2019-12-24 02:06:14
GoVersion: go1.13
Race Enabled: false
TiKV Min Version: v3.0.0-60965b006877ca7234adaced7890d7b029ed1306
Check Table Before Drop: false
1 row in set (0.00 sec)
```