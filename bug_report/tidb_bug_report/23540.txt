ID: 23540
Title: txn: the async commit transaction status judge may be inaccurate with fallback
Description:
## Bug Report

Please answer these questions before submitting your issue. Thanks!

### 1. Minimal reproduce step (Required)

<!-- a step by step guide for reproducing the bug. -->
This is raised during the investigation of https://github.com/pingcap/tidb/issues/23477.

1. Raise an async commit transaction.
2. Let the transaction fallback to 2pc before the commit stage.
3. Raise another transaction trying to resolve the prewrite locks of the previous transaction.
4. The Resolving steps are as follows:
4.1 LockResolver.resolveLocks
4.2 --getTxnStatusFromLock
4.3 ----LockResolver.getTxnStatus
4.4 ------the primary lock is fetched with `UseAsyncCommit` set to true, return expired status to the callee.
4.5 --resolveLockAsync
4.6 ---- the `nonAsyncCommitLock` is reported
4.7 --`getTxnStatusFromLock` again with `forceSyncCommit` set to true
4.8 ----LockResolver.getTxnStatus again with `forceSyncCommit` set to true
4.9 ------ the primary lock is fetched with `UseAsyncCommit` set to true, return expired status to the callee.
               Note here, as the `forceSyncCommit` is set to true, the transaction is treated as a 2pc one, so the transaction
               status should be judged by the response returned from `check_txn_status` api, but not checking the ttl again.
4.10 ----- Resolve the locks using the normal 2pc lock process.

### 2. What did you expect to see? (Required)
- For the async commit transactions, the transaction status could only be decided by the `resolveLockAsync` path.
- For the normal 2pc transactions or fallback async commit transactions, the transaction status should only be decided by the `check_txn_status` api which checks the primary lock status.

### 3. What did you see instead (Required)

### 4. What is your TiDB version? (Required)
master 
release-5.0

<!-- Paste the output of SELECT tidb_version() -->

