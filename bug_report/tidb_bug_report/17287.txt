ID: 17287
Title: panic when use prepare statement
Description:


## Bug Report

Please answer these questions before submitting your issue. Thanks!

### 1. Minimal reproduce step (Required)

tidb config:

```sql
host = "0.0.0.0"
advertise-address = "127.0.0.1"
port = 4000
cors = ""
store = "tikv"
path = "127.0.0.1:2379"
socket = ""
lease = "45s"
run-ddl = true
split-table = true
token-limit = 1000
oom-use-tmp-storage = true
tmp-storage-path = "/var/folders/hg/gb5bm0z16_553zry1jwyhlmw0000gn/T/tidb/tmp-storage"
oom-action = "cancel"
mem-quota-query = 34359738368
enable-streaming = false
enable-batch-dml = true
lower-case-table-names = 2
server-version = ""
compatible-kill-query = false
check-mb4-value-in-utf8 = true
max-index-length = 3072
alter-primary-key = true
treat-old-version-utf8-as-utf8mb4 = true
enable-table-lock = true
delay-clean-table-lock = 0
split-region-max-num = 10000
repair-mode = false
repair-table-list = []
max-server-connections = 4096
new_collations_enabled_on_first_bootstrap = false

[log]
  level = "info"
  format = "text"
  disable-timestamp = "false"
  enable-timestamp = ""
  disable-error-stack = ""
  enable-error-stack = ""
  enable-slow-log = true
  slow-query-file = "tidb-slow.log"
  slow-threshold = 10000
  expensive-threshold = 10000
  query-log-max-len = 20480
  record-plan-in-slow-log = 1
  [log.file]
    filename = "tidb.log"
    max-size = 300
    max-days = 0
    max-backups = 0

[security]
  skip-grant-table = false
  ssl-ca = ""
  ssl-cert = ""
  ssl-key = ""
  require-secure-transport = false
  cluster-ssl-ca = ""
  cluster-ssl-cert = ""
  cluster-ssl-key = ""

[status]
  status-host = "0.0.0.0"
  metrics-addr = ""
  status-port = 10081
  metrics-interval = 15
  report-status = true
  record-db-qps = false

[performance]
  max-procs = 0
  max-memory = 0
  stats-lease = "1000s"
  stmt-count-limit = 5000
  feedback-probability = 0.0
  query-feedback-limit = 1024
  pseudo-estimate-ratio = 0.8
  force-priority = "NO_PRIORITY"
  bind-info-lease = "3s"
  txn-total-size-limit = 104857600
  tcp-keep-alive = true
  cross-join = true
  run-auto-analyze = false

[prepared-plan-cache]
  enabled = true
  capacity = 100
  memory-guard-ratio = 0.1

[opentracing]
  enable = false
  rpc-metrics = false
  [opentracing.sampler]
    type = "const"
    param = 1.0
    sampling-server-url = ""
    max-operations = 0
    sampling-refresh-interval = 0
  [opentracing.reporter]
    queue-size = 0
    buffer-flush-interval = 0
    log-spans = false
    local-agent-host-port = ""

[proxy-protocol]
  networks = ""
  header-timeout = 5

[tikv-client]
  grpc-connection-count = 16
  grpc-keepalive-time = 10
  grpc-keepalive-timeout = 3
  commit-timeout = "41s"
  max-batch-size = 128
  overload-threshold = 200
  max-batch-wait-time = 0
  batch-wait-size = 8
  enable-chunk-rpc = true
  region-cache-ttl = 600
  store-limit = 0

[binlog]
  enable = false
  ignore-error = false
  write-timeout = "15s"
  binlog-socket = ""
  strategy = "range"

[plugin]
  dir = ""
  load = ""

[pessimistic-txn]
  enable = true
  max-retry-count = 256

[stmt-summary]
  enable = true
  max-stmt-count = 200
  max-sql-length = 4096
  refresh-interval = 1800
  history-size = 24

[isolation-read]
  engines = ["tikv", "tiflash", "tidb"]

[experimental]
  allow-auto-random = false
```

```sql
prepare stmt7 from "SELECT *, unix_timestamp(Time) as timestamp FROM `INFORMATION_SCHEMA`.`CLUSTER_SLOW_QUERY`  WHERE (time between from_unixtime(?) and from_unixtime(?)) ORDER BY Query_time desc LIMIT 100;";
set @val1 = 1589873945;
set @val2 = 1589873955;
execute stmt7 using @val1,@val2;
```
The upper sql will execute successfull, but will get a panic log in tidb:

```log
[2020/05/19 16:30:53.781 +08:00] [ERROR] [conn.go:662] ["connection running loop panic"] [conn=52] [lastSQL="execute stmt7 using @val1,@val2"] [err="runtime error: invalid memory address or nil pointer dereference"] [stack="goroutine 82023 [running]:
github.com/pingcap/tidb/server.(*clientConn).Run.func1(0x67909a0, 0xc000f87950, 0xc0013db1e0)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/server/conn.go:660 +0xee
panic(0x5e6d840, 0x80e2e60)
	/usr/local/go1.13/src/runtime/panic.go:679 +0x1b2
github.com/pingcap/tidb/util/chunk.Row.IsNull(...)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/util/chunk/row.go:207
github.com/pingcap/tidb/expression.(*Column).EvalTime(0xc0016b41e0, 0x67d58c0, 0xc000be7000, 0x0, 0x0, 0xc000be7000, 0xc0000c2c00, 0x9c72648, 0x0)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/expression/column.go:400 +0x1c
github.com/pingcap/tidb/expression.(*builtinUnixTimestampDecSig).evalDecimal(0xc0016d4f20, 0x0, 0x0, 0x61704c0, 0xc000be7001, 0xc00092e1c0, 0xc0015f0590)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/expression/builtin_time.go:4820 +0x71
github.com/pingcap/tidb/expression.(*ScalarFunction).EvalDecimal(...)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/expression/scalar_function.go:359
github.com/pingcap/tidb/expression.(*ScalarFunction).Eval(0xc0012f87d0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, ...)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/expression/scalar_function.go:325 +0x228
github.com/pingcap/tidb/expression.(*Constant).getLazyDatum(0xc0016966c0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, ...)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/expression/constant.go:190 +0x84
github.com/pingcap/tidb/expression.(*Constant).Eval(0xc0016966c0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, ...)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/expression/constant.go:199 +0x65
github.com/pingcap/tidb/expression.(*Constant).String(0xc0016966c0, 0xc0027c0d80, 0x2b)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/expression/constant.go:89 +0xf3
github.com/pingcap/tidb/expression.ExplainExpressionList(0xc0015e0e00, 0x32, 0x32, 0xc0019008a0, 0x30, 0x30)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/expression/explain.go:96 +0x36f
github.com/pingcap/tidb/planner/core.(*PhysicalProjection).ExplainInfo(0xc0016c0280, 0xc003a46a00, 0xa)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/planner/core/explain.go:293 +0x52
github.com/pingcap/tidb/planner/core.(*planEncoder).encodePlan(0xc0039b2210, 0x67d0a20, 0xc0016c0280, 0xc0016c0201, 0x0)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/planner/core/encode.go:60 +0xcb
github.com/pingcap/tidb/planner/core.(*planEncoder).encodePlanTree(0xc0039b2210, 0x67d0a20, 0xc0016c0280, 0xc0016c0280, 0x0)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/planner/core/encode.go:55 +0x82
github.com/pingcap/tidb/planner/core.EncodePlan(0x67c2260, 0xc0016c0280, 0x0, 0x0)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/planner/core/encode.go:49 +0xe0
github.com/pingcap/tidb/executor.(*ExecStmt).SummaryStmt.func1(0xc001610141, 0x1f)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/executor/adapter.go:943 +0x37
github.com/pingcap/tidb/util/stmtsummary.newStmtSummaryByDigestElement(0xc0015f0f88, 0x5ec39908, 0x708, 0xc0002793b0)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/util/stmtsummary/statement_summary.go:571 +0x61
github.com/pingcap/tidb/util/stmtsummary.(*stmtSummaryByDigest).add.func1(0xc003e68a00, 0xc0015f0f88, 0x5ec39908, 0x708, 0x18, 0x0, 0x0)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/util/stmtsummary/statement_summary.go:489 +0x1c8
github.com/pingcap/tidb/util/stmtsummary.(*stmtSummaryByDigest).add(0xc003e68a00, 0xc0015f0f88, 0x5ec39908, 0x708, 0x18)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/util/stmtsummary/statement_summary.go:500 +0x53
github.com/pingcap/tidb/util/stmtsummary.(*stmtSummaryByDigestMap).AddStatement(0xc0003732c0, 0xc0015f0f88)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/util/stmtsummary/statement_summary.go:259 +0x1be
github.com/pingcap/tidb/executor.(*ExecStmt).SummaryStmt(0xc003161f80, 0x5c8b03a64200001)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/executor/adapter.go:963 +0x646
github.com/pingcap/tidb/executor.(*ExecStmt).FinishExecuteStmt(0xc003161f80, 0x5c8b03a64200001, 0x5"]
[2020/05/19 16:30:53.781 +08:00] [INFO] [server.go:391] ["connection closed"] [conn=52]
```

### 2. What did you expect to see? (Required)

No panic

### 3. Affected version (Required)

```sql
mysql>select tidb_version();
+-------------------------------------------------------------------+
| tidb_version()                                                    |
+-------------------------------------------------------------------+
| Release Version: v4.0.0-beta.2-478-g06f16d58d                     |
| Edition: Community                                                |
| Git Commit Hash: 06f16d58d9d1fd0c2859e2140458efa3eae2d3d0         |
| Git Branch: master                                                |
| UTC Build Time: 2020-05-19 08:25:24                               |
| GoVersion: go1.13                                                 |
| Race Enabled: false                                               |
| TiKV Min Version: v3.0.0-60965b006877ca7234adaced7890d7b029ed1306 |
| Check Table Before Drop: false                                    |
+-------------------------------------------------------------------+
```

### 4. Root Cause Analysis

<!-- should be filled by the investigator before it's closed -->
