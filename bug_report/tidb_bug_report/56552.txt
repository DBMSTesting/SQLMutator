ID: 56552
Title: Although the CASE WHEN clause returns the same value as the direct concatenation, NULLIF yields different results in each case
Description:
## Bug Report



### 1. Minimal reproduce step (Required)

```sql
select nullif(SPACE(20), case when false then ('TEST') else ('l' || 'o') end) as c1;
select nullif(SPACE(20), ('l' || 'o')) as c1;
```

### 2. What did you expect to see? (Required)
The condition for CASE WHEN is FALSE, so this clause should return the result of (l || o). This statement should return the same value as SELECT NULLIF(SPACE(5), ('l' || 'o')) AS c1;, but the actual result is not the same.
So they should both return SPACE(20) or both return NULL.

### 3. What did you see instead (Required)
They return different results
```sql
select nullif(SPACE(20), case when false then ('TEST') else ('l' || 'o') end) as c1;
+----------------------+
| c1                   |
+----------------------+
|                      |
+----------------------+
1 row in set, 2 warnings (0.00 sec)

select nullif(SPACE(20), ('l' || 'o')) as c1;
+------+
| c1   |
+------+
| NULL |
+------+
1 row in set, 2 warnings (0.00 sec)

```
### 4. What is your TiDB version? (Required)

```
 select version();
+--------------------+
| version()          |
+--------------------+
| 8.0.11-TiDB-v7.5.1 |
+--------------------+
1 row in set (0.00 sec)

```

