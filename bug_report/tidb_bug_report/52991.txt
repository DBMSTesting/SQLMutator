ID: 52991
Title: `substring` in `select distinct` may lead to incorrect result
Description:
### 1. Minimal reproduce step (Required)
Firstly, execute `init.sql` to create the table. Then executing `error.sql` yields unexpected results. Note that reproducing these results might not be entirely stable. Typically, it can be completed within three attempts. You can try executing `error.sql` multiple times or execute `init.sql` again to rebuild the table.

[init.sql.txt](https://github.com/pingcap/tidb/files/15148951/init.sql.txt)
[error.sql.txt](https://github.com/pingcap/tidb/files/15148950/error.sql.txt)



### 2. What did you expect to see? (Required)
The first column is `substring(repeat(c_bek45hvu8g,9),-10000)`

[SUBSTRING(str,pos)](https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_substring) from MySQL documentation:

> It is also possible to use a negative value for pos. In this case, the beginning of the substring is pos characters from the end of the string, rather than the beginning

when `abs(pos) > length(str)`, an empty string will be returned by TiDB.
```
mysql> select substring('abcdefg', -100);
+----------------------------+
| substring('abcdefg', -100) |
+----------------------------+
|                            |
+----------------------------+
1 row in set (0.00 sec)
```

The maximum length of the string is 90, which is less than 10000.
```
mysql> select max(length(repeat(c_bek45hvu8g,9))) from t_m1i;
+-------------------------------------+
| max(length(repeat(c_bek45hvu8g,9))) |
+-------------------------------------+
|                                  90 |
+-------------------------------------+
1 row in set (0.01 sec)
```


Therefore, the result set should only contain NULL and empty strings. 

### 3. What did you see instead (Required)
However, it seems that in TiDB, when evaluating `substring`, it may be reading beyond the boundaries of the string, resulting in incorrect output.
[output_re_main2.log](https://github.com/pingcap/tidb/files/15148952/output_re_main2.log)




### 4. What is your TiDB version? (Required)
```
Release Version: v8.0.0
Edition: Community
Git Commit Hash: 8ba1fa452b1ccdbfb85879ea94b9254aabba2916
Git Branch: HEAD
UTC Build Time: 2024-03-28 14:22:15
GoVersion: go1.21.4
Race Enabled: false
Check Table Before Drop: false
Store: tikv
```
topology:

distributed.yaml:
```
global:
  user: "tidb"
  ssh_port: 22
  deploy_dir: "/tidb-deploy"
  data_dir: "/tidb-data"

pd_servers:
  - host: 10.0.2.31

tidb_servers:
  - host: 10.0.2.21

tikv_servers:
  - host: 10.0.2.11
  - host: 10.0.2.12
  - host: 10.0.2.13

monitoring_servers:
  - host: 10.0.2.8

grafana_servers:
  - host: 10.0.2.8

alertmanager_servers:
  - host: 10.0.2.8

tiflash_servers:
  - host: 10.0.2.32
```

single.yaml
```
global:
  user: "tidb"
  ssh_port: 22
  deploy_dir: "/tidb-deploy"
  data_dir: "/tidb-data"

pd_servers:
  - host: 10.0.2.73

tidb_servers:
  - host: 10.0.2.72

tikv_servers:
  - host: 10.0.2.71

tiflash_servers:
  - host: 10.0.2.74
```



### about us
We are the BASS team from the School of Cyber Science and Technology at Beihang University. Our main focus is on system software security, operating systems, and program analysis research, as well as the development of automated program testing frameworks for detecting software defects. Using our self-developed database vulnerability testing tool, we have identified the above-mentioned vulnerabilities in TiDB that may lead to database logic error.
