ID: 15746
Title: ANALYZE TABLE causes SIGSEGV on latest trunk
Description:
Consider the following statements:

```sql
CREATE TABLE t0(c0 INT UNIQUE, c2 INT UNIQUE);
REPLACE INTO t0(c0, c2) VALUES (0, 0), (0, 0), (0, 1);
ANALYZE TABLE t0; -- SIGSEGV
```
Unexpectedly, the `ANALYZE` causes `tidb-server` to crash:
```
panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x28 pc=0x1d1920a]

goroutine 52 [running]:
github.com/pingcap/tidb/store/tikv/latch.(*Latches).releaseSlot(0xc0002f51a0, 0xc002445e00, 0x0)
	/home/manuel/research/projects/tidb/store/tikv/latch/latch.go:183 +0x17a
github.com/pingcap/tidb/store/tikv/latch.(*Latches).release(0xc0002f51a0, 0xc002445e00, 0xc00016ff80, 0x0, 0x0, 0xc000085f80, 0x0, 0x0)
	/home/manuel/research/projects/tidb/store/tikv/latch/latch.go:167 +0x70
github.com/pingcap/tidb/store/tikv/latch.(*LatchesScheduler).run(0xc000352440)
	/home/manuel/research/projects/tidb/store/tikv/latch/scheduler.go:56 +0xf4
created by github.com/pingcap/tidb/store/tikv/latch.NewScheduler
	/home/manuel/research/projects/tidb/store/tikv/latch/scheduler.go:43 +0x129
```

I can reproduce this bug on the latest trunk version:
```
mysql> select tidb_version();
+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| tidb_version()                                                                                                                                                                                                                                                                                               |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Release Version: v4.0.0-beta.2-75-ga6de0e38d-dirty
Git Commit Hash: a6de0e38d49c97671d316590c8c945eb518ca2b2
Git Branch: master
UTC Build Time: 2020-03-26 12:11:33
GoVersion: go1.13.4
Race Enabled: false
TiKV Min Version: v3.0.0-60965b006877ca7234adaced7890d7b029ed1306
Check Table Before Drop: false |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)
```
I **cannot reproduce** this on the **latest release version** (5.7.25-TiDB-v3.0.12), which is why I assume that this is not a security vulnerability, and report the issue here on GitHub.