ID: 16779
Title: A predicate with COLLATE 'binary' results in a server panic "invalid memory address or nil pointer dereference"
Description:
Consider the following statements:

```sql
CREATE TABLE t0(c0 INT);
CREATE TABLE t1(c0 INT);
SELECT * FROM t1 LEFT JOIN t0 ON TRUE WHERE BINARY EXPORT_SET(0, 0, 0 COLLATE 'binary', t0.c0, 0 COLLATE 'binary'); -- server panic
```
Unexpectedly, the `SELECT` results in a server panic with the following stack trace:
```
[2020/04/23 22:50:56.540 +02:00] [ERROR] [conn.go:662] ["connection running loop panic"] [conn=2] [lastSQL="SELECT * FROM t1 LEFT JOIN t0 ON TRUE WHERE BINARY EXPORT_SET(0, 0, 0 COLLATE 'binary', t0.c0, 0 COLLATE 'binary')"] [err="runtime error: invalid memory address or nil pointer dereference"] [stack="goroutine 1842 [running]:\ngithub.com/pingcap/tidb/server.(*clientConn).Run.func1(0x2dbcfa0, 0xc030feaab0, 0xc0031ca9c0)\n\t/tidb/server/conn.go:660 +0xee\npanic(0x2726f20, 0x3ec4c60)\n\t/usr/lib/go-1.13/src/runtime/panic.go:679 +0x1b2\ngithub.com/pingcap/tidb/expression.DeriveCollationFromExprs(0x2df6ae0, 0xc039cf3d00, 0xc004570af0, 0x1, 0x1, 0xc002c48c00, 0x0, 0xc0033ebd78, 0x125c1ac, 0x3ed2d20)\n\t/tidb/expression/collation.go:186 +0x116\ngithub.com/pingcap/tidb/expression.newBaseBuiltinFunc(0x2df6ae0, 0xc039cf3d00, 0xc004570af0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, ...)\n\t/tidb/expression/builtin.go:93 +0xae\ngithub.com/pingcap/tidb/expression.(*castAsStringFunctionClass).getFunction(0xc03517b050, 0x2df6ae0, 0xc039cf3d00, 0xc004570af0, 0x1, 0x1, 0x5, 0x19, 0x0, 0x0)\n\t/tidb/expression/builtin_cast.go:269 +0xc4\ngithub.com/pingcap/tidb/expression.BuildCastFunction(0x2df6ae0, 0xc039cf3d00, 0x0, 0x0, 0xc00457db00, 0x2d77540, 0xc004573d40)\n\t/tidb/expression/builtin_cast.go:1770 +0x1b0\ngithub.com/pingcap/tidb/expression.newFunctionImpl(0x2df6ae0, 0xc039cf3d00, 0xc004597301, 0x2a0925a, 0x4, 0xc00457db00, 0xc004570a80, 0x1, 0x1, 0x5, ...)\n\t/tidb/expression/scalar_function.go:182 +0xb3\ngithub.com/pingcap/tidb/expression.NewFunction(...)\n\t/tidb/expression/scalar_function.go:221\ngithub.com/pingcap/tidb/expression.NewFunctionInternal(0x2df6ae0, 0xc039cf3d00, 0x2a0925a, 0x4, 0xc00457db00, 0xc004570a80, 0x1, 0x1, 0xc03517aa20, 0x0)\n\t/tidb/expression/scalar_function.go:231 +0x92\ngithub.com/pingcap/tidb/expression.EvaluateExprWithNull(0x2df6ae0, 0xc039cf3d00, 0xc03517ab40, 0x2e25ac0, 0xc004597360, 0x2e25ac0, 0xc004597360)\n\t/tidb/expression/expression.go:701 +0x1ed\ngithub.com/pingcap/tidb/planner/core.isNullRejected(0x2df6ae0, 0xc039cf3d00, 0xc03517ab40, 0x2e25ac0, 0xc004597360, 0x20300d)\n\t/tidb/planner/core/rule_predicate_push_down.go:343 +0xcb\ngithub.com/pingcap/tidb/planner/core.simplifyOuterJoin(0xc004b3e000, 0xc004570a60, 0x1, 0x1)\n\t/tidb/planner/core/rule_predicate_push_down.go:323 +0x1d9\ngithub.com/pingcap/tidb/planner/core.(*LogicalJoin).PredicatePushDown(0xc004b3e000, 0xc004570a60, 0x1, 0x1, 0x43d0ec0, 0x0, 0x0, 0x0, 0x1)\n\t/tidb/planner/core/rule_predicate_push_down.go:114 +0x6a\ngithub.com/pingcap/tidb/planner/core.(*LogicalSelection).PredicatePushDown(0xc004b30c60, 0x43d0ec0, 0x0, 0x0, 0xf5700c, 0x0, 0x2934200, 0xc004b3c301, 0x43d0ec0)\n\t/tidb/planner/core/rule_predicate_push_down.go:77 +0x166\ngithub.com/pingcap/tidb/planner/core.(*baseLogicalPlan).PredicatePushDown(0xc0045b89c0, 0x43d0ec0, 0x0, 0x0, 0xc004570a10, 0x1, 0x1, 0x1, 0x2df59e0)\n\t/tidb/planner/core/rule_predicate_push_down.go:56 +0xa6\ngithub.com/pingcap/tidb/planner/core.(*LogicalProjection).PredicatePushDown(0xc0045b89a0, 0x0, 0x0, 0x0, 0x43d23a0, 0xc03517af00, 0xc0007d8960, 0x27ffe80, 0xc0007d8960)\n\t/tidb/planner/core/rule_predicate_push_down.go:375 +0x278\ngithub.com/pingcap/tidb/planner/core.(*ppdSolver).optimize(0x43d0960, 0x2dbcfa0, 0xc030feaab0, 0x2df58e0, 0xc0045b89a0, 0x2df58e0, 0xc0045b89a0, 0x0, 0x0)\n\t/tidb/planner/core/rule_predicate_push_down.go:29 +0x42\ngithub.com/pingcap/tidb/planner/core.logicalOptimize(0x2dbcfa0, 0xc030feaab0, 0x21a2, 0x2df58e0, 0xc0045b89a0, 0xf1a9aa, 0x28fa2a0, 0x29d63e0, 0x2d77501)\n\t/tidb/planner/core/optimizer.go:155 +0x116\ngithub.com/pingcap/tidb/planner/core.DoOptimize(0x2dbcfa0, 0xc030feaab0, 0x2df6ae0, 0xc039cf3d00, 0x21a2, 0x2df58e0, 0xc0045b89a0, 0x0, 0x0, 0x0, ...)\n\t/tidb/planner/core/optimizer.go:124 +0x60\ngithub.com/pingcap/tidb/planner.optimize(0x2dbcfa0, 0xc030feaab0, 0x2df6ae0, 0xc039cf3d00, 0x2dbeb20"]
```
I found this issue based on commit c00384f77788102752f56c609156d451d0ea2426.