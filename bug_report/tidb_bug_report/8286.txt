ID: 8286
Title: Explain shows very large count statistic for an index scan
Description:
## Bug Report

Please answer these questions before submitting your issue. Thanks!

1. What did you do?
If possible, provide a recipe for reproducing the error.

We have a table which has about 90m rows of data. and the table has an index which contains only a single column named `company_name`.

``` sql
CREATE TABLE `tt` (
  `uid` bigint(20) UNSIGNED NOT NULL,
  `tid` varchar(50) NOT NULL COMMENT,
  `email` varchar(50) DEFAULT NULL,
  `idno` varchar(20) DEFAULT NULL,
  `realname` varchar(20) DEFAULT NULL,
  `bind_mob` varchar(20) DEFAULT NULL,
  `main_contact_name` varchar(50) DEFAULT NULL,
  `main_contact_rela` varchar(50) DEFAULT NULL,
  `main_contact_tel` varchar(50) DEFAULT NULL,
  `main_contact_name2` varchar(50) DEFAULT NULL,
  `main_contact_rela2` varchar(50) DEFAULT NULL,
  `main_contact_tel2` varchar(50) DEFAULT NULL,
  `address_prov` varchar(50) DEFAULT NULL,
  `address_city` varchar(50) DEFAULT NULL,
  `address_county` varchar(50) DEFAULT NULL,
  `address_detail` varchar(100) DEFAULT NULL,
  `salary_range` varchar(20) DEFAULT NULL,
  `work_years` varchar(20) DEFAULT NULL,
  `education` varchar(20) DEFAULT NULL,
  `company_name` varchar(50) DEFAULT NULL,
  `marriage` varchar(20) DEFAULT NULL,
  `job_type` varchar(20) DEFAULT NULL,
  `ext_data` text DEFAULT NULL,
  `flow` varchar(20) NOT NULL,
  `created_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `binlog_time` bigint(20) UNSIGNED DEFAULT NULL COMMENT 'ts',
  PRIMARY KEY (`uid`,`tid`,`flow`),
  KEY `idx_idno` (`idno`),
  KEY `idx_tid` (`tid`),
  KEY `idx_bind_mob` (`bind_mob`),
  KEY `idx_main_contact_tel` (`main_contact_tel`),
  KEY `idx_email` (`email`),
  KEY `idx_company_name` (`company_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

```
We have a query pattern: `select * from tt where company_name = #{xxx}`. It works online for a few months.
However, last week I received an alert that the following query wasn't using index scan. In fact, this sql returns one row only.

``` sql
select * from tt where company_name = '余京筋骨体验堂';
```
Interestingly,  `select * from tt where company_name = '余京筋骨体验'` works expectedly. 
See the picture below.


![53381541840850_ pic_hd](https://user-images.githubusercontent.com/1456096/48358819-86937280-e6d6-11e8-9a46-8fa98bbd1de7.jpg)


2. What did you expect to see?

I expected that the sql mentioned should use index scan, instead of full table scan.

3. What did you see instead?



4. What version of TiDB are you using (`tidb-server -V` or run `select tidb_version();` on TiDB)?

v2.0.6