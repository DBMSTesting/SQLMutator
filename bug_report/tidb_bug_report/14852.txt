ID: 14852
Title: incorect batch point get plan when prepare plan cache enabled
Description:
## Bug Report

Please answer these questions before submitting your issue. Thanks!

## 1. What did you do?

```sql
CREATE TABLE `bmsql_item` (
  `i_id` int(11) NOT NULL,
  `i_name` varchar(24) DEFAULT NULL,
  `i_price` decimal(5,2) DEFAULT NULL,
  `i_data` varchar(50) DEFAULT NULL,
  `i_im_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`i_id`)
)
```

enable prepare plan cache, then execute a prepared statement in the following steps:

```sql
TiDB(root@127.0.0.1:test) > prepare stmt from 'select i_id, i_price, i_name, i_data from bmsql_item where i_id in (?, ?)';
Query OK, 0 rows affected (0.00 sec)
```

execute it  in the first time:
```sql
TiDB(root@127.0.0.1:test) > set @a = "123", @b = "456";
Query OK, 0 rows affected (0.00 sec)

TiDB(root@127.0.0.1:test) > execute stmt using @a, @b;
Empty set (0.00 sec)

TiDB(root@127.0.0.1:test) > explain for connection 1;
+-------------------------+-------+------+-----------------------------------------+
| id                      | count | task | operator info                           |
+-------------------------+-------+------+-----------------------------------------+
| _0                      | N/A   | root | N/A                                     |
| └─Batch_Point_Get_1     | 2.00  | root | table:bmsql_item, handles: %#v[123 456] |
+-------------------------+-------+------+-----------------------------------------+
2 rows in set (0.00 sec)
```

execute it in the second time:
```sql
TiDB(root@127.0.0.1:test) > set @a = "123", @b = "45612";
Query OK, 0 rows affected (0.00 sec)

TiDB(root@127.0.0.1:test) > execute stmt using @a, @b;
Empty set (0.00 sec)

TiDB(root@127.0.0.1:test) > explain for connection 1;
+-------------------------+-------+------+-----------------------------------------+
| id                      | count | task | operator info                           |
+-------------------------+-------+------+-----------------------------------------+
| _0                      | N/A   | root | N/A                                     |
| └─Batch_Point_Get_1     | 2.00  | root | table:bmsql_item, handles: %#v[123 456] |
+-------------------------+-------+------+-----------------------------------------+
2 rows in set (0.00 sec)
```

## 2. What did you expect to see?

handles should be reset

## 3. What did you see instead?

got incorrect plan

## 4. What version of TiDB are you using (`tidb-server -V` or run `select tidb_version();` on TiDB)?

```sql
TiDB(root@127.0.0.1:test) > select tidb_version()\G
*************************** 1. row ***************************
tidb_version(): Release Version: v4.0.0-beta-51-gc46044f02-dirty
Git Commit Hash: c46044f02651fa18b0d4654c22ae69e715a5fdd0
Git Branch: master
UTC Build Time: 2020-02-19 12:19:34
GoVersion: go1.13.5
Race Enabled: false
TiKV Min Version: v3.0.0-60965b006877ca7234adaced7890d7b029ed1306
Check Table Before Drop: false
1 row in set (0.00 sec)
```

