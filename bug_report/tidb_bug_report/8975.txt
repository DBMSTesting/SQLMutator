ID: 8975
Title: pseudo stats do not appear to consider dictionary information on primary key
Description:
## Bug Report

Please answer these questions before submitting your issue. Thanks!

1. What did you do?

I loaded the world sample database from https://dev.mysql.com/doc/index-other.html

It has the following schema:
```
mysql> SHOW CREATE TABLE Country\G
*************************** 1. row ***************************
       Table: country
Create Table: CREATE TABLE `country` (
  `Code` char(3) NOT NULL DEFAULT '',
  `Name` char(52) NOT NULL DEFAULT '',
  `Continent` enum('Asia','Europe','North America','Africa','Oceania','Antarctica','South America') NOT NULL DEFAULT 'Asia',
  `Region` char(26) NOT NULL DEFAULT '',
  `SurfaceArea` float(10,2) NOT NULL DEFAULT '0.00',
  `IndepYear` smallint(6) DEFAULT NULL,
  `Population` int(11) NOT NULL DEFAULT '0',
  `LifeExpectancy` float(3,1) DEFAULT NULL,
  `GNP` float(10,2) DEFAULT NULL,
  `GNPOld` float(10,2) DEFAULT NULL,
  `LocalName` char(45) NOT NULL DEFAULT '',
  `GovernmentForm` char(45) NOT NULL DEFAULT '',
  `HeadOfState` char(60) DEFAULT NULL,
  `Capital` int(11) DEFAULT NULL,
  `Code2` char(2) NOT NULL DEFAULT '',
  PRIMARY KEY (`Code`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_bin
1 row in set (0.00 sec)

mysql> SHOW CREATE TABLE City\G
*************************** 1. row ***************************
       Table: city
Create Table: CREATE TABLE `city` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `Name` char(35) NOT NULL DEFAULT '',
  `CountryCode` char(3) NOT NULL DEFAULT '',
  `District` char(20) NOT NULL DEFAULT '',
  `Population` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`ID`),
  KEY `CountryCode` (`CountryCode`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_bin AUTO_INCREMENT=34080
1 row in set (0.00 sec)
```

2. What did you expect to see?

If I analyze the tables, I see the following:
```
mysql> analyze table City, Country;
Query OK, 0 rows affected (0.87 sec)

mysql> EXPLAIN SELECT * FROM City WHERE CountryCode IN (SELECT code FROM Country WHERE code='CAN');
+--------------------------+-------+------+----------------------------------------------------------------------------------------------------+
| id                       | count | task | operator info                                                                                      |
+--------------------------+-------+------+----------------------------------------------------------------------------------------------------+
| Projection_11            | 1.25  | root | world.city.id, world.city.name, world.city.countrycode, world.city.district, world.city.population |
| └─IndexJoin_16           | 1.25  | root | inner join, inner:IndexLookUp_15, outer key:world.country.code, inner key:world.city.countrycode   |
|   ├─IndexReader_30       | 1.00  | root | index:IndexScan_29                                                                                 |
|   │ └─IndexScan_29       | 1.00  | cop  | table:country, index:Code, range:["CAN","CAN"], keep order:false                                   |
|   └─IndexLookUp_15       | 17.58 | root |                                                                                                    |
|     ├─IndexScan_13       | 17.58 | cop  | table:city, index:CountryCode, range: decided by [world.country.code], keep order:false            |
|     └─TableScan_14       | 17.58 | cop  | table:city, keep order:false                                                                       |
+--------------------------+-------+------+----------------------------------------------------------------------------------------------------+
7 rows in set (0.00 sec)
```

3. What did you see instead?

Without `ANALYZE` I see:
```
mysql> mysql> EXPLAIN SELECT * FROM City WHERE CountryCode IN (SELECT code FROM Country WHERE code='CAN');
+--------------------------+-------+------+-------------------------------------------------------------------------------------------------------+
| id                       | count | task | operator info                                                                                         |
+--------------------------+-------+------+-------------------------------------------------------------------------------------------------------+
| Projection_11            | 1.25  | root | world.city.id, world.city.name, world.city.countrycode, world.city.district, world.city.population    |
| └─IndexJoin_16           | 1.25  | root | inner join, inner:IndexLookUp_15, outer key:world.country.code, inner key:world.city.countrycode      |
|   ├─IndexReader_30       | 10.00 | root | index:IndexScan_29                                                                                    |
|   │ └─IndexScan_29       | 10.00 | cop  | table:country, index:Code, range:["CAN","CAN"], keep order:false, stats:pseudo                        |
|   └─IndexLookUp_15       | 10.00 | root |                                                                                                       |
|     ├─IndexScan_13       | 10.00 | cop  | table:city, index:CountryCode, range: decided by [world.country.code], keep order:false, stats:pseudo |
|     └─TableScan_14       | 10.00 | cop  | table:city, keep order:false, stats:pseudo                                                            |
+--------------------------+-------+------+-------------------------------------------------------------------------------------------------------+
7 rows in set (0.00 sec)
```

I can't understand why `IndexReader_30` / `IndexScan_29` shows a count of `10.0`.  This is the primary key, so the count should at-most be `1.0`.

My bug report / feature request is to consider dictionary information when generating pseudo stats.

4. What version of TiDB are you using (`tidb-server -V` or run `select tidb_version();` on TiDB)?
```
mysql> select tidb_version()\G
*************************** 1. row ***************************
tidb_version(): Release Version: v2.1.0-rc.3-419-g78a51a462
Git Commit Hash: 78a51a4626999279749c460f3f42a2e92897c2e3
Git Branch: newmaster
UTC Build Time: 2019-01-07 09:07:55
GoVersion: go version go1.11.4 linux/amd64
Race Enabled: false
TiKV Min Version: 2.1.0-alpha.1-ff3dd160846b7d1aed9079c389fc188f7f5ea13e
Check Table Before Drop: false
1 row in set (0.00 sec)
```
