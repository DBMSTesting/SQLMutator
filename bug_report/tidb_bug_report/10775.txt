ID: 10775
Title: mydumper caused tidb server oom
Description:
## Bug Report

Please answer these questions before submitting your issue. Thanks!

1. What did you do?
If possible, provide a recipe for reproducing the error.
backup tidb using mydumper

2. What did you expect to see?
backup succeed


3. What did you see instead?
tidb server oom and killed by os


4. What version of TiDB are you using (`tidb-server -V` or run `select tidb_version();` on TiDB)?
Release Version: v2.1.10
Git Commit Hash: 329afdadfc0feacbc92696fde5ebee5dac0638ed
Git Branch: HEAD
UTC Build Time: 2019-05-21 03:44:29
GoVersion: go version go1.12 linux/amd64
Race Enabled: false
TiKV Min Version: 2.1.0-alpha.1-ff3dd160846b7d1aed9079c389fc188f7f5ea13e
Check Table Before Drop: false

mydumper version:
mydumper 0.9.5, built against MySQL 5.7.21-21

here is the part of tidb.log:
[2019/06/12 02:38:00.094 +08:00] [WARN] [action.go:46] ["memory exceeds quota"] [error="[executor:8001]SELECT /*!40001 SQL_NO_CACHE */ id,time_in_second,definition_id,message_params,timed_hash,executed,created_at,created_by,updated_at,updated_by FROM `message_trans_log_db`.`t_timed_message`   holds 34396197826B memory, exceeds threshold 34359738368B.\n\"SELECT /*!40001 SQL_NO_CACHE */ id,time_in_second,definition_id,message_params,timed_hash,executed,created_at,created_by,updated_at,updated_by FROM `message_trans_log_db`.`t_timed_message`  \"{\n  \"quota\": 32 GB\n  \"consumed\": 32.033955516293645 GB\n  \"TableReaderDistSQLTracker\"{\n    \"quota\": 32 GB\n    \"consumed\": 32.033955516293645 GB\n  }\n}\n"] [errorVerbose="[executor:8001]SELECT /*!40001 SQL_NO_CACHE */ id,time_in_second,definition_id,message_params,timed_hash,executed,created_at,created_by,updated_at,updated_by FROM `message_trans_log_db`.`t_timed_message`   holds 34396197826B memory, exceeds threshold 34359738368B.\n\"SELECT /*!40001 SQL_NO_CACHE */ id,time_in_second,definition_id,message_params,timed_hash,executed,created_at,created_by,updated_at,updated_by FROM `message_trans_log_db`.`t_timed_message`  \"{\n  \"quota\": 32 GB\n  \"consumed\": 32.033955516293645 GB\n  \"TableReaderDistSQLTracker\"{\n    \"quota\": 32 GB\n    \"consumed\": 32.033955516293645 GB\n  }\n}\n\ngithub.com/pingcap/errors.AddStack\n\t/home/jenkins/workspace/release_tidb_2.1-ga/go/pkg/mod/github.com/pingcap/errors@v0.11.1/errors.go:174\ngithub.com/pingcap/parser/terror.(*Error).GenWithStackByArgs\n\t/home/jenkins/workspace/release_tidb_2.1-ga/go/pkg/mod/github.com/pingcap/parser@v0.0.0-20190516020405-361d2d4f774d/terror/terror.go:233\ngithub.com/pingcap/tidb/util/memory.(*LogOnExceed).Action\n\t/home/jenkins/workspace/release_tidb_2.1-ga/go/src/github.com/pingcap/tidb/util/memory/action.go:47\ngithub.com/pingcap/tidb/util/memory.(*Tracker).Consume\n\t/home/jenkins/workspace/release_tidb_2.1-ga/go/src/github.com/pingcap/tidb/util/memory/tracker.go:157\ngithub.com/pingcap/tidb/store/tikv.(*copIteratorWorker).sendToRespCh\n\t/home/jenkins/workspace/release_tidb_2.1-ga/go/src/github.com/pingcap/tidb/store/tikv/coprocessor.go:550\ngithub.com/pingcap/tidb/store/tikv.(*copIteratorWorker).handleCopResponse\n\t/home/jenkins/workspace/release_tidb_2.1-ga/go/src/github.com/pingcap/tidb/store/tikv/coprocessor.go:818\ngithub.com/pingcap/tidb/store/tikv.(*copIteratorWorker).handleTaskOnce\n\t/home/jenkins/workspace/release_tidb_2.1-ga/go/src/github.com/pingcap/tidb/store/tikv/coprocessor.go:681\ngithub.com/pingcap/tidb/store/tikv.(*copIteratorWorker).handleTask\n\t/home/jenkins/workspace/release_tidb_2.1-ga/go/src/github.com/pingcap/tidb/store/tikv/coprocessor.go:624\ngithub.com/pingcap/tidb/store/tikv.(*copIteratorWorker).run\n\t/home/jenkins/workspace/release_tidb_2.1-ga/go/src/github.com/pingcap/tidb/store/tikv/coprocessor.go:462\nruntime.goexit\n\t/usr/local/go/src/runtime/asm_amd64.s:1337"]

it seems that mydumper wanted to load all of the table data into tidb's memory, is it correct?
if yes, how mydumper backup big table?


