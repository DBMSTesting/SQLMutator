ID: 21688
Title: Point get may acquire unnecessary locks
Description:
## Bug Report

Please answer these questions before submitting your issue. Thanks!

### 1. Minimal reproduce step (Required)

<!-- a step by step guide for reproducing the bug. -->
```sql
/* init */ drop table if exists t;
/* init */ create table t (k1 int, k2 int, v int, unique key (k1));
/* init */ insert into t values (1, 1, null), (2, 2, 2);

/* t0 */ begin;
/* t1 */ begin;
/* t0 */ update t set v = 10 where (k1, v) in ((1, null)); -- 0 row affected (point get)
/* t1 */ update t set v = 11 where (k1, v) in ((1, null)); -- blocked
/* t0 */ commit;
/* t1 */ commit;
```

Note that the `update` of t1 won't be blocked  if we use table scan as following.
```sql
/* t0 */ begin;
/* t1 */ begin;
/* t0 */ update t set v = 10 where (k2, v) in ((1, null)); -- 0 row affected (table scan)
/* t1 */ update t set v = 11 where (k2, v) in ((1, null)); -- won't be blocked
/* t0 */ commit;
/* t1 */ commit;
```

### 2. What did you expect to see? (Required)

Since nothing has been updated by t0, t1 shouldn't be blocked by it.

### 3. What did you see instead (Required)

t1 was blocked by t0 when using point get.

### 4. What is your TiDB version? (Required)

<!-- Paste the output of SELECT tidb_version() -->
release-4.0 (2862cd727b4a29c5623f99453fb8d6e7b448004d)
