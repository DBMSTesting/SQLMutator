ID: 15789
Title: COLLATE causes an incorrect result in the presence of an index
Description:
Consider the following statements:

```sql
CREATE TABLE t0(c0 INT, c1 CHAR);
CREATE INDEX i0 ON t0(c1, c0);
INSERT INTO t0(c1) VALUES (0);
SELECT t0.c0 FROM t0 WHERE t0.c1 = CHAR(1 COLLATE 'latin1_bin'); -- expected: {}, actual: {NULL}
```
It is unexpected that a row is fetched, because the predicate should evaluate to `FALSE`. When removing the index, the query works as expected:

```sql
CREATE TABLE t0(c0 INT, c1 CHAR);
INSERT INTO t0(c1) VALUES (0);
SELECT t0.c0 FROM t0 WHERE t0.c1 = CHAR(1 COLLATE 'latin1_bin'); -- {}
```

I used the following version of TiDB:
```
mysql> SELECT tidb_version();
+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| tidb_version()                                                                                                                                                                                                                                                                                               |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Release Version: v4.0.0-beta.2-75-ga6de0e38d-dirty
Git Commit Hash: a6de0e38d49c97671d316590c8c945eb518ca2b2
Git Branch: master
UTC Build Time: 2020-03-26 12:11:33
GoVersion: go1.13.4
Race Enabled: false
TiKV Min Version: v3.0.0-60965b006877ca7234adaced7890d7b029ed1306
Check Table Before Drop: false |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)
```