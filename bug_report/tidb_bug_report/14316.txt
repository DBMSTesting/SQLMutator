ID: 14316
Title: IndexMergeReader panic with unique index
Description:
## Bug Report

Please answer these questions before submitting your issue. Thanks!

1. What did you do?
If possible, provide a recipe for reproducing the error.
```sql
create table t (a int,b int,unique index(a),unique index(b))
set tidb_enable_index_merge=1
select * from t where a=1 or b=2;  -- panic here
```

```go

[2020/01/02 14:41:08.448 +08:00] [ERROR] [conn.go:619] ["connection running loop panic"] [conn=1] [lastSQL="select * from t where a=1 or b=2"] [err="runtime error: index out of range [0] with length 0"] [stack="goroutine 463 [running]:
github.com/pingcap/tidb/server.(*clientConn).Run.func1(0x5bf6c40, 0xc0003cbfb0, 0xc0003249c0)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/server/conn.go:617 +0xee
panic(0x575a280, 0xc0001ac840)
	/usr/local/go1.13/src/runtime/panic.go:679 +0x1b2
github.com/pingcap/tidb/planner/core.(*DataSource).accessPathsForConds(0xc00000cd20, 0xc000bd1740, 0x1, 0x1, 0x3, 0x1, 0x1, 0x0)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/planner/core/stats.go:395 +0x872
github.com/pingcap/tidb/planner/core.(*DataSource).generateIndexMergeOrPaths(0xc00000cd20)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/planner/core/stats.go:324 +0x6d3
github.com/pingcap/tidb/planner/core.(*DataSource).generateAndPruneIndexMergePath(0xc00000cd20, 0xc000116d00)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/planner/core/stats.go:246 +0x3b
github.com/pingcap/tidb/planner/core.(*DataSource).DeriveStats(0xc00000cd20, 0x700afe0, 0x0, 0x0, 0xc000b30b40, 0x700afe0, 0x0, 0x0, 0x8382d98, 0x0, ...)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/planner/core/stats.go:236 +0x4a4
github.com/pingcap/tidb/planner/core.(*baseLogicalPlan).recursiveDeriveStats(0xc00000cd40, 0x0, 0x0, 0x0)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/planner/core/stats.go:104 +0x22a
github.com/pingcap/tidb/planner/core.(*baseLogicalPlan).recursiveDeriveStats(0xc000b62700, 0x0, 0x0, 0x0)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/planner/core/stats.go:97 +0x10e
github.com/pingcap/tidb/planner/core.physicalOptimize(0x5c28580, 0xc000b626e0, 0x51, 0x5c28580, 0xc000b626e0, 0x5c28580, 0xc000b626e0)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/planner/core/optimizer.go:163 +0x3e
github.com/pingcap/tidb/planner/core.DoOptimize(0x5bf6c40, 0xc0003cbfb0, 0x51, 0x5c28580, 0xc000b626e0, 0x1, 0x1, 0x0, 0x0, 0x0)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/planner/core/optimizer.go:126 +0xa4
github.com/pingcap/tidb/planner.optimize(0x5bf6c40, 0xc0003cbfb0, 0x5c4a660, 0xc0003c7300, 0x5bf8740, 0xc000b86a80, 0x5c1f4e0, 0xc000ac97d0, 0x577bb00, 0x5c147e0, ...)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/planner/optimize.go:154 +0x574
github.com/pingcap/tidb/planner.Optimize(0x5bf6c40, 0xc0003cbfb0, 0x5c4a660, 0xc0003c7300, 0x5bf8740, 0xc000b86a80, 0x5c1f4e0, 0xc000ac97d0, 0x0, 0x0, ...)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/planner/optimize.go:50 +0x254
github.com/pingcap/tidb/executor.(*Compiler).Compile(0xc000c4cf18, 0x5bf6c40, 0xc0003cbfb0, 0x5bfd5c0, 0xc000b86a80, 0x0, 0x0, 0x0)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/executor/compiler.go:61 +0x253
github.com/pingcap/tidb/session.(*session).execute(0xc0003c7300, 0x5bf6c40, 0xc0003cbfb0, 0xc0009882a1, 0x20, 0xc000a05d20, 0x0, 0x0, 0xc000c4d2c8, 0x53c192a)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/session/session.go:1110 +0x5cf
github.com/pingcap/tidb/session.(*session).Execute(0xc0003c7300, 0x5bf6c40, 0xc0003cbfb0, 0xc0009882a1, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/session/session.go:1064 +0xdb
github.com/pingcap/tidb/server.(*TiDBContext).Execute(0xc000e061b0, 0x5bf6c40, 0xc0003cbfb0, 0xc0009882a1, 0x20, 0x0, 0x4000, 0x8, 0xc000c4d348, 0x40d0095)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/server/driver_tidb.go:248 +0x7c
github.com/pingcap/tidb/server.(*clientConn).handleQuery(0xc0003249c0, 0x5bf6c40, 0xc0003cbfb0, 0xc0009882a1, 0x20, 0x0, 0x0)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/server/conn.go:1186 +0x91
github.com/pingcap/tidb/server.(*clientConn).dispatch(0xc0003249c0, 0x5bf6c40, 0xc0003cbfb0, 0xc0009882a1, 0x21, 0x20, 0x0, 0x0)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/server/conn.go:850 +0x5b3
github.com/pingcap/tidb/server.(*clientConn).Run(0xc0003249c0, 0x5bf6c40, 0xc0003cbfb0)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/server/conn.go:672 +0x273
github.com/pingcap/tidb/server.(*Server).onConn(0xc00001f0e0, 0xc0003249c0)
	/Users/cs/code/goread/src/github.com/pingcap/tidb/server/server.go:451 +0x49f
created by github.com/pingcap/tidb/server.(*Server).Run
	"]
```

2. What did you expect to see?
Not panic.

3. What did you see instead?
Panic.

4. What version of TiDB are you using (`tidb-server -V` or run `select tidb_version();` on TiDB)?
```sql
mysql>select tidb_version();
+-------------------------------------------------------------------+
| tidb_version()                                                    |
+-------------------------------------------------------------------+
| Release Version: v4.0.0-alpha-1292-gb1c08ee27                     |
| Git Commit Hash: b1c08ee2765ea6b370555dc172bb3b998a8cc6c0         |
| Git Branch: master                                                |
| UTC Build Time: 2020-01-02 06:33:33                               |
| GoVersion: go1.13                                                 |
| Race Enabled: false                                               |
| TiKV Min Version: v3.0.0-60965b006877ca7234adaced7890d7b029ed1306 |
| Check Table Before Drop: false                                    |
+-------------------------------------------------------------------+
```
