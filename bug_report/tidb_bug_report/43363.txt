ID: 43363
Title: lightning/ddl may panic when partial write and meet "needRescan" error
Description:
## Bug Report

Please answer these questions before submitting your issue. Thanks!

### 1. Minimal reproduce step (Required)

comment the code change part, and run the unit test in #43364 . The unit test case is that there an engine with 2 KV and regionSplitSize = 1, after partially writing the first KV the job continues to `ingest` function and then meet NotLeader error (other error will also trigger this problem)

<!-- a step by step guide for reproducing the bug. -->

### 2. What did you expect to see? (Required)

Because NotLeader error needs lightning to rescan the region, the worker should exit `executeJob`.

### 3. What did you see instead (Required)

We didn't check the stage of the job, and "partial write" logic let the job continue `writeToTiKV` in next round. But the region information is already cleared so triigger a nil-dereference

```
panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x39747b6]

goroutine 472272 [running]:
[github.com/pingcap/tidb/br/pkg/lightning/backend/local.(*Backend).writeToTiKV](http://github.com/pingcap/tidb/br/pkg/lightning/backend/local.(*Backend).writeToTiKV)(0xc011760c60, {0x5790be8, 0xc0b17e91d0}, 0xc0b2c3da40)
	/home/jenkins/agent/workspace/build-common/go/src/[github.com/pingcap/tidb/br/pkg/lightning/backend/local/region_job.go:185](http://github.com/pingcap/tidb/br/pkg/lightning/backend/local/region_job.go:185) +0x156
[github.com/pingcap/tidb/br/pkg/lightning/backend/local.(*Backend).executeJob](http://github.com/pingcap/tidb/br/pkg/lightning/backend/local.(*Backend).executeJob)(0xc011760c60, {0x5790be8, 0xc0b17e91d0}, 0xc0b2c3da40)
	/home/jenkins/agent/workspace/build-common/go/src/[github.com/pingcap/tidb/br/pkg/lightning/backend/local/local.go:1347](http://github.com/pingcap/tidb/br/pkg/lightning/backend/local/local.go:1347) +0xb4
[github.com/pingcap/tidb/br/pkg/lightning/backend/local.(*Backend).startWorker](http://github.com/pingcap/tidb/br/pkg/lightning/backend/local.(*Backend).startWorker)(0x438807e?, {0x5790be8, 0xc0b17e91d0}, 0xc01505aa80, 0xc0969d4d80?, 0xc06bb94718?)
	/home/jenkins/agent/workspace/build-common/go/src/[github.com/pingcap/tidb/br/pkg/lightning/backend/local/local.go:1261](http://github.com/pingcap/tidb/br/pkg/lightning/backend/local/local.go:1261) +0x125
[github.com/pingcap/tidb/br/pkg/lightning/backend/local.(*Backend).doImport.func3()](http://github.com/pingcap/tidb/br/pkg/lightning/backend/local.(*Backend).doImport.func3())
	/home/jenkins/agent/workspace/build-common/go/src/[github.com/pingcap/tidb/br/pkg/lightning/backend/local/local.go:1529](http://github.com/pingcap/tidb/br/pkg/lightning/backend/local/local.go:1529) +0x31
[golang.org/x/sync/errgroup.(*Group).Go.func1()](http://golang.org/x/sync/errgroup.(*Group).Go.func1())
	/go/pkg/mod/[golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75](http://golang.org/x/sync@v0.1.0/errgroup/errgroup.go:75) +0x64
created by [golang.org/x/sync/errgroup.(*Group).Go](http://golang.org/x/sync/errgroup.(*Group).Go)
	/go/pkg/mod/[golang.org/x/sync@v0.1.0/errgroup/errgroup.go:72](http://golang.org/x/sync@v0.1.0/errgroup/errgroup.go:72) +0xa5
```

### 4. What is your TiDB version? (Required)

<!-- Paste the output of SELECT tidb_version() -->

