ID: 24929
Title: expression: builtin function `current_date()` should return `DATE` type.
Description:
## Bug Report

Please answer these questions before submitting your issue. Thanks!

### 1. Minimal reproduce step (Required)
(`--column-type-info` is needed for MySQL client, so that the returned type info can be verified easily)

```
bash$ mysql --column-type-info

mysql> select current_date() from dual;
```

### 2. What did you expect to see? (Required)
```
Field   1:  `current_date()`
Catalog:    `def`
Database:   ``
Table:      ``
Org_table:  ``
Type:       DATE
Collation:  binary (63)
Length:     10
Max_length: 10
Decimals:   0
Flags:      NOT_NULL BINARY 
...
```

### 3. What did you see instead (Required)
```
Field   1:  `current_date()`
Catalog:    `def`
Database:   ``
Table:      ``
Org_table:  ``
Type:       DATETIME
Collation:  binary (63)
Length:     10
Max_length: 10
Decimals:   0
Flags:      NOT_NULL BINARY 
...
```

### 4. What is your TiDB version? (Required)
v5.0.1

<!-- Paste the output of SELECT tidb_version() -->

### Comments
I'm not sure if this is a regression: other releases are not tested.

This bug is minor in my mind, but it breaks the following code snippet with MySQL connector 8:
```
class Test1 {    
   public static void main(String[] args) throws Exception {    
        Class.forName("com.mysql.jdbc.Driver").newInstance();    
        String url = "jdbc:mysql://address=(protocol=tcp)(host=127.0.0.1)(port=4000)(user=root)/test";    
        Connection conn = DriverManager.getConnection(url, "", "");    
        DatabaseMetaData meta = conn.getMetaData();    
        System.out.println("Driver version: " + meta.getDriverVersion());    
    
        String query = "select current_date() from dual";    
        try (Statement stmt = conn.createStatement()) {    
            ResultSet rs = stmt.executeQuery(query);    
            while (rs.next()) {    
                Date d = rs.getDate(1);    
                System.out.println("d: " + d);    
            }    
        } catch (SQLException e) {    
            e.printStackTrace();    
        }    
  }
}
```

Due to this bug, an error will be reported:
```
Driver version: mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
java.sql.SQLException: Invalid length (10) for type TIMESTAMP
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:99)
	at com.mysql.cj.jdbc.result.ResultSetImpl.getDate(ResultSetImpl.java:776)
	at Test1.main(Test1.java:29)
Caused by: com.mysql.cj.exceptions.DataReadException: Invalid length (10) for type TIMESTAMP
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.getTimestamp(MysqlTextValueDecoder.java:352)
	at com.mysql.cj.protocol.a.MysqlTextValueDecoder.decodeDatetime(MysqlTextValueDecoder.java:90)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.decodeAndCreateReturnValue(AbstractResultsetRow.java:86)
	at com.mysql.cj.protocol.result.AbstractResultsetRow.getValueFromBytes(AbstractResultsetRow.java:243)
	at com.mysql.cj.protocol.a.result.ByteArrayRow.getValue(ByteArrayRow.java:91)
	... 2 more
```