ID: 19002
Title: wrong point-get result when clustered index is used with plan-cache
Description:
## Bug Report

Please answer these questions before submitting your issue. Thanks!

### 1. Minimal reproduce step (Required)

Start a tidb-server with plan cache enable:

```
MySQL [ut]> set @@tidb_enable_clustered_index = 1;
Query OK, 0 rows affected (0.00 sec)

MySQL [ut]> create table t1(a int, b int, c int, primary key(a, b));
Query OK, 0 rows affected (0.01 sec)

MySQL [ut]> insert into t1 values(1,1,111),(2,2,222),(3,3,333);
Query OK, 3 rows affected (0.00 sec)
Records: 3  Duplicates: 0  Warnings: 0

MySQL [ut]> prepare stmt2 from "select * from t1 where t1.a = ? and t1.b = ?";
Query OK, 0 rows affected (0.00 sec)

MySQL [ut]> set @v1=1;
Query OK, 0 rows affected (0.00 sec)

MySQL [ut]> set @v2=1;
Query OK, 0 rows affected (0.00 sec)

MySQL [ut]> execute stmt2 using @v1,@v2;
+---+---+------+
| a | b | c    |
+---+---+------+
| 1 | 1 |  111 |
+---+---+------+
1 row in set (0.00 sec)

MySQL [ut]> set @v1=2;
Query OK, 0 rows affected (0.00 sec)

MySQL [ut]> set @v2=2;
Query OK, 0 rows affected (0.01 sec)

MySQL [ut]> execute stmt2 using @v1,@v2;
Empty set (0.00 sec)
```

### 2. What did you expect to see? (Required)

The second execute should return 1 record.

### 3. What did you see instead (Required)

It returns empty record.

### 4. Affected version (Required)

master branch: 6ccd8248a8e7f89a9e5987e78e74b13a3e47cd5d

### 5. Root Cause Analysis

<!-- should be filled by the investigator before it's closed -->

In `PointGetExecutor::Next`, for non-clustered-index, it uses `EncodeUniqueIndexKey`, which would impose type casting on `e.idxVals` before encoding it to keys, while for clustered-index, it directly calls `EncodeKey` for `e.idxVals`. `e.idxVals` may contain datums of string type, while the primary key columns are defined as integer types.