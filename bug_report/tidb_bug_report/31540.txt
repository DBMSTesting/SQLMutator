ID: 31540
Title: Inconsistent placement rules when retrying truncating tables/partitions
Description:
## Bug Report

https://github.com/pingcap/tidb/blob/4f30a14256c1d51adcd4fdcef53ba837fa0c8438/ddl/table.go#L603-L611

https://github.com/pingcap/tidb/blob/aa7ad03bcd4ae85ef3a31cfccf2c908df9521d6f/ddl/partition.go#L1177-L1192

Since truncating tables/partitions will allocate id just before placement rules operations, every retrying job will lead to placement rules of different IDs. It breaks idempotence.

It is reported by @CalvinNeo when testing tiflash placement rules, caused by `writing conflict of concurrent DDL`.

While it is a correctness problem, retrying only occurs with heavy DDL load. As an experimental feature, it does not need to be critical or major bug.

### 1. Minimal reproduce step (Required)

Start many concurrent session to execute truncate DDLs.

### 2. What did you expect to see? (Required)

Writing conflict leads to retrying, but retrying jobs have same IDs.

### 3. What did you see instead (Required)

Writing conflict leads to retrying, but retrying jobs have different IDs.

### 4. What is your TiDB version? (Required)

<!-- Paste the output of SELECT tidb_version() -->

