ID: 50346
Title: Query Adding multiple parentheses to the where condition will cause the queried field name to be wrong
Description:
## Bug Report

In a simple SQL, the selection of fields in a certain order will trigger this issue.

### 1. Minimal reproduce step (Required)
for example 
```sql
 SELECT teacher_id,id_number  FROM  tb_teacher_user WHERE  (teacher_id IN (125)); 
 SELECT teacher_id,id_number  FROM  tb_teacher_user WHERE  teacher_id IN (125);
```
result
<img width="310" alt="image" src="https://github.com/pingcap/tidb/assets/24296698/cad10717-76e6-4667-b2bd-e2774d8242be">

I tried a lot, the first time I do this SQL, SQL is correct, the second time and later, it is wrong, but if I swap the order of columns, SELECT teacher_id, id_number change to SELECT id_number, teacher_id the query result is also correct.

### 2. What did you expect to see? (Required)
teacher_id,id_number
### 3. What did you see instead (Required)
teacher_id,teacher_name
### 4. What is your TiDB version? (Required)
Release Version: v7.2.0


```
SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for tb_test
-- ----------------------------
DROP TABLE IF EXISTS `tb_test`;
CREATE TABLE `tb_test` (
  `id` int(11) NOT NULL,
  `name` varchar(255) DEFAULT NULL,
  `id_number` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`) /*T![clustered_index] CLUSTERED */
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin;

-- ----------------------------
-- Records of tb_test
-- ----------------------------
BEGIN;
INSERT INTO `tb_test` (`id`, `name`, `id_number`) VALUES (1, 'test1', '12716761726');
INSERT INTO `tb_test` (`id`, `name`, `id_number`) VALUES (2, 'test2', '125616261172');
COMMIT;

SET FOREIGN_KEY_CHECKS = 1;
```
<img width="997" alt="image" src="https://github.com/pingcap/tidb/assets/24296698/d7238b02-ee9b-452b-a121-121c0e55e90c">



