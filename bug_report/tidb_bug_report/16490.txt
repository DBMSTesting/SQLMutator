ID: 16490
Title: Green GC misses locks when a key has locks with different timestamps
Description:
## Bug Report

Please answer these questions before submitting your issue. Thanks!

### 1. What did you do?

<!-- If possible, provide a recipe for reproducing the error. -->
Test green gc.

### 2. What did you expect to see?
All locks are resovled.

### 3. What did you see instead?
Some locks are left after GC:
```
2020/04/16 14:18:59 resolve_lock.go:247: [error] [round-78] find 30 unsafe locks after GC at safepoint(416027230043373583): [key: {tableID=900, handle=0}, primary: {tableID=900, handle=0}, txnStartTS: 416027229781229728, lockForUpdateTS:0, ttl: 30000, type: Put key: {tableID=900, handle=1}, primary: {tableID=900, handle=0}, txnStartTS: 416027229781229728, lockForUpdateTS:0, ttl: 30000, type: Put key: {tableID=900, handle=2}, primary: {tableID=900, handle=0}, txnStartTS: 416027229781229728, lockForUpdateTS:0, ttl: 30000, type: Put key: {tableID=900, handle=3}, primary: {tableID=900, handle=0}, txnStartTS: 416027229781229728, lockForUpdateTS:0, ttl: 30000, type: Put key: {tableID=900, handle=4}, primary: {tableID=900, handle=0}, txnStartTS: 416027229781229728, lockForUpdateTS:0, ttl: 30000, type: Put key: {tableID=900, handle=5}, primary: {tableID=900, handle=5}, txnStartTS: 416027229781229739, lockForUpdateTS:0, ttl: 30000, type: Put key: {tableID=900, handle=6}, primary: {tableID=900, handle=5}, txnStartTS: 416027229781229739, lockForUpdateTS:0, ttl: 30000, type: Put key: {tableID=900, handle=7}, primary: {tableID=900, handle=5}, txnStartTS: 416027229781229739, lockForUpdateTS:0, ttl: 30000, type: Put key: {tableID=900, handle=8}, primary: {tableID=900, handle=5}, txnStartTS: 416027229781229739, lockForUpdateTS:0, ttl: 30000, type: Put key: {tableID=900, handle=9}, primary: {tableID=900, handle=5}, txnStartTS: 416027229781229739, lockForUpdateTS:0, ttl: 30000, type: Put key: {tableID=1182, handle=0}, primary: {tableID=1182, handle=0}, txnStartTS: 416027229833658442, lockForUpdateTS:0, ttl: 30000, type: Put key: {tableID=1182, handle=1}, primary: {tableID=1182, handle=0}, txnStartTS: 416027229833658442, lockForUpdateTS:0, ttl: 30000, type: Put key: {tableID=1182, handle=2}, primary: {tableID=1182, handle=0}, txnStartTS: 416027229833658442, lockForUpdateTS:0, ttl: 30000, type: Put key: {tableID=1182, handle=3}, primary: {tableID=1182, handle=0}, txnStartTS: 416027229833658442, lockForUpdateTS:0, ttl: 30000, type: Put key: {tableID=1182, handle=4}, primary: {tableID=1182, handle=0}, txnStartTS: 416027229833658442, lockForUpdateTS:0, ttl: 30000, type: Put key: {tableID=1182, handle=5}, primary: {tableID=1182, handle=5}, txnStartTS: 416027229833658454, lockForUpdateTS:0, ttl: 30000, type: Put key: {tableID=1182, handle=6}, primary: {tableID=1182, handle=5}, txnStartTS: 416027229833658454, lockForUpdateTS:0, ttl: 30000, type: Put key: {tableID=1182, handle=7}, primary: {tableID=1182, handle=5}, txnStartTS: 416027229833658454, lockForUpdateTS:0, ttl: 30000, type: Put key: {tableID=1182, handle=8}, primary: {tableID=1182, handle=5}, txnStartTS: 416027229833658454, lockForUpdateTS:0, ttl: 30000, type: Put key: {tableID=1182, handle=9}, primary: {tableID=1182, handle=5}, txnStartTS: 416027229833658454, lockForUpdateTS:0, ttl: 30000, type: Put key: {tableID=1699, handle=0}, primary: {tableID=1699, handle=0}, txnStartTS: 416027229715693819, lockForUpdateTS:0, ttl: 30000, type: Put key: {tableID=1699, handle=1}, primary: {tableID=1699, handle=0}, txnStartTS: 416027229715693819, lockForUpdateTS:0, ttl: 30000, type: Put key: {tableID=1699, handle=2}, primary: {tableID=1699, handle=0}, txnStartTS: 416027229715693819, lockForUpdateTS:0, ttl: 30000, type: Put key: {tableID=1699, handle=3}, primary: {tableID=1699, handle=0}, txnStartTS: 416027229715693819, lockForUpdateTS:0, ttl: 30000, type: Put key: {tableID=1699, handle=4}, primary: {tableID=1699, handle=0}, txnStartTS: 416027229715693819, lockForUpdateTS:0, ttl: 30000, type: Put key: {tableID=1699, handle=5}, primary: {tableID=1699, handle=5}, txnStartTS: 416027229715693836, lockForUpdateTS:0, ttl: 30000, type: Put key: {tableID=1699, handle=6}, primary: {tableID=1699, handle=5}, txnStartTS: 416027229715693836, lockForUpdateTS:0, ttl: 30000, type: Put key: {tableID=1699, handle=7}, primary: {tableID=1699, handle=5}, txnStartTS: 416027229715693836, lockForUpdateTS:0, ttl: 30000, type: Put key: {tableID=1699, handle=8}, primary: {tableID=1699, handle=5}, txnStartTS: 416027229715693836, lockForUpdateTS:0, ttl: 30000, type: Put key: {tableID=1699, handle=9}, primary: {tableID=1699, handle=5}, txnStartTS: 416027229715693836, lockForUpdateTS:0, ttl: 30000, type: Put]
```

`mergeReceiver` compares locks by key so that we only resolve the first lock. It's possible a key has locks with different timestamps:
* A lock on the lagged follower has timestamp 10 and the timestamp is 20 on the leader.
* A peer has been destroyed but the data haven't been deleted so that we could scan the stale locks.
https://github.com/pingcap/tidb/blob/39cc8935cdc9d06cf7838b11bdee6505def29bb9/store/tikv/gcworker/gc_worker.go#L1812

We should compare locks by key and timestamp.

### 4. What version of TiDB are you using? (`tidb-server -V` or run `select tidb_version();` on TiDB)
4.0
