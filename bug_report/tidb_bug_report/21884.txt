ID: 21884
Title: planner: incorrect `NOW()` result when executing a prepared point-get update
Description:
## Bug Report

Please answer these questions before submitting your issue. Thanks!

### 1. Minimal reproduce step (Required)
Scripts to reproduce:
```
drop table if exists t;
create table t(a bigint primary key, status bigint, last_update_time datetime);
insert into t values (100, 0, "2020-12-18 20:00:00");
insert into t values (200, 0, "2020-12-18 20:10:00");
insert into t values (300, 0, "2020-12-18 20:30:00");

prepare stmt from 'update t set status = ?, last_update_time = now() where a = ?';

set @status = 1, @a = 100;

execute stmt using @status, @a;
select * from t;

do sleep(1);

execute stmt using @status, @a;
select * from t;
```

### 2. What did you expect to see? (Required)
The value of `last_update_time` is updated to the time `stmt` is executed.

### 3. What did you see instead (Required)
The value of `last_update_time` keeps the same as the one it first executed, for example:

```
tidb> select * from t;
+-----+--------+---------------------+
| a   | status | last_update_time    |
+-----+--------+---------------------+
| 100 |      1 | 2020-12-18 23:00:03 |
| 200 |      0 | 2020-12-18 20:10:00 |
| 300 |      0 | 2020-12-18 20:30:00 |
+-----+--------+---------------------+
3 rows in set (0.00 sec)

tidb> 
tidb> do sleep(1);

Query OK, 0 rows affected (1.00 sec)

tidb> 
tidb> execute stmt using @status, @a;
Query OK, 1 row affected (0.00 sec)
Rows matched: 1  Changed: 1  Warnings: 0

tidb> select * from t;
+-----+--------+---------------------+
| a   | status | last_update_time    |
+-----+--------+---------------------+
| 100 |      1 | 2020-12-18 23:00:03 |
| 200 |      0 | 2020-12-18 20:10:00 |
| 300 |      0 | 2020-12-18 20:30:00 |
+-----+--------+---------------------+
3 rows in set (0.00 sec)
```
Notice that `last_update_time` for `a=100` keeps `2020-12-18 23:00:03` always.

### 4. What is your TiDB version? (Required)
v4.0.8

It can be reproduced in all 4.0 versions and the master branch.

### 5. Additional information
It is confirmed that this bug is introduced by #12243.