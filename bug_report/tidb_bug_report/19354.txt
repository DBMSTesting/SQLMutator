ID: 19354
Title: executor: Close() should be called before returning errors if Open() is called
Description:
## Description
## Bug Report

Please answer these questions before submitting your issue. Thanks!

### 1. Minimal reproduce step (Required)
the operators in databases should implement `Open()/Next()/Close` interfaces, which initialize contexts/process data/clean contexts for each operator. In the cases such as in [IndexLookupJoin](https://github.com/pingcap/tidb/blob/4669f68131738ed19def323e8925c6bd4e43b585/executor/index_lookup_join.go#L615), [IndexMergeJoin](https://github.com/pingcap/tidb/blob/4669f68131738ed19def323e8925c6bd4e43b585/executor/index_lookup_merge_join.go#L500), [execRestrictedSQL](https://github.com/pingcap/tidb/blob/1a91fc5c4cf98444116a973685ddc0c5a03aa323/session/session.go#L820), I found, if `Open()/Next()` encounter errors, the execution flow returns errors directly, and the `[defer] Close()` is not called. This would result in memory/goroutine leaks.

<!-- a step by step guide for reproducing the bug. -->

### 2. What did you expect to see? (Required)
the Close() is called wherever needed.


### 3. What did you see instead (Required)

### 4. What is your TiDB version? (Required)

master

<!-- Paste the output of SELECT tidb_version() -->





## SIG slack channel
[#sig-exec](https://slack.tidb.io/invite?team=tidb-community&channel=sig-exec&ref=high-performance)

## Score
- 300

## Mentor
 * @SunRunAway
