ID: 58978
Title: Wrong execution result when remove all parentheses
Description:
## Bug Report

Please answer these questions before submitting your issue. Thanks!

### 1. Minimal reproduce step (Required)

<!-- a step by step guide for reproducing the bug. -->

```sql
DROP TABLE IF EXISTS t0;
CREATE TABLE t0 (
    id INT AUTO_INCREMENT PRIMARY KEY,
    c0 DOUBLE,
    INDEX idx_c0 (c0)
);

INSERT INTO t0 (c0) VALUES 
(1), (2.5), (10), (18.8), (-2.4), (-1.4134e10);

SELECT *
FROM t0 
WHERE c0 * -1 < 0 AND c0 BETWEEN id AND c0 >> 1 > 1 - c0 AND c0 ^ 3 << 2 < 41 
ORDER BY c0;

SELECT *
FROM t0
WHERE ((c0 * (-1)) < 0)
  AND (c0 BETWEEN id AND ((c0 >> 1) > (1 - c0)))
  AND (((c0 ^ 3) << 2) < 41)
ORDER BY c0;
```

### 2. What did you expect to see? (Required)

see the following case:

I noticed that TiDB seems to have issues with default operator precedence. 
According to the precedence rules in the manual, adding parentheses results in inconsistencies.

```sql
INTERVAL
BINARY, COLLATE
!
- (unary minus), ~ (unary bit inversion)
^
*, /, DIV, %, MOD
-, +
<<, >>
&
|
= (comparison), <=>, >=, >, <=, <, <>, !=, IS, LIKE, REGEXP, IN
BETWEEN, CASE, WHEN, THEN, ELSE
NOT
AND, &&
XOR
OR, ||
= (assignment), :=
```

### 3. What did you see instead (Required)

```sql
// TiDB
mysql> SELECT *
    -> FROM t0
    -> WHERE c0 * -1 < 0 AND c0 BETWEEN id AND c0 >> 1 > 1 - c0 AND c0 ^ 3 << 2 < 41
    -> ORDER BY c0;
+----+------+
| id | c0   |
+----+------+
|  2 |  2.5 |
|  3 |   10 |
+----+------+
2 rows in set (0.03 sec)

mysql>
mysql> SELECT *
    -> FROM t0
    -> WHERE ((c0 * (-1)) < 0)
    ->   AND (c0 BETWEEN id AND ((c0 >> 1) > (1 - c0)))
    ->   AND (((c0 ^ 3) << 2) < 41)
    -> ORDER BY c0;
Empty set (0.04 sec)
```

### 4. What is your TiDB version? (Required)

<!-- Paste the output of SELECT tidb_version() -->

mysql> select version();
+--------------------+
| version()          |
+--------------------+
| 8.0.11-TiDB-v8.5.0 |
+--------------------+
1 row in set (0.04 sec)