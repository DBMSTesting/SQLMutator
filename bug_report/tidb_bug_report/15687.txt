ID: 15687
Title: executor: indexXXXjoin error with other conditions
Description:
## Bug Report

### 1. What did you do?


download the file with all DDLs 
[randgen_index_merge_join.txt](https://github.com/pingcap/tidb/files/4381467/randgen_index_merge_join.txt)
```
source randgen_index_merge_join.txt
```

```
SELECT   /*+INL_MERGE_JOIN(table1,table2,table3,table4,table5,table6,table7,table8,table9,table10,table11,table12)*/ table1 . `col_int` AS field1 , table1 . `pk` AS field2 , table1 . `pk` AS field3 FROM  I AS table1  RIGHT OUTER JOIN   R AS table2  RIGHT  JOIN DD AS table3 ON  table2 . `col_int_key` =  table3 . `col_int_key`   LEFT  JOIN H AS table4 ON  table2 . `col_varchar_1024_utf8` =  table4 . `col_varchar_1024_utf8`  ON  table1 . `col_varchar_10_latin1` =  table3 . `col_varchar_10_utf8`  WHERE table2 . `pk` <= table3 . `col_int`  HAVING field3 <> 6 ORDER BY field3  ;
```
**index_join and index hash join are also wrong.**
### 2. What did you expect to see?
correct results are from MySQL.
```
+--------+--------+--------+
| field1 | field2 | field3 |
+--------+--------+--------+
|      9 |     28 |     28 |
|      9 |     28 |     28 |
|      4 |     30 |     30 |
|      6 |     31 |     31 |
|   NULL |     36 |     36 |
|   NULL |     36 |     36 |
|   NULL |     36 |     36 |
|      9 |     47 |     47 |
|      9 |     47 |     47 |
|      7 |     63 |     63 |
|      7 |     63 |     63 |
|      7 |     63 |     63 |
|      1 |     66 |     66 |
|      1 |     66 |     66 |
+--------+--------+--------+
```
### 3. What did you see instead?
```
+--------+--------+--------+
| field1 | field2 | field3 |
+--------+--------+--------+
|      9 |     28 |     28 |
|      9 |     28 |     28 |
|      4 |     30 |     30 |
|      6 |     31 |     31 |
|   NULL |     36 |     36 |
|      9 |     47 |     47 |
|      9 |     47 |     47 |
|      7 |     63 |     63 |
|      1 |     66 |     66 |
|      1 |     66 |     66 |
+--------+--------+--------+
10 rows in set, 4 warnings (0.00 sec)


```

_similar problem for_
```
SELECT   /*+INL_MERGE_JOIN(table1,table2,table3,table4,table5,table6,table7,table8,table9,table10,table11,table12)*/ table1 . `col_int_key` AS field1 FROM  L AS table1  LEFT  JOIN AA AS table2 ON  table1 . `col_varchar_10_latin1_key` =  table2 . `col_varchar_1024_latin1_key`    ORDER BY field1  , field1  ;
```
```
SELECT   /*+INL_MERGE_JOIN(table1,table2,table3,table4,table5,table6,table7,table8,table9,table10,table11,table12)*/ table2 . `col_int` AS field1 , table2 . `pk` AS field2 , table2 . `col_int_key` AS field3 , table1 . `col_int_key` AS field4 , table1 . `col_int_key` AS field5 , table2 . `pk` AS field6 FROM  A AS table1  LEFT  JOIN A AS table2 ON  table1 . `col_int_key` =  table2 . `col_int_key`  WHERE table1 . `pk` < table2 . `col_int`   ORDER BY field1, field2, field3, field4, field5, field6 DESC  ;
```
```
SELECT   /*+INL_MERGE_JOIN(table1,table2,table3,table4,table5,table6,table7,table8,table9,table10,table11,table12)*/ table1 . `pk` AS field1 , table1 . `pk` AS field2 , table2 . `col_int` AS field3 , table1 . `pk` AS field4 FROM   DD AS table1  LEFT  JOIN X AS table2 ON  table1 . `col_int_key` =  table2 . `col_int_key`   LEFT  JOIN V AS table3 ON  table2 . `col_varchar_10_latin1_key` =  table3 . `col_varchar_1024_utf8_key`  WHERE table2 . `pk` >= table1 . `pk`  GROUP BY field1, field2, field3, field4  ORDER BY field3  , field3  , field2  , field4  ;
```
```
SELECT  STRAIGHT_JOIN /*+INL_MERGE_JOIN(table1,table2,table3,table4,table5,table6,table7,table8,table9,table10,table11,table12)*/ MIN(  table2 . `col_int` ) AS field1 FROM  AA AS table1  LEFT  JOIN I AS table2 ON  table1 . `col_int_key` =  table2 . `col_int_key`  WHERE table1 . `pk` <= table2 . `col_int`  ORDER BY field1 ASC ; 
```
```
SELECT   /*+INL_MERGE_JOIN(table1,table2,table3,table4,table5,table6,table7,table8,table9,table10,table11,table12)*/ table1 . `col_int_key` AS field1 FROM  Q AS table1  LEFT  JOIN Y AS table2 ON  table1 . `col_int_key` =  table2 . `col_int_key`  WHERE table2 . `col_int` IS  NULL  GROUP BY field1  ORDER BY field1   ;
```
```
SELECT   /*+INL_MERGE_JOIN(table1,table2,table3,table4,table5,table6,table7,table8,table9,table10,table11,table12)*/ COUNT(  table1 . `pk` ) AS field1 , table1 . `col_int_key` AS field2 , table2 . `col_int_key` AS field3 , MIN(  table1 . `col_int_key` ) AS field4 , table2 . `pk` AS field5 , table1 . `pk` AS field6 , table2 . `col_int` AS field7 , table2 . `col_int` AS field8 , table3 . `col_int` AS field9 , table2 . `col_int_key` AS field10 FROM  DD AS table1  LEFT  JOIN  L AS table2  LEFT  JOIN H AS table3 ON  table2 . `col_int_key` =  table3 . `pk`  ON  table1 . `col_varchar_10_utf8_key` =  table3 . `col_varchar_1024_latin1_key`  WHERE ( table2 . `col_int`  BETWEEN 2 AND ( 2 + 7 ) AND table1 . `pk` < table2 . `pk` )  GROUP BY field2, field3, field5, field6, field7, field8, field9, field10  ORDER BY field1, field2, field3, field4, field5, field6, field7, field8, field9, field10 ASC  ;

```
### 4. What version of TiDB are you using? (`tidb-server -V` or run `select tidb_version();` on TiDB)
5.7.25-TiDB-v4.0.0-beta-523-g7eba696bb