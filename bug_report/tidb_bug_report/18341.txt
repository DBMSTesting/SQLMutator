ID: 18341
Title: When the clustered index is enabled, we shouldn't support alter PK
Description:
## Bug Report

Please answer these questions before submitting your issue. Thanks!

### 1. Minimal reproduce step (Required)

<!-- a step by step guide for reproducing the bug. -->
set `alter-primary-key=false` and create a table with a primary key.
```
set @@tidb_enable_clustered_index = 1;
create table t(a int, b varchar(64), primary key(b));
insert into t values(1,'a'), (2, 'b');
```

set `alter-primary-key=true` and add a primary key
```
set @@tidb_enable_clustered_index = 1;
alter table t drop primary key;
insert into t values(1,'a'), (2, 'b');
```

### 2. What did you expect to see? (Required)
Execute the insert statement successfully.

### 3. What did you see instead (Required)
```
mysql> insert into t values(1,'a'), (2, 'b');
ERROR 2013 (HY000): Lost connection to MySQL server during query
```

Error msg:
```
[2020/07/03 11:33:52.178 +08:00] [ERROR] [conn.go:668] ["connection running loop panic"] [conn=1] [lastSQL="insert into t values(1,'a'), (2, 'b')"] [err="runtime error: invalid memory address or nil pointer dereference"] [stack="goroutine 467 [running]:\ngithub.com/pingcap/tidb/server.(*clientConn).Run.func1(0x68b2600, 0xc00f775cb0, 0xc00f9f8180)\n\t/Users/xia/workspace/src/github.com/pingcap/tidb/server/conn.go:666 +0xee\npanic(0x5f39a80, 0x8289c00)\n\t/Users/xia/go/src/runtime/panic.go:679 +0x1b2\ngithub.com/pingcap/tidb/executor.(*ExecStmt).Exec.func1(0xc011986480, 0xc010da8c88, 0xc010da8c68)\n\t/Users/xia/workspace/src/github.com/pingcap/tidb/executor/adapter.go:294 +0x539\npanic(0x5f39a80, 0x8289c00)\n\t/Users/xia/go/src/runtime/panic.go:679 +0x1b2\ngithub.com/pingcap/tidb/table/tables.(*TableCommon).AddRecord(0xc01130dcc0, 0x68f9dc0, 0xc00f5b7500, 0xc011986510, 0x2, 0x2, 0xc01193ca00, 0x2, 0x2, 0x0, ...)\n\t/Users/xia/workspace/src/github.com/pingcap/tidb/table/tables/tables.go:588 +0x148\ngithub.com/pingcap/tidb/executor.(*InsertValues).addRecordWithAutoIDHint(0xc011219500, 0x68b2600, 0xc0118e15f0, 0xc011986510, 0x2, 0x2, 0x2, 0x48d6f05, 0xc0001321b8)\n\t/Users/xia/workspace/src/github.com/pingcap/tidb/executor/insert_common.go:1004 +0x1c7\ngithub.com/pingcap/tidb/executor.(*InsertExec).exec(0xc011727620, 0x68b2600, 0xc0118e15f0, 0xc0118e1680, 0x2, 0x2, 0x0, 0x0)\n\t/Users/xia/workspace/src/github.com/pingcap/tidb/executor/insert.go:92 +0x336\ngithub.com/pingcap/tidb/executor.insertRows(0x68b2600, 0xc0118e15f0, 0x687dd40, 0xc011727620, 0x0, 0x60f6f00)\n\t/Users/xia/workspace/src/github.com/pingcap/tidb/executor/insert_common.go:257 +0x38e\ngithub.com/pingcap/tidb/executor.(*InsertExec).Next(0xc011727620, 0x68b2600, 0xc0118e15f0, 0xc01173b900, 0x61c85a0, 0xc00065d800)\n\t/Users/xia/workspace/src/github.com/pingcap/tidb/executor/insert.go:267 +0x73\ngithub.com/pingcap/tidb/executor.Next(0x68b2600, 0xc0118e15f0, 0x68bc5c0, 0xc011727620, 0xc01173b900, 0x0, 0x0)\n\t/Users/xia/workspace/src/github.com/pingcap/tidb/executor/executor.go:267 +0x11f\ngithub.com/pingcap/tidb/executor.(*ExecStmt).handleNoDelayExecutor(0xc011986480, 0x68b2600, 0xc0118e15f0, 0x68bc5c0, 0xc011727620, 0x0, 0x0, 0x0, 0x0)\n\t/Users/xia/workspace/src/github.com/pingcap/tidb/executor/adapter.go:510 +0x2d6\ngithub.com/pingcap/tidb/executor.(*ExecStmt).handleNoDelay(0xc011986480, 0x68b2600, 0xc0118e15f0, 0x68bc5c0, 0xc011727620, 0x8301c00, 0xc011a20003, 0x0, 0xc010da8b68, 0x8, ...)\n\t/Users/xia/workspace/src/github.com/pingcap/tidb/executor/adapter.go:392 +0x13a\ngithub.com/pingcap/tidb/executor.(*ExecStmt).Exec(0xc011986480, 0x68b2600, 0xc0118e15f0, 0x0, 0x0, 0x0, 0x0)\n\t/Users/xia/workspace/src/github.com/pingcap/tidb/executor/adapter.go:360 +0x40e\ngithub.com/pingcap/tidb/session.runStmt(0x68b2600, 0xc0118e1440, 0xc00f5b7500, 0x68bc280, 0xc011986480, 0x0, 0x0, 0x0, 0x0)\n\t/Users/xia/workspace/src/github.com/pingcap/tidb/session/session.go:1201 +0x256\ngithub.com/pingcap/tidb/session.(*session).ExecuteStmt(0xc00f5b7500, 0x68b2600, 0xc0118e1440, 0x68bb780, 0xc01197e1a0, 0x0, 0x0, 0x0, 0x0)\n\t/Users/xia/workspace/src/github.com/pingcap/tidb/session/session.go:1166 +0x7d4\ngithub.com/pingcap/tidb/server.(*TiDBContext).ExecuteStmt(0xc00f8ecf60, 0x68b2600, 0xc0118e1440, 0x68bb780, 0xc01197e1a0, 0xc011980090, 0x68b2600, 0xc0118e1440, 0xc010da9201)\n\t/Users/xia/workspace/src/github.com/pingcap/tidb/server/driver_tidb.go:198 +0x65\ngithub.com/pingcap/tidb/server.(*clientConn).handleStmt(0xc00f9f8180, 0x68b2600, 0xc0118e1440, 0x68bb780, 0xc01197e1a0, 0x8322920, 0x0, 0x0, 0x1, 0x0, ...)\n\t/Users/xia/workspace/src/github.com/pingcap/tidb/server/conn.go:1400 +0xec\ngithub.com/pingcap/tidb/server.(*clientConn).handleQuery(0xc00f9f8180, 0x68b2600, 0xc00f775cb0, 0xc011980061, 0x25, 0x0, 0x0)\n\t/Users/xia/workspace/src/github.com/pingcap/tidb/server/conn.go:1308 +0x3b5\ngithub.com/pingcap/tidb/server.(*clientConn).dispatch(0xc00f9f8180, 0x68b2600, 0xc00f775cb0, 0xc011980061, 0x26, 0x25, 0x0, 0x0)\n\t/Users/xia/workspace/src/github.com/pingcap/tidb/server/conn.go:907 +0x513\ngithub.com/pingcap/tidb/server.(*clientConn).Run(0xc00f9f8180, 0x68b2600, 0xc00f775cb0)\n\t/Users/xia/workspace/src/github.com/pingcap/tidb/server/conn.go:721 +0x27f\ngithub.com/pingcap/tidb/server.(*Server).onConn(0xc00f722e70, 0xc00f9f8180)\n\t/Users/xia/workspace/src/gith"]
```

### 4. Affected version (Required)

master 
Release Version: v4.0.0-beta.2-716-g25e003253

<!-- v3.0.0, v4.0.0, etc -->

### 5. Root Cause Analysis

<!-- should be filled by the investigator before it's closed -->
If we support the clustered index, I think need to add a check for `IsCommonHandle`. Now we only check `PKIsHandle`. 