ID: 21391
Title: Changing column type uses old row format to rewrite new rows
Description:
## Bug Report

Please answer these questions before submitting your issue. Thanks!

### 1. Minimal reproduce step (Required)

```sql
set @@global.tidb_enable_change_column_type=true;
create table t (id int primary key, v varchar(10));
insert into t values (1, "123");
alter table t modify column v varchar(5);
```

Then access `/mvcc/key/test/t/1` from TiDB's status port to get the mvcc data of the row.

### 2. What did you expect to see? (Required)

There are two versions of the row, and all encoded with new row format.

### 3. What did you see instead (Required)

```json
 "key": "7480000000000000895F728000000000000001",
 "region_id": 79964,
 "value": {
  "info": {
   "writes": [
    {
     "start_ts": 421196381198221314,
     "commit_ts": 421196381198221315,
     "short_value": "CAQCBjEyMwgCCAIIBgIGMTIz"
    },
    {
     "start_ts": 421196374277619717,
     "commit_ts": 421196374277619718,
     "short_value": "gAABAAAAAgMAMTIz"
    }
   ]
  }
 }
}
```

The newer version which is rewritten by the modify column statement is encoded by old row format.


### 4. What is your TiDB version? (Required)

master ( c9288d246c99073ff04304363dc7234d9caa5090 )

