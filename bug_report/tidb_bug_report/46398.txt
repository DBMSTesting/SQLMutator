ID: 46398
Title: `kill` should close the connection without sending back the response
Description:
## Bug Report

Please answer these questions before submitting your issue. Thanks!

### 1. Minimal reproduce step (Required)

In the first terminal, run `mysql -P 4000 -p -h 127.0.0.1 -u root` and execute `select sleep(3000)`;

In the second terminal, `kill` this connection.

### 2. What did you expect to see? (Required)

It should report the error and doesn't give the response. The client will automatically reconnect and retry the query:

```
mysql> select sleep(300);
ERROR 2013 (HY000): Lost connection to MySQL server during query
No connection. Trying to reconnect...
Connection id:    33
Current database: *** NONE ***
```

### 3. What did you see instead (Required)

The `mysql` client returns:

```
+-------------+
| sleep(300)  |
+-------------+
|           1 |
+-------------+
```

And doesn't report any error. If you tried to execute another query, it will tell you the connection has been closed.

I think the key is that we should close the connection before the query finished, which means we shouldn't return the result.

### 4. What is your TiDB version? (Required)

```
mysql> select tidb_version();
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| tidb_version()                                                                                                                                                                              |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Release Version: None
Edition: Community
Git Commit Hash: None
Git Branch: None
UTC Build Time: None
GoVersion: go1.21.0
Race Enabled: false
Check Table Before Drop: false
Store: unistore |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)
```
