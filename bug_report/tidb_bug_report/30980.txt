ID: 30980
Title: MPP plan is not correct
Description:
## Bug Report

Please answer these questions before submitting your issue. Thanks!

### 1. Minimal reproduce step (Required)

<!-- a step by step guide for reproducing the bug. -->
```
mysql> create table t1(id int, v1 decimal(20,2), v2 decimal(20,2));
Query OK, 0 rows affected (0.14 sec)
mysql> create table t2(id int, v1 decimal(10,2), v2 decimal(10,2));                                                                                                                                
Query OK, 0 rows affected (0.07 sec)

mysql> create table t3(id int, v1 decimal(10,2), v2 decimal(10,2))
    -> ;
Query OK, 0 rows affected (0.09 sec)

mysql> insert into t1 values(1,1,1),(2,2,2);
Query OK, 2 rows affected (0.02 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql> insert into t2 values(1,1,1),(2,2,2),(3,3,3),(4,4,4),(5,5,5),(6,6,6),(7,7,7),(8,8,8);
Query OK, 8 rows affected (0.02 sec)
Records: 8  Duplicates: 0  Warnings: 0

mysql> insert into t3 values(1,1,1);
Query OK, 1 row affected (0.01 sec)

mysql> analyze table t1;
Query OK, 0 rows affected (0.14 sec)

mysql> analyze table t2;
Query OK, 0 rows affected (0.14 sec)

mysql> analyze table t3;
Query OK, 0 rows affected (0.05 sec)
mysql> alter table t1 set tiflash replica 1;
Query OK, 0 rows affected (0.12 sec)

mysql> alter table t2 set tiflash replica 1;                                                                                                                                                       
Query OK, 0 rows affected (0.11 sec)

mysql> alter table t3 set tiflash replica 1;                                                                                                                                                       
Query OK, 0 rows affected (0.08 sec)

mysql> set @@session.tidb_broadcast_join_threshold_size = 0;
Query OK, 0 rows affected (0.02 sec)

mysql> explain format = 'brief' select count(*), t2.v1, t2.v2 from t1 left join t2 on t1.v1 = t2.v1 and t1.v2 = t2.v2 group by t2.v1, t2.v2;
+---------------------------------------+---------+-------------------+---------------+------------------------------------------------------------------------------------------------------------
-------------------------------+
| id                                    | estRows | task              | access object | operator info                                                                                              
                               |
+---------------------------------------+---------+-------------------+---------------+------------------------------------------------------------------------------------------------------------
-------------------------------+
| TableReader                           | 2.00    | root              |               | data:ExchangeSender                                                                                        
                               |
| └─ExchangeSender                      | 2.00    | batchCop[tiflash] |               | ExchangeType: PassThrough                                                                                  
                               |
|   └─Projection                        | 2.00    | batchCop[tiflash] |               | Column#9, test.t2.v1, test.t2.v2                                                                           
                               |
|     └─HashAgg                         | 2.00    | batchCop[tiflash] |               | group by:test.t2.v1, test.t2.v2, funcs:count(1)->Column#9, funcs:firstrow(test.t2.v1)->test.t2.v1, funcs:fi
rstrow(test.t2.v2)->test.t2.v2 |
|       └─HashJoin                      | 2.00    | batchCop[tiflash] |               | left outer join, equal:[eq(test.t1.v1, test.t2.v1) eq(test.t1.v2, test.t2.v2)]                             
                               |
|         ├─ExchangeReceiver(Build)     | 8.00    | batchCop[tiflash] |               |                                                                                                            
                               |
|         │ └─ExchangeSender            | 8.00    | batchCop[tiflash] |               | ExchangeType: HashPartition, Hash Cols: Column#12, Column#13                                               
                               |
|         │   └─Projection              | 8.00    | batchCop[tiflash] |               | test.t2.v1, test.t2.v2, cast(test.t2.v1, decimal(20,2))->Column#12, cast(test.t2.v2, decimal(20,2))->Column
#13                            |
|         │     └─Selection             | 8.00    | batchCop[tiflash] |               | not(isnull(test.t2.v1)), not(isnull(test.t2.v2))                                                           
                               |
|         │       └─TableFullScan       | 8.00    | batchCop[tiflash] | table:t2      | keep order:false                                                                                           
                               |
|         └─ExchangeReceiver(Probe)     | 2.00    | batchCop[tiflash] |               |                                                                                                            
                               |
|           └─ExchangeSender            | 2.00    | batchCop[tiflash] |               | ExchangeType: HashPartition, Hash Cols: test.t1.v1, test.t1.v2                                             
                               |
|             └─TableFullScan           | 2.00    | batchCop[tiflash] | table:t1      | keep order:false                                                                                           
                               |
+---------------------------------------+---------+-------------------+---------------+------------------------------------------------------------------------------------------------------------
-------------------------------+
13 rows in set (0.01 sec)

```
### 2. What did you expect to see? (Required)
Here is a ExchangeSender/ExchangeReceiver after HashJoin. Because group by column comes from the inner table of a outer join, and it will generate null values if join not matched.
### 3. What did you see instead (Required)
No ExchangeSender/ExchangeReceiver after HashJoin
### 4. What is your TiDB version? (Required)
TiDB@5.1.0
<!-- Paste the output of SELECT tidb_version() -->

