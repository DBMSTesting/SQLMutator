ID: 14461
Title: Discrepancy in Integer Conversion from Float in SQL
Description:
### What happens?


When I convert 0.5 to an integer, it should yield 1, just like the outcomes shown by the first two select statements. However, when I first convert it to a FLOAT and then to an INT, it surprisingly returns 0. This should still return 1, hence I believe there is a bug with the operation.

### To Reproduce

These are the sql statements that are executed:
```sql
select  CAST( 0.500 AS INT);

select  CAST( CAST(0.500 AS STRING) AS INT);

select   CAST( CAST(0.500 AS FLOAT) AS INT);
```
These are python statements that are executed:
```python
import duckdb

testsqls="""

select  CAST( 0.500 AS INT);

select  CAST( CAST(0.500 AS STRING) AS INT);

select   CAST( CAST(0.500 AS FLOAT) AS INT);
"""
sqls=testsqls.split(";")
with duckdb.connect("file.db") as con:    
   
    for sql in sqls:
        try:
            print(sql)
            results = con.sql(sql)
            if results !=None:
                print(results)
        except Exception as e:
            print(e)
```

### OS:

Windows 10 x86_64

### DuckDB Version:

1.1.2

### DuckDB Client:

Python

### Hardware:

_No response_

### Full Name:

Wang Zhuangda

### Affiliation:

Xiamen University

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have not tested with any build

### Did you include all relevant data sets for reproducing the issue?

Not applicable - the reproduction does not require a data set

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have