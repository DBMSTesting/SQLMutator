ID: 16129
Title: Using function chaining will swallow true error and report missing function
Description:
### What happens?

Hi folks!

I ran into this just doing ad hoc analysis, so no urgency at all. 

If using the function chaining syntax, an error (here, referring to a column that doesn't exist) will return an incorrect error message. So the query should fail (and it does!), the error just doesn't match the reason for the failure.

### To Reproduce

This shows the wrong error:
```sql
set autoinstall_known_extensions=TRUE;
set autoload_known_extensions=TRUE;
install core_functions;
load core_functions;

with example_data as (
    select 'woot' as column_name
)
from example_data
select 
    wrong_column_name.replace('o','oo')
;
```

```sql
Catalog Error:
Scalar Function with name "replace" is not in the catalog, but it exists in the core_functions extension.
```

This shows the expected error:

```sql
with example_data as (
    select 'woot' as column_name
)
from example_data
select 
    replace(wrong_column_name,'o','oo')
;
```

```sql
Binder Error:
Referenced column "wrong_column_name" not found in FROM clause!
Candidate bindings: "column_name"

LINE 6:     replace(wrong_column_name,'o','oo')
```

### OS:

MacOS

### DuckDB Version:

1.2.0

### DuckDB Client:

CLI

### Hardware:

M1 Macbook Pro

### Full Name:

Alex Monahan

### Affiliation:

DuckDB Labs and MotherDuck

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [x] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [x] Yes, I have