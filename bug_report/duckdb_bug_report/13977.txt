ID: 13977
Title: `replacement_scan` not working anymore after 1.1.0
Description:
### What happens?

In python, doing an example code like [this](https://duckdb.org/docs/guides/python/sql_on_pandas.html) used to work even if the variable `my_df` was defined in another python file.
With 1.1.0, this is not working anymore.



### To Reproduce

In a `file1.py`

```python
import duckdb

def func1(query):
    return duckdb.sql(query)
```

In another file `file2.py`
```python
import pandas
from file1 import func1

# Create a Pandas dataframe
my_df = pandas.DataFrame.from_dict({'a': [42]})

# query the Pandas DataFrame "my_df"
results = func1("SELECT * FROM my_df").df()
```

```bash
python file2.py
```
Will fail with `CatalogException: Catalog Error: Table with name my_df does not exist!`

From my understanding the `globals` which is used by duckdb to know which variable should be used during replacement scans is now limited to the caller function since 1.1.0.


### OS:

linux

### DuckDB Version:

1.1.0

### DuckDB Client:

python

### Hardware:

_No response_

### Full Name:

John Doe

### Affiliation:

Acme Corp

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a nightly build

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have