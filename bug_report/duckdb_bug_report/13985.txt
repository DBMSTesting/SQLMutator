ID: 13985
Title: Cross schema TYPE reference broken
Description:
### What happens?

When referencing a TYPE across schemas, duckDB does not find the TYPE and emits
```
Catalog Error: Type with name mytype does not exist!
Did you mean "myschema.mytype"?
```

### To Reproduce

```
create schema myschema;
create type myschema.mytype as struct(v int);
create table mytable(mt myschema.mytype);
```

This yields
```
Catalog Error: Type with name mytype does not exist!
Did you mean "myschema.mytype"?
```

but should run just fine, without any error.

The trigger here is that `mytable` is created (implicitly) in the `main` schema, whereas the type lives in `myschema`. It's quite amusing that DuckDB then reports that the _explicitly_ schema-prefixed typed cannot be found where it in fact does exist.

### OS:

Arch Linux x86_64

### DuckDB Version:

1.1.0

### DuckDB Client:

DuckDB CLI

### Hardware:

_No response_

### Full Name:

Stefan Hoffmeister

### Affiliation:

none

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

No - Other reason (please specify in the issue body)

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have