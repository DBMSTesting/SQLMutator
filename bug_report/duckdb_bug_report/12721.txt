ID: 12721
Title: `fetchnumpy()` returns non-NumPy objects (i.e., pandas.core.arrays.categorical.Categorical)
Description:
### What happens?

The `fetchnumpy()` function returns a Pandas object for (at least) NumPy unicode dtypes, not a NumPy object. As the name of the function is `fetchnumpy()`, it seems the result should consist only of NumPy objects. 

### To Reproduce

```python
>>> import numpy as np
>>> import duckdb
>>> a1 = np.array(('a', 'b', 'c'))
>>> a1
array(['a', 'b', 'c'], dtype='<U1')
>>> d = duckdb.connect().execute('select * from a1').fetchnumpy()
>>> d['column0']
['a', 'b', 'c']
Categories (3, object): ['a' < 'b' < 'c']
>>> type(d['column0'])
<class 'pandas.core.arrays.categorical.Categorical'>
```

### OS:

MacOS 14.1.1, arm64

### DuckDB Version:

1.0.0

### DuckDB Client:

Python

### Full Name:

Christopher Ariza

### Affiliation:

Self

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Not applicable - the reproduction does not require a data set

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have