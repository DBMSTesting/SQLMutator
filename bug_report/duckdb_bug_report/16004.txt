ID: 16004
Title: Timestamp "2050-12-31" produces unexpected behaviours (possibly overflow?)
Description:
### What happens?

When trying to extract the month from a timestamp column, the row with 2050-12-31 produces 0, instead of 12.

### To Reproduce

```
import duckdb
import pandas as pd

print('duckdb version', duckdb.__version__)

con = duckdb.connect("example.db")

# Create table
df = pd.DataFrame({"DATE": pd.date_range("2050-12-30", "2051-01-01")})
con.execute("CREATE TABLE test AS SELECT * FROM df")

rows = con.execute(
    """
SELECT
  DATE,
  EXTRACT(month FROM DATE) AS "month"
FROM test
"""
).fetchall()

con.close()

print("DATE, MONTH")
for date, row in rows:
    print(date, ',', row)
```

Output:

```
duckdb version 1.1.3
DATE, MONTH
2050-12-30 00:00:00 , 12
2050-12-31 00:00:00 , 0
2051-01-01 00:00:00 , 1
```

### OS:

Windows

### DuckDB Version:

1.1.3

### DuckDB Client:

Python (also tried DBeaver), the problem was identified in ibis originally.

### Hardware:

_No response_

### Full Name:

Jabez Thomas Wilson

### Affiliation:

Endgame Analytics

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have not tested with any build

### Did you include all relevant data sets for reproducing the issue?

No - Other reason (please specify in the issue body)

### Did you include all code required to reproduce the issue?

- [x] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [x] Yes, I have