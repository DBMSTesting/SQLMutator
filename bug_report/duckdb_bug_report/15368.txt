ID: 15368
Title: Vectorize lookups in `GroupedAggregateHashTable`
Description:
Follow-up of https://github.com/duckdb/duckdb/pull/15321

Our main lookup loop has branches and loop iterations depend on each other. There is no opportunity for instruction-level parallelism, and cache misses cannot be amortized by doing many simultaneously, so the CPU can get stalled while fetching memory.

This PR does a useless count of the number of occupied entries in the hash table in an earlier loop, which is branchless and has independent loop iterations. This allows cache misses to be amortized by doing many simultaneously. When entering the main lookup loop later, the entries are already in the CPU caches, and very little CPU stalls should occur.

Same query as before (TPC-H SF100):
```sql
select count(*) from (select distinct l_orderkey, l_linenumber from lineitem);
```
Execution time is down from 4.5s to 4.2s on my laptop now.