ID: 13498
Title: InvalidInputException in DuckDB when Running duckdb.sql() Concurrently Across Threads
Description:
### What happens?

I got some `duckdb.duckdb.InvalidInputException: Invalid Input Error: Attempting to execute an unsuccessful or closed pending query result` error in my web service. But when I tested them in sequence, everything was fine. 

In my original code, I only used `duckdb.sql()`. I found that this error occurs when two threads try to run `duckdb.sql()` simultaneously. 

I noticed that `duckdb.connect()` and `duckdb.connect(':default:')` seem to have different behaviors. Iâ€™m wondering if this is a bug or if there is documentation explaining the correct usage that I might have missed.

### To Reproduce

```py
import threading
import duckdb

def good():
    con = duckdb.connect()
    data = con.sql("SELECT 42").fetchall()
    return data

def buggy():
    con = duckdb.connect(':default:')
    data = con.sql("SELECT 42").fetchall()
    return data

def also_buggy():
    data = duckdb.sql("SELECT 42").fetchall()
    return data

def test(func):
    p = threading.Thread(target=func)
    q = threading.Thread(target=func)
    p.start()
    q.start()
    p.join()
    q.join()

def main():
    test(good)
    test(buggy)
    test(also_buggy)

if __name__ == '__main__':
    main()
```


### OS:

Windows 11 x64

### DuckDB Version:

v1.0.0

### DuckDB Client:

Python

### Full Name:

Ding Shiji

### Affiliation:

Fudan University

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Not applicable - the reproduction does not require a data set

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have