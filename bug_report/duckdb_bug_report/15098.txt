ID: 15098
Title: read_csv: "preservation of insertion order" vs parallel=true: bug? documentation issue? enhancement?
Description:
### What happens?

https://duckdb.org/docs/sql/dialect/order_preservation.html
says that read_csv() preserves insertion order.

But when last() is used, there is a dependence on whether or not parallel=true:
```
D select version();
┌────────────────┐
│  "version"()   │
│    varchar     │
├────────────────┤
│ v1.1.4-dev2677 │
└────────────────┘

.system jot 10000000 1 > seq.txt

D select last(line) from read_csv('seq.txt', header=false, sep='', columns={'line': VARCHAR}, parallel=false);
┌──────────────┐
│ "last"(line) │
│   varchar    │
├──────────────┤
│ 10000000     │
└──────────────┘

SET memory_limit = '100MB';
D select last(line) from read_csv('seq.txt', header=false, sep='', columns={'line': VARCHAR}, parallel=true);
┌──────────────┐
│ "last"(line) │
│   varchar    │
├──────────────┤
│ 9138889      │
└──────────────┘
```
Now it is true that the documentation at order_preservation.html does
carve out an exception for order-sensitive aggregate functions, but
the caveat is in the `GROUP BY` section, so it's not entirely clear
whether the caveat is supposed to apply when there is no GROUP BY.

In any case, if the use of last() without `GROUP BY` is intended to void
order preservation, then the question becomes: if I want last() to retrieve
the last row as if there were an appropriate ORDER BY clause, how
could this be done efficiently in the absence of a suitable column?

That is, using the seq.txt example, something more efficient than:
```
select last(line order by rowid) 
  from (select *, row_number() OVER () as rowid
        from read_csv('seq.txt', header=false, sep='', columns={'line': VARCHAR}));
```

**Would `last(line order by table)` be a viable enhancement?**


### To Reproduce

```sql
.system jot 10000000 1 > seq.txt
SET memory_limit = '100MB';
select last(line) from read_csv('seq.txt', header=false, sep='', columns={'line': VARCHAR}, parallel=true);
```

### OS:

MacOS

### DuckDB Version:

v1.1.4-dev2677 et al

### DuckDB Client:

CLI

### Hardware:

_No response_

### Full Name:

Peter Koppstein

### Affiliation:

Princeton University

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a nightly build

### Did you include all relevant data sets for reproducing the issue?

Not applicable - the reproduction does not require a data set

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have