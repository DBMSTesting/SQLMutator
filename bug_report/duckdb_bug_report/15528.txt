ID: 15528
Title: Pandas (.df()) and fetchall() but not Polars (.pl()) rename column name conflicts 
Description:
### What happens?

If two tables with identical column names are joined, and the identical column names are selected from each table and retrieved using the Python API via .pl(), this fails with the error "polars.exceptions.ShapeError: M column names provided for a DataFrame of width N" (where M is the number of columns participating in the conflict, and N is the number of unique names. Pandas and fetchall() assign a unique suffix (i.e. _1). I'm not sure if this is a bug or intended behavior, but my vote would be to have the behavior be consistent across all manners of fetching rows. Thank you!

### To Reproduce

```
import duckdb as dd

conn = dd.connect()
conn.execute("CREATE TABLE one (a INTEGER); CREATE TABLE two (a INTEGER); SELECT one.a, two.a FROM one JOIN two ON one.a = two.a").pl()
```

### OS:

Ubuntu Jammy Jellyfish

### DuckDB Version:

1.1.3

### DuckDB Client:

Python

### Hardware:

_No response_

### Full Name:

Ben Skubi

### Affiliation:

OHSU

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Not applicable - the reproduction does not require a data set

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have