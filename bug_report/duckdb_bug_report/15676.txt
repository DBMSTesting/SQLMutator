ID: 15676
Title: `*(COLUMNS(*) + 1))` doesn't work 
Description:
### What happens?

This is probably more of a feature request than a bug, but I think `*COLUMNS(*)` unpacking would be drastically more useful if it were composable with what the `COLUMNS(*)` expression was originally made for: applying expressions to multiple columns.

Currently, the following query throws:
```sql
SELECT greatest(*(COLUMNS(*) + 1)) FROM (SELECT 1)
```  
which means, for example, that problems like https://github.com/duckdb/duckdb/discussions/15673 and https://github.com/duckdb/duckdb/discussions/6720 and https://github.com/duckdb/duckdb/discussions/12826   (which ask for a logical disjunction of conditions given by a `COLUMNS(*)` expression in a `WHERE` clause) can't be handled via an elegant 

```sql
SELECT
    *
FROM
    (
        SELECT
            random(), random() 
        FROM
            range(10)
    )
WHERE
    greatest(*(COLUMNS(*) > 1))  --- replace `greatest` by `least` for `AND`; replace `greatest` by `add` for fine-tunable control over the number of columns you want to be greater than 1
```  

### To Reproduce

.

### OS:

Linux

### DuckDB Version:

1.1.3

### DuckDB Client:

Python

### Hardware:

.

### Full Name:

Soeren Wolfers

### Affiliation:

G-Research

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a nightly build

### Did you include all relevant data sets for reproducing the issue?

Not applicable - the reproduction does not require a data set

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have