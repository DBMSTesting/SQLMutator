ID: 13404
Title: Fix decorrelation of nested correlated recursive CTEs
Description:
Without this PR, DuckDB has a few issues related to correlated recursive CTEs.

---

First, planning of (deeply) nested recursive CTEs failed:

```
SELECT *
FROM generate_series(1,3) AS "input"("n"),
LATERAL
(WITH RECURSIVE "subquery1"("x") AS (
  (SELECT "n", true AS "exists")
    UNION ALL
  (WITH "subquery" AS (SELECT * FROM "subquery1")
  SELECT "x" - 1, (SELECT NOT EXISTS (SELECT 1 FROM "subquery" AS "input"("a") WHERE "a" > _."x"))
  FROM "subquery" AS _("x") WHERE "x" > 0)
  ) table "subquery1")
ORDER BY "n", "x"
;
```

---

Second, execution of correlated recursive CTEs, containing `NOT EXISTS` subqueries could lead to wrong results:

```
SELECT *
FROM generate_series(1,3) AS "input"("n"),
LATERAL
(WITH RECURSIVE "subquery"("x") AS (
  (SELECT "n", true AS "exists")
    UNION ALL
  SELECT "x" - 1, NOT EXISTS (SELECT 1 FROM "subquery" AS "input"("x") WHERE "x" > _."x") FROM "subquery" AS _("x") WHERE "x" > 0
  ) table "subquery")
ORDER BY "n"
;
```

The issue is that the inner `NOT EXISTS` subquery has an _implicit_ correlation to the outer correlation `"input"."n"`. This was not taken into consideration. This PR fixes this by adding an appropriate filter predicate like this:

```
SELECT *
FROM
(WITH RECURSIVE "subquery"("x", "n") AS (
  (SELECT "n", "n", true AS "exists" FROM generate_series(1,3) AS "input"("n"))
    UNION ALL
  (WITH "subquery" AS (select * from "subquery")
  SELECT "n" - 1, "n", NOT EXISTS (SELECT 1 FROM "subquery" AS "input"("x") WHERE "x" > "n" AND "n" = "corr_n") FROM "subquery" AS _("n", "corr_n") WHERE "n" > 0)
                                                                                             -- ^^^^^^^^^^^^^^
  ) table "subquery")
;
```

---

Currently, there is an issue with `test/sql/cte/test_fib_complex.test_slow` when executed by a debug build. The `FILTER_PUSHDOWN` optimizer somehow creates the following binder error:

```
INTERNAL Error: Failed to bind column reference "SUBQUERY" [250.0] (bindings: {#[123.0], #[123.1], #[123.2], #[123.3], #[123.4], #[123.5], #[143.0]})
```

~I have not found a solution yet for that problem. **Therefore, this PR is not ready for merge.**~

This has been fixed. I think the issue was a continuation of https://github.com/duckdb/duckdb/pull/12916.