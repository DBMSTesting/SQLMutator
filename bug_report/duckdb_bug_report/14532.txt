ID: 14532
Title: small RECURSIVE cte issue in DuckDB (workaroundable but you may want to know)
Description:
### What happens?

the Recursive CTE get a bit lost if I don't change intermediate field names to a different name
The problem doesn't happen on SQLite



### To Reproduce

Minimal example: (in your live WASM site https://shell.duckdb.org/ on duckdb-1.1.2)
````
DROP TABLE IF EXISTS bos;
create table bos as (
    select 'North' as Destination, 'Plant' as Origin
  union 
    select 'Central', 'Plant'
   union
    select 'Central' ,' PlantB'
   union
    select 'Plant', 'PlantB');

DROP TABLE IF EXISTS LocationLevel ; -- Trying to generate Low LevelCode
CREATE TABLE LocationLevel as 
with recursive cte(location, level) as (
   select bos.destination as location, 1 as level  from bos 
       where not exists( select 1 from bos b2  where bos.destination =b2.origin)
   union all
      select bos.origin,   1 + level from cte inner join bos on cte.location = bos.Destination
      where coalesce(cte.location,'') <>''  
           )
select location , max(level) as level  from cte 
 group by location;
````

it works if I rename Level:

```
DROP TABLE IF EXISTS LocationLevel ;
 CREATE TABLE LocationLevel as 
with recursive cte(location, ducklevel) as (
   select bos.destination as location, 1 as ducklevel  from bos 
       where not exists( select 1 from bos b2  where bos.destination =b2.origin)
   union all
      select bos.origin,   1 + ducklevel from cte inner join bos on cte.location = bos.Destination
      where coalesce(cte.location,'') <>''  
           )
select location , max(ducklevel) as level  from cte  
 group by location;  
```

### OS:

WASM: your webpage Duckdb-1.1.2

### DuckDB Version:

1.1.2

### DuckDB Client:

any (on your webpage https://shell.duckdb.org/ for example)

### Hardware:

_No response_

### Full Name:

stonebig

### Affiliation:

WinPython.github.io

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have