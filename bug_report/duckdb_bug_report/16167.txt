ID: 16167
Title: [1.2.0] sniffing a CSV file doesn't using quotes returns the `\u0000` character as the detected `quote`
Description:
### What happens?

I have the following CSV file [tiny.csv](https://github.com/user-attachments/files/18742226/tiny.csv) and a test sniffing it.

In DuckDB (Java) `v1.1.3`, the sniffed result was:
```scala
delimiter = ";",
quote = "\"",       // this was probably incorrect
escape = "\"",    // this was also probably incorrect
newlineDelimiter = "\\n",
hasHeader = true,
```

In DuckDB `v1.2.0`, the sniffed result is:
```scala
delimiter = ";",
quote = "\u0000",
escape = "\u0000",
newlineDelimiter = "\\n",
hasHeader = true,
```

My question is why DuckDB returns the `\u0000` and not just empty String?

We can see the same behaviour from DuckDB in cmdline mode:
```bash
➜  resources git:(update/duckdb_jdbc-1.2.0) ✗ duckdb                                                                                                                                      <region:us-west-1>
v1.2.0 5f5512b827
Enter ".help" for usage hints.
Connected to a transient in-memory database.
Use ".open FILENAME" to reopen on a persistent database.
D FROM sniff_csv('tiny.csv');
┌───────────┬─────────┬─────────┬──────────────────┬─────────┬──────────┬───────────┬──────────────────────┬────────────┬─────────────────┬───────────────┬─────────────────────────────────────────────────┐
│ Delimiter │  Quote  │ Escape  │ NewLineDelimiter │ Comment │ SkipRows │ HasHeader │       Columns        │ DateFormat │ TimestampFormat │ UserArguments │                     Prompt                      │
│  varchar  │ varchar │ varchar │     varchar      │ varchar │  uint32  │  boolean  │ struct("name" varc…  │  varchar   │     varchar     │    varchar    │                     varchar                     │
├───────────┼─────────┼─────────┼──────────────────┼─────────┼──────────┼───────────┼──────────────────────┼────────────┼─────────────────┼───────────────┼─────────────────────────────────────────────────┤
│ ;         │ \0      │ \0      │ \n               │ \0      │    0     │ true      │ [{'name': name, 't…  │ NULL       │ NULL            │ NULL          │ FROM read_csv('tiny.csv', auto_detect=false, …  │
└───────────┴─────────┴─────────┴──────────────────┴─────────┴──────────┴───────────┴──────────────────────┴────────────┴─────────────────┴───────────────┴─────────────────────────────────────────────────┘
```

Same behaviour with the latest nightly build:
```bash
➜  resources git:(update/duckdb_jdbc-1.2.0) ✗ ./duckdb                                                                                                                                    <region:us-west-1>
v1.2.1-dev152 83d07cb683
Enter ".help" for usage hints.
Connected to a transient in-memory database.
Use ".open FILENAME" to reopen on a persistent database.
D FROM sniff_csv('tiny.csv');
┌───────────┬─────────┬─────────┬──────────────────┬─────────┬──────────┬───────────┬──────────────────────┬────────────┬─────────────────┬───────────────┬─────────────────────────────────────────────────┐
│ Delimiter │  Quote  │ Escape  │ NewLineDelimiter │ Comment │ SkipRows │ HasHeader │       Columns        │ DateFormat │ TimestampFormat │ UserArguments │                     Prompt                      │
│  varchar  │ varchar │ varchar │     varchar      │ varchar │  uint32  │  boolean  │ struct("name" varc…  │  varchar   │     varchar     │    varchar    │                     varchar                     │
├───────────┼─────────┼─────────┼──────────────────┼─────────┼──────────┼───────────┼──────────────────────┼────────────┼─────────────────┼───────────────┼─────────────────────────────────────────────────┤
│ ;         │ \0      │ \0      │ \n               │ \0      │    0     │ true      │ [{'name': name, 't…  │ NULL       │ NULL            │ NULL          │ FROM read_csv('tiny.csv', auto_detect=false, …  │
└───────────┴─────────┴─────────┴──────────────────┴─────────┴──────────┴───────────┴──────────────────────┴────────────┴─────────────────┴───────────────┴─────────────────────────────────────────────────┘
```

### To Reproduce

```
FROM sniff_csv('tiny.csv');
```

### OS:

macOS aarch64 - Apple M3 Pro

### DuckDB Version:

1.2.0

### DuckDB Client:

Java, cmdline

### Hardware:

_No response_

### Full Name:

Jules Ivanic

### Affiliation:

Demyst

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a nightly build

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [x] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [x] Yes, I have