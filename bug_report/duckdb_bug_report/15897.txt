ID: 15897
Title: INTERNAL Error: Failed to bind column reference "constraint_name"
Description:
### What happens?

I got an internal error that used to not happen when I tested DuckDB months ago. I used `duckdb-node-neo` and also tested this using https://shell.duckdb.org/ and I got the same error.

### To Reproduce

This is the simplified version of my query:

```sql
SELECT 
  (
    SELECT STRING_AGG(kcu2.column_name, ',' ORDER BY kcu2.ordinal_position)
    FROM information_schema.key_column_usage AS kcu2
    WHERE kcu2.constraint_name = rc.unique_constraint_name
  ) AS to_column,
  (
    SELECT kcu2.table_name
    FROM information_schema.key_column_usage AS kcu2
    WHERE kcu2.constraint_name = rc.unique_constraint_name LIMIT 1
  ) AS to_table
FROM
  information_schema.key_column_usage AS kcu
JOIN
  information_schema.table_constraints AS tc
ON
  tc.constraint_name = kcu.constraint_name
JOIN
  information_schema.referential_constraints AS rc
ON
  rc.constraint_name = kcu.constraint_name
WHERE
  tc.constraint_type = 'FOREIGN KEY' AND
  kcu.table_schema = 'main' AND
  kcu.table_name = 'exams' AND
  (to_column IS NOT NULL OR to_table IS NOT NULL)
GROUP BY
  kcu.constraint_schema,
  kcu.table_name,
  rc.unique_constraint_schema,
  rc.unique_constraint_name,
  tc.constraint_name,
  rc.update_rule,
  rc.delete_rule;
```

The error:

```
INTERNAL Error: Failed to bind column reference "constraint_name" [29.3] (bindings: {#[85.0]})
This error signals an assertion failure within DuckDB. This usually occurs due to unexpected conditions or errors in the program's logic.
For more information, see https://duckdb.org/docs/dev/internal_errors
```

The dataset is not needed to replicate this, but I can put it here just in case (I used an example from the docs)
```sql
CREATE TABLE students (id INTEGER PRIMARY KEY, name VARCHAR);
CREATE TABLE subjects (id INTEGER PRIMARY KEY, name VARCHAR);
CREATE TABLE exams (
    exam_id INTEGER PRIMARY KEY,
    subject_id INTEGER REFERENCES subjects(id),
    student_id INTEGER REFERENCES students(id),
    grade INTEGER
);
INSERT INTO students VALUES (1, 'Student 1');
INSERT INTO subjects VALUES (1, 'CS 101');
INSERT INTO exams VALUES (1, 1, 1, 10);
```

I believe it used to work in the older version. It might be `v1.0.0` when we used to test DuckDB using the old [node package](https://duckdb.org/docs/api/nodejs/overview.html).

Btw, I worked on implementing DuckDB at Beekeeper Studio using the new node neo package, and it was a nice experience. It solves many issues that we had while using the old node package. Amazing job! :)

### OS:

Windows x86_64 WSL

### DuckDB Version:

1.1.3

### DuckDB Client:

Node.js API (Neo) v1.1.3-alpha.10, WASM (via shell.duckdb.org)

### Hardware:

_No response_

### Full Name:

Mohammad Azmi

### Affiliation:

Beekeeper Studio

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [x] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [x] Yes, I have