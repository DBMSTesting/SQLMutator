ID: 15393
Title: IOException only under Windows with ATTACH
Description:
### What happens?

When a database is opened for read only, I expect that a read only attach should have concurrent access. This works on Linux, but gives an IOException on Windows.

### To Reproduce

```python
import duckdb

ro_file = 'ro.duckdb'
rw_file = 'rw.duckdb'

duckdb.connect(ro_file, read_only=False)

class Database:
    database_file: str
    read_only: bool
    con: duckdb.DuckDBPyConnection

    def __init__(self, database_file: str, read_only: bool=True):
        self.con = None
        self.database_file = database_file
        self.read_only = read_only

    def cursor(self):
        return self.con.cursor()

    def __enter__(self):
        self.con = duckdb.connect(self.database_file) # <- error was here
        return self

    def __exit__(self, exception_type, exception_value, exception_traceback):
        self.con.close()

with Database(rw_file, read_only=False) as target_db:
    with Database(ro_file, read_only=True) as source_db:
        target_db.con.execute(f"ATTACH DATABASE '{ro_file}' AS db_read (READ_ONLY);")   
        target_db.con.execute(f"DETACH db_read;")
```

I would expect that the code below would do exactly the same as he more complex case above. The case below works on Windows, without issues. 
```python
import duckdb

ro_file = 'ro.duckdb'
rw_file = 'rw.duckdb'

duckdb.connect(ro_file, read_only=False)

with duckdb.connect(rw_file, read_only=False) as target_db:
    with duckdb.connect(ro_file, read_only=True) as source_db:
        target_db.execute(f"ATTACH DATABASE '{ro_file}' AS db_read (READ_ONLY);")
        target_db.execute(f"DETACH db_read;")

        print(source_db)
```

### OS:

Windows

### DuckDB Version:

1.1.3

### DuckDB Client:

Python

### Hardware:

_No response_

### Full Name:

Stefan de Konink

### Affiliation:

Stichting OpenGeo

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have