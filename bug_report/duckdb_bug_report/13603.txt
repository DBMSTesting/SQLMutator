ID: 13603
Title: .tables doesn't include catalog/database and schema name
Description:
### What happens?

The `.tables` command in the DuckDB CLI is a handy tool for listing all tables across all schemas, and it even allows for some basic filtering.

However, if you have tables with the same name in different schemas, the current output can be a bit confusing. For example, if you create two schemas and both have a table named `foobar`, running `.tables` will just show `foobar` twice, without indicating which schema each belongs to:

```sql
create schema a;
create schema b;
create table a.foobar(name varchar);
create table b.foobar(name varchar);
.tables
foobar  foobar
```

To improve clarity, it would be helpful if the output included the fully qualified names of tables when they exist in different schemas. For instance, instead of just foobar, it would be more informative to see `a.foobar` and `b.foobar`.

Additionally, it would be great if the filtering feature allowed you to filter based on the full table name. For example, using `.tables a.%` could list all tables within the a schema.

### To Reproduce

```
create schema a;
create schema b;
create table a.foobar(name varchar);
create table b.foobar(name varchar);
.tables
foobar  foobar
```

### OS:

Mac OS X

### DuckDB Version:

1.0.0

### DuckDB Client:

CLI

### Full Name:

Rusty Conover

### Affiliation:

self

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have