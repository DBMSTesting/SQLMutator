ID: 16409
Title: Insert or update doesn't work with arrays
Description:
### What happens?

When doing an `update` or `insert or replace` on a primary table, if there is an array column is in the updated fields, it fails with a foreign key error.

Using v1.2.0 5f5512b827



### To Reproduce

```
create table test (id int primary key, arr string[]); 
insert into test values (1, '[asdf, 2e3f]');
create table test_fk (test_id int references test (id), val string);
insert into test_fk values (1, 'blkaj');

insert or replace into test values (1, '[lkjsdf]');
update test set arr = [] where id = 1;
insert into test values (1, '[lkjsdf]') on conflict (id) do update set arr = excluded.arr;
insert into test values (1, '[lkjsdf]') on conflict do update set arr = excluded.arr;

```

Output: 

```
8:03:59 ~ $ duckdb
v1.2.0 5f5512b827
Enter ".help" for usage hints.
Connected to a transient in-memory database.
Use ".open FILENAME" to reopen on a persistent database.
D 
D create table test (id int primary key, arr string[]); 
D insert into test values (1, '[asdf, 2e3f]');
D create table test_fk (test_id int references test (id), val string);
D insert into test_fk values (1, 'blkaj');
D 
D insert or replace into test values (1, '[lkjsdf]');
Constraint Error:
Violates foreign key constraint because key "test_id: 1" is still referenced by a foreign key in a different table
D update test set arr = [] where id = 1;
Constraint Error:
Violates foreign key constraint because key "test_id: 1" is still referenced by a foreign key in a different table
D insert into test values (1, '[lkjsdf]') on conflict (id) do update set arr = excluded.arr;
Constraint Error:
Violates foreign key constraint because key "test_id: 1" is still referenced by a foreign key in a different table
D insert into test values (1, '[lkjsdf]') on conflict do update set arr = excluded.arr;
Constraint Error:
Violates foreign key constraint because key "test_id: 1" is still referenced by a foreign key in a different table
D 
D select * from test  join test_fk on id = test_id;
┌───────┬──────────────┬─────────┬─────────┐
│  id   │     arr      │ test_id │   val   │
│ int32 │  varchar[]   │  int32  │ varchar │
├───────┼──────────────┼─────────┼─────────┤
│   1   │ [asdf, 2e3f] │    1    │ blkaj   │
└───────┴──────────────┴─────────┴─────────┘
D 
```

### OS:

MacOS 15.2 (24C101) (arm64, M4)

### DuckDB Version:

v1.2.0 5f5512b827

### DuckDB Client:

CLI, Python

### Hardware:

_No response_

### Full Name:

Jeffrey Melloy

### Affiliation:

None

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [x] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [x] Yes, I have