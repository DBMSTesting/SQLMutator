ID: 12588
Title: hive_partitioning=True can interpret empty string values in directory as NULL
Description:
### What happens?

With `hive_partitioning=True`, directories with an empty value (`Field=`) can be interpreted as being values of `NULL`, even when the actual values stored in the files are empty strings (`''`).

The red bar in this image is all the same field, being read from the same Parquet files (directory glob of a hive partition). In the polars df, hive partitioning is disabled. The results from the queries in DuckDB (with hive partitioning enabled) are not logically possible:

![image](https://github.com/duckdb/duckdb/assets/4874269/9f434cf2-2d0a-46c7-8a75-d9f2af58f17b)

DuckDB believes `NULL` is a possible value, but when counting the rows it shows that no NULL values exist (while empty strings do).

Setting `hive_partitioning=False` in DuckDB instantly resolves this (I'm assuming w/ the downside that some hive partition features are disabled).

It's 100% reproducible with my current dataset of a few million rows, partitioned on 5 columns. When testing on my Windows machine, I couldn't reproduce it with a minimal dataset of only one column and 3 rows - I don't know how many rows/columns are required to make DuckDB take a different route when calculating `DISTINCT` values. **I hope you can help in this matter, I'll help make a reproducible sample if you tell me what amount/complexity is required.**


### To Reproduce

```py
import duckdb

with duckdb.connect() as ddb:
    ddb.sql("CREATE VIEW t AS SELECT * FROM read_parquet('test-parquet/*/*/*/*/*.parquet', hive_partitioning=True)")
    ddb.sql("SELECT DISTINCT partitioned_col FROM t")
    ddb.sql("SELECT COUNT(*) FROM t WHERE partitioned_col IS NULL")
    ddb.sql("SELECT COUNT(*) FROM t WHERE partitioned_col = ''")
```

### OS:

RHEL 8.9 (Ootpa) x64

### DuckDB Version:

1.0.0

### DuckDB Client:

Python 3.8

### Full Name:

SÃ©bastien Vercammen

### Affiliation:

Freelance

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

No - I cannot share the data sets because they are confidential

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have