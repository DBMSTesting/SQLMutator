ID: 13443
Title: Drop Table With Cascade Fails
Description:
### What happens?

The following code should drop a table if it exists and delete the dependencies downstream. It fails to do this, citing a catalog error, contrary to the documentation that states:  **If the CASCADE clause is provided then all the objects that are dependent on the object will be dropped as well.**


### To Reproduce

```
con.sql("DROP TABLE IF EXISTS Customers CASCADE;")

con.sql("""
CREATE TABLE Customers (
Customer_ID INTEGER PRIMARY KEY DEFAULT NEXTVAL('seq_customer_id'),
First_Name VARCHAR NOT NULL,
Last_Name VARCHAR NOT NULL,
Gender ENUM('M', 'F', 'O'),
Contact_Number VARCHAR,
Age INTEGER,
Address VARCHAR,
Parish VARCHAR,
Email_Address VARCHAR,
Date_Joined DATE DEFAULT current_date()
);
""")
```

### OS:

Windows 11

### DuckDB Version:

1.0.0

### DuckDB Client:

Python 3.11.4

### Full Name:

Curtis Moxam

### Affiliation:

None

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have not tested with any build

### Did you include all relevant data sets for reproducing the issue?

No - Other reason (please specify in the issue body)

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have