ID: 13458
Title: list_resize() allocation error
Description:
### What happens?

Calling list_resize() with a value causes "Allocation failure" (linux) and "Invalid Error: std::bad_array_new_length" on macOS


### To Reproduce

```sql
CREATE OR REPLACE TABLE my_lists (l INTEGER[], n INTEGER);
INSERT INTO my_lists VALUES ([1], 1), ([1, 2, 3], 2), ([-1, NULL, 2], 2);
FROM my_lists;
```
```
┌───────────────┬───────┐
│       l       │   n   │
│    int32[]    │ int32 │
├───────────────┼───────┤
│ [1]           │     1 │
│ [1, 2, 3]     │     2 │
│ [-1, NULL, 2] │     2 │
└───────────────┴───────┘
```
```sql
select l from my_lists;
```
```
┌───────────────┐
│       l       │
│    int32[]    │
├───────────────┤
│ [1]           │
│ [1, 2, 3]     │
│ [-1, NULL, 2] │
└───────────────┘
```
```sql
select list_resize(l,4) from my_lists;
```
```
┌───────────────────────┐
│   list_resize(l, 4)   │
│        int32[]        │
├───────────────────────┤
│ [1, NULL, NULL, NULL] │
│ [1, 2, 3, NULL]       │
│ [-1, NULL, 2, NULL]   │
└───────────────────────┘
```
```sql
select list_resize(l,4,0) from my_lists;
```
```console
Out of Memory Error: Allocation failure
```

### OS:

Linux Debian Bullseye and macOS

### DuckDB Version:

v1.0.0 1f98600c2c

### DuckDB Client:

CLI

### Full Name:

Maurice Hickey

### Affiliation:

Nisos (nisos.com)

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Not applicable - the reproduction does not require a data set

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have