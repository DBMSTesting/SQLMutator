ID: 16226
Title: Extract subsystem by name
Description:
I'm working on a cache and parallel read layer for httpfs: https://github.com/dentiny/duck-read-cache-fs
One feature I would like duckdb to have is get filesystem instance via its name, so we could wrap it freely with customized wrapper and re-register.

For the current implementation, it's not easy to do cross-extension.
In detail, I would like to expose a SQL function `wrap_cache_filesystem(filesystem_name)` in my extension, within the function it simply does
```
auto sub_fs = vfs.Extract(fs_name);
if (sub_fs != nullptr) vfs.Register(cache_wrapped(move(sub_fs)));
```

Apart from the caching, a few features for the wrappers I could imagine:
- Retry layer around remote filesystems;
- Parallel read and write layer, which split a large IO request into multiple chunks;
- Async interface, which could be simply implemented with a separate thread;
- Rate limit and usage tracking on a certain type of filesystem, etc.

Having more flexible control over registered subsystems will greatly help.
I've been working on vfs-like system a while, a commonly-seen pattern is:
- core system (i.e. duckdb's filesystem and its extensions) only implements the basic IO operations to communicate with corresponding device and service
- meanwhile a few feature layers added by request to wrap around the core systems

I opened a discussion thread to extract sub-filesystem by name here: https://github.com/duckdb/duckdb/discussions/16225
Happy to discuss more about it :-)
