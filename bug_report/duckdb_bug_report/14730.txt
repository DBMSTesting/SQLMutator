ID: 14730
Title: `sample` is not reproducible with `read_parquet` for some files
Description:
### What happens?

Adding `using sample` to a `read_parquet` query sometimes has results that are not deterministic, or which are only deterministic for the first row.

With some parquet files it works correctly (results are reproducible when executed multiple times), while for others it doesn't work correctly. I haven't been able to pin down the exact conditions, but attached is a reproducer to create a problematic parquet and query it.

### To Reproduce

```python
from sklearn.datasets import fetch_covtype
import polars as pl
X, y = fetch_covtype(return_X_y=True, as_frame=True)

from tempfile import TemporaryDirectory
import os
tmpdir = TemporaryDirectory()
fname = os.path.join(tmpdir.name, "df.parquet")

(
    pl.DataFrame(X)
    .with_columns(
        soil_type=pl.Series(y).cast(pl.Utf8).cast(pl.Categorical)
    )
    .write_parquet(fname)
)

import duckdb
for rep in range(3):
    print(duckdb.query(f"""
    select *
    from read_parquet('{fname}')
    using sample 3 rows (reservoir, 123)
    """))

for rep in range(3):
    print(duckdb.query(f"""
    select *
    from read_parquet('{fname}')
    using sample reservoir(3 rows) repeatable(3)
    """))
```

### OS:

Linux

### DuckDB Version:

1.1.3

### DuckDB Client:

Python

### Hardware:

_No response_

### Full Name:

David Cortes

### Affiliation:

None

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have not tested with any build

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have