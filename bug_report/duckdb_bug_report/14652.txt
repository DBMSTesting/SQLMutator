ID: 14652
Title: Fix secret serialization issues
Description:
Reverts PR https://github.com/duckdb/duckdb/pull/14332

## The fix
That PR attempted to resolve the fact that secrets were deserialized into strings. The problem with that PR is that it made things really fragile resulting in problems
with compatibility. Additionally it introduced the requirement to have the provider function available to deserialize a secret. 

This PR makes use of the fact that the types of the keyvalue secret parameters were in fact serialized into the secret, albeit in a slightly weird way.

The map of keys and values is serialized into a MAP value. This map value had type VARCHAR: VARCHAR where both the keys and values were said to be of type VARCHAR. However, the values that ended up being serialized were in fact serialized as their actual types instead of being casted. This was not discovered though, because the MAP type function used to create the Map value does not actually detect this. 

This meant that simply removing the `ToString()` call on deserialization would simply emit the secrets with the proper types!

### Testing
I've checked in some secrets generated at various versions along with a test job that runs some deserialization tests with them. Note that this can only run in a specific job due to the permission limitation of the secret files. 

Also i confirmed that duckdb v1.1.2 can read the secrets properly from this new serialization code where i've changed the map's type to `LogicalType::MAP(LogicalType::VARCHAR, LogicalType::ANY);`

## Small addition
This PR also adds a preparation for an upcoming new base secret field called `serialization_type`. This field, when set to `SecretSerializationType::KEY_VALUE_SECRET`, will allow duckdb to deserialize the secret without looking up the secret type.


### Todo's
While I'm pretty sure this works, as a double-double check it makes sense after merging this to bump the duckdb versions in the azure and aws extensions and run CI in those repo's since they contain some extra tests that will not run here