ID: 15406
Title: [Dev] Turn a couple references in the checkpoint/scan code into const references
Description:
This kind of started with making one thing const, which propagated into *many* other things and methods being const

There are a couple variables that are now `mutable`, as the method was definitely const, but it was changing some internal state, such as grabbing a mutex, or performing lazy loading (in the segment tree)

Also some methods are const **and** non-const, there's not really a nice way to just say: "make this return type const if the method is const" so there's some const-cast/c-style-cast ugliness hidden in there that you might want to review. Easily locatable by searching the diff for ` // NOLINT`

### Fun little anecdote

This all started by adding `ValidityColumnData::CheckpointScan`, where I needed to call a method on the parent, which was retrieved with:
```c++
	const ColumnData &Parent() const {
		D_ASSERT(HasParent());
		return *parent;
	}
```
The first method that become const because of this was `ScanCommittedRange`
Which led to `ColumnSegment &` becoming const in every scan/fetch method, and that snowballed to `BaseStatistics &`, `RowGroup &` and `SegmentTree`