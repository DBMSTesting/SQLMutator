ID: 13365
Title: "Check constraints allow you to specify an arbitrary boolean expression."
Description:
### What happens?

The DuckDB manual states:

> Check constraints allow you to specify an arbitrary boolean expression.

There is no mention of an exception for functions that are loaded as part of
an extension.  In particular, one would hope that after running 'LOAD json;' 
one could write:
```
CREATE TABLE jj (j JSON, i UBIGINT CHECK (json_extract(j, '$.x') = i) );
```
Such expressions, however, result in a Binder Error:

Binder Error: No function matches the given name and argument types 'json_extract("JSON", STRING_LITERAL)'. 

I realize that there might be issues in allowing such functions in general to be
part of a table's schema; hopefully, however, no such issues would apply to
core extensions.

Because of the utility of allowing functions like json_extract in CHECK clauses,
I am hoping that DuckDB will support them sooner rather than later;
in the meantime, it would be helpful if the documentation clarified the situation.


### To Reproduce

LOAD json;

CREATE TABLE example (
    id INTEGER,
    data JSON,
    CHECK (json_valid(data))
);

### OS:

Mac OS

### DuckDB Version:

1.0.0, 1.0.1

### DuckDB Client:

CLI

### Full Name:

Peter Koppstein

### Affiliation:

Princeton University

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have