ID: 13471
Title: "Failed to bind column reference" when inserting into a table with a virtual column
Description:
### What happens?

When inserting into a table with a virtual column duckdb throws error and blocks further interactions with the table

![Screenshot from 2024-08-19 18-51-34](https://github.com/user-attachments/assets/01ef18cc-bb9f-4190-8133-434c420f0432)


### To Reproduce

### How to reproduce in cli

```sql
CREATE TABLE t1 (a CHAR NOT NULL, c CHAR GENERATED ALWAYS AS (a) VIRTUAL, b INT);
CREATE UNIQUE INDEX t1_idx ON t1 (a);
INSERT OR REPLACE INTO t1 (a, b) VALUES ('a', 1);
```

The output after executing last line from the above:
```
INTERNAL Error: Failed to bind column reference "b" [10.2] (bindings: {#[10.0], #[10.1], #[2.0], #[2.1]})
This error signals an assertion failure within DuckDB. This usually occurs due to unexpected conditions or errors in the program's logic.
For more information, see https://duckdb.org/docs/dev/internal_errors
```

### Observations
#### There is no issue if virtual column is last in table so below runs without issue
``` 
CREATE TABLE t1 (a CHAR NOT NULL, b INT, c CHAR GENERATED ALWAYS AS (a) VIRTUAL);
CREATE UNIQUE INDEX t1_idx ON t1 (a);
INSERT OR REPLACE INTO t1 (a, b) VALUES ('a', 1);
```
#### There is no issue if index is not created so below runs ok
```
CREATE TABLE t1 (a CHAR NOT NULL, b INT, c CHAR GENERATED ALWAYS AS (a) VIRTUAL);
INSERT INTO t1 (a, b) VALUES ('a', 1);
```
#### Issue is also reproduced when inserting BY NAME
```
CREATE TABLE t1 (a CHAR NOT NULL, c CHAR GENERATED ALWAYS AS (a) VIRTUAL, b INT);
CREATE UNIQUE INDEX t1_idx ON t1 (a);
INSERT OR REPLACE INTO t1 BY NAME (SELECT 'a' as a, 1 as b);
```

### OS:

Linux, x86_64

### DuckDB Version:

1.0.0 and also nightly build e1568a2

### DuckDB Client:

cli

### Full Name:

Boris Urman

### Affiliation:

Logility

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a nightly build

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have