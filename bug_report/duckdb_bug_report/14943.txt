ID: 14943
Title: Skip Dynamic Join Ordering Algorithm if there are many relations
Description:
If there are a large number of relations, it's possible a lot of time is spent in the join order optimizer to enumerate all plans.  It's possible the dynamic algorithm doesn't finish and then we swap to greedy. In some cases greedy will use partial plans from the dynamic algorithm, but it's also possible that the trade-off of calculating the join orders for the bushy plans from the dynamic algorithm isn't worth it. This happens mostly when the number of relations is >= 12.

Here are some tests done on my M1 on imdb and tpcds

The benchmarks below switch to the approximate join ordering algorithm in main. I've compared those timings with&without an eager switch to `SolveApproximate`.

|           benchmark            | median without eager swap |  median with eager swap | Num relations |
|------------------------------|----------------|----------|------:|
| benchmark/imdb/27a.benchmark | 0.06039         | 0.030662      |   12 |
| benchmark/imdb/27b.benchmark | 0.071378        | 0.02472       |  12 |
| benchmark/imdb/27c.benchmark | 0.061162        | 0.03022       |  12 |
| benchmark/imdb/28a.benchmark | 0.21814         | 0.197419      |  14 |
| benchmark/imdb/28b.benchmark | 0.18084         | 0.136542      |  14 |
| benchmark/imdb/28c.benchmark | 0.225531        | 0.206862      |  14 |
| benchmark/imdb/29a.benchmark | 0.087202        | 0.061589      |  17 |
| benchmark/imdb/29b.benchmark | 0.116307        | 0.088206      |  17 | 
| benchmark/imdb/29c.benchmark | 0.220925        | 0.192836      |  17 |
| benchmark/imdb/33a.benchmark | 0.077164        | 0.034794      |  14 |
| benchmark/imdb/33b.benchmark | 0.07918         | 0.044542      |  14 |
| benchmark/imdb/33c.benchmark | 0.085106      | 0.044752      |  14 |

The total run times are quite small, but as you can see, in some cases there is a speed up of almost 50% (33c).


TPCDS
|           benchmark            | median without eager swap |  median with eager swap | Num relations |
|------------------------------|----------------|----------|------:|
| benchmark/tpcds/sf1/q09.benchmark | 0.050805        | 0.028115        | 16      |
| benchmark/tpcds/sf1/q64.benchmark | 0.088561        | 0.041977        | 18      |