ID: 14540
Title: INTERNAL Error: Failed to bind column reference
Description:
### What happens?

Here is a minimal example of my query:

```
-- Initializing DuckDB environment.
create schema if not exists logica_home;

-- Logica type: logicarecord383307722
drop type if exists logicarecord383307722 cascade; create type logicarecord383307722 as struct(a timestamp);
DROP TABLE IF EXISTS logica_home.QueryRequest;
CREATE TABLE logica_home.QueryRequest AS SELECT * FROM (
  
    SELECT
      ['A', 'B']::text[] AS query_request
   UNION ALL
  
    SELECT
      ['A']::text[] AS query_request
   UNION ALL
  
    SELECT
      ['B']::text[] AS query_request
  
) AS UNUSED_TABLE_NAME  ;

-- Interacting with table logica_home.QueryRequest

DROP TABLE IF EXISTS logica_home.ObjectAttributes;
CREATE TABLE logica_home.ObjectAttributes AS SELECT
  'zero' AS object_id,
  ['a']::text[] AS logica_value;

-- Interacting with table logica_home.ObjectAttributes

SELECT
  QueryRequest.query_request AS query_request,
  ObjectAttributes.object_id AS object_id,
  ObjectAttributes.logica_value AS object_attributes,
  ARRAY_AGG(DISTINCT x_9.unnested_pod) AS attributes_union
FROM
  logica_home.QueryRequest AS QueryRequest, logica_home.ObjectAttributes AS ObjectAttributes, (select unnest(((ObjectAttributes.logica_value) || (QueryRequest.query_request))) as unnested_pod) as x_9
WHERE
  (ObjectAttributes.object_id = 'zero')
GROUP BY QueryRequest.query_request, ObjectAttributes.object_id, ObjectAttributes.logica_value;
```

When I run it I get:

```
INTERNAL Error: Failed to bind column reference "query_request" [17.2] (bindings: {#[0.0], #[1.0], #[1.1]})
This error signals an assertion failure within DuckDB. This usually occurs due to unexpected conditions or errors in the program's logic.
For more information, see https://duckdb.org/docs/dev/internal_errors
```

Looks like exactly the situation to file a bug :-)

Let me know if I can be of any help in understanding this error.



### To Reproduce

```
-- Initializing DuckDB environment.
create schema if not exists logica_home;

-- Logica type: logicarecord383307722
drop type if exists logicarecord383307722 cascade; create type logicarecord383307722 as struct(a timestamp);
DROP TABLE IF EXISTS logica_home.QueryRequest;
CREATE TABLE logica_home.QueryRequest AS SELECT * FROM (
  
    SELECT
      ['A', 'B']::text[] AS query_request
   UNION ALL
  
    SELECT
      ['A']::text[] AS query_request
   UNION ALL
  
    SELECT
      ['B']::text[] AS query_request
  
) AS UNUSED_TABLE_NAME  ;

-- Interacting with table logica_home.QueryRequest

DROP TABLE IF EXISTS logica_home.ObjectAttributes;
CREATE TABLE logica_home.ObjectAttributes AS SELECT
  'zero' AS object_id,
  ['a']::text[] AS logica_value;

-- Interacting with table logica_home.ObjectAttributes

SELECT
  QueryRequest.query_request AS query_request,
  ObjectAttributes.object_id AS object_id,
  ObjectAttributes.logica_value AS object_attributes,
  ARRAY_AGG(DISTINCT x_9.unnested_pod) AS attributes_union
FROM
  logica_home.QueryRequest AS QueryRequest, logica_home.ObjectAttributes AS ObjectAttributes, (select unnest(((ObjectAttributes.logica_value) || (QueryRequest.query_request))) as unnested_pod) as x_9
WHERE
  (ObjectAttributes.object_id = 'zero')
GROUP BY QueryRequest.query_request, ObjectAttributes.object_id, ObjectAttributes.logica_value;
```

### OS:

Google CoLab

### DuckDB Version:

whatever installs with pip install

### DuckDB Client:

Python, also your playground

### Hardware:

_No response_

### Full Name:

Evgeny Skvortsov

### Affiliation:

Google, working with duckdb within open source project Logica

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have