ID: 15344
Title: DuckDB Trigger Internal Error: Expression with depth > 1 detected in non-lateral join
Description:
### What happens?

The latest version of the DuckDB (latest main: v1.1.4-dev3393 bcd65821a9) triggers Internal Error when running the following SQL statement: 

```sql
CREATE TABLE v00 (c01 INT, c02 STRING);
CREATE TABLE v03 ( c04 ) AS SELECT DISTINCT ON ( EXISTS ( FROM v00 AS ta05, ( VALUES : v00 * POSITIONAL JOIN v00 AS ta06 ) ta07 JOIN VALUES ( 'string' IN ARRAY ( SELECT c02 IN ( SELECT 'string' ) ) ) AS ta08 ON EXISTS ( FROM v00 AS ta09 WHERE EXISTS ( SELECT c02 )) ) ) 'abc';
```

The bug is NOT reproducible on the latest stable release: (v1.1.3). It seems to be a problem introduced fairly recent. 

The stack trace for bcd65821a9 is: 

```
#0  duckdb::InternalException::InternalException (this=0x60d000007760, Python Exception <class 'gdb.error'> There is no member named _M_dataplus.: 
msg=) at /home/duckdb/duckdb/src/common/exception.cpp:333
#1  0x000000000aea4b9e in duckdb::HasCorrelatedExpressions::VisitReplace (this=0x7ffea2beae40, expr=..., expr_ptr=<optimized out>) at /home/duckdb/duckdb/src/planner/subquery/has_correlated_expressions.cpp:32
#2  0x000000000606820f in duckdb::LogicalOperatorVisitor::VisitExpression (this=0x7ffea2beae40, expression=<optimized out>) at /home/duckdb/duckdb/src/planner/logical_operator_visitor.cpp:200
#3  0x0000000005f9b398 in duckdb::ExpressionIterator::EnumerateChildren(duckdb::Expression&, std::function<void (duckdb::unique_ptr<duckdb::Expression, std::default_delete<duckdb::Expression>, true>&)> const&) (expr=..., 
    callback=...) at /home/duckdb/duckdb/src/planner/expression_iterator.cpp:92
#4  0x000000000606b239 in duckdb::LogicalOperatorVisitor::VisitExpressionChildren (this=<optimized out>, expr=...) at /home/duckdb/duckdb/src/planner/logical_operator_visitor.cpp:247
#5  0x00000000060696f5 in duckdb::LogicalOperatorVisitor::VisitExpression (this=0x7ffea2beae40, expression=<optimized out>) at /home/duckdb/duckdb/src/planner/logical_operator_visitor.cpp:242
#6  0x00000000060ef93c in std::function<void (duckdb::unique_ptr<duckdb::Expression, std::default_delete<duckdb::Expression>, true>*)>::operator()(duckdb::unique_ptr<duckdb::Expression, std::default_delete<duckdb::Expression>, true>*) const (this=<optimized out>, __args=0x60200000bd70) at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_function.h:688
#7  0x0000000006064286 in duckdb::LogicalOperatorVisitor::EnumerateExpressions(duckdb::LogicalOperator&, std::function<void (duckdb::unique_ptr<duckdb::Expression, std::default_delete<duckdb::Expression>, true>*)> const&) (op=..., 
    callback=...) at /home/duckdb/duckdb/src/planner/logical_operator_visitor.cpp:175
#8  0x000000000605cda9 in duckdb::LogicalOperatorVisitor::VisitOperatorExpressions (this=<optimized out>, op=...) at /home/duckdb/duckdb/src/planner/logical_operator_visitor.cpp:180
#9  0x000000000ae63256 in duckdb::FlattenDependentJoins::DetectCorrelatedExpressions (this=0x7ffea2beb620, op=..., lateral=<optimized out>, lateral_depth=<optimized out>)
    at /home/duckdb/duckdb/src/planner/subquery/flatten_dependent_join.cpp:40
#10 0x000000000ae07081 in duckdb::PlanCorrelatedSubquery (binder=..., expr=..., root=..., plan=...) at /home/duckdb/duckdb/src/planner/binder/query_node/plan_subquery.cpp:352
#11 0x000000000adf7746 in duckdb::Binder::PlanSubquery (this=0x61900000c380, expr=..., root=...) at /home/duckdb/duckdb/src/planner/binder/query_node/plan_subquery.cpp:433
#12 0x000000000adf6bf9 in duckdb::RecursiveDependentJoinPlanner::VisitReplace (this=<optimized out>, expr=..., expr_ptr=<optimized out>) at /home/duckdb/duckdb/src/planner/binder/query_node/plan_subquery.cpp:414
#13 0x00000000060677ea in duckdb::LogicalOperatorVisitor::VisitExpression (this=0x7ffea2bed360, expression=<optimized out>) at /home/duckdb/duckdb/src/planner/logical_operator_visitor.cpp:215
#14 0x00000000060ef93c in std::function<void (duckdb::unique_ptr<duckdb::Expression, std::default_delete<duckdb::Expression>, true>*)>::operator()(duckdb::unique_ptr<duckdb::Expression, std::default_delete<duckdb::Expression>, true>*) const (this=<optimized out>, __args=0x60200000bdd0) at /usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/std_function.h:688
#15 0x0000000006061a36 in duckdb::LogicalOperatorVisitor::EnumerateExpressions(duckdb::LogicalOperator&, std::function<void (duckdb::unique_ptr<duckdb::Expression, std::default_delete<duckdb::Expression>, true>*)> const&) (op=..., 
    callback=...) at /home/duckdb/duckdb/src/planner/logical_operator_visitor.cpp:94
#16 0x000000000605cda9 in duckdb::LogicalOperatorVisitor::VisitOperatorExpressions (this=<optimized out>, op=...) at /home/duckdb/duckdb/src/planner/logical_operator_visitor.cpp:180
#17 0x000000000adf17c7 in duckdb::RecursiveDependentJoinPlanner::VisitOperator (this=0x7ffea2bed360, op=...) at /home/duckdb/duckdb/src/planner/binder/query_node/plan_subquery.cpp:403
#18 0x000000000adf1d03 in duckdb::RecursiveDependentJoinPlanner::VisitOperator (this=0x7ffea2bed360, op=...) at /home/duckdb/duckdb/src/planner/binder/query_node/plan_subquery.cpp:407
#19 0x000000000adf1d03 in duckdb::RecursiveDependentJoinPlanner::VisitOperator (this=0x7ffea2bed360, op=...) at /home/duckdb/duckdb/src/planner/binder/query_node/plan_subquery.cpp:407
#20 0x000000000adf1d03 in duckdb::RecursiveDependentJoinPlanner::VisitOperator (this=0x7ffea2bed360, op=...) at /home/duckdb/duckdb/src/planner/binder/query_node/plan_subquery.cpp:407
#21 0x000000000adf1d03 in duckdb::RecursiveDependentJoinPlanner::VisitOperator (this=0x7ffea2bed360, op=...) at /home/duckdb/duckdb/src/planner/binder/query_node/plan_subquery.cpp:407
#22 0x000000000adf1d03 in duckdb::RecursiveDependentJoinPlanner::VisitOperator (this=0x7ffea2bed360, op=...) at /home/duckdb/duckdb/src/planner/binder/query_node/plan_subquery.cpp:407
#23 0x000000000adf1d03 in duckdb::RecursiveDependentJoinPlanner::VisitOperator (this=0x7ffea2bed360, op=...) at /home/duckdb/duckdb/src/planner/binder/query_node/plan_subquery.cpp:407
#24 0x000000000adf1d03 in duckdb::RecursiveDependentJoinPlanner::VisitOperator (this=0x7ffea2bed360, op=...) at /home/duckdb/duckdb/src/planner/binder/query_node/plan_subquery.cpp:407
#25 0x000000000adf7bdb in duckdb::Binder::PlanSubquery (this=0x61900000c380, expr=..., root=...) at /home/duckdb/duckdb/src/planner/binder/query_node/plan_subquery.cpp:438
#26 0x000000000ade1d91 in duckdb::Binder::PlanSubqueries (this=0x61900000c380, expr_ptr=..., root=...) at /home/duckdb/duckdb/src/planner/binder/query_node/plan_subquery.cpp:462
#27 0x000000000ade76cb in duckdb::Binder::CreatePlan (this=<optimized out>, statement=...) at /home/duckdb/duckdb/src/planner/binder/query_node/plan_select_node.cpp:108
#28 0x00000000060047fa in duckdb::Binder::CreatePlan (this=0x61900000c380, node=...) at /home/duckdb/duckdb/src/planner/binder.cpp:379
#29 0x000000000600335f in duckdb::Binder::Bind (this=0x61900000c380, node=...) at /home/duckdb/duckdb/src/planner/binder.cpp:371
#30 0x0000000005b051e8 in duckdb::Binder::Bind (this=0x61900000c380, stmt=...) at /home/duckdb/duckdb/src/planner/binder/statement/bind_select.cpp:11
#31 0x0000000005b88f80 in duckdb::Binder::BindCreateTableInfo (this=0x61900000c380, info=..., schema=..., bound_defaults=...) at /home/duckdb/duckdb/src/planner/binder/statement/bind_create_table.cpp:321
#32 0x0000000005b88477 in duckdb::Binder::BindCreateTableInfo (this=0x61900000c380, info=..., schema=...) at /home/duckdb/duckdb/src/planner/binder/statement/bind_create_table.cpp:302
#33 0x0000000005b7527f in duckdb::Binder::BindCreateTableInfo (this=0x61900000c380, info=...) at /home/duckdb/duckdb/src/planner/binder/statement/bind_create_table.cpp:393
#34 0x0000000005b61308 in duckdb::Binder::Bind (this=0x61900000c380, stmt=...) at /home/duckdb/duckdb/src/planner/binder/statement/bind_create.cpp:702
#35 0x0000000005ff833a in duckdb::Binder::Bind (this=<optimized out>, statement=...) at /home/duckdb/duckdb/src/planner/binder.cpp:162
#36 0x000000000604c5fc in duckdb::Planner::CreatePlan (this=0x7ffea2bf0490, statement=...) at /home/duckdb/duckdb/src/planner/planner.cpp:43
#37 0x0000000006055783 in duckdb::Planner::CreatePlan (this=0x60d000007760, statement=...) at /home/duckdb/duckdb/src/planner/planner.cpp:142
#38 0x00000000033d571c in duckdb::ClientContext::CreatePreparedStatementInternal (this=0x616000074a90, lock=..., query=..., statement=..., values=...) at /home/duckdb/duckdb/src/main/client_context.cpp:343
#39 0x00000000033dbce4 in duckdb::ClientContext::CreatePreparedStatement (this=0x616000074a90, lock=..., query=..., statement=..., values=..., mode=<optimized out>) at /home/duckdb/duckdb/src/main/client_context.cpp:429
#40 0x00000000033fdd3a in duckdb::ClientContext::PendingStatementInternal (this=0x616000074a90, lock=..., query=..., statement=..., parameters=...) at /home/duckdb/duckdb/src/main/client_context.cpp:748
#41 0x000000000340a964 in duckdb::ClientContext::PendingStatementOrPreparedStatement (this=0x616000074a90, lock=..., query=..., statement=..., prepared=..., parameters=...) at /home/duckdb/duckdb/src/main/client_context.cpp:866
#42 0x00000000033f9458 in duckdb::ClientContext::PendingStatementOrPreparedStatementInternal (this=0x616000074a90, lock=..., query=..., statement=..., prepared=..., parameters=...)
    at /home/duckdb/duckdb/src/main/client_context.cpp:840
#43 0x000000000340119b in duckdb::ClientContext::PendingQueryInternal (this=0x616000074a90, lock=..., statement=..., parameters=..., verify=<optimized out>) at /home/duckdb/duckdb/src/main/client_context.cpp:1057
#44 0x000000000341725e in duckdb::ClientContext::PendingQuery (this=0x616000074a90, statement=..., values=..., allow_stream_result=<optimized out>) at /home/duckdb/duckdb/src/main/client_context.cpp:1044
#45 0x000000000340e770 in duckdb::ClientContext::PendingQuery (this=0x616000074a90, statement=..., allow_stream_result=<optimized out>) at /home/duckdb/duckdb/src/main/client_context.cpp:1004
#46 0x000000000345d638 in duckdb::Connection::PendingQuery (this=<optimized out>, statement=..., allow_stream_result=<optimized out>) at /home/duckdb/duckdb/src/main/connection.cpp:140
#47 0x0000000000706ad4 in duckdb_shell_sqlite3_prepare_v2 (db=0x60f000000400, zSql=<optimized out>, nByte=<optimized out>, ppStmt=<optimized out>, pzTail=<optimized out>)
    at ../../tools/sqlite3_api_wrapper/sqlite3_api_wrapper.cpp:224
#48 0x000000000066eb46 in duckdb_shell::ShellState::ExecuteSQL (this=0x7ffea2bf2b40, 
    zSql=0x61300006c680 "CREATE TABLE v03 ( c04 ) AS SELECT DISTINCT ON ( EXISTS ( FROM v00 AS ta05, ( VALUES : v00 * POSITIONAL JOIN v00 AS ta06 ) ta07 JOIN VALUES ( 'string' IN ARRAY ( SELECT c02 IN ( SELECT 'string' ) ) ) "..., 
    pzErrMsg=<optimized out>) at ../../tools/shell/shell.cpp:3524
#49 0x000000000069a0b3 in duckdb_shell::ShellState::RunOneSqlLine (this=<optimized out>, zSql=<optimized out>) at ../../tools/shell/shell.cpp:8706
#50 0x000000000068f6a0 in duckdb_shell::ShellState::ProcessInput (this=0x7ffea2bf2b40) at ../../tools/shell/shell.cpp:8936
#51 0x00000000006a031d in main (argc=<optimized out>, argv=<optimized out>) at ../../tools/shell/shell.cpp:10152
```

### To Reproduce

1. Clone the DuckDB Git from the official repo.
2. Checkout to the latest main (v1.1.4-dev3393 bcd65821a9).
3. Compile the DuckDB binary by using `make relassert` or `make reldebug`.
4. Run the compiled DuckDB and input the following SQL:

```sql
CREATE TABLE v00 (c01 INT, c02 STRING);
CREATE TABLE v03 ( c04 ) AS SELECT DISTINCT ON ( EXISTS ( FROM v00 AS ta05, ( VALUES : v00 * POSITIONAL JOIN v00 AS ta06 ) ta07 JOIN VALUES ( 'string' IN ARRAY ( SELECT c02 IN ( SELECT 'string' ) ) ) AS ta08 ON EXISTS ( FROM v00 AS ta09 WHERE EXISTS ( SELECT c02 )) ) ) 'abc';
```

### OS:

Ubuntu 24.04 LTS

### DuckDB Version:

v1.1.4-dev3393 bcd65821a9

### DuckDB Client:

cli

### Hardware:

_No response_

### Full Name:

Yu Liang

### Affiliation:

The Pennsylvania State University

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a source build

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have