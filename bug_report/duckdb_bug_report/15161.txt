ID: 15161
Title: Add cross-version testing CI
Description:
Basics are:
* version A is built
* unittester for A is run with '--force-storage' and '--test-temp-dir my_folder'
* folder is saved
* version B is built
* for each file in the folder (independently on the type):
  * copy file to a.db
  * copy file.wal to a.db.wal
  * open 'a.db' with the duckdb (version B) binary
  * execute a 'COPY FROM DATABASE x TO y' statment
  * check no INTERNAL errors are thrown

A and B can be of different version AND of different architectures.

Currently A and B are selected from [OSX, Linux] X [v1.0.0, v1.1.3, main]. Some of the pair do not make total sense, but for now doing the full join to check results.

This can be expanded in various directions, like more platforms or adding more tests (currently only fast test are run, probably executing some slow one at random would also be great), or enabling B to be compiled with assert enabled. Or adding optional extensions (index heavy like vss or spatial comes to mind)
Also currently only the COPY DATABASE path is tested, but also EXPORT / IMPORT or completely different class of statements on the opened files would be handy in testing code more widely.

Internal errors are currently logged in the `Internal error report`, also that could be made more readable / clear.