ID: 14004
Title: JSON Import Error: Incorrect Parsing of ISO 8601 Date Strings with 'T' Separator
Description:
### What happens?

When importing a JSON file containing ISO 8601 date strings with 'T' separators into DuckDB, an error occurs during the parsing process. DuckDB seems to incorrectly infer the data type and attempts to parse these strings as timestamps using a format that does not match the actual string format.

### To Reproduce

1. **Generate the sample JSON data**:

   ```python
   import json

   def generate_data():
       data = [
           {
               "createdAt": "2024-09-17T06:37:50Z",
               "updatedAt": "2024-09-17T06:37:50.000Z",
               "date": "2024-09-17",
               "resources": [
                   {
                       "interactions": [
                           {
                               "createdAt": "2024-09-17T16:37:46Z"
                           }
                       ]
                   }
               ],
               "templateValueStore": {
                   "f42af0a1-0231-4857-a0bb-5db7c5c9c266-0e2e0715-f339-443e-a927-cd1ec53591ef": "2024-09-17 16:37:46.367",
                   "f42af0a1-0231-4857-a0bb-5db7c5c9c266-ba82a466-24b4-441f-a000-66e203b50380": "2024-09-17 16:37:46.367",
                   "f42af0a1-0231-4857-a0bb-5db7c5c9c266-efab0a9d-58f2-4e84-a8f6-fab41d2fe6f2": "2024-09-17"
               }
           }
       ]
       with open("data.json", "w") as f:
           json.dump(data, f)

   generate_data()
   ```

2. **Attempt to read the JSON file into DuckDB**:

   ```python
   import duckdb

   try:
       # Attempt to read the JSON file into DuckDB
       result = duckdb.query("SELECT * FROM 'data.json'")
       print(result)
   except Exception as e:
       print("Error occurred:", e)
   ```

**Observed Behavior**:

An error is thrown when trying to read the JSON file:

```
Error occurred: Invalid Input Error: JSON transform error in file "data.json", in record/value 1: Could not parse string "2024-09-17T16:37:46Z" according to format specifier "%Y-%m-%d %H:%M:%S.%f"
2024-09-17T16:37:46Z
          ^
Error: Space does not match, expected  
Try increasing 'sample_size', reducing 'maximum_depth', specifying 'columns', 'format' or 'records' manually, setting 'ignore_errors' to true, or setting 'union_by_name' to true when reading multiple files with a different structure.
```

**Expected Behavior**:

DuckDB should not attempt to parse date strings with 'T' separators using a format that expects a space separator (e.g., `"%Y-%m-%d %H:%M:%S.%f"`). If the date string does not match the inferred timestamp format, DuckDB should either:

- Correctly infer and parse ISO 8601 date strings with 'T' separators and optional timezone indicators.
- Treat the unmatched date strings as plain strings rather than throwing an error.


### OS:

Windows 11 amd64

### DuckDB Version:

1.1.0

### DuckDB Client:

Python

### Hardware:

_No response_

### Full Name:

Maitland Marshall

### Affiliation:

MAIT DEV

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have