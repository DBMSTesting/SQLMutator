ID: 15312
Title: DuckDB triggers Assertion Failure: BindContext::RemoveContext - cannot remove primary binding from using binding
Description:
### What happens?

The latest version of the DuckDB (latest main: v1.1.4-dev3300 4a8188effc) triggers Assertion Failure when running the following SQL statement: 

```sql
CREATE TABLE v00 (c01 INT);
CREATE TEMP TABLE v02 AS FROM ( v00 AS ta03 ANTI JOIN ( v00 AS ta04 JOIN v00 AS ta05 USING ( c01 ) ) ON 'any_string' ) ;
```

DuckDB is working correctly without assertions, maybe just a faulty assertion?

This bug could be closely related to https://github.com/duckdb/duckdb/issues/15311. 

The stack trace from (4a8188effc): 

```
#0  duckdb::InternalException::InternalException (this=0x60d000011290, Python Exception <class 'gdb.error'> There is no member named _M_dataplus.: 
msg=) at /home/duckdb/duckdb/src/common/exception.cpp:333
#1  0x000000000602b2de in duckdb::BindContext::RemoveContext (this=0x61900000a648, aliases=...) at /home/duckdb/duckdb/src/planner/bind_context.cpp:733
#2  0x0000000005ced2ce in duckdb::Binder::Bind (this=0x61900000a580, ref=...) at /home/duckdb/duckdb/src/planner/binder/tableref/bind_joinref.cpp:341
#3  0x0000000005fe5fbb in duckdb::Binder::Bind (this=0x61900000a580, ref=...) at /home/duckdb/duckdb/src/planner/binder.cpp:398
#4  0x000000000ad5f4d9 in duckdb::Binder::BindNode (this=0x7ffebc0ea3d0, statement=...) at /home/duckdb/duckdb/src/planner/binder/query_node/bind_select_node.cpp:371
#5  0x0000000005fe1b7d in duckdb::Binder::BindNode (this=0x61900000a580, node=...) at /home/duckdb/duckdb/src/planner/binder.cpp:328
#6  0x0000000005fe30e6 in duckdb::Binder::Bind (this=0x61900000a580, node=...) at /home/duckdb/duckdb/src/planner/binder.cpp:365
#7  0x0000000005ae6448 in duckdb::Binder::Bind (this=0x61900000a580, stmt=...) at /home/duckdb/duckdb/src/planner/binder/statement/bind_select.cpp:11
#8  0x0000000005b6a1e0 in duckdb::Binder::BindCreateTableInfo (this=0x61900000a580, info=..., schema=..., bound_defaults=...) at /home/duckdb/duckdb/src/planner/binder/statement/bind_create_table.cpp:321
#9  0x0000000005b696d7 in duckdb::Binder::BindCreateTableInfo (this=0x61900000a580, info=..., schema=...) at /home/duckdb/duckdb/src/planner/binder/statement/bind_create_table.cpp:302
#10 0x0000000005b564df in duckdb::Binder::BindCreateTableInfo (this=0x61900000a580, info=...) at /home/duckdb/duckdb/src/planner/binder/statement/bind_create_table.cpp:393
#11 0x0000000005b42558 in duckdb::Binder::Bind (this=0x61900000a580, stmt=...) at /home/duckdb/duckdb/src/planner/binder/statement/bind_create.cpp:702
#12 0x0000000005fd84ca in duckdb::Binder::Bind (this=<optimized out>, statement=...) at /home/duckdb/duckdb/src/planner/binder.cpp:162
#13 0x000000000602c77c in duckdb::Planner::CreatePlan (this=0x7ffebc0ee9f0, statement=...) at /home/duckdb/duckdb/src/planner/planner.cpp:43
#14 0x0000000006035903 in duckdb::Planner::CreatePlan (this=0x60d000011290, statement=...) at /home/duckdb/duckdb/src/planner/planner.cpp:142
#15 0x00000000033c500c in duckdb::ClientContext::CreatePreparedStatementInternal (this=0x616000074790, lock=..., query=..., statement=..., values=...) at /home/duckdb/duckdb/src/main/client_context.cpp:340
#16 0x00000000033cb5d4 in duckdb::ClientContext::CreatePreparedStatement (this=0x616000074790, lock=..., query=..., statement=..., values=..., mode=<optimized out>) at /home/duckdb/duckdb/src/main/client_context.cpp:426
#17 0x00000000033ed63a in duckdb::ClientContext::PendingStatementInternal (this=0x616000074790, lock=..., query=..., statement=..., parameters=...) at /home/duckdb/duckdb/src/main/client_context.cpp:745
#18 0x00000000033fa264 in duckdb::ClientContext::PendingStatementOrPreparedStatement (this=0x616000074790, lock=..., query=..., statement=..., prepared=..., parameters=...) at /home/duckdb/duckdb/src/main/client_context.cpp:863
#19 0x00000000033e8d48 in duckdb::ClientContext::PendingStatementOrPreparedStatementInternal (this=0x616000074790, lock=..., query=..., statement=..., prepared=..., parameters=...)
    at /home/duckdb/duckdb/src/main/client_context.cpp:837
#20 0x00000000033f0a9b in duckdb::ClientContext::PendingQueryInternal (this=0x616000074790, lock=..., statement=..., parameters=..., verify=<optimized out>) at /home/duckdb/duckdb/src/main/client_context.cpp:1054
#21 0x0000000003406b5e in duckdb::ClientContext::PendingQuery (this=0x616000074790, statement=..., values=..., allow_stream_result=<optimized out>) at /home/duckdb/duckdb/src/main/client_context.cpp:1041
#22 0x00000000033fe070 in duckdb::ClientContext::PendingQuery (this=0x616000074790, statement=..., allow_stream_result=<optimized out>) at /home/duckdb/duckdb/src/main/client_context.cpp:1001
#23 0x000000000344cf38 in duckdb::Connection::PendingQuery (this=<optimized out>, statement=..., allow_stream_result=<optimized out>) at /home/duckdb/duckdb/src/main/connection.cpp:140
#24 0x0000000000705ab4 in duckdb_shell_sqlite3_prepare_v2 (db=0x60f000000310, zSql=<optimized out>, nByte=<optimized out>, ppStmt=<optimized out>, pzTail=<optimized out>)
    at ../../tools/sqlite3_api_wrapper/sqlite3_api_wrapper.cpp:224
#25 0x000000000066db46 in duckdb_shell::ShellState::ExecuteSQL (this=0x7ffebc0f10a0, zSql=0x60c000000940 "CREATE TEMP TABLE v02 AS FROM ( v00 AS ta03 ANTI JOIN ( v00 AS ta04 JOIN v00 AS ta05 USING ( c01 ) ) ON 'any_string' ) ;", 
    pzErrMsg=<optimized out>) at ../../tools/shell/shell.cpp:3524
#26 0x00000000006990b3 in duckdb_shell::ShellState::RunOneSqlLine (this=<optimized out>, zSql=<optimized out>) at ../../tools/shell/shell.cpp:8706
#27 0x000000000068e6a0 in duckdb_shell::ShellState::ProcessInput (this=0x7ffebc0f10a0) at ../../tools/shell/shell.cpp:8936
#28 0x000000000069f31d in main (argc=<optimized out>, argv=<optimized out>) at ../../tools/shell/shell.cpp:10152
```

### To Reproduce

1. Clone the DuckDB Git from the official repo.
2. Checkout to the latest main (4a8188effc).
3. Compile the DuckDB binary by using `make relassert`. Assertion is necessary to reproduce the bug. 
4. Run the compiled DuckDB and input the following SQL:

```sql
CREATE TABLE v00 (c01 INT);
CREATE TEMP TABLE v02 AS FROM ( v00 AS ta03 ANTI JOIN ( v00 AS ta04 JOIN v00 AS ta05 USING ( c01 ) ) ON 'any_string' ) ;
```

### OS:

Ubuntu 24.04 LTS

### DuckDB Version:

v1.1.4-dev3300 4a8188effc

### DuckDB Client:

cli

### Hardware:

_No response_

### Full Name:

Yu Liang

### Affiliation:

The Pennsylvania State Univerity

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a source build

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have