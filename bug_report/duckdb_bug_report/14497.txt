ID: 14497
Title: Using PyArrow and schema validation cause Internal Error on integer cast
Description:
### What happens?

The schema is just an OCSF Network Activity Schema (Iceberg export)

When using PyArrow.Table.from_pylist to load data and validating the schema (a long one) a  simple query will fail with

```
Traceback (most recent call last):
test_iss/test.py", line 20, in <module>
    print(duckdb.sql(
duckdb.duckdb.InternalException: INTERNAL Error: Information loss on integer cast: value -1 outside of target range [-9223372036854775808, 9223372036854775807]
This error signals an assertion failure within DuckDB. This usually occurs due to unexpected conditions or errors in the program's logic.
For more information, see https://duckdb.org/docs/dev/internal_errors
```

The same query but using 
  arrow_table = pyarrow.Table.from_pylist(data, schema=None)

works ok.

**In addition, when using schema=(TheSAmpleSchema) a single query with even 10 records may take up to 4 seconds to execute, while with schema=False took 0.0.2 seconds.**


Some hints:

1- The internal error happens with a large schema and a large number of records
2 - If the number of records is like "5000" it will succeed, but there's an impact on query performance

### To Reproduce

Create a sample python file

```python
import duckdb
import pyarrow
from pyiceberg.schema import Schema
import json

import time

data = []
for i in range(0, 50000):
    data.append({'activity_id': 99, "category_uid": 4})


with open("./schema.json", 'r') as fp2:
    schema = Schema.model_validate_json(fp2.read()).as_arrow()
    # Setting schema=None will succedd

    print("If schema is None this query won't crash/trigger the issue")
    arrow_table = pyarrow.Table.from_pylist(data, schema=schema)

    t1 = time.perf_counter()

    print(duckdb.sql(
        "Select *  from arrow_table where activity_id > 1 UNION Select * from arrow_table where activity_id > 300"))
    print("Time spent ", time.perf_counter() - t1)

```

Copy schema.json file to the same folder

[schema.json](https://github.com/user-attachments/files/17480470/schema.json)


# Env

Python 3.12
PyArrow 17.0.0




### OS:

OSX Sonoma 14.16.1 - M1 -23.6.0 Darwin Kernel Version 23.6.0: Mon Jul 29 21:14:30 PDT 2024; root:xnu-10063.141.2~1/RELEASE_ARM64_ arm64

### DuckDB Version:

1.1.2

### DuckDB Client:

python

### Hardware:

_No response_

### Full Name:

Leandro Costantino

### Affiliation:

Cisco

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have