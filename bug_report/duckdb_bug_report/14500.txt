ID: 14500
Title: Binder Error when function called in one way, but not another
Description:
### What happens?

It's very puzzling when a correctly defined function is working properly
when invoked in one way but not when it is invoked in another way,
and it's especially disheartening when the error message
points to an identifier which should be "local" to the defined function.

In the following, the function gamma_taylor(x) computes gamma(x)
correctly when called as by `select gamma_taylor(1/3);`

However, at the CLI, we see:

```sql
select gamma_taylor(x/3) from range(1,11) t(x) ;
```
```
Binder Error: Referenced column "y" not found in FROM clause!
Candidate bindings: "t.x"
```
One "workaround" here is simply to eliminate y altogether,
but such workarounds should not be necessary, should they?


### To Reproduce

```sql
create or replace function gamma_taylor(x) as (
  select gamma
  from ( select [
    1.00000000000000000000,  0.57721566490153286061,  -0.65587807152025388108, -0.04200263503409523553,
    0.16653861138229148950, -0.04219773455554433675,  -0.00962197152787697356,  0.00721894324666309954,
   -0.00116516759185906511, -0.00021524167411495097,   0.00012805028238811619, -0.00002013485478078824,
   -0.00000125049348214267,  0.00000113302723198170,  -0.00000020563384169776,  0.00000000611609510448,
    0.00000000500200764447, -0.00000000118127457049,   0.00000000010434267117,  0.00000000000778226344,
   -0.00000000000369680562,  0.00000000000051003703,  -0.00000000000002058326, -0.00000000000000534812,
    0.00000000000000122678, -0.00000000000000011813,   0.00000000000000000119,  0.00000000000000000141,
   -0.00000000000000000023,  0.00000000000000000002
    ] as a,
    (x - 1) as y,
    length(a) as n,
    (with recursive cte as (
       select 2 as an, a[n] as acc
       union all
       select an+1 as an,
         (acc * y) + a[1 + n-an] as acc
       from cte
       where an <= n
     )
     select 1 / last(acc) from cte) as gamma
   )
   limit 1
);

select gamma_taylor(1/3);
# select gamma_taylor(x/3) from range(1,11) t(x) ;
```

### OS:

Mac OS

### DuckDB Version:

v1.1.3-dev38 52b43b1660

### DuckDB Client:

CLI

### Hardware:

_No response_

### Full Name:

Peter Koppstein

### Affiliation:

Princeton University

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a source build

### Did you include all relevant data sets for reproducing the issue?

Not applicable - the reproduction does not require a data set

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have