ID: 15337
Title: Enable stack traces by default, split into getting the frame pointers and resolve symbols only when the error is finalized, and add support for demangling
Description:
This PR enables printing stack traces by default for internal exceptions instead of hiding this behind a separate compilation flag. The `DUCKDB_DEBUG_STACKTRACE ` compilation flag can be used to enable this for all exceptions. This uses the `backtrace` function which is available on Linux with GLIBC and on MacOS. We also use `abi::__cxa_demangle` to demangle the C++ symbols and print a readable stack trace. These stack traces should help debug internal exceptions.

In addition, this PR splits up the stack trace generation into two steps:

* Obtaining the stack trace pointers (using `backtrace`). This is done when the exception is thrown.
* Resolving the symbols using `backtrace_symbols`. This is done when the exception has bubbled up to the user.

Getting the backtrace pointers is much cheaper than resolving the symbols - so postponing the resolution of symbols makes it cheaper to throw exceptions. This is not very relevant for internal exceptions - but is relevant when enabling this for all exceptions, since we don't always propagate exceptions upwards to the user. 