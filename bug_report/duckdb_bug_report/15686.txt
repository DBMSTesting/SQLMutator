ID: 15686
Title: Allow some function error to be optimized away
Description:
Fixes https://github.com/duckdblabs/duckdb-internal/issues/3871

Recently we added a the `errors`. Enum to scalar functions to indicate if the scalar function could throw errors. If the scalar function could throw errors, we would prevent certain optimizations from happening, since the errors are potentially mitigated by other filters present in the query, and if those filters execute before the scalar function, then the errors are not thrown. 

I believe we may have been too strict with this classification, since all arithmetic expressions can have `overflow/underflow` errors. This in turn practically disables our reorder filter. 

I propose instead a new FunctionError type `CAN_THROW_ERROR_OPTIMIZE_OK` to signal that an error can be thrown, but it can also be optimized away in the case of statistics or constant folding. Currently this value is only for arithmetic functions and nothing else. This still leaves room for filters like `sqrt(a) > X` to throw an error, and filters like `constant_or_null()` to not throw anything

Another option of course is to just change the sqlite test 

