ID: 13169
Title: Disproportionately High Memory Usage Reading from a Parquet File
Description:
### What happens?

We're experiencing unexpectedly high memory usage when reading a parquet file using go-duckdb. The memory usage is orders of magnitude larger than the file being read. The issue arises during the final step where we read a parquet file that was compacted by DuckDB from multiple smaller files. We have been able to reproduce the issue on DuckDB python as well as with the CLI. A parallel issue was raised on the [Go Driver repo](https://github.com/marcboeker/go-duckdb/issues/255) as we initially thought it was a driver bug, but further investigation shows that the issue also occurs on other clients, which why we're raising it here.

### To Reproduce

I have a [repository](https://github.com/prequel-co/duckdb-go-memory-test) with reproduction code for Python, Golang, and the CLI as well as the Parquet files necessary to reproduce. 

### OS:

amd64 Linux

### DuckDB Version:

1.0.0

### DuckDB Client:

Golang, CLI

### Full Name:

Niger Little-Poole

### Affiliation:

Prequel

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have