ID: 15096
Title: Scope of conn.unregister has changed since 1.0.0
Description:
### What happens?

It seems that `unregister` method used to work to drop views from parquet files and no longer does; not clear if this is intended.

I used it via Python API, but Python API is probably not at fault.

### To Reproduce

Using pandas to make a dummy parquet file for testing here.

```python
import duckdb
import pandas as pd

print("Version:", duckdb.__version__)

path = "/tmp/test-tbl.parquet"
pd.DataFrame({"a": [1, 2, 3]}).to_parquet(path)

conn = duckdb.connect()

conn.from_parquet(path).to_view(view_name="test_tbl")

views: list[str] = conn.query("SHOW TABLES").df()["name"].to_list()
print(views)

conn.unregister("test_tbl")

views: list[str] = conn.query("SHOW TABLES").df()["name"].to_list()
print(views)

conn.query("DROP VIEW IF EXISTS test_tbl")

views: list[str] = conn.query("SHOW TABLES").df()["name"].to_list()
print(views)

```

Output in duckdb 1.0.0:
```
Version: 1.0.0
['test_tbl']
[]
[]
```

Output in duckdb 1.1.3
```
Version: 1.1.3
['test_tbl']
['test_tbl']
[]
```

### OS:

Ubuntu 20.04.4 LTS

### DuckDB Version:

1.1.3

### DuckDB Client:

Python

### Hardware:

_No response_

### Full Name:

Gil Rutter

### Affiliation:

Maven Securities

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have