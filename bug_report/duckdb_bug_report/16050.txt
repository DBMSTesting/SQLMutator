ID: 16050
Title: Fix memory leak in duckdb_arrow_scan
Description:
Not really sure what the original code was trying to achieve, but I don't think it was doing anything meaningful.

I say this because:
* Each call to `get_schema` can return a different result with different data pointers etc. This is what Apache Arrow does when you call this method - hence every call to `get_schema` must be accompanied by calling its `release` function. 
* Similarly there's no guarantee that the children would even be pointing to the same instantiation so modifying the child release methods is moot.

So the leak happens because `get_schema` is called yet `release()` is never called on this return value - so at the least it can be leaking e.g. the private data