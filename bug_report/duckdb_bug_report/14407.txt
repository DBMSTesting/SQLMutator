ID: 14407
Title: "function/macro parameters are not strict" -- if not a bug, then better documentation needed
Description:
### What happens?

Appended is a "RECURSIVE CTE" table function which is intended to
produce a Knuth shuffle of the input list; in the version shown here,
it produces a table so that we can easily see what's happening.

All the individual pieces of the program are working properly, but as
can be easily seen from the following table, the value of `arr` is
nonsensical in the line marked NONSENSE -- "easily" because once the
second row of the table has been produced, the last item in `arr`
should not change.
```
┌─────────────────┬───────┬───────┐
│       arr       │  idx  │   r   │
│     int32[]     │ int64 │ int32 │
├─────────────────┼───────┼───────┤
│ [0, 10, 20, 30] │     4 │     3 │
│ [0, 10, 30, 20] │     3 │     2 │ 
│ [0, 20, 10, 30] │     2 │     1 │   -- NONSENSE
│ [10, 0, 20, 30] │     1 │     1 │
└─────────────────┴───────┴───────┘
```

Apologies in advance if there is a flaw in the program.  If not, then I hope that even
if there is a "workaround", the underlying problem will be addressed directly. Thank you.



### To Reproduce

```
create or replace function swap(arr, i, j) as (
  case when i = j then arr
       when i < j then arr[1:i -1] || [arr[j]] || arr[i+1:j-1] || [arr[i]] || arr[j+1:]
       else            arr[1:j -1] || [arr[i]] || arr[j+1:i-1] || [arr[j]] || arr[i+1:]
  end
  );

# Generate a pseudo-random integer in range(0,n) i.e. excluding n
create or replace function rnd(n) as (
  SELECT floor(random() * n)::INTEGER AS rnd
);

create or replace function knuth_shuffle(arr) as table (
  WITH RECURSIVE cte(arr, idx, r) AS (
    -- Base case: start with the original array and index set to the last element
    SELECT arr as arr, length(arr) AS idx, 1 + rnd(length(arr)) as r
    UNION ALL
    -- Recursive case: shuffle the array by swapping the current index with a random element
    SELECT 
        swap(arr, r, idx) AS arr,
        idx - 1 AS idx,
        1 + rnd(idx - 1) as r
    FROM cte
    WHERE idx > 1
  )
  --  SELECT arr
  FROM cte
  -- WHERE idx = 1
);

from knuth_shuffle([0,10,20,30]);
```

### OS:

MacOS

### DuckDB Version:

1.0, 1.1, 1.1.2

### DuckDB Client:

CLI

### Hardware:

_No response_

### Full Name:

Peter Koppstein

### Affiliation:

Princeton University

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a source build

### Did you include all relevant data sets for reproducing the issue?

Not applicable - the reproduction does not require a data set

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have