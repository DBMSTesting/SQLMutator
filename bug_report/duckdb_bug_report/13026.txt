ID: 13026
Title: Compilation error in RE2 when enabling AVX2
Description:
### What happens?

If I set compilation flags to enable AVX2 instructions (e.g. `-march=native` in a modern `amd64`), DuckDB will fail to compile due to an isssue in re2 files.

```
duckdb/third_party/re2/re2/prog.cc: In member function ‘const void* duckdb_re2::Prog::PrefixAccel_FrontAndBack(const void*, size_t)’:
duckdb/third_party/re2/re2/prog.cc:1146:45: error: ‘prefix_front_’ was not declared in this scope
 1146 |     const __m256i f_set1 = _mm256_set1_epi8(prefix_front_);
      |                                             ^~~~~~~~~~~~~
duckdb/third_party/re2/re2/prog.cc:1147:45: error: ‘prefix_back_’ was not declared in this scope; did you mean ‘prefix_size_’?
 1147 |     const __m256i b_set1 = _mm256_set1_epi8(prefix_back_);
      |                                             ^~~~~~~~~~~~
      |                                             prefix_size_
```

### To Reproduce

(Example assumes one is using the R version, which compiles from source when using linux, but issue happens when compiling from source in general)

Create a file `~/.R/Makevars` as follows:
```
CXXFLAGS += -O3 -march=native
CXX11FLAGS += -O3 -march=native
CXX14FLAGS += -O3 -march=native
CXX17FLAGS += -O3 -march=native
CXX20FLAGS += -O3 -march=native
CFLAGS += -O3 -march=native
```

Then install from source:
```r
install.packages("duckdb")
```

### OS:

Linux

### DuckDB Version:

1.0.0-1

### DuckDB Client:

R

### Full Name:

David Cortes

### Affiliation:

None

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have