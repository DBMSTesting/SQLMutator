ID: 15597
Title: Timestamps rough around the edges: Error messages
Description:
### What happens?

Breaking down https://github.com/duckdb/duckdb/issues/15512 ; second part, error messages:

1. The `TIMESTAMPTZ` constructor throws different error message for lor large literal values that are in range for `TIMESTAMP` but not for `TIMESTAMPTZ` than for those that are out-of-range for both:

```sql
SELECT
    TIMESTAMPTZ '294247-01-10 04:00:54.7758', -- Conversion Error: Unable to convert ICU date to timestamp
    TIMESTAMPTZ '2942477-01-10 04:00:54.7758' -- Conversion Error: timestamp field value out of range: "2942477-01-10 04:00:54.7758", expected format is (YYYY-MM-DD HH:MM:SS[.US][±HH:MM| ZONE])
```

2. For out-of-range literal values, the `TIMESTAMP` / `TIMESTAMPTZ`  constructors throw out-of-range errors but then show the expected format (which the input adheres to anyway) instead of providing the more useful valid range of inputs:

```sql
    TIMESTAMP '294247-01-10 04:00:54.775808', -- "Conversion Error: timestamp field value out of range: "294247-01-10 04:00:54.775807", expected format is (YYYY-MM-DD HH:MM:SS[.US][±HH:MM| ZONE])"
```

3. For out-of-range literal values, the `TIMESTAMP_NS` constructor throws a cryptic error instead of an out-of-range error:

```sql
SELECT
    TIMESTAMP_NS '2262-04-11 23:47:16.854775808', -- "Conversion Error: Could not convert string '2262-04-11 23:47:16.854775808' to INVALID"
```

4. Adding sufficiently large `INTERVAL`s to `TIMESTAMPTZ` values throws a cryptic error instead of an overflow error:

```sql
SELECT
    TIMESTAMPTZ '294247-01-10 04:00:54.77' + INTERVAL 100 DAY, -- "Conversion Error: Unable to convert ICU date to timestamp"
``` 

5. For out-of-range inputs, `make_timestamp(year, month, day, ....)` throws an overflow error instead of the same out-of-range error as the `TIMESTAMP` constructor:
```sql
SELECT
    make_timestamp(294247, 1, 10, 4, 0, 54.775807), -- "Conversion Error: Overflow exception in date/time -> timestamp conversion"
```

6. For out-of-range inputs, `make_timestamptz(year, month, day, ...)` throws the same non-useful error that the `TIMESTAMPTZ` constructor sometimes (but not always) throws:

```sql
SELECT
    make_timestamptz(294248, 1, 10, 4, 0, 54.775807), -- "Conversion Error: Unable to convert ICU date to timestamp"
```


7. For out-of-range inputs, `to_timestamp` throws unclear error instead of same out-of-range error as the `TIMESTAMP` constructor:

```sql
SELECT
    to_timestamp(99999999999999999), -- "Conversion Error: Could not convert epoch seconds to TIMESTAMP WITH TIME ZONE"
```

### To Reproduce

Run
```sql
SET TimeZone='UTC';
```
before executing the snippets above.

### OS:

Linux

### DuckDB Version:

1.1.3

### DuckDB Client:

Any

### Hardware:

Any

### Full Name:

Soeren Wolfers

### Affiliation:

G-Research

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a nightly build

### Did you include all relevant data sets for reproducing the issue?

Not applicable - the reproduction does not require a data set

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have