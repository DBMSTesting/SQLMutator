ID: 13301
Title: read_csv() fails to detect "Malformed JSON" 
Description:
### What happens?

Consider the following DuckDB SQL:

```sql
LOAD json;

CREATE OR REPLACE TABLE csv AS
  FROM read_csv('json.csv', header=false,
  columns = {'i': 'INTEGER', 'j': 'JSON', 'k': 'VARCHAR'} );
```

If the second column of the CSV file contains valid JSON, there is no problem.
Suppose however that `json.csv` consists of the following line:

```json
1,"[1,,3]","[1,,3] causes problems"
```

In this case, the CREATE TABLE succeeds, and the line appears in a duckbox as follows:

```text
┌───────┬──────────┬────────────────────────┐
│   i   │    j     │           k            │
│ int32 │   json   │        varchar         │
├───────┼──────────┼────────────────────────┤
│     1 │ [1,,3]   │ [1,,3] causes problems │
└───────┴──────────┴────────────────────────┘
```

In other words, DuckDB not only failed to detect the problem in the
first place but is willing to present non-JSON as though it were JSON;
that it is not JSON can be confirmed e.g. by:

```sql
SELECT json_array_length(j) FROM "csv";
```
```
Invalid Input Error: Malformed JSON at byte 3 of input: unexpected character.  Input: [1,,3]
```
According to the "Reading Faulty CSV Files" page, read_csv() is supposed to detect
CAST errors, so one could say the problem here
is simply a bug; if however the intent in this particular case was to
be lenient, then presumably "[1,,3]" should have been rendered as
[1,null,3].

In many ways it would be nice to have a 'lenient' option
that would allow the parser some leeway but perhaps we'll have
to wait for JSON5 support :-)

p.s.
```
D select version();
select version();
┌───────────┐
│ version() │
│  varchar  │
├───────────┤
│ v1.0.0    │
└───────────┘
```

### To Reproduce

```
load JSON;

CREATE OR REPLACE TABLE csv AS
  FROM read_csv('json.csv', header=false,
  columns = {'i': 'INTEGER', 'j': 'JSON', 'k': 'VARCHAR'} );
```

### OS:

Mac

### DuckDB Version:

1.0.0 and v1.0.1-dev3777

### DuckDB Client:

CLI

### Full Name:

Peter Koppstein

### Affiliation:

Princeton University

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

v1.0.1-dev3777

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have