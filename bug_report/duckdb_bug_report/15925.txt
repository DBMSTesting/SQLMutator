ID: 15925
Title: cannot interrupt a long running query from python
Description:
### What happens?

I want to kill a running duckdb query if it takes more than 1 second to run.

I am running the query in separate python thread (started in the main application thread). and  I am joining it with a timeout of 1 second. when join() (or future.result() in this case) throws TimeOutError i am sending an interrupt signal to the duckdb connection pointing to the same duckdb in-memory database, that is running the query. and catching the error in the spawned thread so that i can record the TLE. but the query does not seem to stop.

note: I tried using the same connection object, using cursors on the same connection object - but as documentation recommends using different connections to the same db in different threads - I have given this approach here.

Am I doing something wrong? or interrupt does not work in this way (I am not sure as there isn't much documentation on it)

### To Reproduce

```
import duckdb
from time import time
from concurrent.futures import ThreadPoolExecutor

pool = ThreadPoolExecutor(max_workers=1)

s = time()

conn1 = duckdb.connect(':memory:db1')


def func2():
    try:
        conn2 = duckdb.connect(':memory:db1')
        a = conn2.execute('select sum(i) from (select unnest(range(100000000)) as i)').fetchall()  # just a long running query
    except Exception as e:
        print(e)
        a = 'interrupted'
    print('exited the query', 1000 * (time() - s), 'ms')
    return a


fut = pool.submit(func2)

try:
    res = fut.result(timeout=1)
except Exception as e:
    conn1.interrupt()
    print('calling db interrupt in', 1000 * (time() - s), 'ms')
    # the following result() will throw TOE because the query is not interrupted!
    res = fut.result(timeout=1)

print(res)
print('process finished in', 1000 * (time() - s), 'ms')

```

### OS:

ubuntu 20.04 x86_64

### DuckDB Version:

1.1.3

### DuckDB Client:

Python

### Hardware:

na

### Full Name:

raman

### Affiliation:

olyv formerly www.smartcoin.co.in

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Not applicable - the reproduction does not require a data set

### Did you include all code required to reproduce the issue?

- [x] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [x] Yes, I have