ID: 12936
Title: [Julia] DBInterface.close() does not close the database
Description:
### What happens?

(EDIT: When running the Julia VM with multiple threads), closing the connection to the database, through either `DuckDB.close()` or `DBInterface.close()`, the underlying lock file is not released and the database cannot be opened by an external process until the Julia session is not terminated. 
Checking the file size in the disk, I believe the content is not written.

### To Reproduce

Using an interactive session (EDIT, multi-threaded, e.g. `julia -t 8,2`) : 
```
julia> connection = DBInterface.connect(DuckDB.DB, "/tmp/test3.duckdb")
DuckDB.DB("/tmp/test3.duckdb")

julia> DBInterface.execute(connection, "CREATE VIEW test AS (SELECT 1)")
(Count = Int64[],)

julia> DBInterface.close(connection)

julia> DuckDB.close(connection)
```

Without closing the julia session, and trying to open the database with an external process, e.g. duckdb itself, results in the error:
```
Error: unable to open database "test3.duckdb": IO Error: Could not set lock on file "test3.duckdb": Conflicting lock is held in /Users/ddeleo/.julia/juliaup/julia-1.10.4+0.aarch64.apple.darwin14/bin/julia (PID 27981) by user ddeleo. See also https://duckdb.org/docs/connect/concurrency
```

### OS:

MacOS Sonoma v14.4.1

### DuckDB Version:

1.0.0

### DuckDB Client:

Julia

### Full Name:

Dean De Leo

### Affiliation:

RelationalAI

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Not applicable - the reproduction does not require a data set

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have