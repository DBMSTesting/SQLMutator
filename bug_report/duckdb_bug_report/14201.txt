ID: 14201
Title: [httpfs] AWS_* environment variables configure S3/R2/GCS secrets
Description:
### What happens?

The following environment variables get merged into all S3ish secrets:

https://github.com/duckdb/duckdb/blob/8aca4330ac46be3950c6b12e29040322dd245b7a/extension/httpfs/include/s3fs.hpp#L38-L44

Which is pretty confusing when, for example, attempting to use [`R2` from aws lambda](https://github.com/tobilg/duckdb-nodejs-layer/issues/12).

If `AWS_SESSION_TOKEN='my-session-token'` is in your environment, it will be sent along with any S3ish requests with secrets that don't **explicitly overwrite the `SESSION_TOKEN`** (in the `X-Amz-Security-Token` header)


---

I understand that some kind of secret/config cascade can be useful, but maybe it can be opt-in? 

### To Reproduce

```shell
AWS_SESSION_TOKEN='my-session-token' duckdb
```

```sql
CREATE SECRET "s3_shh" (
    TYPE S3,
    URL_STYLE 'path',
    KEY_ID 'my-key-id',
    SECRET 'my-secret',
    ENDPOINT 'domain-you-control.local'
);
SELECT * FROM read_json('s3://my-bucket/**/*.json');
```

Note that `my-session-token` is set as the `X-Amz-Security-Token` header, which breaks the authentication


### OS:

macOS (aarch64), linux (al2) (aarch64 & x86_64)

### DuckDB Version:

1.1.1,1.1.0

### DuckDB Client:

duckdb-node, cli

### Hardware:

_No response_

### Full Name:

Quinn Blenkinsop

### Affiliation:

None

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Not applicable - the reproduction does not require a data set

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have