ID: 15637
Title: [Compression] Introduce `DICT_FSST` compression method
Description:
This PR adds `DICT_FSST`, making use of the new `NO_VALIDITY_REQUIRED` behavior introduced in #15591 

The new method is a mix of Dictionary and FSST (which will be deprecated by this method at a later point)

The method currently has 3 modes that it can decide to use for a block:
- `DICTIONARY`, almost an exact replica of the existing Dictionary method, no further encoding added.
- `DICT_FSST`, Dictionary but the created dictionary is further encoded using FSST.
- `FSST_ONLY`, We don't perform dictionary encoding in this mode, so no string lookups are performed. Instead everything is added to the block without deduplication, everything is FSST encoded.

A couple separate improvements are made to the existing dictionary / fsst behaviors:
- As well as bitpacking the `dictionary_indices` (formerly known as `selection_buffer`) we now also bitpack the `string_lengths` (formerly known as `index_buffer`, which was storing offsets instead of lengths)
- To reduce the amount of computation done for each tuple, the `BitpackingPrimitives::MinimumBitWidth` and `BitpackingPrimitives::GetRequiredSize` calls are only performed when necessary.
