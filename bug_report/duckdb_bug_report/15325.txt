ID: 15325
Title: Out Of Memory Error
Description:
### What happens?

I have an out of memory error. This is a reproduction case of [this Discord discussion](https://discord.com/channels/909674491309850675/1032659480539824208/1314633482017837187).

### To Reproduce

```
% duckdb test.duckdb
v1.1.3 19864453f7
Enter ".help" for usage hints.
```
```sql
SELECT current_setting('temp_directory') AS tempdir;
```
```
┌─────────────────┐
│     tempdir     │
│     varchar     │
├─────────────────┤
│ test.duckdb.tmp │
└─────────────────┘
```
```sql
SET memory_limit='500MB';
CREATE TABLE test_table AS
  SELECT
      i as id,
      concat('Station_', i::VARCHAR) as station_name,
      concat('Support_', (i % 100)::VARCHAR) as support_type,
      concat('Parameter_', (i % 500)::VARCHAR) as parameter,
      CASE WHEN i % 10 = 0 THEN NULL ELSE random() END as measurement,
      CASE WHEN i % 5 = 0 THEN NULL ELSE concat('Unit_', (i % 20)::VARCHAR) END as unit
  FROM range(1, 50_000_000) t(i);
SELECT * FROM test_table LIMIT 10;
```
```
┌───────┬──────────────┬──────────────┬──────────────┬─────────────────────┬─────────┐
│  id   │ station_name │ support_type │  parameter   │     measurement     │  unit   │
│ int64 │   varchar    │   varchar    │   varchar    │       double        │ varchar │
├───────┼──────────────┼──────────────┼──────────────┼─────────────────────┼─────────┤
│     1 │ Station_1    │ Support_1    │ Parameter_1  │ 0.15396692953072488 │ Unit_1  │
│     2 │ Station_2    │ Support_2    │ Parameter_2  │  0.7611820898018777 │ Unit_2  │
│     3 │ Station_3    │ Support_3    │ Parameter_3  │    0.67313013644889 │ Unit_3  │
│     4 │ Station_4    │ Support_4    │ Parameter_4  │   0.750016124220565 │ Unit_4  │
│     5 │ Station_5    │ Support_5    │ Parameter_5  │  0.1872449128422886 │         │
│     6 │ Station_6    │ Support_6    │ Parameter_6  │ 0.21719793719239533 │ Unit_6  │
│     7 │ Station_7    │ Support_7    │ Parameter_7  │  0.5798790925182402 │ Unit_7  │
│     8 │ Station_8    │ Support_8    │ Parameter_8  │  0.5137350505683571 │ Unit_8  │
│     9 │ Station_9    │ Support_9    │ Parameter_9  │ 0.04513332527130842 │ Unit_9  │
│    10 │ Station_10   │ Support_10   │ Parameter_10 │                     │         │
├───────┴──────────────┴──────────────┴──────────────┴─────────────────────┴─────────┤
│ 10 rows                                                                  6 columns │
└────────────────────────────────────────────────────────────────────────────────────┘
```
```sql
SELECT
      COUNT(*) as count_star,

      COUNT(id) as count_values_id,
      COUNT(DISTINCT id) as count_distinct_id,
      SUM(CASE WHEN id IS NULL THEN 1 ELSE 0 END) as null_count_id,
      SUM(CASE WHEN TRY_CAST(id AS DOUBLE) IS NOT NULL THEN 1 ELSE 0 END) as numeric_count_id,

      COUNT(station_name) as count_values_station,
      COUNT(DISTINCT station_name) as count_distinct_station,
      SUM(CASE WHEN station_name IS NULL OR station_name = '' THEN 1 ELSE 0 END) as null_count_station,
      SUM(CASE WHEN TRY_CAST(station_name AS DOUBLE) IS NOT NULL THEN 1 ELSE 0 END) as numeric_count_station,

      COUNT(support_type) as count_values_support,
      COUNT(DISTINCT support_type) as count_distinct_support,
      SUM(CASE WHEN support_type IS NULL OR support_type = '' THEN 1 ELSE 0 END) as null_count_support,
      SUM(CASE WHEN TRY_CAST(support_type AS DOUBLE) IS NOT NULL THEN 1 ELSE 0 END) as numeric_count_support,

      COUNT(parameter) as count_values_parameter,
      COUNT(DISTINCT parameter) as count_distinct_parameter,
      SUM(CASE WHEN parameter IS NULL OR parameter = '' THEN 1 ELSE 0 END) as null_count_parameter,
      SUM(CASE WHEN TRY_CAST(parameter AS DOUBLE) IS NOT NULL THEN 1 ELSE 0 END) as numeric_count_parameter,

      COUNT(measurement) as count_values_measurement,
      COUNT(DISTINCT measurement) as count_distinct_measurement,
      SUM(CASE WHEN measurement IS NULL THEN 1 ELSE 0 END) as null_count_measurement,
      SUM(CASE WHEN TRY_CAST(measurement AS DOUBLE) IS NOT NULL THEN 1 ELSE 0 END) as numeric_count_measurement,

      COUNT(unit) as count_values_unit,
      COUNT(DISTINCT unit) as count_distinct_unit,
      SUM(CASE WHEN unit IS NULL OR unit = '' THEN 1 ELSE 0 END) as null_count_unit,
      SUM(CASE WHEN TRY_CAST(unit AS DOUBLE) IS NOT NULL THEN 1 ELSE 0 END) as numeric_count_unit
  FROM test_table;
```
```console
Out of Memory Error: could not allocate block of size 256.0 KiB (476.8 MiB/476.8 MiB used)
```

### OS:

macOs 14.7 (ARM-based)

### DuckDB Version:

1.1.3

### DuckDB Client:

cli or python

### Hardware:

_No response_

### Full Name:

Jeremy Greze

### Affiliation:

Tabulate.io

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have