ID: 15830
Title: Failure to UPDATE on LIST column in presence of PRIMARY KEY
Description:
### What happens?

If a table has a PRIMARY KEY column, then any attempt to update a (different) column of type LIST yields 
```
SQL Error: Constraint Error: Duplicate key "id: 1" violates primary key constraint. If this is an unexpected constraint violation please double check with the known index limitations section in our documentation (https://duckdb.org/docs/sql/indexes).
```

I have read the documentation on index limitations, but I do not see how even "[Over-Eager Unique Constraint Checking](https://duckdb.org/docs/sql/indexes#over-eager-unique-constraint-checking)" would apply, as an update takes place on a _single_ column, leaving the existing row alone.

Note that this also appears to be limited to LIST types, not to STRUCT types.

### To Reproduce

Run the following SQL:
```
drop table if exists thing;

create table thing(
  id int primary key,
  s int,
  r struct(
    e1 int,
    e2 int
  ),
  v int[]
);

insert into thing
select
  1 as id,
  2 as s,
  struct_pack(e1 := 1, e2 := 2) as r,
  [2, 3, 4] as v
;

update thing
set 
  s = 3
where
  id = 1
; -- works fine

update thing
set 
  r = struct_pack( e1 := 2, e2 := 3)
where
  id = 1
; -- works fine

update thing
set 
  v = [ 5 ]
where
  id = 1
; --- constraint error
```

There should be no constraint errors, anywhere.

### OS:

x86_64

### DuckDB Version:

1.1.3

### DuckDB Client:

CLI

### Hardware:

_No response_

### Full Name:

Stefan Hoffmeister

### Affiliation:

n/a

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [x] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [x] Yes, I have