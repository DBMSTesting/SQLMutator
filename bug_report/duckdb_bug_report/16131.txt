ID: 16131
Title: Misleading error message when referring to a non-existent column of an existent table in a subquery
Description:
Consider this code:

```sql
CREATE TABLE foo(a int);
CREATE TABLE bar(b int);

FROM foo
WHERE a NOT IN (
  FROM bar
  WHERE bar.c >= 42
)
```

The query is broken because there is no such column `c`.

But duckdb reports the confusing error:

```
Binder Error:
Referenced table "bar" not found!
Candidate tables: "foo"
```

which encourages the user to investigate whether the table `bar` exists or not, rather than the fact that the column name is wrong.

I suppose this is a duplicate of #9463 and #12727, which were closed either because of staleness or because error messages "cannot be fully relied on".  I understand error messages can't perfectly diagnose all problems, but this one is just downright wrong. The tool should not make false claims about the user's query. 

So I suggest it may be worth revisiting this problem. If it is an issue of development cycles, I would potentially be interested in contributing a fix.

### OS:

macos

### DuckDB Version:

1.2.0

### DuckDB Client:

cli

### Full Name:

James Wilcox

### Affiliation:

University of Washington

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [x] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [x] Yes, I have