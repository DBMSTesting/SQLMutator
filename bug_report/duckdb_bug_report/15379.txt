ID: 15379
Title: NaN replaced with NULL for Pandas, not for Arrow
Description:
### What happens?

When querying a Pandas dataframe, `np.nan` are replaced with `NULL` but not when querying an Arrow table.
Computation on a dataframe work ok (e.g. `corr()`) while they crash on Arrow.

Is this intended behavior?

This is kind of the opposite question of https://github.com/duckdb/duckdb/issues/10196
Granted we do want to do the replacement with Pandas, why not do the same for Arrow?

### To Reproduce

```python
import numpy as np
import pyarrow as pa
import duckdb

t = pa.Table.from_arrays([np.array([1, np.nan, 2])], names=["A"])
print(duckdb.query("from t"))

df = t.to_pandas()
print(df)

print(duckdb.query("from df"))
```

### OS:

Linux

### DuckDB Version:

1.1.3

### DuckDB Client:

Python

### Hardware:

_No response_

### Full Name:

Mauro Pagano

### Affiliation:

self

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a nightly build

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have