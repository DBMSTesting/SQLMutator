ID: 16172
Title: Add parallel memset when building hash join table
Description:
I found that when the number of threads and tables are both large, single-threaded memset (fill_n) becomes a bottleneck for hash joins. Therefore, I added parallel memset functionality. The following are the test results using 16 threads on TPCH with a scale factor of 30, the machine having 2x Intel(R) Xeon(R) Platinum 8474C @ 2.10GHz and 512GB of memory.
```
q01.benchmark
Old timing: 0.307804
New timing: 0.305122

q02.benchmark
Old timing: 0.09011
New timing: 0.081623

q03.benchmark
Old timing: 0.219148
New timing: 0.185937

q04.benchmark
Old timing: 0.197395
New timing: 0.172733

q05.benchmark
Old timing: 0.200423
New timing: 0.177111

q06.benchmark
Old timing: 0.056182
New timing: 0.055329

q07.benchmark
Old timing: 0.220938
New timing: 0.185942

q08.benchmark
Old timing: 0.238767
New timing: 0.221206

q09.benchmark
Old timing: 0.81091
New timing: 0.74094

q10.benchmark
Old timing: 0.384993
New timing: 0.358605

q11.benchmark
Old timing: 0.043594
New timing: 0.047106

q12.benchmark
Old timing: 0.149087
New timing: 0.152796

q13.benchmark
Old timing: 0.607926
New timing: 0.588897

q14.benchmark
Old timing: 0.140369
New timing: 0.110691

q15.benchmark
Old timing: 0.100208
New timing: 0.09759

q16.benchmark
Old timing: 0.121195
New timing: 0.11974

q17.benchmark
Old timing: 0.332341
New timing: 0.326049

q18.benchmark
Old timing: 0.666402
New timing: 0.641981

q19.benchmark
Old timing: 0.248784
New timing: 0.236629

q20.benchmark
Old timing: 0.174007
New timing: 0.175727

q21.benchmark
Old timing: 0.700216
New timing: 0.629451

q22.benchmark
Old timing: 0.141347
New timing: 0.128283


Old timing geometric mean: 0.2120037943770715
New timing geometric mean: 0.19861073916154134, roughly 6% faster
```






