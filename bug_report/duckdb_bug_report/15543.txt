ID: 15543
Title: Kleene star followup
Description:
lexical headaches make that we cannot enforce a constraint that arrows in PGQ must be consecutive.
Not because of `->` because there is already the symbol `LAMBDA_ARROW`, but because of `<-` for which no such symbol exists and SQL wants them separate as it is legal SQL in e.g. `SELECT -2<-1;`

If `<-` consists of two separate symbols `<` and `-`, space is allowed between them

To be consequent, we allow not only `< - `but also `- >` that is, with space between the two characters.
But it gets hairy when the arrow is followed by + or * because the Postgres lexer will concatenate multiple operator characters into one symbol "Op". This is e.g. used for == in SQL, which I denote Op(`'=='`) here. So:
- `- >+` would become the symbols: `-` Op(`'>+'`) 
- `->+` becomes symbol: Op(`'->+'`) 
- `<->+` becomes symbol: Op(`'<->+'`) 

Previously we did not even support concatenated symbols like Op(`'<-+'`), Op(`'->+'`) and Op(`'<->+'`), as our bison rules were assembling arrows from single-character symbols (and `LAMBDA_ARROW`). 

The lexer now breaks up `<->+` and subsets (`<->` `<-+` `->+` `>+`  `-+`) into individual characters, rather than a concatenated `Op.`  None of these were supported SQL operators, so there should be no incompatibilities created by this, 

Everything said here for `+` also holds for `*`
