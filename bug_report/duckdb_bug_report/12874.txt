ID: 12874
Title: Struct "dot-field" member access does not work on a "reusable alias"
Description:
### What happens?

"struct-dot-member" access does not seem to work on "reusable aliases". To be clear, this is the intended syntax:

`SELECT {field1: 1, field2: 2} as strct, strct.field1, strct.field2;`

- SELECT-clause projects a struct value with members field1 and field2; 
- subsequent expressions in the same SELECT-clause attempts to access members of the struct value using <alias-for-struct-value>.<struct-member-name> syntax
- Executing the statement fails with `Binder Error: Referenced table "strct" not found!`

```sql
SELECT {field1: 1, field2: 2} as strct, strct.field1, strct.field2;
```
```
Binder Error: Referenced table "strct" not found!
LINE 1: ...ELECT {field1: 1, field2: 2} as strct, strct.field1, strct.field2;
```

Outer scope access on the same alias does work with the same dot syntax:

```sql
SELECT strct.field1, strct.field2
 FROM (
   SELECT {field1: 1, field2: 2} as strct
 );
```
```
┌────────┬────────┐
│ field1 │ field2 │
│ int32  │ int32  │
├────────┼────────┤
│      1 │      2 │
└────────┴────────┘
```

Interestingly, same-scope access using "square bracket member name" access does work as expected:

```sql
SELECT {field1: 1, field2: 2} as strct, strct['field1'], strct['field2'];
```
```
┌────────────────────────────────────────┬─────────────────┬─────────────────┐
│                 strct                  │ strct['field1'] │ strct['field2'] │
│ struct(field1 integer, field2 integer) │      int32      │      int32      │
├────────────────────────────────────────┼─────────────────┼─────────────────┤
│ {'field1': 1, 'field2': 2}             │               1 │               2 │
└────────────────────────────────────────┴─────────────────┴─────────────────┘
```

### To Reproduce

```
SELECT {field1: 1, field2: 2} as strct, strct.field1, strct.field2;
```

### OS:

windows 11 enterprise

### DuckDB Version:

v1.0.0 1f98600c2c

### DuckDB Client:

CLI

### Full Name:

Roland Bouman

### Affiliation:

EPAM Systems BV Netherlands

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a nightly build

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have