ID: 14799
Title: Add syntax highlighting support for errors in the CLI
Description:
This PR adds support for syntax highlighting of errors in the CLI. This can be toggled using the dot command `.highlight_text off|on` (default on when outputting to the terminal, off when outputting to a file). Attached is a screenshot:

![Screenshot 2024-11-12 at 20 52 59](https://github.com/user-attachments/assets/fff49363-67c9-41e5-ad7a-6947d28f8283)

The error is divided into rendering tokens using the `Parser::TokenizeError` method. This method scans finds a few simple patterns:

* `[ErrorType] Error:` is given the token `ERROR`
* Anything in between single-quotes ('') or double-quotes ("") is given a token `STRING_CONSTANT`
* `LINE XX:` is given a token `COMMENT`
* The query following `LINE XX:` is tokenized using `Parser::Tokenize` (which uses our lexer to tokenize)
* The caret (`^`) is used to find the position of the error - the token at that position is given the token `ERROR` 
* The rest of the error is given the token `IDENTIFIER`


This PR also fixes a few issues with errors:

* We no longer provide fully qualified suggestions unless the qualification is required to avoid ambiguity (i.e. `l_orderke` will provide `l_orderkey` as suggestion, instead of `lineitem.l_orderkey` - unless `l_orderkey` is ambiguous in the query)
* We fix an issue with the truncation of query lines - previously this would incorrectly print multiple lines (going back to the start of the query) instead of correctly only printing the error line
* We add column name suggestions when a qualified column reference finds no match (i.e. `lineitem.l_orderke` now suggests `l_orderkey`).