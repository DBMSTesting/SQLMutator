ID: 13490
Title: Add support for registering custom types through c api
Description:
This PR adds support for registering custom types and setting type aliases through the C-API.
The following new functions are added

```c
// Set the alias of a type
void duckdb_logical_type_set_alias(duckdb_logical_type type, const char *alias)

// Create a "custom type" struct used for registering custom types
duckdb_custom_type duckdb_create_custom_type();
// Set the base type of a custom type
void duckdb_custom_type_set_base_type(duckdb_custom_type type, duckdb_logical_type base_type)
// Set the name of a custom type
void duckdb_custom_type_set_name(duckdb_custom_type type, const char *name);
// Register a custom type
duckdb_state duckdb_register_custom_type(duckdb_connection con, duckdb_custom_type type);
// Destroy a custom type struct
void duckdb_destroy_custom_type(duckdb_custom_type *type);
```

One thing that im not sure about: when registering a custom type, the name should _usually_ be the same as the alias given to the base logical type, but im not sure if we want to enforce/handle this automatically behind the scenes in the c-api or if we leave it up to the user. Although we could always add that later (without changing the public facing API).