ID: 14625
Title: Will you consider optimizing string compression in the future?
Description:
### What happens?

I constructed a single-column data table as follows, with each tuple approximately 4KB in size (26B * 196 = 5096B), and inserted a total of 4096 rows of data. According to DuckDB's theoretical calculations, each tuple requires roughly 20 blocks for storage (5096 / 256). Therefore, without any compression, the entire table would require approximately 20MB (20 * 256 * 4096) of storage space, which is indeed the case.
<img width="793" alt="image" src="https://github.com/user-attachments/assets/07fc3ff4-37d8-4dee-81c0-4ae89a5c198d">
<img width="1622" alt="image" src="https://github.com/user-attachments/assets/a4676d51-cdc8-47c0-a3f3-933ebbce4dd0">
However, in systems such as PostgreSQL, longer strings are usually compressed by the toast mechanism. If I am importing data from a PostgreSQL database into DuckDB, this situation can often result in an explosive increase in storage space.
<img width="695" alt="image" src="https://github.com/user-attachments/assets/317582c6-5b04-410f-8c9c-62b474bfe92d">
It seems that DuckDB doesn't put much emphasis on string compression, possibly prioritizing reduced CPU overhead for runtime decompression. However, from an I/O perspective, the reduction in I/O volume due to compression can also contribute to decreased overall runtime (reduce time to read data). I'm curious about the trade-offs made in this design decision and whether there might be a need (string compression) for future iterations?

PS: In PostgreSQL, TOAST appears to have compression optimizations for longer strings with internal repetitions.

### To Reproduce

```
CREATE TABLE test (name VARCHAR);
SELECT * FROM pragma_database_size();
INSERT INTO test SELECT repeat('abcdefghijklmnopqrstuvwxyz', 196) FROM generate_series(1, 4096);
CHECKPOINT;
SELECT * FROM pragma_database_size();
```

### OS:

x86_64

### DuckDB Version:

v1.1.1

### DuckDB Client:

CLI

### Hardware:

_No response_

### Full Name:

Amore

### Affiliation:

Software engineer

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a source build

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have