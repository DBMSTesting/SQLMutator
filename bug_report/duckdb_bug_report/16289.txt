ID: 16289
Title: Allow querying attached catalog from detached catalog
Description:
This PR allows users to execute queries that refer to attached catalogs from a detached default catalog. This is useful in multi-connection settings.

Say con1's default catalog, _db1_, is detached and _db2_ is still attached. Previously, querying a table in _db2_ from con1 would give a binder error:
```
-- from con1, gives "Binder Error: Catalog "db1" does not exist!"
FROM db2.tbl; 
```
To allow the above query, _Binder::BindSchemaOrCatalog_ now uses _Catalog::GetCatalogEntry_ instead of _Catalog::GetCatalog_ to avoid immediately throwing binder exception when default catalog (_db1_) is not found. This allows the catalog/schema names of _db2_ to be set properly and go through the rest of binding phase.

Also, we want to throw a sensible error when con1 is referencing some non-existent table in _db2_. When an entry is not found, DuckDB calls _CreateMissingEntryException_, which creates default entries in the default catalog (_db1_). Previously, the error message looked like: 
```
-- "Binder Error: Catalog "db1" does not exist!" 
FROM db2.non_existent_tbl;

-- with fully qualifed path, "Binder Error: Catalog "" does not exist!"
FROM db2.main.non_existent_tbl;
```
This PR immediately throws a catalog exception when an entry is missing and the default catalog is not attached, avoiding going on to create default entries. Now, it will throw "Catalog Error: Table with name non_existent_table does not exist!"