ID: 12668
Title: Inconsistent Query Results with GREATEST
Description:
### What happens?

Two SELECT queries provided return different results despite having logically equivalent conditions.

### To Reproduce

Set up the table and insert values:

```sql
CREATE TABLE table_0 (c_1 DOUBLE, c_2 DOUBLE, c_0 DOUBLE);
INSERT INTO table_0 VALUES (-7.227194159944755e+29, 1800442460, 1800442460);
```

`CAST(GREATEST(table_0.c_1, table_0.c_2) AS double)` and `c_0` have the same value in table_0.

Execute this SELECT:

```sql
SELECT table_0.c_2 
FROM table_0 
WHERE ((table_0.c_0 IS NULL) AND (table_0.c_2 <> (1800915471 + 1989709076 + 1790880069))) 
AND (table_0.c_0 < 4.7523405121397084e+29);
```

Result:
```
0 rows
```

Modify the SQL query by replacing `table_0.c_0` with `CAST(GREATEST(table_0.c_1, table_0.c_2) AS double)`:

```sql
SELECT table_0.c_2 
FROM table_0 
WHERE ((CAST(GREATEST(table_0.c_1, table_0.c_2) AS double) IS NULL) 
AND (table_0.c_2 <> (1800915471 + 1989709076 + 1790880069))) 
AND (CAST(GREATEST(table_0.c_1, table_0.c_2) AS double) < 4.7523405121397084e+29);
```

Result:
```
OutOfRangeException(‘Out of Range Error: Overflow in addition of INT32 (1800915471 + 1989709076)!’)
```

In my opinion, both queries should either return the same result or produce an error since they are logically equivalent.

### OS:

MacOS

### DuckDB Version:

1.0.0

### DuckDB Client:

CLI

### Full Name:

dwenking

### Affiliation:

Tsinghua University

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have