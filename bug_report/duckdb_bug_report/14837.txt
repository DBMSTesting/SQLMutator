ID: 14837
Title: Querying datasources over HTTP fails if the server rejects HEAD requests.
Description:
### What happens?

Using any `read_xxx` method on a resources that blocks `HEAD` requests with a non 2xx status code fails with an IO-error

```
IO Error: Unable to connect to URL "https://api.spring.io/projects/spring-boot/generations": 401 (Unauthorized)
```

It's kinda unexpected, as the HTTP logging shows both a `HEAD` and a `GET`, the latter being successful. 

```
HTTP Request:
	HEAD /projects/spring-boot/generations
	Accept: */*
	Host: api.spring.io
	User-Agent: cpp-httplib/0.14.3

HTTP Response:
	401 Unauthorized 
	alt-svc: h3=":443"; ma=86400
	Cache-Control: no-cache, no-store, max-age=0, must-revalidate
	CF-Cache-Status: DYNAMIC
	CF-RAY: 8e28db679e65c7ec-DUS
	Connection: keep-alive
	Content-Length: 0
	Date: Thu, 14 Nov 2024 17:52:45 GMT
	expires: 0
	pragma: no-cache
	Server: cloudflare
	Set-Cookie: JSESSIONID=51FE8280FD415EF841542D9519B9E726; Path=/; Secure; HttpOnly
	Set-Cookie: __cf_bm=wSxGWuyIB3Yt_hWYDTISeQnIq_XLf092PgnIZyc7tzI-1731606765-1.0.1.1-fAoBhY_Ch_GtXEXxlWSIn5PwO0aYptSSKEIVeR0OUNqJNkqhimQuR4FzeACExsWMNGd_nFzhp0Kd89DNKwZfmQ; path=/; expires=Thu, 14-Nov-24 18:22:45 GMT; domain=.spring.io; HttpOnly; Secure; SameSite=None
	strict-transport-security: max-age=15552000; includeSubDomains
	vary: Origin
	vary: Access-Control-Request-Method
	vary: Access-Control-Request-Headers
	www-authenticate: Basic realm="Realm"
	x-content-type-options: nosniff
	x-frame-options: DENY
	x-xss-protection: 0


HTTP Request:
	GET /projects/spring-boot/generations
	Accept: */*
	Host: api.spring.io
	Range: bytes=0-1
	User-Agent: cpp-httplib/0.14.3

HTTP Response:
	200 OK 
	alt-svc: h3=":443"; ma=86400
	Cache-Control: no-cache, no-store, max-age=0, must-revalidate
	CF-Cache-Status: DYNAMIC
	CF-RAY: 8e28db69992cc7ec-DUS
	Connection: keep-alive
	Content-Type: application/hal+json
	Date: Thu, 14 Nov 2024 17:52:45 GMT
	expires: 0
	pragma: no-cache
	Server: cloudflare
	Set-Cookie: __cf_bm=y_2x58.2Qcv5d5n1ARIc_pQYbOmjOrsH6VUE52oPe4s-1731606765-1.0.1.1-g9OpXf3bc0.QfzAPZyHqOAsqlJVjlxdht_Z40CngN2hnFeZQP8K8WH2mMuOosXEed81hOAJal6AXnSlfIh9hZw; path=/; expires=Thu, 14-Nov-24 18:22:45 GMT; domain=.spring.io; HttpOnly; Secure; SameSite=None
	strict-transport-security: max-age=15552000; includeSubDomains
	Transfer-Encoding: chunked
	vary: Origin
	vary: Access-Control-Request-Method
	vary: Access-Control-Request-Headers
	x-content-type-options: nosniff
	x-frame-options: DENY
	x-xss-protection: 0
```

### To Reproduce

```
duckdb -s "SET enable_http_logging=true" -s "SELECT * FROM read_json('https://api.spring.io/projects/spring-boot/generations')"
```

### OS:

macOS

### DuckDB Version:

v1.1.3 19864453f7

### DuckDB Client:

DuckDB CLI

### Hardware:

_No response_

### Full Name:

Michael Simons

### Affiliation:

Neo4j, Inc.

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have