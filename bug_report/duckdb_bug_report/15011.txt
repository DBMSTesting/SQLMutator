ID: 15011
Title: Should the `ARRAY` operator preserve order?
Description:
### What happens?

The `ARRAY` operator doesn't preserve order. It's odd that it can be made to respect any order via an explicit `ORDER BY` but there is no easy way to preserve the arguably most important order: that of the original table. Also, this means that a subquery can't be replaced by a table that it's materialized into, which I think (but might well be wrong) it can everywhere else.

### To Reproduce

```sql
CREATE OR REPLACE TABLE df AS (
    FROM range(1_000_000) SELECT range AS x
);
CREATE OR REPLACE TABLE df2 AS (
    FROM df ORDER BY x
);
SELECT
    ARRAY(FROM df) == ARRAY(FROM df ORDER BY x),
    ARRAY(FROM df2) == ARRAY(FROM df ORDER BY x);
```
returns `False, False` but I'd have expected it return `True, True`.

### OS:

Linux

### DuckDB Version:

1.1.0

### DuckDB Client:

Python

### Hardware:

_No response_

### Full Name:

Soeren Wolfers

### Affiliation:

G-Research

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a nightly build

### Did you include all relevant data sets for reproducing the issue?

Not applicable - the reproduction does not require a data set

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have