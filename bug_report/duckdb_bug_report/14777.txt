ID: 14777
Title: Segfault with concurrent transactions commit to same table
Description:
### What happens?

Hi, I'm using duckdb as an embedded database in my Rust project. My use case is to create multiple connections so multiple threads can do transaction commit concurrently. In my data set, the primary keys are all unique, but some index columns could possibly use same value concurrently. And I hit a segfault, it looks happening in the ART index code. I'm very new to duckdb, so very appreciate it if anyone can help with any idea what is happening here. Thanks in advance!
<img width="1512" alt="Screenshot 2024-11-10 at 10 14 24 PM" src="https://github.com/user-attachments/assets/942f8494-eb89-4b2a-ad69-1ca21ab66c77">


### To Reproduce

Unfortunately, I do not have a test case could reproduce this.

### OS:

Ubuntu 22.04

### DuckDB Version:

1.1.3

### DuckDB Client:

rust

### Hardware:

AWS EC2 c5ad.8xlarge

### Full Name:

Xiangyu Wang

### Affiliation:

N/A

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

No - Other reason (please specify in the issue body)

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have