ID: 12853
Title: Unable to run spatial query after Version 0.8.1, unable to run query on 0.8.1 using jdbc
Description:
### What happens?

If I run the following in 0.8.1 from the command line, it returns the correct 15k locations as a list of IDs in about 1 sec.

If I try to run this in JDBC (Java 16) with the same version, it causes a segmentation fault in Java - with no proper error message.

The versions > 0.8.1 up to 1.0.0 seem not to be able to run the SELECT below. It just hangs.

Are the jdbc bug in 0.8.1, and the geospatial query hanging issue in later versions. known bugs?



### To Reproduce

locations.csv - file with 70k rows with id, point(long,lat) as columns
geometry.geojson - file with 5MB geojson  string

```
INSTALL spatial;
LOAD spatial;
CREATE TABLE locations AS SELECT id,ST_POINT(longitude,latitude) point 
        FROM 'locations.csv';
CREATE TABLE catchment_geojson AS SELECT * 
        FROM ST_READ('geometry.geojson');        
SELECT l.id 
  FROM locations l 
  JOIN catchment_geojson gj ON ST_CONTAINS(gj.wkb_geometry::GEOMETRY, l.point)
```
- not that **wjb_geometry** becomes **geom** in later versions

### OS:

Ubuntu 23.10

### DuckDB Version:

0.8.1 and later versions

### DuckDB Client:

duckdb

### Full Name:

Nathaniel FInk

### Affiliation:

GapMaps Pty Ltd

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have not tested with any build

### Did you include all relevant data sets for reproducing the issue?

No - I cannot share the data sets because they are confidential

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have