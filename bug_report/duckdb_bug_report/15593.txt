ID: 15593
Title: Parallel `union_by_name` for `read_json`
Description:
This PR implements parallel `union_by_name` for `read_json`, similar to how it is implemented for CSV/Parquet. The code paths for CSV/Parquet are unified but do not support nested type unification, which is crucial for JSON. Hence, JSON follows a different code path and is not automatically parallelized.

I've put the schema detection in a `Task` and made each thread create one `JSONStructureNode` to be merged later (using existing code!). So this is mostly shuffling code around. The only annoying thing is that the `DateFormatMap` is shared over the threads, so I had to add a lock for now. In the future, I want to have this be thread-local and have one per column rather than a single global one, but this seems like the best option for now.

Speedup is similar to CSV/Parquet. I have a local directory of ~14k nested JSON files and the following query:
```sql
DESCRIBE FROM read_json('*.json', union_by_name=true);
```
Went down from ~2.7s to ~0.5s.