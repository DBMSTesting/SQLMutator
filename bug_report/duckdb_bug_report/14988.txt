ID: 14988
Title: INTERNAL Error: Comparison on NULL values
Description:
### What happens?

I am using multi `JOIN`s in one query together with `WHERE` conditioning on the most left table. When I `SELECT` from joined table, if I select all columns, it returns me the result normally, but if I select only a few columns, it raises `INTERNAL Error: Comparison on NULL values`.

I have a replicable case below, and understood in `LEFT JOIN` case, there will be some `NULL` value created but not sure if that's the cause.  But it's still weird that `SELECT *` works but selecting a few column raises.

v1.1.3 works fine, above error only on nightly build

### To Reproduce

```sql
CALL dbgen(sf = 1);

-- successful case
SELECT *
FROM (SELECT * FROM part LIMIT 1000) AS p
LEFT JOIN
(SELECT * FROM partsupp LIMIT 1000) AS ps
ON p.p_partkey=ps.ps_partkey
LEFT JOIN
(SELECT * FROM supplier LIMIT 1000) AS s
ON ps.ps_suppkey=s.s_suppkey
WHERE p.p_size=15;

-- error case
SELECT p.p_partkey, p.p_mfgr, p.p_type, p.p_size, ps.*, s.*
FROM (SELECT * FROM part LIMIT 1000) AS p
LEFT JOIN
(SELECT * FROM partsupp LIMIT 1000) AS ps
ON p.p_partkey=ps.ps_partkey
LEFT JOIN
(SELECT * FROM supplier LIMIT 1000) AS s
ON ps.ps_suppkey=s.s_suppkey
WHERE p.p_size=15;
```

### OS:

linux x86_64

### DuckDB Version:

47490b7f4fb806232077046821e20e9792a7c180 (latest commit)

### DuckDB Client:

Python

### Hardware:

_No response_

### Full Name:

Gia Che

### Affiliation:

Bloomberg

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a nightly build

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have