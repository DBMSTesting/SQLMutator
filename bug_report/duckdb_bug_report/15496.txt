ID: 15496
Title: `SELECT unnest((SELECT row(1)))` throws `Cannot copy BoundSubqueryExpression`
Description:
### What happens?

`SELECT unnest((SELECT row(1)))` throws `Cannot copy BoundSubqueryExpression` but should return a single row with a single column.

### To Reproduce

Fails:

```sql
SELECT unnest((SELECT row(1)))
```
```
Serialization Error: Cannot copy BoundSubqueryExpression
```

Works:

```sql
SELECT unnest(row(1))
```
```
┌──────────┐
│ element1 │
│  int32   │
├──────────┤
│        1 │
└──────────┘
```

Works:
```sql
SELECT unnest(x) FROM (SELECT (SELECT row(1)) AS x)
```
```
┌──────────┐
│ element1 │
│  int32   │
├──────────┤
│        1 │
└──────────┘
```

### OS:

Linux

### DuckDB Version:

1.1.4.dev3741

### DuckDB Client:

Python

### Hardware:

-

### Full Name:

Soeren Wolfers

### Affiliation:

G-Research

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a nightly build

### Did you include all relevant data sets for reproducing the issue?

Not applicable - the reproduction does not require a data set

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [x] Yes, I have