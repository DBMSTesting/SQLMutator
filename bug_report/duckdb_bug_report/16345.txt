ID: 16345
Title: Bug: duckdb v1.2.0 ubuntu24.0-lts llvm-19 libc++-19 Compilation error
Description:
### What happens?
```
sample code:

#include "duckdb.hpp"

using namespace duckdb;

int main() {
	DuckDB db(nullptr);

	Connection con(db);

	con.Query("CREATE TABLE integers(i INTEGER)");
	con.Query("INSERT INTO integers VALUES (3)");
	auto result = con.Query("SELECT * FROM integers");
	result->Print();
}
```
/usr/bin/clang++-19  -I/home/mt/usr/libbase-linux-x86_64_libcxx-dev/include -std=c++23 -stdlib=libc++ -O3 -DNDEBUG -std=gnu++23 -MD -MT CMakeFiles/xdb.dir/src/main.cpp.o -MF CMakeFiles/xdb.dir/src/main.cpp.o.d @CMakeFiles/xdb.dir/src/main.cpp.o.modmap -o CMakeFiles/xdb.dir/src/main.cpp.o -c /home/mt/code/cpp/ps/duckdb-test/src/main.cpp
In file included from /home/mt/code/cpp/ps/duckdb-test/src/main.cpp:1:
In file included from /usr/lib/llvm-19/bin/../include/c++/v1/iostream:42:
In file included from /usr/lib/llvm-19/bin/../include/c++/v1/ios:220:
In file included from /usr/lib/llvm-19/bin/../include/c++/v1/__locale:15:
In file included from /usr/lib/llvm-19/bin/../include/c++/v1/__memory/shared_ptr.h:32:
/usr/lib/llvm-19/bin/../include/c++/v1/__memory/unique_ptr.h:78:19: error: invalid application of 'sizeof' to an incomplete type 'duckdb::QueryNode'
   78 |     static_assert(sizeof(_Tp) >= 0, "cannot delete an incomplete type");
      |                   ^~~~~~~~~~~
/usr/lib/llvm-19/bin/../include/c++/v1/__memory/unique_ptr.h:292:7: note: in instantiation of member function 'std::default_delete<duckdb::QueryNode>::operator()' requested here
  292 |       __ptr_.second()(__tmp);
      |       ^
/usr/lib/llvm-19/bin/../include/c++/v1/__memory/unique_ptr.h:261:71: note: in instantiation of member function 'std::unique_ptr<duckdb::QueryNode>::reset' requested here
  261 |   _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_SINCE_CXX23 ~unique_ptr() { reset(); }
      |                                                                       ^
/home/mt/usr/libbase-linux-x86_64_libcxx-dev/include/duckdb/common/unique_ptr.hpp:13:7: note: in instantiation of member function 'std::unique_ptr<duckdb::QueryNode>::~unique_ptr' requested here
   13 | class unique_ptr : public std::unique_ptr<DATA_TYPE, DELETER> { // NOLINT: naming
      |       ^
/home/mt/usr/libbase-linux-x86_64_libcxx-dev/include/duckdb/parser/statement/select_statement.hpp:29:2: note: in implicit default constructor for 'duckdb::unique_ptr<duckdb::QueryNode>' first required here
   29 |         SelectStatement() : SQLStatement(StatementType::SELECT_STATEMENT) {
      |         ^
/home/mt/usr/libbase-linux-x86_64_libcxx-dev/include/duckdb/parser/tokens.hpp:50:7: note: forward declaration of 'duckdb::QueryNode'
   50 | class QueryNode;
      |       ^
1 error generated.
ninja: build stopped: subcommand failed.

### To Reproduce

os: ubuntu24.04-lts server
compiler:  llvm-19 clang++-19 ibc++-19

cxx flags
set(CMAKE_CXX_FLAGS "-std=c++23 -stdlib=libc++")

### OS:

ubuntu 24.04-lts amd64

### DuckDB Version:

v1.2.0

### DuckDB Client:

C++

### Hardware:

amd64 cpu

### Full Name:

mt

### Affiliation:

mt21625457@163.com

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have not tested with any build

### Did you include all relevant data sets for reproducing the issue?

No - Other reason (please specify in the issue body)

### Did you include all code required to reproduce the issue?

- [x] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [x] Yes, I have