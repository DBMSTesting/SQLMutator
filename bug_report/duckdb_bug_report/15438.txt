ID: 15438
Title: python method "duckdb.read_csv" throws an exception when reading multiple files with argument "union_by_name=True"
Description:
### What happens?

I have multiple csv files, each has the same columns, `duckdb.read_csv`  throws an exception with argument `union_by_name=True`

[data.zip](https://github.com/user-attachments/files/18221961/data.zip)


### To Reproduce

```python
# -*- coding: utf-8 -*-

import duckdb

print(duckdb.__version__)
print(len(duckdb.read_csv("data/sample*.csv", union_by_name=False))) # works fine
print(len(duckdb.read_csv("data/sample*.csv", union_by_name=True))) # error
```

output:
```
1.1.3
206
Traceback (most recent call last):
  File "D:\data\duckdb\batch_read.py", line 7, in <module>
    print(len(duckdb.read_csv("data/sample*.csv", union_by_name=True)))
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
duckdb.duckdb.BinderException: Binder Error: COLUMN_TYPES error: Columns with names: "value","maincode","trade_day","time","exchange_time","product","lxoneprice","ftrprice","c6","oi","c1","c2","c3","c4","c5","c7","c8" do not exist in the CSV File

Process finished with exit code 1
```

I found a workaround:

```
print(len(duckdb.sql(" select * from read_csv('data/sample*.csv', union_by_name=true); "))) # workaround
```

### OS:

windows 10 x64

### DuckDB Version:

v1.1.3

### DuckDB Client:

python

### Hardware:

_No response_

### Full Name:

cjn

### Affiliation:

HC QuantInvest

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a nightly build

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have