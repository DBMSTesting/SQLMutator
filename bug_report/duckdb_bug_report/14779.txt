ID: 14779
Title: Inconsistency in DECIMAL CAST 
Description:
### What happens?

**Double to Decimal cast** suffers from floating point inaccuracies [Similar to https://github.com/duckdb/duckdb/issues/3091]

**Decimal to Decimal cast** in case of downcast to a lower width does not round up [Similar to https://github.com/duckdb/duckdb/pull/12036] 

**Varchar to Decimal cast** results into incorrect values when varchar is a double depicted in scientific notation 

Looks like we have few corner cases to handle for above scenarios

### To Reproduce

**Double to Decimal cast**  
```
select cast(cast(cast ('199999999999999.999' as decimal(38,10)) as double) as decimal(38,9));  --INCONSISTENT 
```

Returns 199999999999999.983222784 
Expected [in Athena/Trino] 200000000000000.0

```
select cast(cast ('199999999999999.999' as decimal(38,10)) as double); 
```

Returns 200000000000000.0 
Expected [in Athena/Trino] 200000000000000.0 

```
select cast(cast(cast ('-2455555555.33' as decimal(38,10)) as double) as decimal(38,9)); --INCONSISTENT 
```

Returns -2455555555.329999872
Expected [in Athena/Trino]  -2455555555.330000000

```
select cast(cast(cast ('-245555555.33' as decimal(38,10)) as double) as decimal(38,9));
```

Returns -245555555.330000000
Expected [in Athena/Trino] -245555555.330000000

**Decimal to Decimal cast - Downcast Rounding**

```
select cast(cast ('1.9999999999' as decimal(38,10)) as decimal(30,9)); --INCONSISTENT 
```

Returns 1.999999999 
Expected [in Athena/Trino] 2.000000000 

```
select cast(cast ('1.9999999999' as decimal(38,10)) as decimal(38,9));
```

Returns 2.000000000  
Expected [in Athena/Trino] 2.000000000 

```
select cast(cast ('1.9999999999' as decimal(30,10)) as decimal(38,9));
```

Returns 2.000000000  
Expected [in Athena/Trino] 2.000000000 


**Varchar (scientific notation double) to Decimal cast**
```
select CAST('7e-15' as DECIMAL(38,10)) ;  ---INCORRECT, rounding off even though not expected 
```

Returns  0.0000000001
Expected [in Athena/Trino]   0.0000000000

When it's not scientific notation, result is as expected
```
select CAST('0.000000000000007' as DECIMAL(38,10)) ;  --CORRECT, consistent with trino / expected 
```

Returns  0.0000000000
Expected [in Athena/Trino]  0.0000000000

### OS:

AMD64, ARM64

### DuckDB Version:

1.1.0

### DuckDB Client:

JAVA

### Hardware:

_No response_

### Full Name:

Simran Batra

### Affiliation:

Arcesium Pvt. Ltd.

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have