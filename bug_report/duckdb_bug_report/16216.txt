ID: 16216
Title: This is a feature augmentation for Prefix Aliases in SQL #14436
Description:
### What happens?

# **Friendly SQL is not fashioned after ANSI standard (compliant) approach**
- I want to understand the DuckDb mindset for coding;  I am interested in the rational for this coding style.
- Is ANSI 89 the preferred way to join over ANSI 92 with ### _"ON"_ type safety
- Was the query suppose to be a Cartesian Cross product since the **_"where clause"_** was missing?


### **Prefix aliases.** 
- SQL Expression and table aliases can now be specified before the thing they are referring to (instead of using the well-known syntax of using **"AS"** ). 
- This can improve readability in some cases, for example:
```sql
SELECT 
    e1: some_long_and_winding_expression,
    e2: t2.a_column_name 
FROM
    t1: long_schema.some_long_table_name,
    t2: short_s.tbl;
```

#  This syntax would be more inline with ANSI compliance on the column projection.  
## The could be extended to the tables to be consistent with being close to ANSI compliance on the column projection
```sql
SELECT 
    e1= some_long_and_winding_expression,
    e2= t2.a_column_name 
FROM
    t1= long_schema.some_long_table_name,
    t2= short_s.tbl;
```
 
A respectful suggestion for an amazing product.

### To Reproduce

# It is the syntax implementation.  The _**"="**_ instead of _**":"**_ would be preferable in my mind,  as well as using ANSI 92 over ANSI 89 (Very Oracle)

### OS:

ANY OS

### DuckDB Version:

1.2

### DuckDB Client:

Any client

### Hardware:

_No response_

### Full Name:

Peter Heller

### Affiliation:

Queens College,CUNY

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have not tested with any build

### Did you include all relevant data sets for reproducing the issue?

No - Other reason (please specify in the issue body)

### Did you include all code required to reproduce the issue?

- [x] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [ ] Yes, I have