ID: 13738
Title: Python UDFs marked as side_effects = False are not having results cached/deduplicated when called from SELECT
Description:
### What happens?

When you call a UDF from a query's select statement and mark it as not having side_effects, the function only appears to be getting cached/deduplicated when the parameters are literals. When you try to pass in values from columns in the select statement, even if for n rows that value is the exact same value, the function is called and evaluated n times. This kills performance when you use it in a query/model that calls the function to transform a value for a result set and the result set has a finite of combinations. 

The where clause, on the other hand, does cache the result even when there are duplicate values in the table being queried. 

If would be great if DuckDB optimized the calls on the select side as well using whatever caching/deduplication mechanism is being used for calling UDFs in the where clause. 

### To Reproduce

### SAMPLE UDF

```python
import duckdb
from duckdb import DuckDBPyConnection
from dbt.adapters.duckdb.plugins import BasePlugin
from dbt.adapters.duckdb.utils import TargetConfig

def immutable_test(arg1: str) -> bool:
    print(arg1)
    return True

class Plugin(BasePlugin):
    def configure_connection(self, conn: DuckDBPyConnection):
        conn.create_function("immutable_test", immutable_test, [str], bool, side_effects = False)

    def store(self, target_config: TargetConfig):
        assert target_config.config.get("key") == "value"
```

### SAMPLE MODEL IN DBT where you can see the duplicate calls (UDF CALLED FROM SELECT)

```sql
SELECT
  immutable_test(a.name) AS udf_result
FROM duckdb_settings() as A
CROSS JOIN duckdb_settings() as B
```

### SAMPLE MODEL IN DBT where it only calls a unique number of times (UDF CALLED FROM THE WHERE CLAUSE)

```sql
SELECT
  immutable_test(a.name) AS udf_result
FROM duckdb_settings() as A
CROSS JOIN duckdb_settings() as B
```

### OS:

Ubuntu Linux x64

### DuckDB Version:

1.0.0

### DuckDB Client:

Python through DBT

### Full Name:

William Kaper

### Affiliation:

HubiFi Corporation

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have