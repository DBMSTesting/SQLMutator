ID: 14148
Title: Incorrect query result when filtering with slices
Description:
### What happens?

When filtering a column using a slice, and then casting that result into an integer, the slice is not applied.

### To Reproduce

```python
import duckdb

duckdb.sql(
    """
    select *
    from ( select unnest(['a0', 'a1', 'a2', 'xxx-0', 'xxx-1', 'xxx-2', 'xxx-3', 'xxxx', 'xxx0', 'xxx1', 'xxx2', 'xxx3']) as mycolname )
    cross join ( select unnest(range(10_000_000)) as someothercolname )
    """
).to_table("mytablename")

duckdb.sql(
    """
    select cast(mycolname3 as int) as mycolname4
    from (
        select mycolname2[2:] as mycolname3
        from (
            select mycolname as mycolname2
            from mytablename
            where mycolname[1:3] != 'xxx'
        )
    )
    where mycolname4 = 0
    """
).to_table("resulttable")
```
fails with
```python
ConversionException: Conversion Error: Could not convert string 'xx-0' to INT32
```
Expected result is not an error, and a table with one column "mycolname4" with zeros only.

The purpose of the cross join is to create a big table, as it seems to work fine on smaller tables. Running with one thread does not seem to fix it, however.

### OS:

Ubuntu22.04

### DuckDB Version:

1.1.1

### DuckDB Client:

Python 3.10.12

### Hardware:

_No response_

### Full Name:

Jakob Stigenberg

### Affiliation:

Qubos

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Not applicable - the reproduction does not require a data set

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have