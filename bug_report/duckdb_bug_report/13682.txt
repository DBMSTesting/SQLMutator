ID: 13682
Title: Bad list performance
Description:
### What happens?

Simply displaying a single row of a column of list type takes 6 seconds. 

### To Reproduce

```sql
CREATE OR REPLACE TABLE df AS (
    SELECT list(loading) as loadings FROM 
    (
        SELECT random() AS loading, b.range AS row FROM range(500_000) a, range(3000) b
    )
    GROUP BY row
);
```

takes 2 minutes.

Then

```sql
SELECT loadings FROM df LIMIT 1;
```

takes 6 seconds (and the same with `SELECT len(loadings)` or `SELECT loadings[1]`).

In comparison, 

```sql
CREATE OR REPLACE TABLE df2 AS (
    SELECT random() AS loading FROM range(500_000) a, range(3000) b
);
```

takes 40 seconds and then

```sql
SELECT loading FROM df2 LIMIT 3000
```

is instant (and so are aggregations over the first 3000 elements).

### OS:

Linux; Intel x64

### DuckDB Version:

1.0.0

### DuckDB Client:

Python

### Full Name:

Soeren Wolfers

### Affiliation:

G-Research

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Not applicable - the reproduction does not require a data set

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have