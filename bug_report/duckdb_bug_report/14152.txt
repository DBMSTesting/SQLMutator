ID: 14152
Title: Quoting struct members when shown in CLI to make copy/paste easier into where clause.
Description:
### What happens?

When working with a `struct("name" varchar, "value" varchar)[]` column, the current output in the CLI isn't in a format that can be easily copied and pasted directly into a `WHERE` clause for the same column.

For example:

```
┌─────────────────────────────────────────────────────────┐
│                       dimensions                        │
│        struct("name" varchar, "value" varchar)[]        │
├─────────────────────────────────────────────────────────┤
│ [{'name': ClusterName, 'value': beta-database-flights}] │
└─────────────────────────────────────────────────────────┘
```

If you copy and paste the value for `dimensions` into a `WHERE` clause, you'll need to manually escape the `name` and `value` fields, like this:

```
[{'name': 'ClusterName', 'value': 'beta-database-flights'}]
```

Would it be possible to modify the output so that string members are properly quoted by default? Alternatively, could this be provided as an option, perhaps via a pragma?


### To Reproduce

This query shows the behavior.

```sql
select [{'name': 'ClusterName', 'value': 'beta-database-flights'}]::struct(name varchar, value varchar)[];
```
```
┌───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐
│ CAST(main.list_value(main.struct_pack("name" := 'ClusterName', "value" := 'beta-database-flights')) AS STRUCT("name" VARCHAR, "value" VARCHAR)[]) │
│                                                     struct("name" varchar, "value" varchar)[]                                                     │
├───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤
│ [{'name': ClusterName, 'value': beta-database-flights}]                                                                                           │
└───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘
```

### OS:

Mac OS X

### DuckDB Version:

1.1.1

### DuckDB Client:

CLI

### Hardware:

_No response_

### Full Name:

Rusty Conover

### Affiliation:

self

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

No - Other reason (please specify in the issue body)

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have