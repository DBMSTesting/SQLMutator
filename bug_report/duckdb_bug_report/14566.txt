ID: 14566
Title: Apparently spurious error: 'Table function "query" does not support lateral join column parameters'
Description:
### What happens?

The following function successfully casts its list argument to the appropriate array type,
assuming the given list, lst, is nonempty:

```sql
create or replace function dynamic_cast( lst ) as (
  from query('select ' || lst::varchar || '::' || typeof(lst[1]) || '[' || length(lst)::varchar || ']')
);
```

E.g.

```sql
select typeof(dynamic_cast( [1] )) #=> INTEGER[1]
```

However, when the list argument has a reference to a formal parameter,
things fall apart:

```
D create or replace function f(n) as (dynamic_cast( [n] ));
Binder Error: Table function "query" does not support lateral join column parameters - cannot use column "0_macro_parametersf.n" in this context.
```

There does not, however, seem to be a lateral join in sight.

Is this a bug?  Is there a workaround?

### To Reproduce

```sql
create or replace function dynamic_cast( lst ) as (
  from query('select ' || lst::varchar || '::' || typeof(lst[1]) || '[' || length(lst)::varchar || ']')
);

create or replace function f(n) as (dynamic_cast( [n] ));
```

### OS:

MacOS

### DuckDB Version:

v1.1.3-dev38 

### DuckDB Client:

CLI

### Hardware:

_No response_

### Full Name:

Peter Koppstein

### Affiliation:

Princeton University

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a source build

### Did you include all relevant data sets for reproducing the issue?

Not applicable - the reproduction does not require a data set

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have