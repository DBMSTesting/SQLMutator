ID: 16385
Title: Read and Write Complex Json from Arrow Types
Description:
This PR extends the Arrow type metadata mechanism to handle complex JSON types. It also ensures that deserialization does not fail when encountering non-JSON strings.

@paleolimbot, I have a couple of questions about this topic:

Should we fail on poorly formatted JSON? In the issue you opened, you mentioned that there is no guarantee that the metadata will be JSON, so we shouldn’t fail if it’s just a string. However, what should the expected behavior be for malformed JSON?
Should I also extend the current extension mechanism to support reading/writing custom metadata? Currently, we only really care about vendor_name and type_name. However, I can imagine that other (potentially nested) information might be important for custom geo types. I could extend this with a callback, though I’m not sure how much of a stretch it would be to include this in `v1.2.1`. I would have to check with @Mytherin.