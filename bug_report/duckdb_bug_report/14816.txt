ID: 14816
Title: Python UDF cannot have LIST as returntype
Description:
### What happens?

In the [blog](https://duckdb.org/2023/07/07/python-udf.html) last year it is mentioned that table producing UDFs are on the roadmap. I think even the ability of producing a LIST would already help significantly. Since LIST _is_ an existing DuckDB Type that shouldn't be too much to ask.

### To Reproduce

Can this be worked around? Sure, and one can even make a table out of it. Opening the issue for sake of documenting the workaround. The UDF producing it encodes rows via '\n' and column via '\t'. 

```sql
INSERT INTO embedded
SELECT cast(z[1] AS text),
       cast(z[2] AS text),
       cast(z[3] AS text),
       cast(z[4] AS text),
       cast(z[5] AS text),
       cast(z[6] AS text),
       cast(z[7] AS integer),
       cast(z[8] AS text)
FROM   (
              SELECT split(y, '\t') AS z
              FROM   (
                            SELECT unnest(x) AS y
                            FROM   (
                                          SELECT split(o, '\n') AS x
                                          FROM   (
                                                        SELECT embedding(object, '{objectname}') AS o
                                                        FROM   {objectname})
                                          WHERE  o <> '')));
```

### OS:

Linux

### DuckDB Version:

1.0.1

### DuckDB Client:

Python

### Hardware:

Linux

### Full Name:

Stefan de Konink

### Affiliation:

Stichting OpenGeo

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a nightly build

### Did you include all relevant data sets for reproducing the issue?

Not applicable - the reproduction does not require a data set

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have