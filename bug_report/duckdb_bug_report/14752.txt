ID: 14752
Title: Enhance DELETE Performance by Passing Requested `RETURNING` Columns to PhysicalOperator Sink.
Description:
### What happens?

When implementing a `PhysicalOperator` for the `DELETE` command, I noticed that it’s unclear which specific columns the user wants to have returned. The `DataChunk` provided includes all columns from the table in the catalog, but it isn’t obvious if the user intends to return every one of those columns.

If retrieving values for all columns is resource-intensive, it would be ideal to avoid this effort for columns that aren’t requested in the query.

Could you consider adding an interface or method that specifies the columns the user has requested in their query? Ideally, these could be passed to the `GetGlobalSinkState` call. For example, in the query below:

```sql
CREATE TABLE employees (name TEXT, age INT);
DELETE FROM employees RETURNING name;
```

The `DELETE` `PhysicalOperator` could skip returning the `age` column, optimizing performance.

### To Reproduce

Reproduction of code above:

```sql
CREATE TABLE employees (name TEXT, age INT);
DELETE FROM employees RETURNING name;
```


### OS:

Mac OS X

### DuckDB Version:

1.1.4

### DuckDB Client:

CLI

### Hardware:

_No response_

### Full Name:

Rusty Conover

### Affiliation:

self

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a source build

### Did you include all relevant data sets for reproducing the issue?

Not applicable - the reproduction does not require a data set

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have