ID: 13546
Title: Numeric casts: forbid NumericCasts for float/double, add Lossy and Exact equivalent to make syntax explicit
Description:
After this PR there are 4 kind of checked casts:
1. TO NumericCasts(FROM val)
   * either TO and FROM are the same type, or both are integral (or enum)
   * checks on ranges
2. TO UnsafeNumericCasts(FROM val)
   * either TO and FROM are the same type, or both are integral (or enum)
   * checks on ranges, skipped if not in DEBUG mode
3. TO ExactNumericCasts(FROM val)
   * FROM is a floating point number
   * checks on invertibility (that means basically val needs to be representable in the TO type exactly), skipped if not in DEBUG mode
4. TO LossyNumericCasts(FROM val)
   * FROM is a floating point number
   * currently: no checks
   * future: checks similar to NumericCasts, that ranges are compatible (but approximation is OK) to be done in DEBUG

This has started in a weaker version since float/double casts are basically unchecked, but the checks added in https://github.com/duckdb/duckdb/pull/13275 (by me) where way too strict to make sense.

Also some cleanup, in which IsIntegral type trait is moved to be part of the preexisting NumericLimits infrastructure, that is also used more widely (also for IsSigned for example, and expanded to handle class enum).