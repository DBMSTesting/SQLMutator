ID: 14413
Title: INSERT returns number of rows creates with duckdb_value_string
Description:
### What happens?

I'm using the C API to capture the output of one or more SQL statements.

I've noticed that with the INSERT statement I seem to get the number of rows created, which could be handy, but in this case gets in the way, and I'd rather it not return any result to duckdb_value_string. That would be consistent with what I get with the `duckdb` command.

### To Reproduce

Here's some slightly meta code fragments at the moment.

```
#include <duckdb.h>
#include <iostream>
#include <stdlib.h>

int main()
{
   const char statementsStr[] = "CREATE TABLE IF NOT EXISTS scratchTable (name TEXT);\nINSERT INTO tableName (name) VALUES ('Fred');";
   const char filePath[] = "/tmp/duck.db";
   duckdb_result queryResult;
   duckdb_extracted_statements	statementsExtracted;
   duckdb_prepared_statement	statement;

   duckdb_database dbHandle;
   duckdb_open(filePath, &dbHandle);

   duckdb_connection connection;			
   duckdb_connect(dbHandle, &connection);

   idx_t numStatements = duckdb_extract_statements (connection, statementsStr, &statementsExtracted);

   for (idx_t statementNum=0; statementNum < numStatements; statementNum++) {
      duckdb_prepare_extracted_statement (connection, statementsExtracted, statementNum, &statement);
      duckdb_execute_prepared (statement, &queryResult);

      idx_t columnCount = duckdb_column_count (&queryResult);
      idx_t rowCount = duckdb_row_count (&queryResult);

      for (idx_t row=0; row < rowCount; row++) {
         for (idx_t column=0; column < columnCount; column++) {
            auto columnStr = duckdb_value_string(&queryResult, column, row);
            std::cout << columnStr.data << std::endl;
            duckdb_free (columnStr.data);
         }
      }
   }

   duckdb_disconnect(&connection);
   duckdb_close (&dbHandle);

   return 0;
}

```

For the duckdb command I'm using:

```
duckdb -c "INSERT INTO tableName (name) VALUES ('Fred');" /tmp/duck.db
```

### OS:

macOS 13.7 intel

### DuckDB Version:

v1.1.1-dev238

### DuckDB Client:

C

### Hardware:

_No response_

### Full Name:

Simon Brown

### Affiliation:

Beezwax Datatools

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have not tested with any build

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [ ] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have