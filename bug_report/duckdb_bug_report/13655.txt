ID: 13655
Title: For even number of inputs, MEDIAN() does wrong floor/mean behavior for various dtypes
Description:
### What happens?

I was pointed to file an issue from [this discord thread](https://discord.com/channels/909674491309850675/921073327009853451/1278974004916518957).

The [docs](https://duckdb.org/docs/sql/functions/aggregates.html#medianx) say that qualitative (which I interpret as varchar values? perhaps could we say literally this? "qualitative" seems like an unneeded indirection?) values are floored, and quantitative (non-varchar?) values are interpolated with the mean.

It appears to the me [the tests](https://github.com/duckdb/duckdb/blob/7574b716ebdaa60d18b7bb2ca4d6cc8963e45d2b/test/sql/aggregate/aggregates/test_median.test) show a wide range of behavior:
- varchars are floored
- integral types are floored, except for tinyints which are interpolated
- floating types are floored
- decimals are interpolated

My expected behavior would be:

- varchars are floored
- everything else is interpolated, returning the same dtype that the mean gives.

#13656 is a PR that modifies the tests to the above expected behavior. I figured we can start there so we have something concrete to talk about.

https://github.com/duckdb/duckdb/pull/12630 is a PR from jun 20th that is related to this, so it seems odd to me that this weird behavior was overlooked there. This makes me think perhaps this behavior is intentional.

I propose
1. Changing our tests cases to what I expect
2. Fixing those failing test cases
3. Optionally, rephrasing the docstring as `The middle value of the set. For even value counts, numeric values are averaged and varchar values return the lower value.`, or at least being a little more lengthy as to what quantiative/qualitative mean.

### To Reproduce

See the above test cases.

### OS:

https://shell.duckdb.org/

### DuckDB Version:

1.0.0

### DuckDB Client:

https://shell.duckdb.org/

### Full Name:

Nick Crews

### Affiliation:

Ship Creek Group

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have