ID: 12938
Title: Rework table filters, and for each row group only execute table filters if they can actually filter out any rows
Description:

This PR cleans up the table filters as they are used in the row group scan by moving them to a separate `ScanFilterInfo` struct that holds all necessary information.

In addition to the clean-up, we modify the `CheckZonemap` function to instead return a `FilterPropagateResult`. This no longer only returns whether or not a row group can be skipped - but returns whether or not the filter is always true or always false for a given partition. When a filter is always false we can skip the entire row group (as before). When the filter is always true, we can skip the execution of the filter for that row group. This is handled using a new method `SetFilterAlwaysTrue`.

Any filters that are always true do not need to be executed when processing the row group (as they return true for every row anyway). This speeds up execution as we are skipping unnecessary work. In particular for selective filters as could be generated by https://github.com/duckdb/duckdb/pull/12908.


### Benchmark
Below are the timings for running the following query over TPC-H SF15. The filters on `l_orderkey` are almost always true (`min: 1, max: 150000000`) - and `lineitem` is ~sorted on `l_orderkey`.

```sql
select count(*) from lineitem where l_orderkey > 1 and l_orderkey < 150000000 and l_shipdate >= date '1994-01-01';
```

|  v1.0  |  New   |
|--------|--------|
| 0.123s | 0.057s |
