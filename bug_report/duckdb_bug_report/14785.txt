ID: 14785
Title: Correctly deal with continued operation after reading a truncated WAL, and clean up WAL handling logic in storage manager
Description:
This PR fixes an issue where doing a replay of a truncated WAL, and then continuing operation, would result in writing data past the (truncated) WAL. This would then result in that data being discarded in subsequent start-ups as the system would find the previously ignored truncated data and assume all data after that point was garbage. This PR addresses this by correctly truncating the WAL to the last successfully read entry if we resume operation prior to writing new data to the WAL in this scenario.

This PR also cleans up the WAL accessors (superseding https://github.com/duckdb/duckdb/pull/14328). The `StorageManager` now always instantiates a `WriteAheadLog` object. The `WriteAheadLog` object internally keeps track of whether or not a WAL object is exists and what the size is, without unnecessarily creating the WAL file in situations where this is not required.