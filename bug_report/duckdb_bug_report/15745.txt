ID: 15745
Title: Errors triggered by between operators and column references
Description:
### What happens?

I encountered inconsistency while executing the following SQL statement. I believe that statement 1 and statement 2 should return the same result,
The first query does not have a where condition, and the second query returns union all results for true, false, and unknown under the same condition. According to the three value logic, these two results should be the same, but in fact, they return different amounts of data.
According to my observation, the data with c1=1970-01-24 is not returned by the second query. It should be returned by SELECT * FROM t0, t1 WHERE (t0.c1 BETWEEN DATE '1969-12-13' AND DATE '1970-01-24')  in the second query and included in the result of union all.


### To Reproduce

```sql
CREATE TABLE t0(c0 FLOAT4 DEFAULT(-2099375280), c1 DATE DEFAULT(TIMESTAMP '1969-12-21 04:33:55'));
CREATE TABLE t1(c0 DOUBLE, PRIMARY KEY(c0));
INSERT INTO t1(c0) VALUES (-1594596923);
INSERT INTO t0(c0) VALUES (0.22539020597356485), (false);
CREATE INDEX i4 ON t1(c0 );
UPDATE t1 SET c0=794336359;
INSERT INTO t1(c0) VALUES (false);
INSERT INTO t1(c0) VALUES (0.6612848603283843), (0.9912459533380317);
INSERT INTO t1(c0) VALUES (1075487427);
CREATE VIEW v0(c0) AS SELECT -880627954 FROM t1, t0 OFFSET 1930423036;
INSERT INTO t0(c1) VALUES (TIMESTAMP '1970-01-24 10:01:35'), (TIMESTAMP '1969-12-13 10:00:50');
VACUUM;
INSERT INTO t1(c0) VALUES (9223372036854775807);
INSERT INTO t1(c0) VALUES (true);
DELETE FROM t1;
INSERT INTO t0(c0) VALUES (DEFAULT);
INSERT INTO t0(c1) VALUES (DEFAULT);
CREATE INDEX i0 ON t0(c1 );
ANALYZE;
INSERT INTO t0(c0) VALUES (true);
INSERT INTO t1(c0) VALUES (1377137152);
INSERT INTO t0(c1) VALUES (DATE '1969-12-20');
INSERT INTO t0(c0) VALUES (570366129);

--First query
SELECT * FROM t0, t1;
--whose cardinality is: 9

--Second query
SELECT * FROM t0, t1 WHERE (t0.c1 BETWEEN DATE '1969-12-13' AND DATE '1970-01-24') UNION ALL SELECT * FROM t0, t1 WHERE (NOT (t0.c1 BETWEEN DATE '1969-12-13' AND DATE '1970-01-24')) UNION ALL SELECT * FROM t0, t1 WHERE (((t0.c1 BETWEEN DATE '1969-12-13' AND DATE '1970-01-24')) IS NULL);
--whose cardinality is: 8
```

### OS:

linux

### DuckDB Version:

v1.1.0

### DuckDB Client:

python

### Hardware:

_No response_

### Full Name:

Chenglin

### Affiliation:

personal

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a source build

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [x] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [x] Yes, I have