ID: 15389
Title: Better partition selection for external hash joins
Description:
Our external hash join does not try to be smart about selecting partitions to insert into the hash table. It adds partition 0, then 1, etc., until it runs out of memory. If partition sizes are very skewed, this could cause DuckDB to insert just one large partition into the hash table. During the initial probe, we have to materialize all data that we cannot immediately probe, which is costly.

This PR improves partition selection by building on as many small partitions as possible. This should reduce probe-side materialization cost for _very_ skewed joins. It does so by using a bitmap instead of start/end bounds. This is much more flexible, and allows for further improvements in the future.

I ran `./build/relassert/test/unittest "*"` and found no issues related to the external hash join (hopefully this saves us finding issues in CI later).