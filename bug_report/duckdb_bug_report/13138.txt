ID: 13138
Title: python UDF: NULLs intercepted for scalars but not columnar args
Description:
### What happens?

According to https://duckdb.org/docs/api/python/function.html#null-handling, if you pass a NULL into a python UDF, duckdb will short-circuit and immediately resolve to NULL, and won't ever call the python with None.

This short-circuiting appears to happen when the input is a scalar, but doesn't when it is a column.

PS I think this short-circuiting (with a configurable override) is fantastic UX

### To Reproduce

```python
import duckdb
from duckdb.typing import INTEGER


def add_one(x):
    return x + 1


duckdb.create_function("add_one", add_one, [INTEGER], INTEGER, type="native")
duckdb.sql("SELECT add_one(1), add_one(NULL)").fetchall()
# [(2, None)]
duckdb.sql("SELECT add_one(x) FROM (SELECT UNNEST([1, NULL]) as x)").fetchall()
# Invalid Input Error: Python exception occurred while executing the UDF: TypeError: unsupported operand type(s) for +: 'NoneType' and 'int'
```

### OS:

MacM1, MacOS 14.5

### DuckDB Version:

1.0.0

### DuckDB Client:

python

### Full Name:

Nick Crews

### Affiliation:

Ship Creek Group

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have