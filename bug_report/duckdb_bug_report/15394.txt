ID: 15394
Title: Difference between SELECT * FROM 'http://some/url/file.json' vs SELECT * FROM read_json('http://some/url/file.json')
Description:
### What happens?

A SELECT directly on a JSON http url behaves inconsistently as compared to the equivalent SELECT on top of read_json with the same url as argument.

### To Reproduce

```sql
select *
from (
  describe 
  select  *
  from    'https://api.census.gov/data/2000/dec/sf1/variables.json'
);
```

results in this (expected) result:

```
┌─────────────┬────────────────────────┬─────────┬─────────┬─────────┬─────────┐
│ column_name │      column_type       │  null   │   key   │ default │  extra  │
│   varchar   │        varchar         │ varchar │ varchar │ varchar │ varchar │
├─────────────┼────────────────────────┼─────────┼─────────┼─────────┼─────────┤
│ variables   │ STRUCT("for" STRUCT(…  │ YES     │ 𝙣𝙪𝙡𝙡    │ 𝙣𝙪𝙡𝙡    │ 𝙣𝙪𝙡𝙡    │
└─────────────┴────────────────────────┴─────────┴─────────┴─────────┴─────────┘
```

This result suggests we should be able to do:

```sql
select  variables.*
from   'https://api.census.gov/data/2000/dec/sf1/variables.json';
```

The expected result would be the unpacking of the variables struct to individual columns. But, the result is still the packed `variables` struct (same result as plain `SELECT *`):
```
┌──────────────────────────────────────────────────────────────────────────────┐
│                                  variables                                   │
│ struct("for" struct("label" varchar, concept varchar, predicatetype varcha…  │
├──────────────────────────────────────────────────────────────────────────────┤
│ {'for': {'label': Census API FIPS 'for' clause, 'concept': Census API Geog…  │
└──────────────────────────────────────────────────────────────────────────────┘
```
Interestingly, if I download the json file and store it on disk, and rewrite the queries to use the file from disk, the result is as expected:
```
select  variables.*
from   'C:\roland\projects\QuaQuery\files\api-census-gov-data-2000-dec-sf1-variables.json'
```
```
┌──────────────────────┬──────────────────────┬───┬──────────────────────┐
│         for          │          in          │ … │      PCT012H185      │
│ struct("label" var…  │ struct("label" var…  │   │ struct("label" var…  │
├──────────────────────┼──────────────────────┼───┼──────────────────────┤
│ {'label': Census A…  │ {'label': Census A…  │ … │ {'label': Total!!F…  │
├──────────────────────┴──────────────────────┴───┴──────────────────────┤
│ 1 rows                                          8144 columns (3 shown) │
└────────────────────────────────────────────────────────────────────────┘
```
When using an explicit `read_json()` call while passing the url, the result is also as expected:
```
select  variables.*
from   read_json('https://api.census.gov/data/2000/dec/sf1/variables.json')
```
does return the expected result:
```
┌──────────────────────┬──────────────────────┬───┬──────────────────────┐
│         for          │          in          │ … │      PCT012H185      │
│ struct("label" var…  │ struct("label" var…  │   │ struct("label" var…  │
├──────────────────────┼──────────────────────┼───┼──────────────────────┤
│ {'label': Census A…  │ {'label': Census A…  │ … │ {'label': Total!!F…  │
├──────────────────────┴──────────────────────┴───┴──────────────────────┤
│ 1 rows                                          8144 columns (3 shown) │
└────────────────────────────────────────────────────────────────────────┘
```


### OS:

windows 11 enterprise

### DuckDB Version:

1.1.3 GA, 1.1.4 nightly

### DuckDB Client:

CLI

### Hardware:

_No response_

### Full Name:

Roland Bouman

### Affiliation:

EPAM Systems BV Netherlands

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a nightly build

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have