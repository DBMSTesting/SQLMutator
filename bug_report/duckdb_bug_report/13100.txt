ID: 13100
Title: Difference between sklearn R^2 and duckdb R^2
Description:
### What happens?

When calculating R^2 using duckdb I get a (significantly) different result than when using the sklearn implementation. For the example below:

```
R^2 between the two distributions scikit: 0.7393
R^2 between the two distributions duckdb: 0.7874
```

### To Reproduce

```python
import numpy as np
from sklearn.metrics import r2_score
import duckdb

conn = duckdb.connect()

np.random.seed(42) 

mean, std = 0, 1
dist1 = np.random.normal(mean, std, 1000)

noise = np.random.normal(0, 0.5, 1000)
dist2 = dist1 + noise

r2_sklearn = r2_score(dist1, dist2)

df = pd.DataFrame({"dist1": dist1, "dist2": dist2})

r2_duckdb = conn.query("""SELECT regr_r2(dist2, dist1) as r2 FROM df""").to_df()['r2'][0]

print(f"\nR^2 between the two distributions scikit: {r2_sklearn:.4f}")
print(f"\nR^2 between the two distributions duckdb: {r2_duckdb:.4f}")
```

### OS:

darwin

### DuckDB Version:

1.0.0

### DuckDB Client:

Python

### Full Name:

Alex Cabrera

### Affiliation:

CMU

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have not tested with any build

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have