ID: 14854
Title: Dynamically loadable parquet/httpfs extensions do not load correctly (symbols not found)
Description:
### What happens?

The documents report that the Python module does not fare well with HTTPFS linked in,
so I set out to build the HTTPFS extension for dynamic loading.

However, I run into a problem with the extensions I build, getting undefined symbols.

### To Reproduce

Configuration setting up vcpkg and doing `make extension_configuration`.

Correctly reports `Extensions built but not linked`.

Tried with main, feature and v1.1.3, for HTTPFS and Parquet.
Tried with both gcc and clang.

The machines I tried this on all run FC41.

When I start the CLI using the binary that was created, `duckdb -unsigned`, and proceed like this:

```
install 'build/release/extension/parquet/parquet.duckdb_extension';
load parquet;
```

the CLI throws an error:

```
IO Error: Extension "/home/arjen/.duckdb/extensions/v1.1.3/linux_amd64/parquet.duckdb_extension" could not be loaded: /home/arjen/.duckdb/extensions/v1.1.3/linux_amd64/parquet.duckdb_extension: undefined symbol: _ZTIN6duckdb28SimpleNamedParameterFunctionE
```

Similar error when trying this with HTTPFS only:

```
undefined symbol: _ZN6duckdb10FileSystem4TrimERNS_10FileHandleEmm
```

I have tried to check with `nm` and `c++filt` to see what is the problem, but did not have success;
however, my C++ programming experience is limited, maybe it is something easy after all.

I was surprised that it does not work for any of the recent versions, main / feature / v1.1.3,
but then again, maybe not many people tried to build these libraries as dynamic ones.

Perhaps I was misled by the PythonPKG docs that HTTPFS statically linked in would be a problem?


### OS:

x86_64 (FC41)

### DuckDB Version:

main, feature and v1.1.3

### DuckDB Client:

CLI

### Hardware:

_No response_

### Full Name:

Arjen P. de Vries

### Affiliation:

Radboud University

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a source build

### Did you include all relevant data sets for reproducing the issue?

Not applicable - the reproduction does not require a data set

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have