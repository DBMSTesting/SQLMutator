ID: 13052
Title: Make client reuse threadsafe
Description:
Fixes https://github.com/duckdb/duckdb/issues/12719  by making HTTPlib client re-use threadsafe.
The problem was that filehandles are shared between threads when attaching DuckDB databases over S3. Now clients are reused by storing them in a pool of clients in each filehandle that is protected with a lock.

What this means is that now this happens
- Thread A makes a request using a HTTPClient which leaves the connection open
- Thread A stores the httpclient with the still open connection in the filehandle when its request is done
- Thread B now wants to make a request, it fetches the HTTPClient that Thread A stored for reuse
- Thread B can now make a requests on the still open connection initiated by Thread A.

Some notable facts:
- Clients are refreshed on HTTP retries
- There is no global limit on the amount of connections that can be open: We can still run into OS connection limits if calling code opens a lot of filehandles and/or uses a lot of threads to read. This can be solved by disabling connection keepalive using the `http_keep_alive` option
