ID: 15159
Title: Refactor signing linux extensions
Description:
There has been quite some instability connected to the removal of the ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION  that required some changes to the way Linux extensions for DuckDB (`linux_arm64`, `linux_amd64` and `linux_amd64_gcc4`) are built, that impacted the deploy step of extensions.

I ended up with a minor rework that should clean up the situation a bit by adding a reusable workflow called `_sign_deploy_extensons.yml` that given a folder with some extension inside will take care of signing and uploading them (via the script we already have used for month in `script/extensions-upload-all.sh`).

PR footprint aims to be as low as possible here, there are some additional improvements that can be done on top of this, such as avoiding the explcit passing of platform and version, handling release candidates automatically and adding more testing and checks of uploaded extensions, but those are NOT covered here but will be possible by wrapping the script in a reusable workflow.

This workflow is currently used only in Python.yml AND LinuxRelease.yml, where the deploy step has been already failing, so there should be no degradation from this PR.