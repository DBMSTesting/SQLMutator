ID: 14635
Title: [CSV] Defining columns and rejects table errors on column value includes a hastag
Description:
### What happens?

When reading a CSV file, settings a rejects table and defining the columns; when a column value includes a hashtag it shows an error instead of reading it correctly. 

This worked in v1.1.1.


### To Reproduce

```sh
echo 'header1,header2,header3\na,#b,c' > error.csv
```

```sh
v1.1.3-dev123 b653a8c2b7
Enter ".help" for usage hints.
Connected to a transient in-memory database.
Use ".open FILENAME" to reopen on a persistent database.
```
```sql
FROM read_csv('error.csv', rejects_table='rejects_table', columns = {'header1': 'VARCHAR', 'header2': 'VARCHAR', 'header3': 'VARCHAR'});
```
```
┌─────────┬─────────┬─────────┐
│ header1 │ header2 │ header3 │
│ varchar │ varchar │ varchar │
├─────────┴─────────┴─────────┤
│           0 rows            │
└─────────────────────────────┘
```
```sql
SELECT * FROM rejects_table;
```
```sh
┌─────────┬─────────┬────────┬────────────────────┬───────────────┬────────────┬─────────────┬─────────────────────────────────────────────────────────────────────────┬──────────┬────────────────────────────────────────┐
│ scan_id │ file_id │  line  │ line_byte_position │ byte_position │ column_idx │ column_name │                               error_type                                │ csv_line │             error_message              │
│ uint64  │ uint64  │ uint64 │       uint64       │    uint64     │   uint64   │   varchar   │ enum('cast', 'missing columns', 'too many columns', 'unquoted value',…  │ varchar  │                varchar                 │
├─────────┼─────────┼────────┼────────────────────┼───────────────┼────────────┼─────────────┼─────────────────────────────────────────────────────────────────────────┼──────────┼────────────────────────────────────────┤
│       5 │       0 │      2 │                 25 │            27 │          2 │ header3     │ MISSING COLUMNS                                                         │ a,#b,c   │ Expected Number of Columns: 3 Found: 2 │
└─────────┴─────────┴────────┴────────────────────┴───────────────┴────────────┴─────────────┴─────────────────────────────────────────────────────────────────────────┴──────────┴────────────────────────────────────────┘
```
```sh
v1.1.2 f680b7d08f
Enter ".help" for usage hints.
Connected to a transient in-memory database.
Use ".open FILENAME" to reopen on a persistent database.
```
```sql
FROM read_csv('error.csv', rejects_table='rejects_table', columns = {'header1': 'VARCHAR', 'header2': 'VARCHAR', 'header3': 'VARCHAR'});
```
```sh
┌─────────┬─────────┬─────────┐
│ header1 │ header2 │ header3 │
│ varchar │ varchar │ varchar │
├─────────┴─────────┴─────────┤
│           0 rows            │
└─────────────────────────────┘
```
```sql
SELECT * FROM rejects_table;
```
```sh
┌─────────┬─────────┬────────┬────────────────────┬───────────────┬────────────┬─────────────┬─────────────────────────────────────────────────────────────────────┬──────────┬────────────────────────────────────────┐
│ scan_id │ file_id │  line  │ line_byte_position │ byte_position │ column_idx │ column_name │                             error_type                              │ csv_line │             error_message              │
│ uint64  │ uint64  │ uint64 │       uint64       │    uint64     │   uint64   │   varchar   │ enum('cast', 'missing columns', 'too many columns', 'unquoted val…  │ varchar  │                varchar                 │
├─────────┼─────────┼────────┼────────────────────┼───────────────┼────────────┼─────────────┼─────────────────────────────────────────────────────────────────────┼──────────┼────────────────────────────────────────┤
│       5 │       0 │      2 │                 25 │            27 │          2 │ header3     │ MISSING COLUMNS                                                     │ a,#b,c   │ Expected Number of Columns: 3 Found: 2 │
└─────────┴─────────┴────────┴────────────────────┴───────────────┴────────────┴─────────────┴─────────────────────────────────────────────────────────────────────┴──────────┴────────────────────────────────────────┘
```
```sh
v1.1.1 af39bd0dcf
Enter ".help" for usage hints.
Connected to a transient in-memory database.
Use ".open FILENAME" to reopen on a persistent database.
```
```sql
FROM read_csv('error.csv', rejects_table='rejects_table', columns = {'header1': 'VARCHAR', 'header2': 'VARCHAR', 'header3': 'VARCHAR'});
```
```sh
┌─────────┬─────────┬─────────┐
│ header1 │ header2 │ header3 │
│ varchar │ varchar │ varchar │
├─────────┼─────────┼─────────┤
│ a       │ #b      │ c       │
└─────────┴─────────┴─────────┘
```

### OS:

x86_64

### DuckDB Version:

1.1.2

### DuckDB Client:

Python

### Hardware:

_No response_

### Full Name:

Frank Verschuren

### Affiliation:

1 Giant Leap Solutions

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a nightly build

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have