ID: 12734
Title: [Python] Output a regular key -> value dict for hashable keys
Description:
This PR makes it so that for MAPs like `MAP {'hello': 42, 'world': 21}` the output to Python is changed from:
```py
{'key': ['hello', 'world'], 'value': [42, 21]}
```

To:
```py
{'hello': 42, 'world': 21}
```

The previous format is still used when the key of the MAP does not transform into a Python object that is hashable, such as `list` or `dict`.

### Pandas DataFrame Creation

This change also applies to DataFrames created from `.df()`.

### Other changes

At first I tried to use `test_vector_types` to generate MAP values, providing only the key type.
That led me to realize that MAP is not very well supported in `test_vector_types` and also further upstream in the `Value` API, some changes have been made to fix this, but in the end I decided to not use `test_vector_types` at all, so there's no code included anymore to test these changes.

### Remaining issues

We currently lose the original type of the key when scanning `dict`s that have this shape, because they are first assumed to convert to a struct, so the keys of the created map will always be a `VARCHAR` currently.

This is an issue in the PandasAnalyzer.
This format lines up with STRUCT, so that's what it is assumed to be. Only when another row is scanned and the STRUCT schema doesn't match, the type is converted to a MAP instead