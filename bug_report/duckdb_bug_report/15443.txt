ID: 15443
Title: DuckDB Trigger Assertion Failure: result.data[storage_idx].GetType() == chunk.data[mapped_index].GetType()
Description:
### What happens?

The latest version of the DuckDB (latest main: v1.1.4-dev3741 ab8c909857) triggers Internal Error when running the following SQL statement: 

```sql
CREATE TABLE v00 (c01 INT, c02 STRING);
INSERT INTO v00 BY POSITION ( c02 ) OVERRIDING USER VALUE FROM LATERAL ( SELECT 'simple_string' ) AS ta507400 GROUP BY ALL WINDOW EVENT AS ( GROUPS BETWEEN 'abc' IS NOT UNKNOWN IN CASE WHEN 'abc' THEN 0 ELSE 'abc' END FOLLOWING AND UNBOUNDED FOLLOWING ) ORDER BY ALL RETURNING 'anything';
```

The code is working fine from the latest release: v1.1.3 19864453f7. Maybe just a faulty assertion? 

Here is the stack from ab8c909857:

```
Assertion triggered in file "/home/duckdb/duckdb/src/execution/operator/persistent/physical_insert.cpp" on line 150: result.data[storage_idx].GetType() == chunk.data[mapped_index].GetType()

#0  duckdb::InternalException::InternalException (this=0x60d000018ba0, Python Exception <class 'gdb.error'> There is no member named _M_dataplus.:
msg=) at /home/duckdb/duckdb/src/common/exception.cpp:320
#1  0x00000000020c1089 in duckdb::InternalException::InternalException<char const*, int, char const*> (this=0x60d000018ba0, msg=...,
    params=<optimized out>, params=<optimized out>, params=<optimized out>) at ../../src/include/duckdb/common/exception.hpp:313
#2  0x0000000001e672b1 in duckdb::DuckDBAssertInternal (condition=<optimized out>, condition_name=<optimized out>, file=<optimized out>,
    linenr=<optimized out>) at /home/duckdb/duckdb/src/common/assert.cpp:13
#3  0x000000000a69cf33 in duckdb::PhysicalInsert::ResolveDefaults (table=..., chunk=..., column_index_map=..., default_executor=..., result=...)
    at /home/duckdb/duckdb/src/execution/operator/persistent/physical_insert.cpp:150
#4  0x000000000a6f5aaa in duckdb::PhysicalInsert::Sink (this=0x6150000e4a00, context=..., chunk=..., input=...)
    at /home/duckdb/duckdb/src/execution/operator/persistent/physical_insert.cpp:623
#5  0x0000000003cf87a8 in duckdb::PipelineExecutor::ExecutePushInternal (this=<optimized out>, input=..., chunk_budget=..., initial_idx=<optimized out>)
    at /home/duckdb/duckdb/src/parallel/pipeline_executor.cpp:332
#6  0x0000000003cdbda6 in duckdb::PipelineExecutor::Execute (this=0x615000083980, max_chunks=<optimized out>)
    at /home/duckdb/duckdb/src/parallel/pipeline_executor.cpp:250
#7  0x0000000003cdd7e0 in duckdb::PipelineExecutor::Execute (this=<optimized out>) at /home/duckdb/duckdb/src/parallel/pipeline_executor.cpp:278
#8  0x0000000003cd8c05 in duckdb::PipelineTask::ExecuteTask (this=0x60700008ace0, mode=<optimized out>) at /home/duckdb/duckdb/src/parallel/pipeline.cpp:51
#9  0x0000000003ca595c in duckdb::ExecutorTask::Execute (this=0x60700008ace0, mode=<optimized out>)
    at /home/duckdb/duckdb/src/parallel/executor_task.cpp:49
#10 0x0000000003d0f68f in duckdb::TaskScheduler::ExecuteForever (this=<optimized out>, marker=<optimized out>)
    at /home/duckdb/duckdb/src/parallel/task_scheduler.cpp:189
#11 0x000079e0d73d5df4 in ?? () from /lib/x86_64-linux-gnu/libstdc++.so.6
#12 0x000079e0d7195609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#13 0x000079e0d7093353 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95
```

### To Reproduce

1. Clone the DuckDB Git from the official repo.
2. Checkout to the latest main (v1.1.4-dev3741 ab8c909857).
3. Compile the DuckDB binary by using `make relassert` or `make debug`.
4. Run the compiled DuckDB and input the following SQL:

```sql
CREATE TABLE v00 (c01 INT, c02 STRING);
INSERT INTO v00 BY POSITION ( c02 ) OVERRIDING USER VALUE FROM LATERAL ( SELECT 'simple_string' ) AS ta507400 GROUP BY ALL WINDOW EVENT AS ( GROUPS BETWEEN 'abc' IS NOT UNKNOWN IN CASE WHEN 'abc' THEN 0 ELSE 'abc' END FOLLOWING AND UNBOUNDED FOLLOWING ) ORDER BY ALL RETURNING 'anything';
```

### OS:

Ubuntu 24.04 LTS

### DuckDB Version:

v1.1.4-dev3741 ab8c909857

### DuckDB Client:

cli

### Hardware:

_No response_

### Full Name:

Yu Liang

### Affiliation:

Pennsylvania State University

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a source build

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have