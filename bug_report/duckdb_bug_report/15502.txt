ID: 15502
Title: read_json() excludes columns when types for a subset of columns are specified
Description:
### What happens?

When specifying column types in `read_json()`, it only reads those columns. The [documentation](https://duckdb.org/docs/data/json/loading_json.html#the-read_json-function) on reading JSON and specifying column types says:

> If we specify the columns, we can bypass the automatic detection. Note that not all columns need to be specified.

### To Reproduce

Create a JSON file called `test.json` with the following contents:
```json
{"a": 1.2, "b": "hello world"}
```

Attempt to read it in with the `read_json()` function at the duckdb CLI. Note that the type for column `a` is specified but not for `b`. If it behaves as the documentation explains, the type for `b` should be automatically determined, and it will be part of the table.
```sql
create table t as from read_json('test.json', columns={a: 'FLOAT'});
from t;
```
```text
┌───────┐
│   a   │
│ float │
├───────┤
│   1.2 │
└───────┘
```
Note that column `b` was not read in.


### OS:

fedora 41, Linux kernel 6.12.6, x86_64

### DuckDB Version:

1.1.3

### DuckDB Client:

CLI

### Hardware:

_No response_

### Full Name:

Nathan McIntosh

### Affiliation:

Centers for Disease Control and Prevention

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have