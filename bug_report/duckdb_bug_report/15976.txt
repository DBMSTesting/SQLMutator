ID: 15976
Title: read_json cannot handle struct keys named `right` or `left`
Description:
### What happens?

Hey, found this weird bug:


For some reason, keys named `right` in structs result in an error:
same with `left`

workaround:

wrap key in quotes, it handles json files and queries without quotes fine.

Results for each query:

without quotes:

```text
InvalidInputException: Invalid Input Error: Value "STRUCT(right integer)" can not be converted to a DuckDB Type.
Possible examples as suggestions: 
* STRING
* TEXT
* DECIMAL(prec, scale)
```

with quotes:


```text
┌───────┐
│ right │
│ int32 │
├───────┤
│  NULL │
│  NULL │
│  NULL │
│  NULL │
│   100 │
└───────┘
```

To clarify, for any other key name, e.g STRUCT(lastName string), it works fine without quotes. Right and left seem to be reserved.

### To Reproduce

```python
from duckdb import sql
import json


with open("data/many_json/0.json", "w") as f:
    json.dump({"fails": {"right": 100}}, f)

sql("""--sql
select
    *
from
    read_json(
        'data/many_json/*.json',
        columns = {
            fails: 'STRUCT(right integer)',
        }
    )
""").show()

sql("""--sql
select
    fails.right
from
    read_json(
        'data/many_json/*.json',
        columns = {
            fails: 'STRUCT("right" integer)',
        }
    )
""").show()
```

### OS:

wsl, windows 10

### DuckDB Version:

1.1.3

### DuckDB Client:

python

### Hardware:

good

### Full Name:

2 blo

### Affiliation:

none

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have not tested with any build

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [x] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [x] Yes, I have