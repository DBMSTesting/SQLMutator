ID: 16166
Title: When using ORDER BY the client interface uses all available memory when .execute()
Description:
### What happens?

I think this is a duplicate of #11261 which was not resolved.

As programmer my expectation is that when the `fetchone` pattern is used, the database will - after an initial sort - be able to present me a streaming interface at the cost of maintaining a sorted list with row indices it should iterate over. In the presentation below, a query that like `select id from ServiceJourney order by id;` would have to iterate and sort over 60MB of data, and store about 9MB of indices.

What I am practically observing is that over 10GB of memory is used for this operation within the Python client interface. Not even reaching the `fetchone()` point, this is _only_ the excution function. My assumption is that using `ORDER BY` the entire table is loaded in the interface.

```
D select count(*) from ServiceJourney;
┌──────────────┐
│ count_star() │
│    int64     │
├──────────────┤
│      1084864 │
└──────────────┘
D select sum(length(id)) from ServiceJourney;
┌─────────────────┐
│ sum(length(id)) │
│     int128      │
├─────────────────┤
│        60564784 │
└─────────────────┘
D 
D select sum(length(object::varchar)) from ServiceJourney;
100% ▕████████████████████████████████████████████████████████████▏ 
┌────────────────────────────────────────┐
│ sum(length(CAST("object" AS VARCHAR))) │
│                 int128                 │
├────────────────────────────────────────┤
│                            23818945519 │
└────────────────────────────────────────┘
```



### To Reproduce

1. Fill a database with a significant amount of data
2. cur.execute("SELECT * FROM table ORDER BY id;")
3. observe memory usage


### OS:

Linux

### DuckDB Version:

1.2.0

### DuckDB Client:

Python

### Hardware:

x86_64

### Full Name:

Stefan de Konink

### Affiliation:

Stichting OpenGeo

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

No - I cannot easily share my data sets due to their large size

### Did you include all code required to reproduce the issue?

- [x] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [x] Yes, I have