ID: 13819
Title: Transactions not working as expected with DELETE/TRUNCATE
Description:
### What happens?

Unable to delete from multiple tables with foreign key constraints in a transaction.

Expected behavior: changes are committed on `commit()` or can be rolled back as desired

Actual behavior: foreign key constraint failure

### To Reproduce

```py
import duckdb

conn = duckdb.connect()
conn.sql("CREATE TABLE a (id INTEGER PRIMARY KEY)")
conn.sql("CREATE TABLE b (a_id INTEGER NOT NULL, FOREIGN KEY (a_id) REFERENCES a (id))")
conn.sql("INSERT INTO a (id) VALUES (1), (2), (3)")
conn.sql("INSERT INTO b (a_id) VALUES (1), (2), (3)")
conn.begin()
conn.sql("TRUNCATE b")
conn.sql("TRUNCATE a")  # <-- Violates foreign key constraint because key "a_id: 1" is still referenced
conn.commit()
```

Full traceback:

```
Traceback (most recent call last):
  File ".../duckdb_transaction_bug.py", line 11, in <module>
    conn.sql("TRUNCATE a")
duckdb.duckdb.ConstraintException: Constraint Error: Violates foreign key constraint because key "a_id: 1" is still referenced by a foreign key in a different table
```

Verified that this happens on 0.10.3 as well as 1.0.0.

### OS:

MacOS Sonoma 14.1

### DuckDB Version:

0.10.3

### DuckDB Client:

Python

### Hardware:

_No response_

### Full Name:

Gordon Hart

### Affiliation:

Kolena

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have