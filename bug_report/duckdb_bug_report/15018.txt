ID: 15018
Title: [CSV Reader] Being more flexible with unescaped quotes in quoted values.
Description:
This PR makes our CSV reader more accepting of poorly constructed CSV files that have unescaped quotes within quoted values.  
For example:  

`1;"Pedro "pdet" Holanda"`

If the CSV file is read with `quote='"'`, it would throw an error since the quotes in `"pdet"` are not escaped. This is one of the most common malformation errors in CSV files, so it is beneficial if we can accept these.

In this PR, if `rfc_4180=false`, unescaped quotes will be accepted. Hence, the same CSV reader, with `quote='"', escape=''`,  
would read the CSV file as:

`1   Pedro "pdet" Holanda`

This PR also changes the default value of `rfc_4180` to `false`. The sniffer will sniff files more strictly (i.e., with a state machine constructed as `rfc_4180=true`), unless `rfc_4180` is manually set. In that case, it will use the specified value. The main reason for this is that, based on observations, unescaped quotes are usually infrequent.

The new line finder for the parallel CSV reader will also work in a similar way as the sniffer.

One downside of this PR, is that quoted new lines that have unescaped quotes might fail, if the parallel algorithm ends up right in the middle of that. I'm not sure if this is something we can cover. But even if it fails, a run with `parallel=false` will solve it (See `relaxed_quotes.test:80-85`. 

This PR also includes a few extensions to the `read_csv` function in Python. 

@hannes You might now be able to load your Rabobank (?) CSV in DuckDB! ðŸ˜Š

Fix:#14883
