ID: 13854
Title: Segmentation fault when inserting into a table with primary key in a file-backed database.
Description:
### What happens?

When inserting values of a particular length into a table with a compound primary key in a file backed database, a segfault happens.

A backtrace for the execution example below:

```
#0  0x0000000000b57a40 in duckdb::BufferHandle::IsValid() const ()
#1  0x00000000015a752e in duckdb::FixedSizeAllocator::Free(duckdb::IndexPointer) ()
#2  0x0000000001594f7c in duckdb::Prefix::TransformToDeprecated(duckdb::ART&, duckdb::Node&, duckdb::unique_ptr<duckdb::FixedSizeAllocator, std::default_delete<duckdb::FixedSizeAllocator>, false>&) ()
#3  0x0000000001594b3e in duckdb::Node::TransformToDeprecated(duckdb::ART&, duckdb::Node&, duckdb::unique_ptr<duckdb::FixedSizeAllocator, std::default_delete<duckdb::FixedSizeAllocator>, false>&) ()
#4  0x0000000001594fa5 in duckdb::Prefix::TransformToDeprecated(duckdb::ART&, duckdb::Node&, duckdb::unique_ptr<duckdb::FixedSizeAllocator, std::default_delete<duckdb::FixedSizeAllocator>, false>&) ()
#5  0x0000000001595694 in duckdb::ART::TransformToDeprecated() ()
#6  0x000000000159b294 in duckdb::ART::GetStorageInfo(std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, duckdb::Value, duckdb::CaseInsensitiveStringHashFunction, duckdb::CaseInsensitiveStringEquality, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, duckdb::Value> > > const&, bool) ()
#7  0x0000000000c83c32 in duckdb::TableIndexList::GetStorageInfos(std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, duckdb::Value, duckdb::CaseInsensitiveStringHashFunction, duckdb::CaseInsensitiveStringEquality, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, duckdb::Value> > > const&) ()
#8  0x00000000015fb626 in duckdb::SingleFileTableDataWriter::FinalizeTable(duckdb::TableStatistics const&, duckdb::DataTableInfo*, duckdb::Serializer&) ()
#9  0x0000000000c7be3a in duckdb::DataTable::Checkpoint(duckdb::TableDataWriter&, duckdb::Serializer&) ()
#10 0x0000000000c7a33f in duckdb::SingleFileCheckpointWriter::WriteTable(duckdb::TableCatalogEntry&, duckdb::Serializer&) ()
#11 0x0000000000c990f3 in duckdb::SingleFileCheckpointWriter::CreateCheckpoint() ()
#12 0x0000000000c99436 in duckdb::SingleFileStorageManager::CreateCheckpoint(duckdb::CheckpointOptions) ()
#13 0x0000000000aeefaf in duckdb::AttachedDatabase::Close() ()
#14 0x0000000000aef3f0 in duckdb::DatabaseManager::ResetDatabases(duckdb::unique_ptr<duckdb::TaskScheduler, std::default_delete<duckdb::TaskScheduler>, true>&) ()
#15 0x0000000000aefbc1 in duckdb::DatabaseInstance::~DatabaseInstance() ()
#16 0x00000000006c919a in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release_last_use_cold() ()
#17 0x00000000006c0812 in duckdb_shell_sqlite3_close ()
#18 0x00000000006b63fe in close_db ()
#19 0x000000000068fd86 in main ()
```

Seems it could be raleted to the art index refactor.

### To Reproduce

1. Open a connection to a file-backed database (does not happen for an in-memory db)

```
duckdb foo.duckdb
```

2. Run

```sql
CREATE TABLE history(
    id TEXT,
    type TEXT,
    PRIMARY KEY(id, type)
);

insert into history(id, type) values ('m0001_initialize', 'sql');
insert into history(id, type) values ('m0005_create_aaaaaaaaaaa_mapping_table', 'sql');
```

### OS:

Ubuntu x64 in WSL on Windows 11

### DuckDB Version:

v1.1.0 fa5c2fe15f

### DuckDB Client:

CLI

### Hardware:

_No response_

### Full Name:

Míma Hlaváček

### Affiliation:

Arista Networks

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a nightly build

### Did you include all relevant data sets for reproducing the issue?

Not applicable - the reproduction does not require a data set

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have