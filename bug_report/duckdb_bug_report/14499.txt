ID: 14499
Title: duckdb.connect() returns a NoneType in Python
Description:
### What happens?

I'm trying to ingest csv files into a duckdb persistent ddb file using Python. I can successfully create a `DuckDBPyRelation` by running:

```python
from pathlib import Path
import duckb

this_dir: Path = Path(__file__).resolve().parent
csv_file: Path = this_dir  / "file.csv"
duckdb.read_csv(csv_file)
```

However, I get errors whenever I try to run things like this:

```python
conn = duckdb.connect()
```
error: `TypeError: connect() missing 1 required positional argument: 'param'`

```python
conn = duckdb.connect("my_persistent.duckdb")
conn.sql("CREATE OR REPLACE TABLE csv AS SELECT * FROM 'file.csv';")
```
error: `AttributeError: 'NoneType' object has no attribute 'sql'`

I get similar errors as well:
`AttributeError: 'NoneType' object has no attribute 'execute'`
`AttributeError: 'NoneType' object has no attribute 'close'`

Going to the declaration of "connect()" takes me to `/.venv/lib/python3.12/site-packages/duckdb/__init__.py`, which at the very bottom of the file shows this:

```python
def connect(param):
    return None
```

### To Reproduce

```python
import duckdb

conn = duckdb.connect()
```

### OS:

macOS Sonoma 14.7 arm64 (M1 chip)

### DuckDB Version:

1.1.2

### DuckDB Client:

Python 3.12.6

### Hardware:

_No response_

### Full Name:

Matt Hawkins

### Affiliation:

none

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have