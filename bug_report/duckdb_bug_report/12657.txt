ID: 12657
Title: build error: jemalloc fails due to strerror_r returning char* instead of int
Description:
### What happens?

Building from scratch fails due to an error compiling jemalloc, `strerror_r` returns `char *` and instead the function expects an `int`.

The fix seems pretty simple, is enough to uncomment the line https://github.com/duckdb/duckdb/blob/main/extension/jemalloc/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h#L485
This is also the default upstream version: https://github.com/jemalloc/jemalloc/blob/dev/include/jemalloc/internal/jemalloc_internal_defs.h.in#L428 
Despite that this, if I get it right, upstream change that value at build time.

But I'm not sure this is the proper way of fixing it as it was already changed a two times:
- 2022-11-03 ddaee6f065ea731aa633498489367969201d1985 (comments the line)
- 2022-08-03 822f2ee1ae1bd8d3df7876d04cc0c8223f98793f (decomments the line)

#### Host
```
❯ uname -a
Linux a2 6.9.5-arch1-1 #1 SMP PREEMPT_DYNAMIC Sun, 16 Jun 2024 19:06:37 +0000 x86_64 GNU/Linux
```

#### Python
```
❯ python --version
Python 3.12.4
```

#### CC version
```
❯ cc -v
Using built-in specs.
COLLECT_GCC=cc
COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/14.1.1/lto-wrapper
Target: x86_64-pc-linux-gnu
Configured with: /build/gcc/src/gcc/configure --enable-languages=ada,c,c++,d,fortran,go,lto,m2,objc,obj-c++,rust --enable-bootstrap --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://gitlab.archlinux.org/archlinux/packaging/packages/gcc/-/issues --with-build-config=bootstrap-lto --with-linker-hash-style=gnu --with-system-zlib --enable-__cxa_atexit --enable-cet=auto --enable-checking=release --enable-clocale=gnu --enable-default-pie --enable-default-ssp --enable-gnu-indirect-function --enable-gnu-unique-object --enable-libstdcxx-backtrace --enable-link-serialization=1 --enable-linker-build-id --enable-lto --enable-multilib --enable-plugin --enable-shared --enable-threads=posix --disable-libssp --disable-libstdcxx-pch --disable-werror
Thread model: posix
Supported LTO compression algorithms: zlib zstd
gcc version 14.1.1 20240522 (GCC)
```

### To Reproduce

Just running a clean `make` is sufficient to show the problem.

### OS:

Arch Linux

### DuckDB Version:

Latest

### DuckDB Client:

C++

### Full Name:

Federico Francescon

### Affiliation:

Higeco

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a source build

### Did you include all relevant data sets for reproducing the issue?

Not applicable - the reproduction does not require a data set

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have