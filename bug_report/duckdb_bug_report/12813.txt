ID: 12813
Title: Fix #12800: AddressSanitizer and ThreadSanitizer eror for unitest fix
Description:
The issue is caused by code use none sanitiezer version pthread_create, but use sanitiezer verison pthread_join. This mismatching caused in sanitiezer checking failed by cannot find thread info from userid. Only sanitiezer version
 pthread_crate can init userid and thread info in its internal checking map.

This none stanitizer verson pthread_create stack 
```
(gdb) bt
#0  __pthread_create_2_1 (newthread=0x7fffedc16500, attr=0x0, start_routine=0x7ffff6dfd810 <background_thread_entry>, arg=0x0) at ./nptl/./nptl/pthread_create.c:626
#1  0x00007ffff6dfb836 in duckdb_je_pthread_create_wrapper (thread=0x7fffedc16500, attr=0x0, start_routine=0x7ffff6dfd810 <background_thread_entry>, arg=0x0) at /home/zzhao/Code/Work/Public/duckdb/extension/jemalloc/jemalloc/src/background_thread.c:47
#2  0x00007ffff6dfd795 in background_thread_create_signals_masked (thread=0x7fffedc16500, attr=0x0, start_routine=0x7ffff6dfd810 <background_thread_entry>, arg=0x0) at /home/zzhao/Code/Work/Public/duckdb/extension/jemalloc/jemalloc/src/background_thread.c:332
#3  0x00007ffff6dfbd8f in background_thread_create_locked (tsd=0x7ffff7f8c730, arena_ind=0) at /home/zzhao/Code/Work/Public/duckdb/extension/jemalloc/jemalloc/src/background_thread.c:554
#4  0x00007ffff6dfc199 in duckdb_je_background_threads_enable (tsd=0x7ffff7f8c730) at /home/zzhao/Code/Work/Public/duckdb/extension/jemalloc/jemalloc/src/background_thread.c:619
#5  0x00007ffff6e0b749 in background_thread_ctl (tsd=0x7ffff7f8c730, mib=0x7fffffffb880, miblen=1, oldp=0x0, oldlenp=0x0, newp=0x7fffffffbadf, newlen=1) at /home/zzhao/Code/Work/Public/duckdb/extension/jemalloc/jemalloc/src/ctl.c:2056
#6  0x00007ffff6e07d44 in duckdb_je_ctl_byname (tsd=0x7ffff7f8c730, name=0x7ffff6f501f2 "background_thread", oldp=0x0, oldlenp=0x0, newp=0x7fffffffbadf, newlen=1) at /home/zzhao/Code/Work/Public/duckdb/extension/jemalloc/jemalloc/src/ctl.c:1620
#7  0x00007ffff6ddeb04 in duckdb_je_mallctl (name=0x7ffff6f501f2 "background_thread", oldp=0x0, oldlenp=0x0, newp=0x7fffffffbadf, newlen=1) at /home/zzhao/Code/Work/Public/duckdb/extension/jemalloc/jemalloc/src/jemalloc.c:3933
#8  0x00007ffff6d95a51 in duckdb::JemallocCTL (name=0x7ffff6f501f2 "background_thread", old_ptr=0x0, old_len=0x0, new_ptr=0x7fffffffbadf, new_len=1) at /home/zzhao/Code/Work/Public/duckdb/extension/jemalloc/jemalloc_extension.cpp:31
#9  0x00007ffff6d95833 in duckdb::SetJemallocCTL<bool> (name=0x7ffff6f501f2 "background_thread", val=@0x7fffffffbadf: true) at /home/zzhao/Code/Work/Public/duckdb/extension/jemalloc/jemalloc_extension.cpp:41
#10 0x00007ffff6d957c2 in duckdb::JemallocExtension::SetBackgroundThreads (enable=true) at /home/zzhao/Code/Work/Public/duckdb/extension/jemalloc/jemalloc_extension.cpp:102
#11 0x00007ffff55c508b in duckdb::Allocator::SetBackgroundThreads (enable=true) at /home/zzhao/Code/Work/Public/duckdb/src/common/allocator.cpp:253
#12 0x00007ffff608642b in duckdb::TaskScheduler::SetAllocatorBackgroundThreads (this=0x72200001d680, enable=true) at /home/zzhao/Code/Work/Public/duckdb/src/parallel/task_scheduler.cpp:285
#13 0x00007ffff5ecfe5e in duckdb::AllocatorBackgroundThreadsSetting::SetGlobal (db=0x726800032a10, config=..., input=...) at /home/zzhao/Code/Work/Public/duckdb/src/main/settings/settings.cpp:1695
#14 0x00005555559d4f89 in ____C_A_T_C_H____T_E_S_T____0 () at /home/zzhao/Code/Work/Public/duckdb/test/api/test_reset.cpp:231
#15 0x0000555555cec568 in Catch::TestInvokerAsFunction::invoke (this=0x7204000007e0) at /home/zzhao/Code/Work/Public/duckdb/third_party/catch/catch.hpp:14443
#16 0x0000555555ce4615 in Catch::TestCase::invoke (this=0x7fffef75c9d8) at /home/zzhao/Code/Work/Public/duckdb/third_party/catch/catch.hpp:14282
#17 0x0000555555ce44d4 in Catch::RunContext::invokeActiveTestCase (this=0x7fffffffcde8) at /home/zzhao/Code/Work/Public/duckdb/third_party/catch/catch.hpp:13101
#18 0x0000555555ce235d in Catch::RunContext::runCurrentTest (this=0x7fffffffcde8, redirectedCout="", redirectedCerr="") at /home/zzhao/Code/Work/Public/duckdb/third_party/catch/catch.hpp:13074
#19 0x0000555555ce12dc in Catch::RunContext::runTest (this=0x7fffffffcde8, testCase=...) at /home/zzhao/Code/Work/Public/duckdb/third_party/catch/catch.hpp:12819
#20 0x0000555555ce7eea in Catch::(anonymous namespace)::TestGroup::execute (this=0x7fffffffcdd8) at /home/zzhao/Code/Work/Public/duckdb/third_party/catch/catch.hpp:13463
#21 0x0000555555ce6eed in Catch::Session::runInternal (this=0x7fffffffd390) at /home/zzhao/Code/Work/Public/duckdb/third_party/catch/catch.hpp:13675
#22 0x0000555555ce6c02 in Catch::Session::run (this=0x7fffffffd390) at /home/zzhao/Code/Work/Public/duckdb/third_party/catch/catch.hpp:13631
#23 0x0000555555d33094 in Catch::Session::run<char> (this=0x7fffffffd390, argc=1, argv=0x720400001570) at /home/zzhao/Code/Work/Public/duckdb/third_party/catch/catch.hpp:13312
#24 0x0000555555d06d6a in main (argc=1, argv=0x7fffffffdc68) at /home/zzhao/Code/Work/Public/duckdb/test/unittest.cpp:83
```
This sanitizer version stack
```
hread 1 "a.out" hit Breakpoint 1, 0x00005555555955f0 in __sanitizer::ThreadRegistry::CreateThread(unsigned long, bool, unsigned int, void*) ()
(gdb) bt
#0  0x00005555555955f0 in __sanitizer::ThreadRegistry::CreateThread(unsigned long, bool, unsigned int, void*) ()
#1  0x000055555562d445 in __tsan::ThreadCreate(__tsan::ThreadState*, unsigned long, unsigned long, bool) ()
#2  0x00005555555b4714 in __interceptor_pthread_create ()
#3  0x0000555555634c1e in main () at x1.cpp:36
```
