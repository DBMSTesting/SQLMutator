ID: 14124
Title: DROP TABLE does not reduce database size
Description:
### What happens?

Is the expected behavior  that after DROP a table that database_size decreases? I've been trying to replicate the test case mentioned in this [PR](https://github.com/duckdb/duckdb/pull/12318) using the Python client on duckdb 1.1.1 and not seeing database size nor file size decrease after dropping.

### To Reproduce

Here is what I'm running:
```
import duckdb
print(duckdb.__version__) # check that duckdb version is latest (1.1.1)

con = duckdb.connect(database='test.duckdb', read_only=False) #create and connect to a database file

insert_sql = '''
CREATE TABLE test (x INT, y AS (x + 100));
insert into test select range FROM range(1000000000);

con.execute(insert_sql)
con.execute("PRAGMA database_size").fetchall()
```
Which returns:
```
[('test', '8.7 MiB', 262144, 35, 35, 0, '0 bytes', '8.7 MiB', '25.5 GiB')]
```
Then I drop the table and check the size again:
```
con.execute("DROP TABLE test")
con.execute("PRAGMA database_size").fetchall()
```
And see that the database size has not changed:
```
[('test', '8.7 MiB', 262144, 35, 35, 0, '64 bytes', '1.5 MiB', '25.5 GiB')]
```
Am I missing something here or is the Python client doing something different?

### OS:

macos

### DuckDB Version:

1.1.1

### DuckDB Client:

Python

### Hardware:

_No response_

### Full Name:

Steven Wang

### Affiliation:

definite.app

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have not tested with any build

### Did you include all relevant data sets for reproducing the issue?

Not applicable - the reproduction does not require a data set

### Did you include all code required to reproduce the issue?

- [ ] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [ ] Yes, I have