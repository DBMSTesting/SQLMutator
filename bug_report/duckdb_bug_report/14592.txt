ID: 14592
Title: Cas strong
Description:
Fixes https://github.com/duckdb/duckdb/issues/14389 and reverts #14173 (bringing back the salt).

Although I don't think this should affect correctness (from cppreference.com):
> When a compare-and-exchange is in a loop, the weak version will yield better performance on some platforms. When a weak compare-and-exchange would require a loop and a strong one would not, the strong one is preferable.

This gave us correctness issues with older GCC versions (< 10.x) on ARM64. We rarely use CAS operations, so this isn't a big diff. I've added `std::memory_order` to improve the performance (copying the usage in `concurrentqueue.h`). Since it is difficult to programmatically disable "incorrect" usage, I've added a comment in `atomic.hpp` that describes the issue.

I've also changed usage of `MetadataPointer` to a const reference since older GCC versions were throwing a warning.