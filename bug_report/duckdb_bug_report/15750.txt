ID: 15750
Title: `CatalogException::MissingEntry` During `.Verify()` in Debug Builds for custom catalogs and schemas
Description:
### What happens?

In debug builds of DuckDB, the `.Verify()` method on `LogicalOperator` performs serialization and deserialization. During deserialization, a `CatalogException::MissingEntry` is raised when attempting to look up a functions that aren't registered in the default catalog and schema.

In communication with @Mytherin he said that full support for scalar functions in the non default schemas will be something addressed after the DuckDB 1.2 release. There may be other issues besides this serialization one, and that there may need to be some work performed to fully support them. I got the impression the DuckDB team will take on that work from here. In the meantime as a work around there is the ability to create a macro that calls functions that exist in the default system catalog.

I created PR https://github.com/duckdb/duckdb/pull/15547 to try to work around the `CatalogException::MissingEntry` exception, but @Mytherin said there may be more changes necessary to fully enable this capability of DuckDB, so it very unlikely that PR will be merged.  And that is okay with me.

@szarnyasg this is a tracking issue, there is no need to reproduce at this time.  The PR I linked contains the stack trace and the steps to reproduce are below.

### To Reproduce

1. Register a custom catalog
2. Register a scalar function in that catalog
3. Attempt to call that scalar function.

The upcoming Airport extension can do steps 1 and 2.  This is an example:

```sql
ATTACH 'geocoder' (TYPE  AIRPORT, location 'grpc://localhost:50212/');
select address, geocoder.usa.geocode_coordinates(location.latitude, location.longitude) from places_geocoded;
```

### OS:

MacOS

### DuckDB Version:

1.1.4-dev4516

### DuckDB Client:

CLI

### Hardware:

_No response_

### Full Name:

Rusty Conover

### Affiliation:

None

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a source build

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [x] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [x] Yes, I have