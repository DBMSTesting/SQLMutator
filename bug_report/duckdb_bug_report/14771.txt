ID: 14771
Title: Connection is closed when using relation as pytest fixture
Description:
### What happens?

I'm trying to add support for tabular data to [panel-graphic-walker](https://github.com/panel-extensions/panel-graphic-walker) via [narwhals](https://github.com/narwhals-dev/narwhals).

One of the data types I'm very interested in supporting is `duckdb.duckdb.DuckDBPyRelation`.

I need to test some usage of `duckdb.duckdb.DuckDBPyRelation`. I thought I could create fixtures. But not really as they are closed before I can use the fixtures in my tests. 

### To Reproduce

```python
import duckdb
import pandas as pd
import pytest

@pytest.fixture(params=["simple", "in-memory", "persistent"])
def data(request, tmp_path):
    if request.param == "simple":
        df_pandas = pd.DataFrame({"a": [1, 2, 3]})
        return duckdb.sql("SELECT * FROM df_pandas")
    if request.param == "in-memory":
        database =":memory:"
    else:
        database = (tmp_path/"tmp.db").as_posix()
    con = duckdb.connect(database)
    con.execute("CREATE TABLE df_pandas (a INTEGER)")
    con.execute("INSERT INTO df_pandas VALUES (1), (2), (3)")
    result = con.sql("SELECT * FROM df_pandas")
    # This line can be uncommented without problems
    # assert not result.df().empty
    return result

def test_data(data):
    assert not data.df().empty
```

```python
pytest tests/test_duckdb.py
```

```bash
======================================================================================================================================== test session starts ========================================================================================================================================
platform linux -- Python 3.11.6, pytest-8.0.0, pluggy-1.5.0
Test order randomisation NOT enabled. Enable with --random-order or --random-order-bucket=<bucket_type>
rootdir: /home/jovyan/repos/private/panel-graphic-walker
plugins: asyncio-0.23.8, anyio-4.6.2.post1, typeguard-4.4.0, random-order-1.1.1
asyncio: mode=Mode.STRICT
collected 3 items                                                                                                                                                                                                                                                                                   

tests/test_duckdb.py .FF                                                                                                                                                                                                                                                                      [100%]

============================================================================================================================================= FAILURES ==============================================================================================================================================
_______________________________________________________________________________________________________________________________________ test_data[in-memory] ________________________________________________________________________________________________________________________________________

data = <[ConnectionException('Connection Error: Connection has already been closed') raised in repr()] DuckDBPyRelation object at 0x7fdbaeac93f0>

    def test_data(data):
>       assert not data.df().empty
E       duckdb.duckdb.ConnectionException: Connection Error: Connection has already been closed

tests/test_duckdb.py:23: ConnectionException
_______________________________________________________________________________________________________________________________________ test_data[persistent] _______________________________________________________________________________________________________________________________________

data = <[ConnectionException('Connection Error: Connection has already been closed') raised in repr()] DuckDBPyRelation object at 0x7fdbaed89c70>

    def test_data(data):
>       assert not data.df().empty
E       duckdb.duckdb.ConnectionException: Connection Error: Connection has already been closed

tests/test_duckdb.py:23: ConnectionException
========================================================================================================================================= warnings summary ==========================================================================================================================================
.venv/lib/python3.11/site-packages/traitlets/traitlets.py:3615
  /home/jovyan/repos/private/panel-graphic-walker/.venv/lib/python3.11/site-packages/traitlets/traitlets.py:3615: DeprecationWarning: Traits should be given as instances, not types (for example, `Int()`, not `Int`). Passing types is deprecated in traitlets 4.1.
    super().__init__(trait=trait, default_value=default_value, **kwargs)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
====================================================================================================================================== short test summary info ======================================================================================================================================
FAILED tests/test_duckdb.py::test_data[in-memory] - duckdb.duckdb.ConnectionException: Connection Error: Connection has already been closed
FAILED tests/test_duckdb.py::test_data[persistent] - duckdb.duckdb.ConnectionException: Connection Error: Connection has already been closed
============================================================================================================================== 2 failed, 1 passed, 1 warning in 2.06s ===============================================================================================================================
```

As you can see the `simple` version passes. But the other ones fail. I simply do not understand how to support the other cases in pytest.

### OS:

linux

### DuckDB Version:

1.1.2

### DuckDB Client:

python

### Hardware:

_No response_

### Full Name:

Marc Skov Madsen

### Affiliation:

awesome-panel.org

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have not tested with any build

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have