ID: 16190
Title: OpenSSL errors when building from source with statically linked httpfs
Description:
### What happens?

We are attempting to build from source a version of duckdb python to be included inside an app. We require httpfs and parquet extensions to be statically linked.

following on from this thread for reference: https://github.com/duckdb/duckdb/issues/16102

 We are hitting runtime errors with openSSL. The easiest to reproduce is this:
```
Traceback (most recent call last):
  File "/Users/lgardner/Documents/DADOS/test_duckdb.py", line 1, in <module>
    import duckdb
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/duckdb/__init__.py", line 4, in <module>
    import duckdb.functional as functional
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/duckdb/functional/__init__.py", line 1, in <module>
    from duckdb.duckdb.functional import (
ImportError: dlopen(/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/duckdb/duckdb.cpython-311-darwin.so, 0x0002): symbol not found in flat namespace '_OPENSSL_sk_num'
```

We also hit a SegFault in the full runtime of our app, I will include the thread trace from that at the bottom of the post.

We suspect that something is wrong with either our make command or our build environment. We are attempting to move build into a docker container for a more consistent environment and will post the dockerfile from that if we can recreate the error.

Included below is logs from the build and the seg fault:
```
mkdir -p ./build/release && \
	cd build/release && \
	cmake -G "Ninja" -DFORCE_COLORED_OUTPUT=1        -DENABLE_EXTENSION_AUTOLOADING= -DENABLE_EXTENSION_AUTOINSTALL= -DOPENSSL_USE_STATIC_LIBS=1 -DBUILD_PYTHON=1 -DDUCKDB_EXTENSION_CONFIGS="tools/pythonpkg/duckdb_extension_config.cmake" -DCORE_EXTENSIONS="httpfs" -DLOCAL_EXTENSION_REPO=""  -DOVERRIDE_GIT_DESCRIBE=""  -DCMAKE_BUILD_TYPE=Release ../.. && \
	cmake --build . --config Release
-- Found Python3: /Library/Frameworks/Python.framework/Versions/3.11/bin/python3.11 (found version "3.11.0") found components: Interpreter
-- The C compiler identification is AppleClang 16.0.0.16000026
-- The CXX compiler identification is AppleClang 16.0.0.16000026
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
-- Found Threads: TRUE
CMake Warning at CMakeLists.txt:181 (message):
  Not disabling vptr sanitizer on M1 Macbook - set DISABLE_VPTR_SANITIZER
  manually if you run into issues with false positives in the sanitizer


-- Found Git: /usr/bin/git (found version "2.39.5 (Apple Git-154)")
-- git hash 19864453f7, version v1.1.3, extension folder v1.1.3
-- Extensions will be deployed to: /Users/lgardner/Documents/DADOS/duckdb2/build/release/repository
-- Load extension 'httpfs' from '/Users/lgardner/Documents/DADOS/duckdb2/extensions' @ v1.1.3
-- Load extension 'json' from '/Users/lgardner/Documents/DADOS/duckdb2/extensions' @ v1.1.3
-- Load extension 'fts' from '/Users/lgardner/Documents/DADOS/duckdb2/extensions' @ v1.1.3
-- Load extension 'tpcds' from '/Users/lgardner/Documents/DADOS/duckdb2/extensions' @ v1.1.3
-- Load extension 'tpch' from '/Users/lgardner/Documents/DADOS/duckdb2/extensions' @ v1.1.3
-- Load extension 'parquet' from '/Users/lgardner/Documents/DADOS/duckdb2/extensions' @ v1.1.3
-- Load extension 'icu' from '/Users/lgardner/Documents/DADOS/duckdb2/extensions' @ v1.1.3
CMake Warning at CMakeLists.txt:1240 (message):
  Extension 'httpfs' has a vcpkg.json, but build was not run with VCPKG.  If
  build fails, check out VCPKG build instructions in
  'duckdb/extension/README.md' or try manually installing the dependencies in
  /Users/lgardner/Documents/DADOS/duckdb2/extension/httpfsvcpkg.json


-- Found OpenSSL: /opt/homebrew/opt/openssl@3.0/lib/libcrypto.a (found version "3.0.15")
-- Extensions linked into DuckDB: [httpfs, json, fts, tpcds, tpch, parquet, icu]
-- Configuring done (1.5s)
-- Generating done (0.4s)
-- Build files have been written to: /Users/lgardner/Documents/DADOS/duckdb2/build/release
[716/716] package
Processing /Users/lgardner/Documents/DADOS/duckdb2/tools/pythonpkg
  Installing build dependencies: started
  Installing build dependencies: finished with status 'done'
  Getting requirements to build wheel: started
  Getting requirements to build wheel: finished with status 'done'
  Preparing metadata (pyproject.toml): started
  Preparing metadata (pyproject.toml): finished with status 'done'
Building wheels for collected packages: duckdb
  Building wheel for duckdb (pyproject.toml): started
  Building wheel for duckdb (pyproject.toml): finished with status 'done'
  Created wheel for duckdb: filename=duckdb-1.1.4.dev0-cp311-cp311-macosx_10_9_universal2.whl size=16046600 sha256=e151598b92aed19dd47da16cabe6f453658c46162bad9319c57a5b244972095c
  Stored in directory: /private/var/folders/jx/cw9ygm1n3w92r2qxkp6wt86m0000gn/T/pip-ephem-wheel-cache-g5_mb0xu/wheels/0a/5e/ce/e4535366bbe5a971c65084e12304d506423396fe33b5d303cb
Successfully built duckdb
Installing collected packages: duckdb
  Attempting uninstall: duckdb
    Found existing installation: duckdb 1.1.4.dev0
    Uninstalling duckdb-1.1.4.dev0:
      Successfully uninstalled duckdb-1.1.4.dev0
Successfully installed duckdb-1.1.4.dev0
```

Seg Fault:
```
Thread 80 Crashed:
0   ???                           	     0x51fb9400008 ???
1   duckdb.cpython-311-darwin.so  	       0x11d7d0a4c duckdb_httplib_openssl::SSLClient::SSLClient(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) + 124
2   duckdb.cpython-311-darwin.so  	       0x11d7eee90 duckdb_httplib_openssl::Client::Client(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) + 708
3   duckdb.cpython-311-darwin.so  	       0x11d7e85bc duckdb::TemplatedUniqueIf<duckdb_httplib_openssl::Client, true>::templated_unique_single_t duckdb::make_uniq<duckdb_httplib_openssl::Client, char const*&>(char const*&) + 200
4   duckdb.cpython-311-darwin.so  	       0x11d7e7fbc duckdb::HTTPFileSystem::GetClient(duckdb::HTTPParams const&, char const*, duckdb::optional_ptr<duckdb::HTTPFileHandle, true>) + 68
5   duckdb.cpython-311-darwin.so  	       0x11d7d64c8 duckdb::S3FileHandle::CreateClient(duckdb::optional_ptr<duckdb::ClientContext, true>) + 308
6   duckdb.cpython-311-darwin.so  	       0x11d7e8df0 duckdb::HTTPFileHandle::GetClient(duckdb::optional_ptr<duckdb::ClientContext, true>) + 192
7   duckdb.cpython-311-darwin.so  	       0x11d7e8a5c duckdb::HTTPFileSystem::HeadRequest(duckdb::FileHandle&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, duckdb::CaseInsensitiveStringHashFunction, duckdb::CaseInsensitiveStringEquality, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>>) + 200
8   duckdb.cpython-311-darwin.so  	       0x11d7dc9cc duckdb::S3FileSystem::HeadRequest(duckdb::FileHandle&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, duckdb::CaseInsensitiveStringHashFunction, duckdb::CaseInsensitiveStringEquality, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>>) + 680
9   duckdb.cpython-311-darwin.so  	       0x11d7eaedc duckdb::HTTPFileHandle::Initialize(duckdb::optional_ptr<duckdb::FileOpener, true>) + 1232
10  duckdb.cpython-311-darwin.so  	       0x11d7dfa48 duckdb::S3FileHandle::Initialize(duckdb::optional_ptr<duckdb::FileOpener, true>) + 24
11  duckdb.cpython-311-darwin.so  	       0x11d7e9e2c duckdb::HTTPFileSystem::OpenFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, duckdb::FileOpenFlags, duckdb::optional_ptr<duckdb::FileOpener, true>) + 72
12  duckdb.cpython-311-darwin.so  	       0x11cd6ecd4 duckdb::VirtualFileSystem::OpenFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, duckdb::FileOpenFlags, duckdb::optional_ptr<duckdb::FileOpener, true>) + 116
13  duckdb.cpython-311-darwin.so  	       0x11d2b0ab8 duckdb::ParquetReader::ParquetReader(duckdb::ClientContext&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, duckdb::ParquetOptions, duckdb::shared_ptr<duckdb::ParquetFileMetadataCache, true>) + 292
14  duckdb.cpython-311-darwin.so  	       0x11d2a2c90 void std::__1::allocator<duckdb::ParquetReader>::construct[abi:ne180100]<duckdb::ParquetReader, duckdb::ClientContext&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, duckdb::ParquetOptions&>(duckdb::ParquetReader*, duckdb::ClientContext&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>&&, duckdb::ParquetOptions&) + 168
15  duckdb.cpython-311-darwin.so  	       0x11d2a0f14 duckdb::MultiFileReaderBindData duckdb::MultiFileReader::BindReader<duckdb::ParquetReader, duckdb::ParquetReadBindData, duckdb::ParquetOptions>(duckdb::ClientContext&, duckdb::vector<duckdb::LogicalType, true>&, duckdb::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, true>&, duckdb::MultiFileList&, duckdb::ParquetReadBindData&, duckdb::ParquetOptions&) + 216
16  duckdb.cpython-311-darwin.so  	       0x11d29ffac duckdb::ParquetScanFunction::ParquetScanBindInternal(duckdb::ClientContext&, duckdb::unique_ptr<duckdb::MultiFileReader, std::__1::default_delete<duckdb::MultiFileReader>, true>, duckdb::unique_ptr<duckdb::MultiFileList, std::__1::default_delete<duckdb::MultiFileList>, true>, duckdb::vector<duckdb::LogicalType, true>&, duckdb::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, true>&, duckdb::ParquetOptions) + 1884
17  duckdb.cpython-311-darwin.so  	       0x11d29ab9c duckdb::ParquetScanFunction::ParquetScanBind(duckdb::ClientContext&, duckdb::TableFunctionBindInput&, duckdb::vector<duckdb::LogicalType, true>&, duckdb::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, true>&) + 1644
18  duckdb.cpython-311-darwin.so  	       0x11c245a6c duckdb::Binder::BindTableFunctionInternal(duckdb::TableFunction&, duckdb::TableFunctionRef const&, duckdb::vector<duckdb::Value, true>, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, duckdb::Value, duckdb::CaseInsensitiveStringHashFunction, duckdb::CaseInsensitiveStringEquality, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, duckdb::Value>>>, duckdb::vector<duckdb::LogicalType, true>, duckdb::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, true>) + 440
19  duckdb.cpython-311-darwin.so  	       0x11c246ebc duckdb::Binder::Bind(duckdb::TableFunctionRef&) + 2332
20  duckdb.cpython-311-darwin.so  	       0x11c285dc0 duckdb::Binder::Bind(duckdb::TableRef&) + 320
21  duckdb.cpython-311-darwin.so  	       0x11c1f131c duckdb::Binder::BindNode(duckdb::SelectNode&) + 68
22  duckdb.cpython-311-darwin.so  	       0x11c283dfc duckdb::Binder::BindNode(duckdb::QueryNode&) + 140
23  duckdb.cpython-311-darwin.so  	       0x11c2840b4 duckdb::Binder::Bind(duckdb::QueryNode&) + 180
24  duckdb.cpython-311-darwin.so  	       0x11c215694 duckdb::Binder::BindCreateTableInfo(duckdb::unique_ptr<duckdb::CreateInfo, std::__1::default_delete<duckdb::CreateInfo>, true>, duckdb::SchemaCatalogEntry&, duckdb::vector<duckdb::unique_ptr<duckdb::Expression, std::__1::default_delete<duckdb::Expression>, true>, true>&) + 232
25  duckdb.cpython-311-darwin.so  	       0x11c21550c duckdb::Binder::BindCreateTableInfo(duckdb::unique_ptr<duckdb::CreateInfo, std::__1::default_delete<duckdb::CreateInfo>, true>, duckdb::SchemaCatalogEntry&) + 48
26  duckdb.cpython-311-darwin.so  	       0x11c2103ac duckdb::Binder::Bind(duckdb::CreateStatement&) + 3528
27  duckdb.cpython-311-darwin.so  	       0x11c28ee94 duckdb::Planner::CreatePlan(duckdb::SQLStatement&) + 156
28  duckdb.cpython-311-darwin.so  	       0x11d08c0f0 duckdb::ClientContext::CreatePreparedStatementInternal(duckdb::ClientContextLock&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, duckdb::unique_ptr<duckdb::SQLStatement, std::__1::default_delete<duckdb::SQLStatement>, true>, duckdb::optional_ptr<std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, duckdb::BoundParameterData, duckdb::CaseInsensitiveStringHashFunction, duckdb::CaseInsensitiveStringEquality, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, duckdb::BoundParameterData>>>, true>) + 512
29  duckdb.cpython-311-darwin.so  	       0x11d08ce9c duckdb::ClientContext::CreatePreparedStatement(duckdb::ClientContextLock&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, duckdb::unique_ptr<duckdb::SQLStatement, std::__1::default_delete<duckdb::SQLStatement>, true>, duckdb::optional_ptr<std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, duckdb::BoundParameterData, duckdb::CaseInsensitiveStringHashFunction, duckdb::CaseInsensitiveStringEquality, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const, duckdb::BoundParameterData>>>, true>, duckdb::PreparedStatementMode) + 1024
30  duckdb.cpython-311-darwin.so  	       0x11d0f431c std::__1::__function::__func<duckdb::ClientContext::PrepareInternal(duckdb::ClientContextLock&, duckdb::unique_ptr<duckdb::SQLStatement, std::__1::default_delete<duckdb::SQLStatement>, true>)::$_0, std::__1::allocator<duckdb::ClientContext::PrepareInternal(duckdb::ClientContextLock&, duckdb::unique_ptr<duckdb::SQLStatement, std::__1::default_delete<duckdb::SQLStatement>, true>)::$_0>, void ()>::operator()() + 60
31  duckdb.cpython-311-darwin.so  	       0x11d08f1d4 duckdb::ClientContext::RunFunctionInTransactionInternal(duckdb::ClientContextLock&, std::__1::function<void ()> const&, bool) + 132
32  duckdb.cpython-311-darwin.so  	       0x11d08fa08 duckdb::ClientContext::PrepareInternal(duckdb::ClientContextLock&, duckdb::unique_ptr<duckdb::SQLStatement, std::__1::default_delete<duckdb::SQLStatement>, true>) + 212
33  duckdb.cpython-311-darwin.so  	       0x11d08ff70 duckdb::ClientContext::Prepare(duckdb::unique_ptr<duckdb::SQLStatement, std::__1::default_delete<duckdb::SQLStatement>, true>) + 196
34  duckdb.cpython-311-darwin.so  	       0x11d09bf70 duckdb::Connection::Prepare(duckdb::unique_ptr<duckdb::SQLStatement, std::__1::default_delete<duckdb::SQLStatement>, true>) + 52
35  duckdb.cpython-311-darwin.so  	       0x11c0afa48 duckdb::DuckDBPyConnection::PrepareQuery(duckdb::unique_ptr<duckdb::SQLStatement, std::__1::default_delete<duckdb::SQLStatement>, true>) + 136 (pyconnection.cpp:549)
36  duckdb.cpython-311-darwin.so  	       0x11c0bd0a0 duckdb::DuckDBPyConnection::RunQuery(pybind11::object const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, pybind11::object) + 532 (pyconnection.cpp:1470)
37  duckdb.cpython-311-darwin.so  	       0x11c0d6254 pybind11::cpp_function::cpp_function<duckdb::unique_ptr<duckdb::DuckDBPyRelation, std::__1::default_delete<duckdb::DuckDBPyRelation>, true>, duckdb::DuckDBPyConnection, pybind11::object const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, pybind11::object, pybind11::name, pybind11::is_method, pybind11::sibling, char [128], pybind11::arg, pybind11::kw_only, pybind11::arg_v, pybind11::arg_v>(duckdb::unique_ptr<duckdb::DuckDBPyRelation, std::__1::default_delete<duckdb::DuckDBPyRelation>, true> (duckdb::DuckDBPyConnection::*)(pybind11::object const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, pybind11::object), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, char const (&) [128], pybind11::arg const&, pybind11::kw_only const&, pybind11::arg_v const&, pybind11::arg_v const&)::'lambda'(duckdb::DuckDBPyConnection*, pybind11::object const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, pybind11::object)::operator()(duckdb::DuckDBPyConnection*, pybind11::object const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, pybind11::object) const + 64 (pybind11.h:136) [inlined]
38  duckdb.cpython-311-darwin.so  	       0x11c0d6254 duckdb::unique_ptr<duckdb::DuckDBPyRelation, std::__1::default_delete<duckdb::DuckDBPyRelation>, true> pybind11::detail::argument_loader<duckdb::DuckDBPyConnection*, pybind11::object const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, pybind11::object>::call_impl<duckdb::unique_ptr<duckdb::DuckDBPyRelation, std::__1::default_delete<duckdb::DuckDBPyRelation>, true>, pybind11::cpp_function::cpp_function<duckdb::unique_ptr<duckdb::DuckDBPyRelation, std::__1::default_delete<duckdb::DuckDBPyRelation>, true>, duckdb::DuckDBPyConnection, pybind11::object const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, pybind11::object, pybind11::name, pybind11::is_method, pybind11::sibling, char [128], pybind11::arg, pybind11::kw_only, pybind11::arg_v, pybind11::arg_v>(duckdb::unique_ptr<duckdb::DuckDBPyRelation, std::__1::default_delete<duckdb::DuckDBPyRelation>, true> (duckdb::DuckDBPyConnection::*)(pybind11::object const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, pybind11::object), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, char const (&) [128], pybind11::arg const&, pybind11::kw_only const&, pybind11::arg_v const&, pybind11::arg_v const&)::'lambda'(duckdb::DuckDBPyConnection*, pybind11::object const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, pybind11::object)&, 0ul, 1ul, 2ul, 3ul, pybind11::detail::void_type>(duckdb::DuckDBPyConnection&&, pybind11::detail::index_sequence<0ul, 1ul, 2ul, 3ul>, pybind11::detail::void_type&&) && + 140 (cast.h:1631)
39  duckdb.cpython-311-darwin.so  	       0x11c0d5ef0 std::__1::enable_if<!std::is_void<duckdb::unique_ptr<duckdb::DuckDBPyRelation, std::__1::default_delete<duckdb::DuckDBPyRelation>, true>>::value, duckdb::unique_ptr<duckdb::DuckDBPyRelation, std::__1::default_delete<duckdb::DuckDBPyRelation>, true>>::type pybind11::detail::argument_loader<duckdb::DuckDBPyConnection*, pybind11::object const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, pybind11::object>::call<duckdb::unique_ptr<duckdb::DuckDBPyRelation, std::__1::default_delete<duckdb::DuckDBPyRelation>, true>, pybind11::detail::void_type, pybind11::cpp_function::cpp_function<duckdb::unique_ptr<duckdb::DuckDBPyRelation, std::__1::default_delete<duckdb::DuckDBPyRelation>, true>, duckdb::DuckDBPyConnection, pybind11::object const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, pybind11::object, pybind11::name, pybind11::is_method, pybind11::sibling, char [128], pybind11::arg, pybind11::kw_only, pybind11::arg_v, pybind11::arg_v>(duckdb::unique_ptr<duckdb::DuckDBPyRelation, std::__1::default_delete<duckdb::DuckDBPyRelation>, true> (duckdb::DuckDBPyConnection::*)(pybind11::object const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, pybind11::object), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, char const (&) [128], pybind11::arg const&, pybind11::kw_only const&, pybind11::arg_v const&, pybind11::arg_v const&)::'lambda'(duckdb::DuckDBPyConnection*, pybind11::object const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, pybind11::object)&>(pybind11::cpp_function::cpp_function<duckdb::unique_ptr<duckdb::DuckDBPyRelation, std::__1::default_delete<duckdb::DuckDBPyRelation>, true>, duckdb::DuckDBPyConnection, pybind11::object const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, pybind11::object, pybind11::name, pybind11::is_method, pybind11::sibling, char [128], pybind11::arg, pybind11::kw_only, pybind11::arg_v, pybind11::arg_v>(duckdb::unique_ptr<duckdb::DuckDBPyRelation, std::__1::default_delete<duckdb::DuckDBPyRelation>, true> (duckdb::DuckDBPyConnection::*)(pybind11::object const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, pybind11::object), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, char const (&) [128], pybind11::arg const&, pybind11::kw_only const&, pybind11::arg_v const&, pybind11::arg_v const&)::'lambda'(duckdb::DuckDBPyConnection*, pybind11::object const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, pybind11::object)&) && + 16 (cast.h:1599) [inlined]
40  duckdb.cpython-311-darwin.so  	       0x11c0d5ef0 void pybind11::cpp_function::initialize<pybind11::cpp_function::cpp_function<duckdb::unique_ptr<duckdb::DuckDBPyRelation, std::__1::default_delete<duckdb::DuckDBPyRelation>, true>, duckdb::DuckDBPyConnection, pybind11::object const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, pybind11::object, pybind11::name, pybind11::is_method, pybind11::sibling, char [128], pybind11::arg, pybind11::kw_only, pybind11::arg_v, pybind11::arg_v>(duckdb::unique_ptr<duckdb::DuckDBPyRelation, std::__1::default_delete<duckdb::DuckDBPyRelation>, true> (duckdb::DuckDBPyConnection::*)(pybind11::object const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, pybind11::object), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, char const (&) [128], pybind11::arg const&, pybind11::kw_only const&, pybind11::arg_v const&, pybind11::arg_v const&)::'lambda'(duckdb::DuckDBPyConnection*, pybind11::object const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, pybind11::object), duckdb::unique_ptr<duckdb::DuckDBPyRelation, std::__1::default_delete<duckdb::DuckDBPyRelation>, true>, duckdb::DuckDBPyConnection*, pybind11::object const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, pybind11::object, pybind11::name, pybind11::is_method, pybind11::sibling, char [128], pybind11::arg, pybind11::kw_only, pybind11::arg_v, pybind11::arg_v>(duckdb::unique_ptr<duckdb::DuckDBPyRelation, std::__1::default_delete<duckdb::DuckDBPyRelation>, true>&&, duckdb::DuckDBPyConnection (*)(pybind11::object const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, pybind11::object), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, char const (&) [128], pybind11::arg const&, pybind11::kw_only const&, pybind11::arg_v const&, pybind11::arg_v const&)::'lambda'(pybind11::detail::function_call&)::operator()(pybind11::detail::function_call&) const + 104 (pybind11.h:279)
41  duckdb.cpython-311-darwin.so  	       0x11c0d5e7c void pybind11::cpp_function::initialize<pybind11::cpp_function::cpp_function<duckdb::unique_ptr<duckdb::DuckDBPyRelation, std::__1::default_delete<duckdb::DuckDBPyRelation>, true>, duckdb::DuckDBPyConnection, pybind11::object const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, pybind11::object, pybind11::name, pybind11::is_method, pybind11::sibling, char [128], pybind11::arg, pybind11::kw_only, pybind11::arg_v, pybind11::arg_v>(duckdb::unique_ptr<duckdb::DuckDBPyRelation, std::__1::default_delete<duckdb::DuckDBPyRelation>, true> (duckdb::DuckDBPyConnection::*)(pybind11::object const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, pybind11::object), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, char const (&) [128], pybind11::arg const&, pybind11::kw_only const&, pybind11::arg_v const&, pybind11::arg_v const&)::'lambda'(duckdb::DuckDBPyConnection*, pybind11::object const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, pybind11::object), duckdb::unique_ptr<duckdb::DuckDBPyRelation, std::__1::default_delete<duckdb::DuckDBPyRelation>, true>, duckdb::DuckDBPyConnection*, pybind11::object const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, pybind11::object, pybind11::name, pybind11::is_method, pybind11::sibling, char [128], pybind11::arg, pybind11::kw_only, pybind11::arg_v, pybind11::arg_v>(duckdb::unique_ptr<duckdb::DuckDBPyRelation, std::__1::default_delete<duckdb::DuckDBPyRelation>, true>&&, duckdb::DuckDBPyConnection (*)(pybind11::object const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, pybind11::object), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, char const (&) [128], pybind11::arg const&, pybind11::kw_only const&, pybind11::arg_v const&, pybind11::arg_v const&)::'lambda'(pybind11::detail::function_call&)::__invoke(pybind11::detail::function_call&) + 24 (pybind11.h:249)
42  duckdb.cpython-311-darwin.so  	       0x11c00d730 pybind11::cpp_function::dispatcher(_object*, _object*, _object*) + 3932 (pybind11.h:971)
43  Python                        	       0x1034ea578 cfunction_call + 60
44  Python                        	       0x103486568 _PyObject_MakeTpCall + 128
45  Python                        	       0x1035a9968 _PyEval_EvalFrameDefault + 53908
46  Python                        	       0x1035af020 _PyEval_Vector + 156
47  Python                        	       0x10348a840 method_vectorcall + 164
48  Python                        	       0x1035ac150 _PyEval_EvalFrameDefault + 64124
49  Python                        	       0x1035af020 _PyEval_Vector + 156
50  Python                        	       0x1035ac150 _PyEval_EvalFrameDefault + 64124
51  Python                        	       0x1035af020 _PyEval_Vector + 156
52  Python                        	       0x10348a920 method_vectorcall + 388
53  Python                        	       0x1036abebc thread_run + 200
54  Python                        	       0x1036282e4 pythread_wrapper + 48
55  libsystem_pthread.dylib       	       0x1878002e4 _pthread_start + 136
56  libsystem_pthread.dylib       	       0x1877fb0fc thread_start + 8
```

### To Reproduce

Ran Build with this script:
```
#rm -rf duckdb
git clone git@github.com:duckdb/duckdb.git
cd duckdb
git checkout tags/v1.1.3
sed -i '' '13i\
duckdb_extension_load(httpfs)' extension/extension_config.cmake
sed -i '' '15i\
duckdb_extension_load(httpfs)' tools/pythonpkg/duckdb_extension_config.cmake
GEN=ninja BUILD_PYTHON=1 CORE_EXTENSIONS="httpfs" STATIC_OPENSSL=1 OPENSSL_ROOT_DIR="/opt/homebrew/opt/openssl@3.0" make release
cd ../
python3 test_duckdb.py
```
where test_duckdb.py is 
```
import duckdb


def launch_duckdb():
    # Connect to an in-memory DuckDB database
    conn = duckdb.connect(database=':memory:')
    print("DuckDB launched successfully in-memory.")
    return conn


if __name__ == "__main__":
    conn = launch_duckdb()
    # Example query to test the connection
    conn.execute("CREATE TABLE test (id INTEGER, name STRING)")
    conn.execute("INSERT INTO test VALUES (1, 'Alice'), (2, 'Bob')")
    results = conn.execute("SELECT * FROM test").fetchall()
    print("Sample data from DuckDB:", results)
    conn.close()

```

### OS:

osx_arm64

### DuckDB Version:

v1.1.3

### DuckDB Client:

Python

### Hardware:

Apple M2 Ultra; 128 GB Unified Memory

### Full Name:

Luke Gardner

### Affiliation:

DADOS Technology, Inc.

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a source build

### Did you include all relevant data sets for reproducing the issue?

No - Other reason (please specify in the issue body)

### Did you include all code required to reproduce the issue?

- [x] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [x] Yes, I have