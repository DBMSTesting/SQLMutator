ID: 16351
Title: Corrupted table exhaust memory
Description:
### What happens?

When there is corruption in a table, and a delete statement is executed on it, the client memory is being exhausted. When checking the number of rows the table shows 0. Truncate on such table won't work, dropping the table does. 

```
D select 'referencing' as table_name, count(distinct block_id) as num_blocks, count(distinct block_id) * (select block_size from pragma_database_size()) as num_bytes from pragma_storage_info('referencing') group by all;
┌─────────────┬────────────┬───────────┐
│ table_name  │ num_blocks │ num_bytes │
│   varchar   │   int64    │   int64   │
├─────────────┼────────────┼───────────┤
│ referencing │       2360 │ 618659840 │
└─────────────┴────────────┴───────────┘
D select * from referencing;
┌──────────────┬───────────┬────────────────┬─────────┬─────────┬─────────┬───────┐
│ parent_class │ parent_id │ parent_version │  class  │   ref   │ version │ ordr  │
│   varchar    │  varchar  │    varchar     │ varchar │ varchar │ varchar │ int32 │
├──────────────┴───────────┴────────────────┴─────────┴─────────┴─────────┴───────┤
│                                     0 rows                                      │
└─────────────────────────────────────────────────────────────────────────────────┘
D truncate referencing;
D select 'referencing' as table_name, count(distinct block_id) as num_blocks, count(distinct block_id) * (select block_size from pragma_database_size()) as num_bytes from pragma_storage_info('referencing') group by all;
┌─────────────┬────────────┬───────────┐
│ table_name  │ num_blocks │ num_bytes │
│   varchar   │   int64    │   int64   │
├─────────────┼────────────┼───────────┤
│ referencing │       2360 │ 618659840 │
└─────────────┴────────────┴───────────┘
D 
```

### To Reproduce

Not yet a clue how to corrupt a database

### OS:

Linux

### DuckDB Version:

1.2.0

### DuckDB Client:

Python

### Hardware:

_No response_

### Full Name:

Stefan de Konink

### Affiliation:

Stichting OpenGeo

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

No - Other reason (please specify in the issue body)

### Did you include all code required to reproduce the issue?

- [ ] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [x] Yes, I have