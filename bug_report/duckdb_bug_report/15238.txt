ID: 15238
Title: Incorrect result for null aware Left Semi Project Join
Description:
### What happens?

The second row in the sample query provided should produce NULL, false, however NULL, NULL is produced instead.

`SELECT t0, t0 IN (SELECT u0 FROM u WHERE t0 = 4)) FROM t` <=>  `SELECT NULL, NULL IN (SELECT u0 FROM u WHERE NULL = 4)` <=> `SELECT NULL, NULL IN ()` <=> `NULL, false`

[Here](https://facebookincubator.github.io/velox/develop/joins.html#semi-joins) is Velox documentation that explains Semi Project Joins. Null-aware semi project join may return NULL value if it is not possible to definitively say whether there is a match or not. In this case we can definitively say there is no match.



### To Reproduce

```
WITH t AS (
    SELECT
        *
    FROM (
        VALUES
            (4),
            (NULL)
    ) t(t0)
),
u AS (
    SELECT
        *
    FROM (
        VALUES
            (NULL),
            (NULL)
    ) t(u0)
)
SELECT
    t0,
    t0 IN (
        SELECT
            u0
        FROM u
        WHERE
            t0 = 4
    )
FROM t;
```

### OS:

IOS

### DuckDB Version:

v1.1.3

### DuckDB Client:

Idk, I ran `brew install duckdb` in my terminal

### Hardware:

_No response_

### Full Name:

Daniel Hunte

### Affiliation:

Meta (Velox)

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have