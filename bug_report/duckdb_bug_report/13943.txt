ID: 13943
Title: unnest() fails for STRUCTs where it succeeds for LISTs
Description:
### What happens?

DuckDB has a nice feature whereby functions like sqrt() that expect a
non-tabular input can in effect handle the result of a SELECT query that returns one row
provided the SELECT is enclosed in parentheses, like so:

```sql
SELECT sqrt( (SELECT 2) );
```
```
┌────────────────────┐
│  sqrt((SELECT 2))  │
│       double       │
├────────────────────┤
│ 1.4142135623730951 │
└────────────────────┘
```

This works with `unnest` as well, e.g.

```sql
SELECT unnest(( select [1,2] ));
```
```
┌────────────────────────────────────────┐
│ unnest((SELECT main.list_value(1, 2))) │
│                 int32                  │
├────────────────────────────────────────┤
│                                      1 │
│                                      2 │
└────────────────────────────────────────┘
```
Unfortunately, however, the technique does not seem to work
for unnest and STRUCTs.  Whereas:

```sql
SELECT unnest( {'a':1} );
```
```
┌───────┐
│   a   │
│ int32 │
├───────┤
│     1 │
└───────┘
```
we find:
```sql
SELECT unnest( (SELECT {'a':1}) );
```
```
Serialization Error: Cannot copy BoundSubqueryExpression
```

This looks like a bug.

For reference, there is a workaround, as illustrated by the following:
```sql
SELECT unnest( info ) FROM (SELECT {'a': 1} as info);
```

### To Reproduce

```sql
SELECT unnest( (SELECT [1,2]) );  -- success
SELECT unnest( (SELECT {'a':1}) ); -- failure
```

### OS:

MacOS

### DuckDB Version:

1.1.0

### DuckDB Client:

CLI

### Hardware:

_No response_

### Full Name:

Peter Koppstein

### Affiliation:

Princeton University

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a source build

### Did you include all relevant data sets for reproducing the issue?

Not applicable - the reproduction does not require a data set

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have