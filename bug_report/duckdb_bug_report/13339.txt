ID: 13339
Title: pandas DataFrame insert into existing table with different column ordering -> data in wrong columns
Description:
### What happens?

When inserting a pandas DataFrame into an existing table which has a different column ordering, the data is inserted into the wrong columns.

# Example
Exiting table `frame`
| A | B  |
|---|----|
| 1 | 10 |
| 2 | 20 |

pandas DataFrame `df2` (first column has the name `B` in comparison to `frame` which has `A` as first column)
| B   | A    |
|-----|------|
| 100 | 1000 |
| 200 | 2000 |

Inserting `df2` into existing table `frame`:
## Expected
| A    | B   |
|------|-----|
| 1    | 10  |
| 2    | 20  |
| 1000 | 100 |
| 2000 | 200 |

## Actual
| A   | B    |
|-----|------|
| 1   | 10   |
| 2   | 20   |
| 100 | 1000 |
| 200 | 2000 |

### To Reproduce

Minimal reproducible example:
```python
import duckdb
import pandas as pd

with duckdb.connect() as con:
    df1 = pd.DataFrame(data={"A": [1, 2], "B": [10, 20]})
    df2 = pd.DataFrame(data={"B": [100, 200], "A": [1000, 2000]})

    con.sql("CREATE TABLE frame AS SELECT * FROM df1")
    con.sql("INSERT INTO frame SELECT * FROM df2")

    expected = pd.concat([df1, df2], ignore_index=True)
    actual = con.sql("SELECT * FROM frame").df()

    assert expected.equals(actual)
```

Python version: `Python 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)] on win32`

Currently, `con.sql("INSERT INTO frame SELECT * FROM df2")` does not seem to consider the column names of the pandas DataFrame to be inserted and expects the first column of the DataFrame should be inserted into the first column of the existing table. However I expected, that the columns are matched with their names and not with their ordering.

### OS:

Windows 10 x64

### DuckDB Version:

1.0.0

### DuckDB Client:

Python

### Full Name:

Clemens Korner

### Affiliation:

AIT Austrian Institute of Technology

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have