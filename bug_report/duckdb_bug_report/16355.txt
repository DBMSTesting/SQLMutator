ID: 16355
Title: pipelined map_entries() applied to a struct member fails with syntax error (but it shouldn't)
Description:
### What happens?

A query that applies .map_entries() to a struct member fails with a syntax error 

### To Reproduce

File: 
Query:
```
WITH "d1" AS (
  SELECT unnest( "d0"."a".map_entries() ) AS "a.map_entries().unnest()"
  FROM (VALUES(MAP{ 'a': MAP{1: TRUE} })) AS "d0"("a")
)
select "d2"."a.map_entries().unnest()"['value'].map_entries()
from "d1" as d2
```
result:
```
Parser Error:
syntax error at or near "("

LINE 5: select "d2"."a.map_entries().unnest()"['value'].map_entries()
```
The equivalent function-style syntax works as expected:
```
WITH "d1" AS (
  SELECT unnest( "d0"."a".map_entries() ) AS "a.map_entries().unnest()"
  FROM (VALUES(MAP{ 'a': MAP{1: TRUE} })) AS "d0"("a")
)
select map_entries( "d2"."a.map_entries().unnest()"['value'] )
from "d1" as d2
```


### OS:

windows 11

### DuckDB Version:

1.2.0 GA, v1.2.1-dev648 cd0d0da9b1

### DuckDB Client:

CLI

### Hardware:

_No response_

### Full Name:

Roland Bouman

### Affiliation:

EPAM Systems BV

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a nightly build

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [x] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [x] Yes, I have