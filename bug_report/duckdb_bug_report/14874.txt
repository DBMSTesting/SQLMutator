ID: 14874
Title: Release candidate fails to parse CSV, while the current release handles it successfully
Description:
### What happens?

The Python pre-releases `duckdb 1.1.4.dev1919` and `1.1.4.dev1906` (I didnt check duckdb `1.1.4.dev1619`) are not able to read a csv file, which `duckdb 1.1.3`'s `read_csv` as well as e.g. pandas' `read_csv` can read.

Specifically, it is [this public csv file](https://physionet.org/content/mimic-iv-demo-omop/0.9/1_omop_data_csv/drug_exposure.csv) which can be used to reproduce the behaviour; I didnt manage to trigger it by creating an own small toy example.


### To Reproduce

**duckdb=1.1.3**
Assume the above mentioned csv file has been downloaded and added to the working directory as `drug_exposure.csv`

```py
import duckdb
duckdb.read_csv("drug_exposure.csv")
```
 reads this file as I'd expect it.

**duckdb=1.1.4.dev1919**

```py
import duckdb
duckdb.read_csv("drug_exposure.csv")
```
yields
```
InvalidInputException: Invalid Input Error: Error when sniffing file "drug_exposure.csv".
It was not possible to automatically detect the CSV Parsing dialect/types
The search space used was:
Delimiter Candidates: ',', '|', ';', '	'
Quote/Escape Candidates: ['"','"'],['"','\0'],['"','''],['"','\'],[''','\'],['\0','\0']
Comment Candidates: '#', '\0'
Possible fixes:
* Set delimiter (e.g., delim=',')
* Set quote (e.g., quote='"')
* Set escape (e.g., escape='"')
* Set comment (e.g., comment='#')
* Set skip (skip=${n}) to skip ${n} lines at the top of the file
* Enable ignore errors (ignore_errors=true) to ignore potential errors
* Enable null padding (null_padding=true) to pad missing columns with NULL values
* Check you are using the correct file compression, otherwise set it (e.g., compression = 'zstd')
```

I suspect the present `%` in some cells to be the cause, and the following additional keywordargument makes the file be read properly again, also with `1.1.4.dev1919`

```py
import duckdb
duckdb.read_csv("drug_exposure.csv", escapechar="%")
```

**pandas**
Just for your information, pandas also works without a problem
```py
import pandas as pd
pd.read_csv("drug_exposure.csv")
```

This behaviour appeared for me on macOS Sonoma 14.3, as well as Ubuntu 22.04.5 LTS, using Python 3.11 on the mac and Python 3.12 on the Ubuntu.

It seems like a regression to me.

### OS:

iOS

### DuckDB Version:

1.1.4.dev1919

### DuckDB Client:

Python

### Hardware:

_No response_

### Full Name:

eroell

### Affiliation:

Helmholtz Munich

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a nightly build

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [x] Yes, I have