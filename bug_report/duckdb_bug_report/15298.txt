ID: 15298
Title: Experimental Spark API produces unexpected Exceptions related to alias
Description:
### What happens?

Trying the new DuckDB Spark API I found two situations which produces unexpected Errors related to relation alias. In both cases, setting new alias seems to solve the problem. I provide those solutions in the code.

### To Reproduce

# Problem 1

```
import pandas as pd
from duckdb.experimental.spark.sql import SparkSession as session
import duckdb.experimental.spark.sql.functions as F

visit_occurrence = pd.DataFrame({
    'mapping_id': [1, 2, 2],
    'person': ['Marc', 'Bob', 'Alice'],
    'source' : ['A', 'A', 'B']
})

spark = session.builder.getOrCreate()

visit_occurrence = spark.createDataFrame(visit_occurrence)

visit_occurrence_A = visit_occurrence.filter(F.col("source") == 'A')
visit_occurrence_B = visit_occurrence.filter(F.col("source") == 'B')

# Solve InvalidInputException
# visit_occurrence_A.relation = visit_occurrence_A.relation.set_alias('A')
# visit_occurrence_B.relation = visit_occurrence_B.relation.set_alias('B')

visit_occurrence_A.join(visit_occurrence_B, on="mapping_id")
```

Raises InvalidInputException.

# Problem 2

```
import pandas as pd
from duckdb.experimental.spark.sql import SparkSession as session
import duckdb.experimental.spark.sql.functions as F

care_site = pd.DataFrame({
    'care_site_id': [1, 2, 3, 4],
    'name': ['A', 'B', 'C', 'D'],
})

visit_occurrence = pd.DataFrame({
    'care_site_id': [1, 2],
    'person': ['Marc', 'Bob'],
    "date" : [pd.to_datetime("01-01-2010"), pd.to_datetime("01-01-2020")]
})

spark = session.builder.getOrCreate()

visit_occurrence = spark.createDataFrame(visit_occurrence)
care_site = spark.createDataFrame(care_site)

visit_occurrence = visit_occurrence.join(
    care_site,
    on="care_site_id",
    how="left"
)

# Solve BinderException
# visit_occurrence.relation = visit_occurrence.relation.set_alias("A")

visit_occurrence = visit_occurrence.withColumn(
    "date",
    F.date_trunc("month", visit_occurrence.date).cast("timestamp")
)
```

Raises BinderException.


### OS:

x86_64

### DuckDB Version:

1.1.4.dev3162

### DuckDB Client:

Python

### Hardware:

_No response_

### Full Name:

Simon Vittoz

### Affiliation:

AP-HP

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a nightly build

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have