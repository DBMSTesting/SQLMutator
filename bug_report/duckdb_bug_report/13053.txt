ID: 13053
Title: Parquet reader considers 'FOO' and 'foo' a duplicate column names and fails
Description:
### What happens?

When a Parquet file contains column names which are case-sensitive different but case-insensitive the same, DuckDB fails when reading it (the file contains two columns: `column` and `COLUMN`):

```
select * from 'example.parquet';
Binder Error: table "example" has duplicate column name "COLUMN"
```

For reference, this works just fine in case of a CSV:

```
select * from 'example.csv';
┌─────────┬────────┬──────────┐
│ column0 │ column │ COLUMN_1 │
│  int64  │ int64  │  int64   │
├─────────┼────────┼──────────┤
│       0 │      1 │        4 │
│       1 │      2 │        5 │
│       2 │      3 │        6 │
└─────────┴────────┴──────────┘
```



### To Reproduce

1. Create a Parquet file with duplicate column names, e.g.:

```
import pyarrow as pa
import pyarrow.parquet as pq

# Create a table with duplicate column names
data = [
    pa.array([1, 2, 3]),
    pa.array([4, 5, 6])
]
table = pa.Table.from_arrays(data, names=['column', 'COLUMN'])

# Write the table to a Parquet file
pq.write_table(table, 'example.parquet', store_schema=False)
```

2. Read it, e.g. using CLI:
```
D select * from 'example.parquet';
Binder Error: table "example" has duplicate column name "column"
```

### OS:

macOS

### DuckDB Version:

1.0.0

### DuckDB Client:

CLI, NodeJS

### Full Name:

Przemyslaw Maciolek

### Affiliation:

Motif Analytics

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a stable release

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [X] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [X] Yes, I have