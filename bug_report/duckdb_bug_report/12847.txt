ID: 12847
Title: Fix union struct implict cast
Description:
Closes #12843 

With this PR, the implicit cast cost for union->union and struct->struct casts are properly calculated, instead of always returning 0.

The issue is that when casting a type into a union, we try to target the member with the lowest implicit cast cost, but we didn't actually compute the cast cost between two different structs, we just always return 0 and rely on the actual struct cast implementation to check that the cast is valid. This could then lead to the wrong union member being chosen If the union contains multiple struct members, as the "first" one would always be picked regardless if it was compatible or not.

Additionally, we also didnt compute the proper implicit cast cost between two unions. Even though we had logic to do it, it was effectively dead code as the `if(from.id() == to.id()` branch would always trigger before. 
