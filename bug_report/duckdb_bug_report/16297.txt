ID: 16297
Title: Problems when using the STDDEV_SAMP function
Description:
### What happens?

Inconsistency occurs when using the var_pop function. Query 1 and Query 2 should return the same result because the condition in having simulates three-valued logic. The result after the union of the three statements should be the same as that of Query 1, but the calculation results are inconsistent.
Specifically, the result of Query 1 contains two data items -- [2.0180999164380524, 0.0, 0.0], while the result of Query 2 is -- [2.018099916438052, 0.0, 0.0]

```
SELECT STDDEV_SAMP(t0.rowid) FROM t0, t1 WHERE t1.rowid GROUP BY t0.c0;
--[2.0180999164380524, 0.0, 0.0]
SELECT STDDEV_SAMP(t0.rowid) FROM t0, t1 WHERE t1.rowid GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT STDDEV_SAMP(t0.rowid) FROM t0, t1 WHERE t1.rowid GROUP BY t0.c0 HAVING (NOT t0.c0) UNION ALL SELECT STDDEV_SAMP(t0.rowid) FROM t0, t1 WHERE t1.rowid GROUP BY t0.c0 HAVING ((t0.c0) IS NULL);
--[2.018099916438052, 0.0, 0.0]
```

### To Reproduce

```sql
CREATE TABLE t0(c0 REAL DEFAULT(DATE '1970-01-19'));
CREATE TABLE t1(c0 VARCHAR);
INSERT INTO t1(c0) VALUES (DATE '1969-12-18');
INSERT INTO t0(c0) VALUES (2038503101);
UPDATE t1 SET c0=930438093;
INSERT INTO t1(c0) VALUES (false), (TIMESTAMP '1970-01-08 23:46:32'), (TIMESTAMP '1969-12-27 03:07:03');
INSERT INTO t0(c0) VALUES (0.6776091330057963);
INSERT INTO t0(c0) VALUES (false), (true);
INSERT INTO t1(c0) VALUES (DATE '1969-12-09');
INSERT INTO t1(c0) VALUES (1.190293297E9);
INSERT INTO t0(c0) VALUES (0.13879180237398636), (true);
INSERT INTO t1(c0) VALUES ('m\r');
DELETE FROM t1;
INSERT INTO t1(c0) VALUES (false);
INSERT INTO t0(c0) VALUES (0.819602549410328);
UPDATE t0 SET c0=NULL;
INSERT INTO t1(c0) VALUES (DATE '1970-01-18');
INSERT INTO t1(c0) VALUES ('^gF');
UPDATE t1 SET c0=t1.rowid;
INSERT INTO t0(c0) VALUES (258457681), (false);
VACUUM;
INSERT INTO t1(c0) VALUES (-465810148);
INSERT INTO t1(c0) VALUES (TIMESTAMP '1970-01-01 12:58:01');
INSERT INTO t1(c0) VALUES (1628844106), (false);
INSERT INTO t1(c0) VALUES (-964647740);

SELECT STDDEV_SAMP(t0.rowid) FROM t0, t1 WHERE t1.rowid GROUP BY t0.c0;
--[2.0180999164380524, 0.0, 0.0]
SELECT STDDEV_SAMP(t0.rowid) FROM t0, t1 WHERE t1.rowid GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT STDDEV_SAMP(t0.rowid) FROM t0, t1 WHERE t1.rowid GROUP BY t0.c0 HAVING (NOT t0.c0) UNION ALL SELECT STDDEV_SAMP(t0.rowid) FROM t0, t1 WHERE t1.rowid GROUP BY t0.c0 HAVING ((t0.c0) IS NULL);
--[2.018099916438052, 0.0, 0.0]
```

### OS:

x86_64

### DuckDB Version:

v1.1.3

### DuckDB Client:

python

### Hardware:

_No response_

### Full Name:

ChenglinTian

### Affiliation:

Personal

### What is the latest build you tested with? If possible, we recommend testing with the latest nightly build.

I have tested with a source build

### Did you include all relevant data sets for reproducing the issue?

Yes

### Did you include all code required to reproduce the issue?

- [x] Yes, I have

### Did you include all relevant configuration (e.g., CPU architecture, Python version, Linux distribution) to reproduce the issue?

- [x] Yes, I have