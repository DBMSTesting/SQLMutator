ID: 1754
Title: [Bug]: value changed after relaxing where condition
Description:

**Describe the bug**
When I use a more loose condition, the previous query results should be a subset of the last one, but now there are values outside the set.
**Environment**
```
ubuntu:~/Desktop$ uname -a
Linux ubuntu 5.15.0-91-generic #101~20.04.1-Ubuntu SMP Thu Nov 16 14:22:28 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux

```
```sql
obclient [d1]> select version();
+------------------------------+
| version()                    |
+------------------------------+
| 5.7.25-OceanBase_CE-v4.2.1.0 |
+------------------------------+
1 row in set (0.000 sec)

```
  

**Fast Reproduce Steps(Required)**

```sql

create table table_3_utf8_undef (
`pk` int primary key,
`col_bigint_undef_signed` bigint  ,
`col_bigint_undef_unsigned` bigint unsigned ,
`col_bigint_key_signed` bigint  ,
`col_bigint_key_unsigned` bigint unsigned ,
`col_float_undef_signed` float  ,
`col_float_undef_unsigned` float unsigned ,
`col_float_key_signed` float  ,
`col_float_key_unsigned` float unsigned ,
`col_double_undef_signed` double  ,
`col_double_undef_unsigned` double unsigned ,
`col_double_key_signed` double  ,
`col_double_key_unsigned` double unsigned ,
`col_decimal(40, 20)_undef_signed` decimal(40, 20)  ,
`col_decimal(40, 20)_undef_unsigned` decimal(40, 20) unsigned ,
`col_decimal(40, 20)_key_signed` decimal(40, 20)  ,
`col_decimal(40, 20)_key_unsigned` decimal(40, 20) unsigned ,
`col_char(20)_undef_signed` char(20)  ,
`col_char(20)_key_signed` char(20)  ,
`col_varchar(20)_undef_signed` varchar(20)  ,
`col_varchar(20)_key_signed` varchar(20)  ,
key (`col_bigint_key_signed`),
key (`col_bigint_key_unsigned`),
key (`col_float_key_signed`),
key (`col_float_key_unsigned`),
key (`col_double_key_signed`),
key (`col_double_key_unsigned`),
key (`col_decimal(40, 20)_key_signed`),
key (`col_decimal(40, 20)_key_unsigned`),
key (`col_char(20)_key_signed`),
key (`col_varchar(20)_key_signed`)
) character set utf8 ;
insert into table_3_utf8_undef values (0,82.1847,1,39.0425,38.1089,-1,1,94.1106,1.009,12.991,19755,-13064,0,1,79.1429,-2,1,"well",'3
','-0','e'),(1,1,20.0078,-9.183,68.1957,1,2,1,0.0001,12.991,2,71.0510,1,-1,2,12.991,12.991,'3	','1','3	','-0'),(2,-2,1,-21247,1.009,2,1.009,0.0001,36.0002,-2,2,-0,0.0001,-2,0.1598,47.1515,1.009,'3	','w','-1','e');
create table table_7_utf8_undef (
`pk` int primary key,
`col_bigint_undef_signed` bigint  ,
`col_bigint_undef_unsigned` bigint unsigned ,
`col_bigint_key_signed` bigint  ,
`col_bigint_key_unsigned` bigint unsigned ,
`col_float_undef_signed` float  ,
`col_float_undef_unsigned` float unsigned ,
`col_float_key_signed` float  ,
`col_float_key_unsigned` float unsigned ,
`col_double_undef_signed` double  ,
`col_double_undef_unsigned` double unsigned ,
`col_double_key_signed` double  ,
`col_double_key_unsigned` double unsigned ,
`col_decimal(40, 20)_undef_signed` decimal(40, 20)  ,
`col_decimal(40, 20)_undef_unsigned` decimal(40, 20) unsigned ,
`col_decimal(40, 20)_key_signed` decimal(40, 20)  ,
`col_decimal(40, 20)_key_unsigned` decimal(40, 20) unsigned ,
`col_char(20)_undef_signed` char(20)  ,
`col_char(20)_key_signed` char(20)  ,
`col_varchar(20)_undef_signed` varchar(20)  ,
`col_varchar(20)_key_signed` varchar(20)  ,
key (`col_bigint_key_signed`),
key (`col_bigint_key_unsigned`),
key (`col_float_key_signed`),
key (`col_float_key_unsigned`),
key (`col_double_key_signed`),
key (`col_double_key_unsigned`),
key (`col_decimal(40, 20)_key_signed`),
key (`col_decimal(40, 20)_key_unsigned`),
key (`col_char(20)_key_signed`),
key (`col_varchar(20)_key_signed`)
) character set utf8 ;
insert into table_7_utf8_undef values (0,-9.183,1,1.1384,2,15.1271,12.991,-2,0.0001,36.1270,79.1819,0.0001,0.0001,3.1387,52.0818,-0,0.0001,'1','3	','0','0'),(1,79,12.991,107,2,-0.0001,0,1.009,1.009,34,1,-1,69.0208,1,2,120,12.991,'3	','-1',"if",'b'),(2,-2,1,-9.183,1,12.991,0.0001,53,12.991,1.009,12.991,12.991,0.0001,-0.0001,12.991,0.0001,2,'3
','p','0','3	'),(3,-0.0001,12.991,1.009,1.009,-9.183,2,0,1,-2,1,2,1,2,1.009,2,12.991,'3
','0','k','0'),(4,1.009,0.0001,-1,12.991,2,47,2,0,12.991,12.991,1.009,0,1.009,1.009,-0.0001,6949,'-1','	3','1','m'),(5,-0,1,0,0,0.0001,28.1237,12.991,0,12.991,12.991,-0,12.991,2,2,2,1.009,'0','	3','0','	3'),(6,45.0855,1,38.1166,1,1.009,80.0284,2,122,0.0001,0,-1,11130,0,1,1,0,"know",'-0','
3','3
');


```
query1:
```sql
(SELECT (BINARY TO_DAYS(_UTF8MB4'2017-01-21')) AS `f1`,(ROUND(6)) AS `f2`,(SQRT(0)) AS `f3` FROM (
    SELECT `col_varchar(20)_key_signed` AS `f7`,`col_float_undef_signed` AS `f5`,`col_float_key_signed` AS `f8` FROM `table_3_utf8_undef` 
    USE INDEX (`col_float_key_signed`, `col_varchar(20)_key_signed`)) AS `t1` NATURAL JOIN (SELECT (DATE_ADD(LCASE(`f12`), INTERVAL 1 DAY_SECOND)) AS `f4`,(COERCIBILITY(6)^`f12`) 
    AS `f9`,(!`f11`) AS `f6` FROM (SELECT `col_double_undef_signed` AS `f10`,`col_decimal(40, 20)_key_unsigned` AS `f11`,`col_decimal(40, 20)_key_signed` AS `f12` 
    FROM `table_7_utf8_undef` FORCE INDEX (`col_varchar(20)_key_signed`)) AS `t2`) AS `t3`) UNION (SELECT (~ROUND(7035697291755694938)>>_UTF8MB4'2008-02-10'>>`f14`) 
    AS `f1`,(DAYOFYEAR(_UTF8MB4'2019-11-25') DIV ~TIME_TO_SEC(_UTF8MB4'02:13:34')) AS `f2`,(LTRIM(`f15`)%BINARY `f13`) AS `f3` FROM (SELECT `col_bigint_key_unsigned` 
    AS `f13`,`col_char(20)_undef_signed` AS `f14`,`col_double_key_signed` AS `f15` FROM `table_7_utf8_undef` IGNORE INDEX (`col_double_key_signed`)) AS `t4` 
    
    WHERE (NOT (CAST((`f15`) AS CHAR) NOT REGEXP _UTF8MB4'^[0-9]')) IS FALSE);

 ```
 query2:
```sql


(SELECT (BINARY TO_DAYS(_UTF8MB4'2017-01-21')) AS `f1`,(ROUND(6)) AS `f2`,(SQRT(0)) AS `f3` FROM (
    SELECT `col_varchar(20)_key_signed` AS `f7`,`col_float_undef_signed` AS `f5`,`col_float_key_signed` AS `f8` FROM `table_3_utf8_undef` 
    USE INDEX (`col_float_key_signed`, `col_varchar(20)_key_signed`)) AS `t1` NATURAL JOIN (SELECT (DATE_ADD(LCASE(`f12`), INTERVAL 1 DAY_SECOND)) AS `f4`,(COERCIBILITY(6)^`f12`)
    AS `f9`,(!`f11`) AS `f6` FROM (SELECT `col_double_undef_signed` AS `f10`,`col_decimal(40, 20)_key_unsigned` AS `f11`,`col_decimal(40, 20)_key_signed` AS `f12` 
    FROM `table_7_utf8_undef` FORCE INDEX (`col_varchar(20)_key_signed`)) AS `t2`) AS `t3`) UNION (SELECT (~ROUND(7035697291755694938)>>_UTF8MB4'2008-02-10'>>`f14`) 
    AS `f1`,(DAYOFYEAR(_UTF8MB4'2019-11-25') DIV ~TIME_TO_SEC(_UTF8MB4'02:13:34')) AS `f2`,(LTRIM(`f15`)%BINARY `f13`) AS `f3` FROM (SELECT `col_bigint_key_unsigned` 
    AS `f13`,`col_char(20)_undef_signed` AS `f14`,`col_double_key_signed` AS `f15` FROM `table_7_utf8_undef` IGNORE INDEX (`col_double_key_signed`)) AS `t4` 
    
    WHERE 1);
```

**Expected behavior**
In theory, the result of sql1 âŠ† the result of sql2.
Because the condition "where 1 " in sql2 is always true, but the condition  in sql1 may not be true.
**Actual Behavior**
However, the value (0,0,-0)  changed to (0,0,0)   after changing the condition, seems like a logical bug:

result1:
```sql
+--------+------+------+
| f1     | f2   | f3   |
+--------+------+------+
| 0      |    0 |   -1 |
| 0      |    0 |   -0 |
| 736715 |    6 |    0 |
+--------+------+------+
3 rows in set, 2 warnings (0.005 sec)




```

result2:
```sql
+--------+------+--------------------+
| f1     | f2   | f3                 |
+--------+------+--------------------+
| 0      |    0 |               NULL |
| 0      |    0 |                 -1 |
| 0      |    0 |                  0 |
| 0      |    0 |             0.0001 |
| 0      |    0 | 0.9909999999999997 |
| 0      |    0 |              1.009 |
| 736715 |    6 |                  0 |
+--------+------+--------------------+
7 rows in set, 4 warnings (0.004 sec)



```