ID: 1042
Title: [Bug]: DEADCODE  Code can never be reached because of a logical contradiction
Description:
### Please check the issue list for the same bug

- [X] I have checked issue list and this bug is encountered for the first time.

### Environment

```markdown
- OB Version&commit_id or other module version&commit_id (e.g. observer V3.1.2 8b23a93):
- Hardware parameter:OS type & Compliler & CPU etc. 
- Others
```


### Fast Reproduce Steps(Required)

in ob_code_generator_impl.cpp

```cpp
int ObCodeGeneratorImpl::convert_limit(ObLogLimit& op, const PhyOpsDesc& child_ops, PhyOpsDesc& out_ops)
{
  int ret = OB_SUCCESS;
  ObLimit* phy_op = NULL;
  RowDesc* out_row_desc = NULL;
  RowDesc* input_row_desc = NULL;
  if (OB_UNLIKELY(1 != child_ops.count())) {
    ret = OB_ERR_UNEXPECTED;
    LOG_ERROR("wrong # of children", K(ret), K(child_ops.count()));
  } else if (FALSE_IT(input_row_desc = child_ops.at(0).second)) {
    ret = OB_ERR_UNEXPECTED;   // never reached
    LOG_WARN("get unexpected null", K(ret));
  } else if (OB_FAIL(create_phy_op_desc(PHY_LIMIT, phy_op, out_row_desc, out_ops, op.get_op_id()))) {
    LOG_WARN("failed to create phy op and desc", K(ret));
} ...
```

### Actual Behavior

null

### Expected Behavior

null

### other information

null