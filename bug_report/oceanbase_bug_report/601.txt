ID: 601
Title: [WhiteScan] [FORWARD_NULL] src/sql/engine/expr/ob_datum_cast.cpp
Description:
src/sql/engine/expr/ob_datum_cast.cpp
----8<--------------8<-------
168:    out_str.assign_ptr(buf, static_cast<int32_t>(buf_len));
169:  }
170:  return ret;
171:}
172:
173:int ObDatumHexUtils::hex(
174:    const ObExpr& expr, const ObString& in_str, ObEvalCtx& ctx, ObIAllocator& calc_alloc, ObDatum& res_datum)
175:{
176:  int ret = OB_SUCCESS;
Condition "in_str->empty()", taking false branch. major
177:  if (in_str.empty()) {
178:    if (lib::is_oracle_mode()) {
179:      res_datum.set_null();
180:    } else {
181:      res_datum.set_string(NULL, 0);
182:    }
183:  } else {
184:    char* buf = NULL;
185:    bool need_convert = false;
186:    ObCollationType def_cs = ObCharset::get_system_collation();
187:    ObCollationType dst_cs = expr.datum_meta_.cs_type_;
Assigning: "alloc" = "NULL". major
188:    ObIAllocator* alloc = NULL;
189:    ObExprStrResAlloc res_alloc(expr, ctx);
190:    // check if need convert first, and setup alloc. we can avoid copy converted res str.
Condition "oceanbase::sql::ObExprUtil::need_convert_string_collation(def_cs, dst_cs, need_convert)", taking true branch. major
191:    if (ObExprUtil::need_convert_string_collation(def_cs, dst_cs, need_convert)) {
Condition "true", taking true branch. major
Condition "oceanbase::common::ObLogger::get_logger()->need_to_print(M_SQL, 2)", taking true branch. major
192:      LOG_WARN("check need convert cs type failed", K(ret), K(def_cs), K(dst_cs));
Falling through to end of if statement. major
193:    } else if (need_convert) {
194:      alloc = &calc_alloc;
195:    } else {
196:      alloc = &res_alloc;
197:    }
Condition "!!(0 /* oceanbase::common::OB_SUCCESS */ == (ret = ret))", taking true branch. major
198:    if (OB_SUCC(ret)) {
199:      const int32_t alloc_length = in_str.length() * 2;
Medium:(FORWARD_NULL)
CWE476: Dereference of an explicit null value
Passing null pointer "alloc" to "alloc", which dereferences it. (The dereference happens because this is a virtual function call.)

src/sql/engine/expr/ob_datum_cast.cpp: oceanbase::sql::ObDatumHexUtils::hex(oceanbase::sql::ObExpr const &, oceanbase::common::ObString const &, oceanbase::sql::ObEvalCtx &, oceanbase::common::ObIAllocator &, oceanbase::common::ObDatum &)
200:      if (OB_ISNULL(buf = reinterpret_cast<char*>(alloc->alloc(alloc_length)))) {
201:        res_datum.set_null();
202:        ret = OB_ALLOCATE_MEMORY_FAILED;
203:        LOG_WARN("alloc memory failed", K(ret), K(alloc_length));
204:      } else {
205:        static const char* HEXCHARS = "0123456789ABCDEF";
206:        int32_t pos = 0;
207:        for (int32_t i = 0; i < in_str.length(); ++i) {
208:          buf[pos++] = HEXCHARS[in_str[i] >> 4 & 0xF];
209:          buf[pos++] = HEXCHARS[in_str[i] & 0xF];
210:        }