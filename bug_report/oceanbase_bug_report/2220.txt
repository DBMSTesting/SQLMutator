ID: 2220
Title: [Bug]: Wrong execution result when remove all parentheses
Description:
**Describe the bug**

**Environment**

- OS Version and CPU Arch(`uname -a`):

```bash
Linux 3.10.0-1160.119.1.el7.x86_64 #1 SMP Tue Jun 4 14:43:51 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux
```

- OB Version(`LD_LIBRARY_PATH=../lib:$LD_LIBRARY_PATH ./observer -V`):

```bash
select version();
-- 5.7.25-OceanBase_CE-v4.3.4.0
```

**Fast Reproduce Steps(Required)**

Steps to reproduce the behavior:

```sql
DROP TABLE IF EXISTS t0;
CREATE TABLE t0 (
    id INT AUTO_INCREMENT PRIMARY KEY,
    c0 DOUBLE,
    INDEX idx_c0 (c0)
);

INSERT INTO t0 (c0) VALUES 
(1), (2.5), (10), (18.8), (-2.4), (-1.4134e10);

SELECT *
FROM t0 
WHERE c0 * -1 < 0 AND c0 BETWEEN id AND c0 >> 1 > 1 - c0 AND c0 ^ 3 << 2 < 41 
ORDER BY c0;

SELECT *
FROM t0
WHERE ((c0 * (-1)) < 0)
  AND (c0 BETWEEN id AND ((c0 >> 1) > (1 - c0)))
  AND (((c0 ^ 3) << 2) < 41)
ORDER BY c0;
```

**Expected behavior**

see the following case:

I noticed that OceanBase seems to have issues with default operator precedence. 
According to the precedence rules in the manual, adding parentheses results in inconsistencies.

```sql
INTERVAL
BINARY, COLLATE
!
- (unary minus), ~ (unary bit inversion)
^
*, /, DIV, %, MOD
-, +
<<, >>
&
|
= (comparison), <=>, >=, >, <=, <, <>, !=, IS, LIKE, REGEXP, IN
BETWEEN, CASE, WHEN, THEN, ELSE
NOT
AND, &&
XOR
OR, ||
= (assignment), :=
```

**Actual Behavior**

```sql
-- OB
mysql> SELECT *
    -> FROM t0
    -> WHERE c0 * -1 < 0 AND c0 BETWEEN id AND c0 >> 1 > 1 - c0 AND c0 ^ 3 << 2 < 41
    -> ORDER BY c0;
+----+------+
| id | c0   |
+----+------+
|  2 |  2.5 |
|  3 |   10 |
+----+------+
2 rows in set (0.03 sec)

mysql> SELECT *
    -> FROM t0
    -> WHERE ((c0 * (-1)) < 0)
    ->   AND (c0 BETWEEN id AND ((c0 >> 1) > (1 - c0)))
    ->   AND (((c0 ^ 3) << 2) < 41)
    -> ORDER BY c0;
Empty set (0.04 sec)
```

**Additional context**