ID: 1998
Title: [Bug]: `case when` with subquery may produce unexpected result
Description:
**Describe the bug**
`case when` with subquery may produce unexpected result

**Fast Reproduce Steps(Required)**
init tables:
```sql
create table t_woi6xxwpz ( 
  c_xekv4zho0 int ,
  c_let3se9wfa text ,
  c_r7lyh72lh double ,
  c_f7g0xx int ,
  c_nug text ,
  c_r0 int ,
  c_nl63 tinyint ,
  c__kf3bw double ,
  c_cf_50wza6t double ,
  primary key(c_f7g0xx, c_xekv4zho0),
  unique(c__kf3bw, c_xekv4zho0),
  index main_index (c_f7g0xx)) partition by hash(c_xekv4zho0) partitions 6;

create table t_ibe0j ( 
  c_gkzgb int ,
  c_rgwz36r double ,
  c_p text not null ,
  c_dos0n8jp double ,
  primary key(c_gkzgb),
  unique(c_dos0n8jp, c_gkzgb),
  index main_index (c_gkzgb)) partition by hash(c_gkzgb) partitions 9;

insert into t_ibe0j (c_gkzgb, c_rgwz36r, c_p, c_dos0n8jp) values 
  (-309802039, 77.27, 's3m9fn', 65536.5), 
  (-296666401, 66.20, 'x', 2147483649.1), 
  (-823795648, 44.29, 'tszlvzg', 2147483647.0), 
  (-170265703, 9223372036854775807.2, 'm3z2ri6k', 17.96);

insert into t_ibe0j (c_gkzgb, c_rgwz36r, c_p, c_dos0n8jp) values 
  (-1638718585, cast(null as double), 'd95q_k', cast(null as double)), 
  (-2114468248, 71.89, 'o48m1', 84.36), 
  (-361680277, 68.43, 'm', 28.91), 
  (-1557165987, 7.33, 'ehlt', 9223372036854775808.0);

insert into t_woi6xxwpz (c_xekv4zho0, c_let3se9wfa, c_r7lyh72lh, c_f7g0xx, c_nug, c_r0, c_nl63, c__kf3bw, c_cf_50wza6t) values 
  (826029568, 'utg10tlf', 83.70, -881643695, 'khtzf', cast(cast(null as signed) as signed), (-585466969 not in (
    695627179, -1470305476, 478389766)), 2.16, 32766.9), 
  (-788843095, cast(null as char), 36.50, -1154699209, 'vjwv_u00yg', -1477311069, (-1106881567 is not NULL), 18446744073709551616.4, 126.6), 
  (-1044554560, 's_u30w0m', 89.63, -1748309676, 'fh', -1659694924, (NOT NOT(cast( (cast('bgdjr5' as char) > cast(cast(null as char) as char)) as unsigned))), cast(null as double), 18446744073709551614.2), 
  (-86193183, 'zn5fn', 16.64, -1248973338, 'dtkw55obc3', -1285941496, (-815076174 between 435505682 and cast(cast(null as signed) as signed)), 4294967294.3, 80.99);

insert into t_ibe0j (c_gkzgb, c_rgwz36r, c_p, c_dos0n8jp) values 
  (-325056250, 9223372036854775806.7, 'wioey3lp61', 43.1), 
  (-278236644, 4294967294.5, 'vu7', 27.75), 
  (2016036044, 5.19, 'bxwg67dg', cast(null as double)), 
  (1800861626, cast(null as double), 'd', 127.1);

insert into t_ibe0j (c_gkzgb, c_rgwz36r, c_p, c_dos0n8jp) values 
  (1303490773, 84.23, 'aynmfd', 36.25), 
  (-60107980, 41.36, 'h', 15.48), 
  (794303831, cast(null as double), 'a4o00vjui', 9223372036854775807.0), 
  (-1704597898, 88.69, 'llvfo', 9223372036854775809.7);

insert into t_woi6xxwpz (c_xekv4zho0, c_let3se9wfa, c_r7lyh72lh, c_f7g0xx, c_nug, c_r0, c_nl63, c__kf3bw, c_cf_50wza6t) values 
  (921678791, 'w3', 9223372036854775809.8, 782861187, 'zds1pd', -906722571, (NOT NOT(cast( (cast('tla' as char) <> cast(cast(null as char) as char)) as unsigned))), 2147483649.8, 127.0), 
  (-1306417856, 'kw_a5i6', 20.36, 1998711133, 'y4pat_', -401033331, 0<>0, 6.66, cast(null as double)), 
  (1819395772, 'thhm0', 82.2, 366016458, 'uk2ok884v2', cast(cast(null as signed) as signed), 0<>0, 32768.4, 35.40), 
  (-1522934921, 'n', 28.63, -1437402816, 'wqzmlu4ka', -1278194552, 1=1, 97.7, cast(null as double));

insert into t_woi6xxwpz (c_xekv4zho0, c_let3se9wfa, c_r7lyh72lh, c_f7g0xx, c_nug, c_r0, c_nl63, c__kf3bw, c_cf_50wza6t) values 
  (1756717966, 'len3', 9223372036854775807.1, 808170192, 'cvs94k3g5', -1729280063, (cast(cast(null as signed) as signed) in (
    cast(cast(null as signed) as signed), cast(cast(null as signed) as signed), -1557152270)), 65535.6, 53.53), 
  (-856168407, 'hfu4duk', 127.7, 1955442572, 'v6ek3f1p', 1387226419, (NOT NOT(cast( (cast(cast(null as decimal) as decimal) > cast(40.28 as double)) as unsigned))), cast(null as double), cast(null as double)), 
  (-1167378713, 'cj', 7.99, -1308161157, 'zjc5j2vj3', -1143848521, (NOT NOT(cast( (cast(79.4 as double) || cast((NOT NOT(cast( (1740106 != -7764) as unsigned))) as unsigned)) as unsigned))), 44.60, 57.42), 
  (-1200407285, 'zuslv', 29.10, -1056570796, 'etmzwryva8', 267455838, ((cast(cast(null as signed) as signed) is not NULL)) 
    or ((NOT NOT(cast( (cast(cast(null as char) as char) = cast(cast(null as char) as char)) as unsigned)))), 47.53, 65.96);

insert into t_ibe0j (c_gkzgb, c_rgwz36r, c_p, c_dos0n8jp) values 
  (1593853578, 4294967294.0, 'mm8', 65537.0), 
  (881558026, cast(null as double), 'f48tt', 4.82), 
  (106467571, 85.60, 'z8o0oy', cast(null as double)), 
  (-1835899970, 32768.4, 't6y', 70.56);

insert into t_ibe0j (c_gkzgb, c_rgwz36r, c_p, c_dos0n8jp) values 
  (-1078967977, 60.53, 'etg', 4294967295.9), 
  (273545421, 35.73, 'urv_c', 78.95), 
  (-810506230, 56.1, 'dt8', 52.42), 
  (1797425834, 25.53, 'vncfa5n', 65537.0);

insert into t_woi6xxwpz (c_xekv4zho0, c_let3se9wfa, c_r7lyh72lh, c_f7g0xx, c_nug, c_r0, c_nl63, c__kf3bw, c_cf_50wza6t) values 
  (-723270285, 'tp7a0utu', 92.84, -1218555296, 'h1ajfedla6', 1342773880, 1=1, 17.60, 93.95), 
  (1127575947, 'qx2favgd', 79.28, 1059727401, cast(null as char), 193831461, ((NOT NOT(cast( (cast(25951 as signed) <= cast(cast(null as signed) as signed)) as unsigned)))) 
    or (0<>0), 18446744073709551614.1, 68.97), 
  (1502633387, 'hjjcv', 100.84, -1389107720, 'g', 1459759743, (NOT NOT(cast( ('tnv1d' != 'a') as unsigned))), 88.67, 12.79), 
  (2106767082, 'cfhb', 18446744073709551616.1, -839354151, 'ta', -172924967, (-268645310 in (
    270032298, -1868185254, -530013980, 1850088494)), 65535.1, 2147483647.7);

insert into t_ibe0j (c_gkzgb, c_rgwz36r, c_p, c_dos0n8jp) values 
  (1565692816, cast(null as double), '_jaaeznw8q', 256.0), 
  (-2021313335, 1.20, 'c5vmcj', 5.98), 
  (622162620, 47.35, 'dus2imc', 52.99), 
  (567302921, 5.69, '_zdxq', 9.45);

insert into t_ibe0j (c_gkzgb, c_rgwz36r, c_p, c_dos0n8jp) values 
  (214003988, 84.93, 'cgk', 2147483647.2), 
  (-1395811571, cast(null as double), 'klb0g', 39.60), 
  (1764918962, 13.3, 'xuaj5w23v_', 60.11), 
  (-2007955025, 4294967297.8, 'd', 32768.1);

insert into t_ibe0j (c_gkzgb, c_rgwz36r, c_p, c_dos0n8jp) values 
  (1397246701, 65535.3, 'mpx72qyo', 127.3), 
  (-622330046, 127.2, 'j59sdx1', cast(null as double)), 
  (1374137041, 2147483648.100000, 'g001q', cast(null as double)), 
  (-771502770, 89.40, 'cglbdv', 128.6);

insert into t_woi6xxwpz (c_xekv4zho0, c_let3se9wfa, c_r7lyh72lh, c_f7g0xx, c_nug, c_r0, c_nl63, c__kf3bw, c_cf_50wza6t) values 
  (-465390094, '_h_t', 94.50, 737145995, 'er', -1569850910, (0<>0) 
    and ((1916963325 between 75248895 and -1713054675)), 254.8, 65.52), 
  (-1000961804, 's2p', cast(null as double), 2025814942, 'mm', 276361064, (1=1) 
    and ((NOT NOT(cast( (cast(((-1124871596 between 875465760 and -337371525)) 
          and (('le' like '%g9_0m')) as unsigned) >= cast(19.46 as double)) as unsigned)))), 65534.3, 19.65), 
  (1203117937, 'slsbbaoy0h', 27.94, -174197777, cast(null as char), -471291244, (0<>0) 
    and (('kh2wfesttz' like '%')), 94.29, 44.56), 
  (-281229825, 'gx5zjc', 79.3, 723415815, 'p5w6duqv', -688998832, (-2094468152 is not NULL), 18446744073709551617.2, 8.28);

insert into t_ibe0j (c_gkzgb, c_rgwz36r, c_p, c_dos0n8jp) values 
  (-604300966, 23.69, 'h_m', cast(null as double)), 
  (-1120182863, 65536.3, 'mnik', 257.0), 
  (1971076289, 65537.1, 'rxcw4e6', 66.31), 
  (-503550024, 5.67, 'yt1kji7e', 39.55);

insert into t_ibe0j (c_gkzgb, c_rgwz36r, c_p, c_dos0n8jp) values 
  (1883123220, 9223372036854775806.6, 'qku7f7', 82.4), 
  (1825611729, 64.64, 'ablf', 38.98), 
  (1517746821, 9223372036854775807.7, 'z5pz2q', 8.57), 
  (1062232675, 88.17, 'fog2x', 68.21);

insert into t_woi6xxwpz (c_xekv4zho0, c_let3se9wfa, c_r7lyh72lh, c_f7g0xx, c_nug, c_r0, c_nl63, c__kf3bw, c_cf_50wza6t) values 
  (698820208, 'zarp3ra', 9223372036854775808.3, 339481720, 'b3lodl', -1635163152, (NOT NOT(cast( (cast(45.8 as double) >= cast(2041458147 as signed)) as unsigned))), 90.90, 12.18), 
  (-1944830477, 'v', 5.36, 600430999, 'yp', cast(cast(null as signed) as signed), 0<>0, 13.9, 14.13), 
  (-1421147768, 'ir40z6', 3.100, 1800770279, 'w_q5', -2065438271, (1=1) 
    or ((NOT NOT(cast( (cast(744191383 as signed) = cast(47.83 as double)) as unsigned)))), 23.21, 45.77), 
  (-45451300, '_oji', 19.30, 1033700658, 'xzgpu', -1342546258, 0<>0, 1.62, 4294967297.5);

insert into t_ibe0j (c_gkzgb, c_rgwz36r, c_p, c_dos0n8jp) values 
  (352727761, 89.74, '_p', 78.90), 
  (1196637968, 4294967295.4, 'a', 32769.0), 
  (523247559, 79.13, 'ptgltyvote', 87.97), 
  (-268163778, 37.98, 'p', 2147483646.5);

delete from t_woi6xxwpz
where 
(NOT NOT(cast( (cast((t_woi6xxwpz.c_xekv4zho0 between t_woi6xxwpz.c_xekv4zho0 and t_woi6xxwpz.c_f7g0xx) as unsigned) >= cast(truncate(
      cast(cast( ((NOT NOT(cast( (cast(t_woi6xxwpz.c_r7lyh72lh as double) != cast((select c_rgwz36r from t_ibe0j order by c_rgwz36r limit 1 offset 4)
               as double)) as unsigned))) DIV t_woi6xxwpz.c_r0) as signed) as signed), 
      cast(case when (EXISTS (
          select  
              t_woi6xxwpz.c_nl63 as c0, 
              ref_0.c_rgwz36r as c1, 
              ref_0.c_dos0n8jp as c2, 
              ref_0.c_p as c3, 
              576024528 as c4, 
              ref_0.c_gkzgb as c5, 
              t_woi6xxwpz.c_nl63 as c6, 
              t_woi6xxwpz.c_nug as c7, 
              ref_0.c_dos0n8jp as c8, 
              ref_0.c_dos0n8jp as c9, 
              ref_0.c_rgwz36r as c10, 
              ref_0.c_gkzgb as c11
            from 
              t_ibe0j as ref_0
            where 0<>0
            order by c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11 desc
            limit 69)) then t_woi6xxwpz.c_xekv4zho0 else t_woi6xxwpz.c_xekv4zho0 end
         as signed)) as signed)) as unsigned)));

create table t_lfq9 as 
select  
    -1129254002 as c0, 
    ref_0.c_nug as c1, 
    ref_0.c_cf_50wza6t as c2, 
    ref_0.c_cf_50wza6t as c3, 
    atan2(
      cast(ref_0.c_nl63 as decimal), 
      cast(ref_0.c_r0 as decimal)) as c4, 
    cast(nullif(
      ref_0.c_cf_50wza6t, 
      126.9
      ) as double) as c5, 
    ref_0.c_f7g0xx as c6, 
    ref_0.c_f7g0xx as c7, 
    ref_0.c__kf3bw as c8
  from 
    t_woi6xxwpz as ref_0
  where (ref_0.c_r0 is NULL);

create table t_uhl as 
select  
    truncate(
      cast(ref_0.c_nl63 as decimal), 
      cast(ref_0.c_f7g0xx as signed)) as c0, 
    cast( (ref_0.c_f7g0xx % (select c_xekv4zho0 from t_woi6xxwpz order by c_xekv4zho0 limit 1 offset 6)
        ) as signed) as c1, 
    ref_0.c_r7lyh72lh as c2, 
    ref_0.c_let3se9wfa as c3, 
    ref_0.c_let3se9wfa as c4, 
    cast( (cast(ref_0.c_let3se9wfa as char) >= cast(ref_0.c_let3se9wfa as char)) as unsigned) as c5, 
    cast( (cast(ref_0.c_nug as char) < cast(ref_0.c_nug as char)) as unsigned) as c6, 
    is_uuid(
      cast(ref_0.c_nug as char)) as c7, 
    ref_0.c_f7g0xx as c8
  from 
    t_woi6xxwpz as ref_0
  where (ref_0.c_nug not like 'q%rlrvpm%n')
  order by c0, c1, c2, c3, c4, c5, c6, c7, c8 desc
  limit 55;
```

sql which causes error:
```sql
SELECT
  (select c_gkzgb from t_ibe0j order by c_gkzgb limit 1 offset 1) <= subq_0.c8 as p1,
  
  case when 
  (select c_gkzgb from t_ibe0j order by c_gkzgb limit 1 offset 1) <= subq_0.c8 
  then count(*) over (partition by subq_0.c1 order by subq_0.c2)
          else 'ppppp' end
     as c9
FROM
  (t_uhl as ref_0
    left outer join (t_ibe0j as ref_1
      inner join (select  
                  ref_2.c2 as c1, 
                  (select sum(c0) from t_lfq9) as c2, 
                  1262414146 as c8
          from t_lfq9 as ref_2
          where 0<>0) as subq_0
      on (ref_1.c_dos0n8jp = subq_0.c1 ))
    on (ref_0.c4 = ref_1.c_p ))
ORDER BY
  c9 ASC
;
```

**Expected behavior**
When the first column is 1, the second column should be a number.
Single-node version of OceanBase output correct result:
```
1 | `22` | 
1 | `22` | 
1 | `22` | 
1 | `22` | 
1 | `22` | 
1 | `22` | 
1 | `22` | 
1 | `22` | 
1 | `22` | 
1 | `22` | 
1 | `22` | 
1 | `22` | 
1 | `22` | 
1 | `22` | 
1 | `22` | 
1 | `22` | 
1 | `22` | 
1 | `22` | 
1 | `22` | 
1 | `22` | 
1 | `22` | 
1 | `22` | 

```


**Actual Behavior**
Multi-node version of OceanBase output unexpected result:
```
1 | `ppppp` | 
1 | `ppppp` | 
1 | `ppppp` | 
1 | `ppppp` | 
1 | `ppppp` | 
1 | `ppppp` | 
1 | `ppppp` | 
1 | `ppppp` | 
1 | `ppppp` | 
1 | `ppppp` | 
1 | `ppppp` | 
1 | `ppppp` | 
1 | `ppppp` | 
1 | `ppppp` | 
1 | `ppppp` | 
1 | `ppppp` | 
1 | `ppppp` | 
1 | `ppppp` | 
1 | `ppppp` | 
1 | `ppppp` | 
1 | `ppppp` | 
1 | `ppppp` | 
```

**Environment**
```
Linux bass1 6.5.0-28-generic #29~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Apr  4 14:39:20 UTC 2 x86_64 x86_64 x86_64 GNU/Linux

observer (OceanBase_CE 4.3.2.0)

REVISION: 1-d66ce5ddb37300d9178cc9b9655b679bb567eb6b
BUILD_BRANCH: develop
BUILD_TIME: May 24 2024 19:45:57
BUILD_FLAGS: RelWithDebInfo
BUILD_INFO: 

Copyright (c) 2011-present OceanBase Inc.
```


Distributed deploy config:
```
user:
  username: root
  key_file: private_key
oceanbase-ce:
  servers:
    - name: server1
      ip: 10.0.10.11
    - name: server2
      ip: 10.0.10.12
    - name: server3
      ip: 10.0.10.13
  server1:
    mysql_port: 10000
    rpc_port: 10001
    home_path: /root/data/observer1
    zone: zone1
  server2:
    mysql_port: 10000
    rpc_port: 10001
    home_path: /root/data/observer2
    zone: zone2
  server3:
    mysql_port: 10000
    rpc_port: 10001
    home_path: /root/data/observer3
    zone: zone3
  tag: latest
  include: obd/observer.include.yaml
  global: 
    # for default system config used by farm, please see tools/deploy/obd/observer.include.yaml
    # You can also specify the configuration directly below (stored locally, switching the working directory and redeploying will still take effect)
    production_mode: false
    devname: eth0
    syslog_level: 'WARN'
    syslog_io_bandwidth_limit: '30M'
    log_disk_size: '30G'
    # diag_syslog_per_error_limit: '4'
    max_syslog_file_count: '4'
    cpu_count: '6'
    datafile_size: '10G'
    datafile_next: '5G'
    datafile_maxsize: '30G'
    root_password: ''
    memory_limit: '9G'
    system_memory: '1G'
obproxy-ce:
  servers:
    - 10.0.10.8
  global:
    listen_port: 10004
    prometheus_listen_port: 10005
    syslog_level: 'WARN'
    home_path: /root/data/obproxy
    root_password: ''
  include: obd/obproxy.include.yaml
  depends:
    - oceanbase-ce
 ```

Distributed tenant config:
```
DROP TENANT mysql FORCE;
DROP RESOURCE POOL pool_for_tenant_mysql;

CREATE RESOURCE UNIT 4c7g MAX_CPU 4, MIN_CPU 4, MEMORY_SIZE '7G';
create resource pool pool_test unit='4c7g', unit_num=1, zone_list=('zone1' ,'zone2', 'zone3');
create tenant test resource_pool_list=('pool_test'), primary_zone='RANDOM',comment 'test tenant', charset='utf8' set ob_tcp_invited_nodes='%', recyclebin=OFF, ob_query_timeout=5000000;
```

Single node deploy config:
```
user:
  username: root
  key_file: private_key
oceanbase-ce:
  servers:
    - name: server1
      ip: 10.0.10.21
  server1:
    mysql_port: 10000
    rpc_port: 10001
    home_path: /root/data/observer1
    zone: zone1
    # The directory for data storage. The default value is home_path/store.
    # data_dir: /data
    # The directory for clog, ilog, and slog. The default value is the same as the data_dir value.
    # redo_dir: /redo
  tag: latest
  include: obd/observer.include.yaml
  global: 
    # for default system config used by farm, please see tools/deploy/obd/observer.include.yaml
    # You can also specify the configuration directly below (stored locally, switching the working directory and redeploying will still take effect)
    production_mode: false
    devname: eth0
    syslog_level: 'WARN'
    syslog_io_bandwidth_limit: '30M'
    log_disk_size: '40G'
    max_syslog_file_count: '4'
    cpu_count: '6'
    datafile_size: '10G'
    datafile_next: '5G'
    datafile_maxsize: '30G'
    root_password: ''
    memory_limit: '9G'
    system_memory: '1G'

```

Single node tenant config:
```
DROP TENANT mysql FORCE;
DROP RESOURCE POOL pool_for_tenant_mysql;

CREATE RESOURCE UNIT 4c7g MAX_CPU 4, MIN_CPU 4, MEMORY_SIZE '7G';
create resource pool pool_test unit='4c7g', unit_num=1, zone_list=('zone1');
create tenant test resource_pool_list=('pool_test'), primary_zone='RANDOM',comment 'test tenant', charset='utf8' set ob_tcp_invited_nodes='%', recyclebin=OFF, ob_query_timeout=5000000;
```


**Additional Context** 
We are the BASS team from the School of Cyber Science and Technology at Beihang University. Our main focus is on system software security, operating systems, and program analysis research, as well as the development of automated program testing frameworks for detecting software defects. Using our self-developed database vulnerability testing tool, we have identified the above-mentioned vulnerabilities that may lead to database logic error.
