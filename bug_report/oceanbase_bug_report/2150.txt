ID: 2150
Title: [Bug]: Internal error: aggregate_max_length_for_string_result: unexpected max length
Description:
**Describe the bug**
build `master` branch with sanity, server reports internal error: aggregate_max_length_for_string_result: unexpected max length
```
[2024-10-18 07:32:55.165314] EDIAG [SQL.ENG] aggregate_max_length_for_string_result (ob_expr_operator.cpp:1488) [2157][T1002_L0_G0][T1002][Y27110A000A15-000624B8BABE1887-0-0] [lt=330][errcode=-4016] unexpected max length.(ret=-4016, max_length=-1, param_num=2, len_in_byte=false) BACKTRACE:0x3de07686 0x3dd8ac49 0xa0b2b18 0xa0b2520 0xa0b22e6 0xa0b20d5 0x11ca5f46 0x11ca3290 0x11c9e410 0x11c9a199 0x142a7ae5 0x1f573ab7 0x1f59c18c 0x1f4a9f28 0x1f4a5d0b 0x1f4a6478 0x1f4a66e9 0x1f043915 0x1edbfd45 0x1f173566 0x1f18f2d4 0x1b022b1d 0x1b01c29b 0x1b2ec7d6 0x1b031be7 0x1b01c1d0 0x1c038fdf 0x1c05879e 0x1c042c54 0x1c009e0d 0x101d101f 0x101c9666 0x3fb24c7a 0xf7e0315 0xf7dd77d 0xf7db7bb 0xf7d93f0 0xf7dc517 0x3dddc9bf 0x3ddda943 0x7f4831d9dac3 0x7f4831e2ea04
```

**Environment**
<!-- Environment Details sometimes important -->
- OS Version and CPU Arch(`uname -a`):
```
Linux c0c380f80f1a 6.5.0-44-generic #44~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Tue Jun 18 14:36:16 UTC 2 x86_64 x86_64 x86_64 GNU/Linux
```
  
- OB Version(`LD_LIBRARY_PATH=../lib:$LD_LIBRARY_PATH ./observer -V`):
```
observer (OceanBase_CE 4.3.3.0)

REVISION: 1-77368f00e6612c47702fddfb6217f0cf864fb0a8
BUILD_BRANCH: master
BUILD_TIME: Sep 18 2024 12:38:51
BUILD_FLAGS: RelWithDebInfo|Sanity
BUILD_INFO: 

Copyright (c) 2011-present OceanBase Inc.
```

**Fast Reproduce Steps(Required)**
```sql
WITH
cte_0 AS (
SELECT
  cast(to_base64(cast(null as char)) as char) as c1
WHERE
  false
)
SELECT
  case when false then c1 else c1 end as c_p
FROM
  cte_0
WHERE
  false
;
```

**Expected behavior**
no error

**Actual Behavior**
trace:
```
oceanbase::common::lbt() at ./build_sanity/deps/oblib/src/lib/./deps/oblib/src/lib/utility/ob_backtrace.cpp:0
oceanbase::common::ObLogger::backtrace_if_needed(oceanbase::common::ObPLogItem&, bool) at ./build_sanity/deps/oblib/src/lib/./deps/oblib/src/lib/oblog/ob_log.cpp:1762
void oceanbase::common::ObLogger::do_log_message<void oceanbase::common::ObLogger::log_message_kv<oceanbase::common::ObILogKV, oceanbase::common::ObILogKV, oceanbase::common::ObILogKV, oceanbase::common::ObILogKV>(char const*, int, char const*, int, char const*, unsigned long, int, char const*, oceanbase::common::ObILogKV const&&, oceanbase::common::ObILogKV const&&, oceanbase::common::ObILogKV const&&, oceanbase::common::ObILogKV const&&)::'lambda'(char*, long, long&)>(bool, char const*, char const*, int, char const*, int, char const*, bool, unsigned long, int, void oceanbase::common::ObLogger::log_message_kv<oceanbase::common::ObILogKV, oceanbase::common::ObILogKV, oceanbase::common::ObILogKV, oceanbase::common::ObILogKV>(char const*, int, char const*, int, char const*, unsigned long, int, char const*, oceanbase::common::ObILogKV const&&, oceanbase::common::ObILogKV const&&, oceanbase::common::ObILogKV const&&, oceanbase::common::ObILogKV const&&)::'lambda'(char*, long, long&)&) at ./build_sanity/deps/oblib/src/lib/./deps/oblib/src/lib/oblog/ob_log.h:0
void oceanbase::common::ObLogger::log_it<void oceanbase::common::ObLogger::log_message_kv<oceanbase::common::ObILogKV, oceanbase::common::ObILogKV, oceanbase::common::ObILogKV, oceanbase::common::ObILogKV>(char const*, int, char const*, int, char const*, unsigned long, int, char const*, oceanbase::common::ObILogKV const&&, oceanbase::common::ObILogKV const&&, oceanbase::common::ObILogKV const&&, oceanbase::common::ObILogKV const&&)::'lambda'(char*, long, long&)&>(char const*, char const*, int, char const*, int, char const*, unsigned long, int, void oceanbase::common::ObLogger::log_message_kv<oceanbase::common::ObILogKV, oceanbase::common::ObILogKV, oceanbase::common::ObILogKV, oceanbase::common::ObILogKV>(char const*, int, char const*, int, char const*, unsigned long, int, char const*, oceanbase::common::ObILogKV const&&, oceanbase::common::ObILogKV const&&, oceanbase::common::ObILogKV const&&, oceanbase::common::ObILogKV const&&)::'lambda'(char*, long, long&)&) at ./build_sanity/deps/oblib/src/lib/./deps/oblib/src/lib/oblog/ob_log.h:1037
void oceanbase::common::ObLogger::log_message_kv<oceanbase::common::ObILogKV, oceanbase::common::ObILogKV, oceanbase::common::ObILogKV, oceanbase::common::ObILogKV>(char const*, int, char const*, int, char const*, unsigned long, int, char const*, oceanbase::common::ObILogKV const&&, oceanbase::common::ObILogKV const&&, oceanbase::common::ObILogKV const&&, oceanbase::common::ObILogKV const&&) at ./build_sanity/deps/oblib/src/lib/./deps/oblib/src/lib/oblog/ob_log.h:517
void oceanbase::common::OB_PRINT<oceanbase::common::ObILogKV, oceanbase::common::ObILogKV, oceanbase::common::ObILogKV, oceanbase::common::ObILogKV>(char const*, int, char const*, int, char const*, unsigned long, int, char const*, char const*, oceanbase::common::ObILogKV const&&, oceanbase::common::ObILogKV const&&, oceanbase::common::ObILogKV const&&, oceanbase::common::ObILogKV const&&) at ./build_sanity/deps/oblib/src/lib/./deps/oblib/src/lib/oblog/ob_log.h:1379 (discriminator 2)
oceanbase::sql::ObExprOperator::aggregate_max_length_for_string_result(oceanbase::sql::ObExprResType&, oceanbase::sql::ObExprResType const*, long, bool, short, bool, bool, bool)::$_357::operator()(char const*) const at ./build_sanity/src/sql/./src/sql/engine/expr/ob_expr_operator.cpp:1488 (discriminator 364)
oceanbase::sql::ObExprOperator::aggregate_max_length_for_string_result(oceanbase::sql::ObExprResType&, oceanbase::sql::ObExprResType const*, long, bool, short, bool, bool, bool) at ./build_sanity/src/sql/./src/sql/engine/expr/ob_expr_operator.cpp:0
oceanbase::sql::ObExprOperator::aggregate_result_type_for_merge(oceanbase::sql::ObExprResType&, oceanbase::sql::ObExprResType const*, long, bool, oceanbase::common::ObExprTypeCtx&, bool, bool, bool) at ./build_sanity/src/sql/./src/sql/engine/expr/ob_expr_operator.cpp:1347 (discriminator 2)
oceanbase::sql::ObExprOperator::aggregate_result_type_for_case(oceanbase::sql::ObExprResType&, oceanbase::sql::ObExprResType const*, long, bool, oceanbase::common::ObExprTypeCtx&, bool, bool, bool) at ./build_sanity/src/sql/./src/sql/engine/expr/ob_expr_operator.cpp:1274 (discriminator 2)
oceanbase::sql::ObExprCase::calc_result_typeN(oceanbase::sql::ObExprResType&, oceanbase::sql::ObExprResType*, long, oceanbase::common::ObExprTypeCtx&) const at ./build_sanity/src/sql/./src/sql/engine/expr/ob_expr_case.cpp:67 (discriminator 26)
oceanbase::sql::ObRawExprDeduceType::calc_result_type(oceanbase::sql::ObNonTerminalRawExpr&, oceanbase::common::ObIArray<oceanbase::sql::ObExprResType>&, unsigned long&, int) at ./build_sanity/src/sql/./src/sql/resolver/expr/ob_raw_expr_deduce_type.cpp:0
oceanbase::sql::ObRawExprDeduceType::visit(oceanbase::sql::ObCaseOpRawExpr&) at ./build_sanity/src/sql/./src/sql/resolver/expr/ob_raw_expr_deduce_type.cpp:1428 (discriminator 2)
oceanbase::sql::ObRawExpr::postorder_accept(oceanbase::sql::ObRawExprVisitor&) at ./build_sanity/src/sql/./src/sql/resolver/expr/ob_raw_expr.cpp:570 (discriminator 52)
oceanbase::sql::ObRawExpr::deduce_type(oceanbase::sql::ObSQLSessionInfo const*, bool, oceanbase::sql::ObLocalSessionVar const*, long) at ./build_sanity/src/sql/./src/sql/resolver/expr/ob_raw_expr.cpp:430 (discriminator 2)
oceanbase::sql::ObRawExpr::formalize(oceanbase::sql::ObSQLSessionInfo const*, bool, oceanbase::sql::ObLocalSessionVar const*, long) at ./build_sanity/src/sql/./src/sql/resolver/expr/ob_raw_expr.cpp:479 (discriminator 2)
oceanbase::sql::ObRawExpr::formalize(oceanbase::sql::ObSQLSessionInfo const*, bool) at ./build_sanity/src/sql/./src/sql/resolver/expr/ob_raw_expr.cpp:459
oceanbase::sql::ObDMLStmt::formalize_relation_exprs(oceanbase::sql::ObSQLSessionInfo*) at ./build_sanity/src/sql/./src/sql/resolver/dml/ob_dml_stmt.cpp:1863 (discriminator 4)
oceanbase::sql::ObDMLStmt::formalize_stmt(oceanbase::sql::ObSQLSessionInfo*) at ./build_sanity/src/sql/./src/sql/resolver/dml/ob_dml_stmt.cpp:1804 (discriminator 4)
oceanbase::sql::ObSelectResolver::resolve_normal_query(_ParseNode const&) at ./build_sanity/src/sql/./src/sql/resolver/dml/ob_select_resolver.cpp:1424 (discriminator 30)
oceanbase::sql::ObSelectResolver::resolve(_ParseNode const&) at ./build_sanity/src/sql/./src/sql/resolver/dml/ob_select_resolver.cpp:1555 (discriminator 6)
int oceanbase::sql::ObResolver::select_stmt_resolver_func<oceanbase::sql::ObSelectResolver>(oceanbase::sql::ObResolverParams&, _ParseNode const&, oceanbase::sql::ObStmt*&) at ./build_sanity/src/sql/./src/sql/resolver/ob_resolver.cpp:189 (discriminator 54)
oceanbase::sql::ObResolver::resolve(oceanbase::sql::ObResolver::IsPrepared, _ParseNode const&, oceanbase::sql::ObStmt*&) at ./build_sanity/src/sql/./src/sql/resolver/ob_resolver.cpp:368 (discriminator 2)
oceanbase::sql::ObExplainResolver::resolve(_ParseNode const&) at ./build_sanity/src/sql/./src/sql/resolver/ddl/ob_explain_resolver.cpp:57 (discriminator 2)
int oceanbase::sql::ObResolver::stmt_resolver_func<oceanbase::sql::ObExplainResolver>(oceanbase::sql::ObResolverParams&, _ParseNode const&, oceanbase::sql::ObStmt*&) at ./build_sanity/src/sql/./src/sql/resolver/ob_resolver.cpp:174 (discriminator 54)
oceanbase::sql::ObResolver::resolve(oceanbase::sql::ObResolver::IsPrepared, _ParseNode const&, oceanbase::sql::ObStmt*&) at ./build_sanity/src/sql/./src/sql/resolver/ob_resolver.cpp:827 (discriminator 2)
oceanbase::sql::ObSql::generate_stmt(ParseResult&, oceanbase::sql::ObPlanCacheCtx*, oceanbase::sql::ObSqlCtx&, oceanbase::common::ObIAllocator&, oceanbase::sql::ObResultSet&, oceanbase::sql::ObStmt*&, ParseResult*) at ./build_sanity/src/sql/./src/sql/ob_sql.cpp:0
oceanbase::sql::ObSql::generate_physical_plan(ParseResult&, oceanbase::sql::ObPlanCacheCtx*, oceanbase::sql::ObSqlCtx&, oceanbase::sql::ObResultSet&, bool, oceanbase::sql::PlanCacheMode, ParseResult*) at ./build_sanity/src/sql/./src/sql/ob_sql.cpp:3215 (discriminator 2)
oceanbase::sql::ObSql::handle_physical_plan(oceanbase::common::ObString const&, oceanbase::sql::ObSqlCtx&, oceanbase::sql::ObResultSet&, oceanbase::sql::ObPlanCacheCtx&, int) at ./build_sanity/src/sql/./src/sql/ob_sql.cpp:5085 (discriminator 6)
oceanbase::sql::ObSql::handle_text_query(oceanbase::common::ObString const&, oceanbase::sql::ObSqlCtx&, oceanbase::sql::ObResultSet&) at ./build_sanity/src/sql/./src/sql/ob_sql.cpp:2807
oceanbase::observer::ObMPQuery::do_process(oceanbase::sql::ObSQLSessionInfo&, bool, bool, bool&, bool&) at ./build_sanity/src/observer/./src/observer/mysql/obmp_query.cpp:752 (discriminator 236)
oceanbase::observer::ObMPQuery::process() at ./build_sanity/src/observer/./src/observer/mysql/obmp_query.cpp:326 (discriminator 6)
oceanbase::rpc::frame::ObSqlProcessor::run() at ./build_sanity/deps/oblib/src/rpc/./deps/oblib/src/rpc/frame/ob_sql_processor.cpp:41 (discriminator 52)
oceanbase::omt::ObWorkerProcessor::process_one(oceanbase::rpc::ObRequest&) at ./build_sanity/src/observer/./src/observer/omt/ob_worker_processor.cpp:88 (discriminator 52)
oceanbase::omt::ObWorkerProcessor::process(oceanbase::rpc::ObRequest&) at ./build_sanity/src/observer/./src/observer/omt/ob_worker_processor.cpp:156 (discriminator 2)
oceanbase::omt::ObThWorker::process_request(oceanbase::rpc::ObRequest&) at ./build_sanity/src/observer/./src/observer/omt/ob_th_worker.cpp:249
oceanbase::omt::ObThWorker::worker(long&, long&, int&) at ./build_sanity/src/observer/./src/observer/omt/ob_th_worker.cpp:394
non-virtual thunk to oceanbase::omt::ObThWorker::run(long) at ./build_sanity/src/observer/./src/observer/omt/ob_th_worker.cpp:0
oceanbase::lib::Thread::run() at ./build_sanity/deps/oblib/src/lib/./deps/oblib/src/lib/thread/thread.cpp:175
oceanbase::lib::Thread::__th_start(void*) at ./build_sanity/deps/oblib/src/lib/./deps/oblib/src/lib/thread/thread.cpp:333
```

```
[2024-10-18 07:42:34.770740] EDIAG [SQL.ENG] aggregate_max_length_for_string_result (ob_expr_operator.cpp:1488) [2157][T1002_L0_G0][T1002][Y27110A000A15-000624B8BABE18EC-0-0] [lt=1725][errcode=-4016] unexpected max length.(ret=-4016, max_length=-1, param_num=2, len_in_byte=false) BACKTRACE:0x3de07686 0x3dd8ac49 0xa0b2b18 0xa0b2520 0xa0b22e6 0xa0b20d5 0x11ca5f46 0x11ca3290 0x11c9e410 0x11c9a199 0x142a7ae5 0x1f573ab7 0x1f59c18c 0x1f4a9f28 0x1f4a5d0b 0x1f4a6478 0x1f4a66e9 0x1f043915 0x1edbfd45 0x1f173566 0x1f18f2d4 0x1b022b1d 0x1b01c29b 0x1c038fdf 0x1c05879e 0x1c042c54 0x1c009e0d 0x101d101f 0x101c9666 0x3fb24c7a 0xf7e0315 0xf7dd77d 0xf7db7bb 0xf7d93f0 0xf7dc517 0x3dddc9bf 0x3ddda943 0x7f4831d9dac3 0x7f4831e2ea04
[2024-10-18 07:42:34.770891] WDIAG [SERVER] get_int (ob_inner_sql_result.cpp:500) [2015][T1002_TenantInf][T1002][Y0-0000000000000000-0-0] [lt=2170][errcode=-4152] get obj error(ret=-4152)
[2024-10-18 07:42:34.774490] WDIAG [SQL] build_service_name_ (ob_service_name_proxy.cpp:582) [2015][T1002_TenantInf][T1002][Y0-0000000000000000-0-0] [lt=2693][errcode=-4152] fail to get column in row. (column_name="service_name_id", ret=-4152)
[2024-10-18 07:42:34.771754] WDIAG [SQL.ENG] aggregate_result_type_for_case (ob_expr_operator.cpp:1277) [2157][T1002_L0_G0][T1002][Y27110A000A15-000624B8BABE18EC-0-0] [lt=719][errcode=-4016] fail to aggregate result type(ret=-4016)
[2024-10-18 07:42:34.774793] WDIAG [SQL.ENG] calc_result_typeN (ob_expr_case.cpp:75) [2157][T1002_L0_G0][T1002][Y27110A000A15-000624B8BABE18EC-0-0] [lt=2230][errcode=-4016] failed to aggregate result type
[2024-10-18 07:42:34.774984] WDIAG [SQL.RESV] visit (ob_raw_expr_deduce_type.cpp:1430) [2157][T1002_L0_G0][T1002][Y27110A000A15-000624B8BABE18EC-0-0] [lt=107][errcode=-4016] calc_result_type failed(ret=-4016)
[2024-10-18 07:42:34.775063] WDIAG [SQL.RESV] postorder_accept (ob_raw_expr.cpp:572) [2157][T1002_L0_G0][T1002][Y27110A000A15-000624B8BABE18EC-0-0] [lt=42][errcode=-4016] visit failed(ret=-4016, type=139, name="T_OP_CASE")
[2024-10-18 07:42:34.775181] WDIAG [SQL.RESV] deduce_type (ob_raw_expr.cpp:437) [2157][T1002_L0_G0][T1002][Y27110A000A15-000624B8BABE18EC-0-0] [lt=88][errcode=-4016] fail to deduce(ret=-4016)
[2024-10-18 07:42:34.771868] WDIAG [PALF] inner_append_log (palf_handle_impl.cpp:2159) [2003][T1002_IOWorker][T1002][Y0-0000000000000000-0-0] [lt=2840][errcode=-4389] write log cost too much time(ret=-4389, this={palf_id:1, self:"10.0.10.21:10001", has_set_deleted:false}, lsn_array=[cnt:1, {lsn:33973399}], scn_array=[cnt:1, {val:1729237354565542001, v:0}], curr_size=122, accum_size=976, time_cost=10358)
[2024-10-18 07:42:34.775255] WDIAG [SQL.RESV] formalize (ob_raw_expr.cpp:480) [2157][T1002_L0_G0][T1002][Y27110A000A15-000624B8BABE18EC-0-0] [lt=37][errcode=-4016] failed to deduce type(*this={item_type:"T_OP_CASE", result_type:{meta:{type:"", collation:"binary", coercibility:"NUMERIC"}, accuracy:{length:-1, precision:-1, scale:-1}, flag:0, calc_type:{type:"NULL", collation:"invalid_type", coercibility:"INVALID"}}, expr_info:["CNT_CONST_EXPR", "CNT_CONST", "CNT_COLUMN", "CNT_STATIC_PARAM"], rel_id:[], arg_case:null, default:{item_type:"T_REF_COLUMN", result_type:{meta:{type:"VARCHAR", collation:"latin1_bin", coercibility:"IMPLICIT"}, accuracy:{length:-1, precision:-1, scale:-1}, flag:0, calc_type:{type:"NULL", collation:"invalid_type", coercibility:"INVALID"}}, expr_info:["IS_COLUMN", "CNT_COLUMN"], rel_id:[1], table_id:18446744073709551613, column_id:16, database_name:"", table_name:"cte_0", synonym_name:"", synonym_db_name:"", column_name:"c1", column_flags:0, enum_set_values:[], is_lob_column:false, is_joined_dup_column:false, is_unpivot_mocked_column:false, is_hidden:false, from_alias_table:false, is_rowkey_column:false, is_unique_key_column:false, is_mul_key_column:false, is_strict_json_column:0, srs_id:18446744073709551615, udt_set_id:0}, when:[{item_type:"T_OP_BOOL", result_type:{meta:{type:"INT", collation:"binary", coercibility:"NUMERIC"}, accuracy:{length:0, precision:11, scale:0}, flag:1, calc_type:{type:"NULL", collation:"invalid_type", coercibility:"INVALID"}}, expr_info:["IS_CONST_EXPR", "CNT_CONST", "CNT_STATIC_PARAM", "IS_INNER_ADDED_EXPR"], rel_id:[], children:[{item_type:"T_QUESTIONMARK", result_type:{meta:{type:"TINYINT", collation:"binary", coercibility:"NUMERIC"}, accuracy:{length:1, precision:1, scale:0}, flag:1, calc_type:{type:"NULL", collation:"invalid_type", coercibility:"INVALID"}}, expr_info:["IS_CONST", "IS_STATIC_PARAM", "CNT_CONST", "CNT_STATIC_PARAM"], rel_id:[], value:{"UNKNOWN":2}}]}], then:[{item_type:"T_REF_COLUMN", result_type:{meta:{type:"VARCHAR", collation:"latin1_bin", coercibility:"IMPLICIT"}, accuracy:{length:-1, precision:-1, scale:-1}, flag:0, calc_type:{type:"NULL", collation:"invalid_type", coercibility:"INVALID"}}, expr_info:["IS_COLUMN", "CNT_COLUMN"], rel_id:[1], table_id:18446744073709551613, column_id:16, database_name:"", table_name:"cte_0", synonym_name:"", synonym_db_name:"", column_name:"c1", column_flags:0, enum_set_values:[], is_lob_column:false, is_joined_dup_column:false, is_unpivot_mocked_column:false, is_hidden:false, from_alias_table:false, is_rowkey_column:false, is_unique_key_column:false, is_mul_key_column:false, is_strict_json_column:0, srs_id:18446744073709551615, udt_set_id:0}], decode:false})
[2024-10-18 07:42:34.776330] WDIAG [SQL.RESV] formalize (ob_raw_expr.cpp:460) [2157][T1002_L0_G0][T1002][Y27110A000A15-000624B8BABE18EC-0-0] [lt=805][errcode=-4016] formalize with local vars failed(ret=-4016)
[2024-10-18 07:42:34.776380] WDIAG [SQL.RESV] formalize_relation_exprs (ob_dml_stmt.cpp:1865) [2157][T1002_L0_G0][T1002][Y27110A000A15-000624B8BABE18EC-0-0] [lt=34][errcode=-4016] failed to formalize expr(ret=-4016)
[2024-10-18 07:42:34.776421] WDIAG [SQL.RESV] formalize_stmt (ob_dml_stmt.cpp:1805) [2157][T1002_L0_G0][T1002][Y27110A000A15-000624B8BABE18EC-0-0] [lt=21][errcode=-4016] failed to formalize relation exprs(ret=-4016)
[2024-10-18 07:42:34.776440] WDIAG [SQL.RESV] resolve_normal_query (ob_select_resolver.cpp:1424) [2157][T1002_L0_G0][T1002][Y27110A000A15-000624B8BABE18EC-0-0] [lt=9][errcode=-4016] fail to exec select_stmt->formalize_stmt(session_info_)(ret=-4016)
[2024-10-18 07:42:34.776527] WDIAG [SQL.RESV] resolve (ob_select_resolver.cpp:1556) [2157][T1002_L0_G0][T1002][Y27110A000A15-000624B8BABE18EC-0-0] [lt=53][errcode=-4016] resolve normal query failed(ret=-4016)
[2024-10-18 07:42:34.776609] WDIAG [SQL.RESV] select_stmt_resolver_func (ob_resolver.cpp:190) [2157][T1002_L0_G0][T1002][Y27110A000A15-000624B8BABE18EC-0-0] [lt=25][errcode=-4016] execute stmt_resolver failed(ret=-4016, parse_tree.type_=3299)
[2024-10-18 07:42:34.777298] WDIAG [SQL] generate_stmt (ob_sql.cpp:3101) [2157][T1002_L0_G0][T1002][Y27110A000A15-000624B8BABE18EC-0-0] [lt=62][errcode=-4016] failed to resolve(ret=-4016)
[2024-10-18 07:42:34.777383] WDIAG [SQL] generate_physical_plan (ob_sql.cpp:3222) [2157][T1002_L0_G0][T1002][Y27110A000A15-000624B8BABE18EC-0-0] [lt=27][errcode=-4016] Failed to generate stmt(ret=-4016, result.get_exec_context().need_disconnect()=false)
[2024-10-18 07:42:34.777468] WDIAG [SQL] handle_physical_plan (ob_sql.cpp:5095) [2157][T1002_L0_G0][T1002][Y27110A000A15-000624B8BABE18EC-0-0] [lt=23][errcode=-4016] Failed to generate plan(ret=-4016, result.get_exec_context().need_disconnect()=false)
[2024-10-18 07:42:34.777543] WDIAG [SQL] handle_text_query (ob_sql.cpp:2811) [2157][T1002_L0_G0][T1002][Y27110A000A15-000624B8BABE18EC-0-0] [lt=19][errcode=-4016] fail to handle physical plan(ret=-4016)
[2024-10-18 07:42:34.777809] WDIAG [SQL] stmt_query (ob_sql.cpp:232) [2157][T1002_L0_G0][T1002][Y27110A000A15-000624B8BABE18EC-0-0] [lt=10][errcode=-4016] fail to handle text query(stmt=WITH
cte_0 AS (
SELECT
  cast(to_base64(cast(null as char)) as char) as c1
WHERE
  false
)
SELECT
  case when false then c1 else c1 end as c_p
FROM
  cte_0
WHERE
  false
;, ret=-4016)
[2024-10-18 07:42:34.777741] INFO  [LIB] stat (utility.h:1165) [2059][T1002_ApplySrv0][T1002][Y27110A000A15-000624B8BC5E1237-0-0] [lt=14] [APPLY STAT CB APPEND COST TIME](cur_stat_count=24, stat_interval=5000000, avg (count/cost)=4382, this=0x200089946280, extra_info="")
[2024-10-18 07:42:34.778136] WDIAG [SERVER] after_func (ob_query_retry_ctrl.cpp:999) [2157][T1002_L0_G0][T1002][Y27110A000A15-000624B8BABE18EC-0-0] [lt=41][errcode=-4016] [RETRY] check if need retry(v={force_local_retry:false, stmt_retry_times:0, local_retry_times:0, err_:-4016, err_:"OB_ERR_UNEXPECTED", retry_type:0, client_ret:-4016}, need_retry=false)
[2024-10-18 07:42:34.778311] WDIAG [SERVER] do_process (obmp_query.cpp:764) [2157][T1002_L0_G0][T1002][Y27110A000A15-000624B8BABE18EC-0-0] [lt=92][errcode=-4016] run stmt_query failed, check if need retry(ret=-4016, cli_ret=-4016, retry_ctrl_.need_retry()=0, sql=WITH
cte_0 AS (
SELECT
  cast(to_base64(cast(null as char)) as char) as c1
WHERE
  false
)
SELECT
  case when false then c1 else c1 end as c_p
FROM
  cte_0
WHERE
  false
;)
[2024-10-18 07:42:34.778745] WDIAG [SERVER] do_process (obmp_query.cpp:890) [2157][T1002_L0_G0][T1002][Y27110A000A15-000624B8BABE18EC-0-0] [lt=43][errcode=-4016] query failed(ret=-4016, session={this:0x2000a70c61f8, id:3221488025, deser:false, tenant:"test", tenant_id:1002, effective_tenant:"test", effective_tenant_id:1002, database:"ob_main", user:"root@%", consistency_level:3, session_state:2, autocommit:true, tx:null}, sql=WITH
cte_0 AS (
SELECT
  cast(to_base64(cast(null as char)) as char) as c1
WHERE
  false
)
SELECT
  case when false then c1 else c1 end as c_p
FROM
  cte_0
WHERE
  false
;, retry_ctrl_.need_retry()=0)
```


#### tenant config
```sql
CREATE RESOURCE UNIT 4c8g MAX_CPU 4, MIN_CPU 4, MEMORY_SIZE '8G';
create resource pool pool_test unit='4c8g', unit_num=1, zone_list=('zone1' ,'zone2', 'zone3');
create tenant test resource_pool_list=('pool_test'), primary_zone='RANDOM',comment 'test tenant', charset='utf8' set ob_tcp_invited_nodes='%', recyclebin=OFF;
```

#### deploy config
```yaml
user:
  username: root
  key_file: private_key
oceanbase-ce:
  servers:
    - name: server1
      ip: 10.0.10.11
    - name: server2
      ip: 10.0.10.12
    - name: server3
      ip: 10.0.10.13
  server1:
    mysql_port: 10000
    rpc_port: 10001
    home_path: /root/data/observer1
    zone: zone1
  server2:
    mysql_port: 10000
    rpc_port: 10001
    home_path: /root/data/observer2
    zone: zone2
  server3:
    mysql_port: 10000
    rpc_port: 10001
    home_path: /root/data/observer3
    zone: zone3
  tag: latest
  include: obd/observer.include.yaml
  global: 
    # for default system config used by farm, please see tools/deploy/obd/observer.include.yaml
    # You can also specify the configuration directly below (stored locally, switching the working directory and redeploying will still take effect)
    production_mode: false
    devname: eth0
    syslog_level: 'WARN'
    syslog_io_bandwidth_limit: '30M'
    log_disk_size: '40G'
    # diag_syslog_per_error_limit: '4'
    max_syslog_file_count: '4'
    cpu_count: '6'
    datafile_size: '10G'
    datafile_next: '5G'
    datafile_maxsize: '30G'
    root_password: ''
    memory_limit: '9G'
    system_memory: '1G'
obproxy-ce:
  servers:
    - 10.0.10.8
  global:
    listen_port: 10004
    prometheus_listen_port: 10005
    syslog_level: 'WARN'
    home_path: /root/data/obproxy
    root_password: ''
  include: obd/obproxy.include.yaml
  depends:
    - oceanbase-ce
```

#### about us
We are the BASS team from the School of Cyber Science and Technology at Beihang University. Our main focus is on system software security, operating systems, and program analysis research, as well as the development of automated program testing frameworks for detecting software defects. Using our self-developed database vulnerability testing tool, we have identified the potential vulnerabilities.
