 
CREATE TABLE orders (  
    order_id INTEGER PRIMARY KEY,  
    user_id INTEGER,  
    product_id INTEGER,  
    quantity INTEGER,  
    order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE IMMEDIATE  
);  
    
CREATE TABLE products (  
    product_id INTEGER PRIMARY KEY,  
    product_name TEXT,  
    price REAL  
);  
    
INSERT INTO products (product_id, product_name, price) VALUES (1, 'Laptop', 1200.0);  
INSERT INTO products (product_id, product_name, price) VALUES (2, 'Smartphone', 800.0);  
INSERT INTO orders (user_id, product_id, quantity) VALUES (1, 1, 1);  
INSERT INTO orders (user_id, product_id, quantity) VALUES (1, 2, 2);  
    
SELECT o.order_id, p.product_name, p.price  
FROM orders o  
INNER JOIN products p ON o.product_id = p.product_id  
WHERE o.user_id = 1;  
   
CREATE TRIGGER after_order_delete  
AFTER DELETE ON orders  
FOR EACH ROW  
BEGIN   
    UPDATE users SET some_column = some_column + 1 WHERE user_id = OLD.user_id;  
END;  
   
SELECT p.product_name, o.order_id  
FROM products p  
INNER JOIN orders o ON p.product_id = o.product_id  
WHERE p.price > 500.0  
INTERSECT  
SELECT p.product_name, o.order_id  
FROM products p  
INNER JOIN orders o ON p.product_id = o.product_id  
WHERE o.quantity > 1;
