{
    "pattern": "CREATE TABLE table1( id INT <constraint_type_parameter>, name VARCHAR(10) <constraint_type_parameter>); CREATE TABLE log1( info VARCHAR(10) <constraint_type_parameter>); DELIMITER // CREATE TRIGGER table1_after_update AFTER UPDATE ON table1 FOR EACH ROW BEGIN INSERT INTO log1 (info) VALUES (<dml_values_parameter>); END;// DELIMITER ; SET GLOBAL <global_parameter> = <global_value>; CREATE TEMPORARY TABLE TEMP_TABLE1 ( id INT <constraint_type_parameter>, update_me VARCHAR(10)); UPDATE TEMP_TABLE1 <join_operator_replace> table1 ON TEMP_TABLE1.id = table1.id SET TEMP_TABLE1.update_me = <dml_values_parameter>;",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<dml_values_parameter>",
        "<global_parameter>",
        "<global_value>",
        "<join_operator_replace>"
    ],
    "Affected Elements": "UPDATE statement, LEFT JOIN clause, read_only setting, temporary table operations",
    "Root Cause Analysis": "The update on the temporary table is being blocked by the read-only setting, compounded by the join with a table that has a trigger."
}