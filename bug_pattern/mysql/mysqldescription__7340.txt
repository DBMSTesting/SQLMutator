{
    "pattern": "CREATE TABLE test_table1 (id bigint(20) <constraint_enforce_replace>, int_test int(11) <dml_values_parameter>, <constraint_type_parameter> (id)) ENGINE=<object_dependency_replace> DEFAULT CHARSET=<dml_values_parameter> ROW_FORMAT=<dml_values_parameter>; INSERT INTO test_table1 <dml_values_parameter>; INSERT INTO test_table1 <dml_values_parameter>; SELECT id, int_test/<arithmetic_operator_parameter>, maketime(int_test-12, int_test%4, int_test/<arithmetic_operator_parameter>) AS col1 FROM test_table1; SELECT maketime(int_test-12, int_test%4, int_test/<arithmetic_operator_parameter>) AS col1 FROM test_table1 GROUP BY <group_by_parameter>;",
    "applied_rules": [
        "<constraint_enforce_replace>",
        "<dml_values_parameter>",
        "<constraint_type_parameter>",
        "<object_dependency_replace>",
        "<arithmetic_operator_parameter>",
        "<group_by_parameter>"
    ],
    "Affected Elements": "GROUP BY clause, maketime function",
    "Root Cause Analysis": "The inconsistency in results when using GROUP BY with computed columns may be due to the way MySQL handles non-aggregated columns in combination with GROUP BY."
}