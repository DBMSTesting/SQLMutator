{
    "pattern": "CREATE TABLE t1 (c1 int <constraint_type_parameter>); CREATE TABLE t2 (c1 decimal <constraint_type_parameter>); CREATE TABLE t3 (c1 decimal <constraint_type_parameter>); INSERT INTO t1 <dml_values_parameter>; INSERT INTO t2 <dml_values_parameter>; INSERT INTO t2 <dml_values_parameter>; INSERT INTO t2 <dml_values_parameter>; INSERT INTO t2 <dml_values_parameter>; INSERT INTO t2 <dml_values_parameter>; INSERT INTO t3 <dml_values_parameter>; SELECT /*+ SET_VAR(optimizer_switch='materialization=off') */ ca8 FROM (SELECT c1 AS ca8 FROM t2) AS ta1 WHERE ((<arithmetic_operator_replace> + ca8) <comparison_operator_replace> ANY (SELECT c1 FROM t3)) IN (SELECT c1 FROM t1) IS NOT <is_operator_replace>;",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<dml_values_parameter>",
        "<arithmetic_operator_replace>",
        "<comparison_operator_replace>",
        "<is_operator_replace>"
    ],
    "Affected Elements": "SELECT, WHERE, IS NOT UNKNOWN, NULL, ANY",
    "Root Cause Analysis": "The query logic involving NULL values leads to unexpected results due to the treatment of NULL in comparisons."
}