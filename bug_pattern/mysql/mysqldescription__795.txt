{
    "pattern": "DROP TABLE IF EXISTS <object_name_parameter>; DROP TABLE IF EXISTS <object_name_parameter>; CREATE TABLE <object_name_parameter> (col_pk INTEGER <constraint_type_parameter>, col_test INTEGER); ALTER TABLE <object_name_parameter> ADD <constraint_type_parameter> (col_pk); CREATE TABLE <object_name_parameter> (col_pk_join INTEGER <constraint_type_parameter>, col_test_new INTEGER); INSERT INTO <object_name_parameter> (col_pk, col_test) VALUES (<dml_values_parameter>, NULL); INSERT INTO <object_name_parameter> (col_pk, col_test) VALUES (<dml_values_parameter>, NULL); COMMIT; INSERT INTO <object_name_parameter> (col_pk_join, col_test_new) VALUES (<dml_values_parameter>, <dml_values_parameter>); INSERT INTO <object_name_parameter> (col_pk_join, col_test_new) VALUES (<dml_values_parameter>, <dml_values_parameter>); INSERT INTO <object_name_parameter> (col_pk_join, col_test_new) VALUES (<dml_values_parameter>, <dml_values_parameter>); COMMIT; SELECT * FROM <object_name_parameter>; SELECT * FROM <object_name_parameter>; UPDATE <object_name_parameter> t, <object_name_parameter> tmp SET t.col_test = tmp.col_test_new WHERE t.col_pk <comparison_operator_replace> tmp.col_pk_join; COMMIT; SELECT * FROM <object_name_parameter>;",
    "applied_rules": [
        "<object_name_parameter>",
        "<constraint_type_parameter>",
        "<dml_values_parameter>",
        "<comparison_operator_replace>"
    ],
    "Affected Elements": "UPDATE, COMMIT, JOIN",
    "Root Cause Analysis": "The multi-table UPDATE does not handle cases where the join condition results in multiple matching rows, leading to incorrect data being written to the destination table."
}