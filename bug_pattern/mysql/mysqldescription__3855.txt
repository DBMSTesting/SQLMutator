{
    "pattern": "DROP TABLE IF EXISTS v_test; CREATE TABLE v_test (dsc <string_type_parameter>, start_1 <numeric_type_parameter>, end_1 <numeric_type_parameter>, val <numeric_type_parameter>); INSERT INTO v_test VALUES (<dml_values_parameter>), (<dml_values_parameter>), (<dml_values_parameter>), (<dml_values_parameter>); SELECT hsum.dsc, <select_parameter>, <select_parameter>, <select_parameter> FROM (SELECT @rowVal:=-1, @prior:=0.0, @during:=0.0, @after:=0.0) x, v_test AS hsum WHERE IFNULL(CASE WHEN (@rowVal:=hsum.val) IS NULL THEN CONCAT(@prior:=0.0, @during:=0.0, @after:=0.0) WHEN hsum.start_1 >= @rowVal THEN CONCAT(@prior:=(1.0), @during:=0.0, @after:=0.0) WHEN hsum.start_1 < @rowVal AND hsum.end_1 > @rowVal THEN CONCAT(@prior:=(0.0), @during:=(1.0), @after:=0.0) WHEN hsum.end_1 <= @rowVal THEN CONCAT(@prior:=0.0, @during:=0.0, @after:=(1.0)) ELSE CONCAT(@prior:=0, @during:=0, @after:=0) END, CONCAT(@prior:=0, @during:=0, @after:=0)) IS NOT NULL;",
    "applied_rules": [
        "<string_type_parameter>",
        "<numeric_type_parameter>",
        "<dml_values_parameter>",
        "<select_parameter>"
    ],
    "Affected Elements": "user-defined variables (@prior, @during, @after), CASE expression, IFNULL function",
    "Root Cause Analysis": "The SQL engine fails to properly update user-defined variables in the context of CASE expressions, particularly when using them within WHERE clauses, leading to incorrect results."
}