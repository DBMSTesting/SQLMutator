{
    "pattern": "CREATE TABLE `info` (`id` <data_type_parameter>); CREATE TABLE `person` (`id` <data_type_parameter>, `name` <data_type_parameter>, UNIQUE KEY `id` (`id`)); INSERT INTO `info` VALUES <dml_values_parameter>; INSERT INTO `person` VALUES <dml_values_parameter>; SET optimizer_switch=<string_parameter>; SELECT person.id AS ref0 FROM person <join_operator_replace> info ON person.name = info.id WHERE (person.name <in_operator_replace> (SELECT info.id AS ref1 FROM info)) OR (info.id); SET optimizer_switch=<string_parameter>; SELECT person.id AS ref0 FROM person <join_operator_replace> info ON person.name = info.id WHERE (person.name <in_operator_replace> (SELECT info.id AS ref1 FROM info)) OR (info.id);",
    "applied_rules": [
        "<data_type_parameter>",
        "<dml_values_parameter>",
        "<string_parameter>",
        "<join_operator_replace>",
        "<in_operator_replace>"
    ],
    "Affected Elements": "LEFT OUTER JOIN, optimizer_switch, subquery_to_derived",
    "Root Cause Analysis": "The different optimizer settings cause the SQL execution plan to change, leading to different results despite the queries being syntactically identical."
}