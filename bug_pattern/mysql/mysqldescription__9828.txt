{
    "pattern": "CREATE TABLE `user` (id INT <constraint_type_parameter> AUTO_INCREMENT <constraint_enforce_replace>, name VARCHAR(255) <constraint_enforce_replace>); CREATE TABLE address (id INT <constraint_type_parameter> AUTO_INCREMENT <constraint_enforce_replace>, user_id int <constraint_enforce_replace>, address VARCHAR(255) <constraint_enforce_replace>); INSERT INTO `user` (name) <dml_values_parameter>; INSERT INTO address (user_id, address) <dml_values_parameter>; SELECT u.id, GROUP_CONCAT(a.address) AS addresses FROM `user` u <join_operator_replace> address a ON a.user_id = u.id GROUP BY u.id HAVING LOWER(addresses) <comparison_operator_replace> '%X%';",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<constraint_enforce_replace>",
        "<dml_values_parameter>",
        "<join_operator_replace>",
        "<comparison_operator_replace>"
    ],
    "Affected Elements": "HAVING, GROUP_CONCAT, LOWER",
    "Root Cause Analysis": "The use of LOWER() in the HAVING clause modifies the result of the GROUP_CONCAT() function, which is not intended behavior based on SQL standards."
}