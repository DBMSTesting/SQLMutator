{
    "pattern": "DROP TABLE IF EXISTS <drop_table_parameter>; DROP TABLE IF EXISTS <drop_table_parameter>; DROP TABLE IF EXISTS <drop_table_parameter>; CREATE TABLE `CC` (`pk` int(11) NOT NULL AUTO_INCREMENT, `col_int_key` int(11) DEFAULT NULL, `col_varchar_key` varchar(1) DEFAULT NULL, PRIMARY KEY (`pk`), KEY `col_int_key` (`col_int_key`), KEY `col_varchar_key` (`col_varchar_key`,`col_int_key`)) ENGINE=<engine_parameter> AUTO_INCREMENT=<auto_increment_parameter> DEFAULT CHARSET=<charset_parameter>; INSERT INTO `CC` VALUES <dml_values_parameter>; CREATE TABLE `C` (`pk` int(11) NOT NULL AUTO_INCREMENT, `col_int_key` int(11) DEFAULT NULL, `col_varchar_key` varchar(1) DEFAULT NULL, PRIMARY KEY (`pk`), KEY `col_int_key` (`col_int_key`), KEY `col_varchar_key` (`col_varchar_key`,`col_int_key`)) ENGINE=<engine_parameter> AUTO_INCREMENT=<auto_increment_parameter> DEFAULT CHARSET=<charset_parameter>; INSERT INTO `C` VALUES <dml_values_parameter>; CREATE TABLE `BB` (`pk` int(11) NOT NULL AUTO_INCREMENT, `col_int_key` int(11) DEFAULT NULL, `col_varchar_key` varchar(1) DEFAULT NULL, PRIMARY KEY (`pk`), KEY `col_int_key` (`col_int_key`), KEY `col_varchar_key` (`col_varchar_key`,`col_int_key`)) ENGINE=<engine_parameter> AUTO_INCREMENT=<auto_increment_parameter> DEFAULT CHARSET=<charset_parameter>; INSERT INTO `BB` VALUES <dml_values_parameter>; SELECT MAX(table1.`col_int_key`) <select_parameter> FROM C table1 <join_operator_replace> (BB table2 <join_operator_replace> CC ON table2.`pk`) ON table2.`col_varchar_key` HAVING <having_parameter>;",
    "applied_rules": [
        "<drop_table_parameter>",
        "<engine_parameter>",
        "<auto_increment_parameter>",
        "<charset_parameter>",
        "<dml_values_parameter>",
        "<select_parameter>",
        "<join_operator_replace>",
        "<having_parameter>"
    ],
    "Affected Elements": "MAX, STRAIGHT_JOIN, HAVING",
    "Root Cause Analysis": "The optimizer's handling of indexes leads to different result sets for the same query under different indexing conditions."
}