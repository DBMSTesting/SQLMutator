{
    "pattern": "CREATE TABLE t2 (c0 INT <constraint_type_parameter>); CREATE TABLE t4 (c0 INT <constraint_type_parameter>); SET @@SESSION.OPTIMIZER_SWITCH = <dml_values_parameter>; SELECT ty.c0 FROM t2 ty JOIN LATERAL (SELECT ty.c0 FROM t4) x(x) ON <operator_parameter> GROUP BY x.x; SET @@SESSION.OPTIMIZER_SWITCH = <dml_values_parameter>; SELECT ty.c0 FROM t2 ty JOIN LATERAL (SELECT ty.c0 FROM t4) x(x) ON <operator_parameter> GROUP BY x.x; CREATE TABLE t0 (c1 INT <constraint_type_parameter>); CREATE TABLE t1 (c1 INT, c2 INT <constraint_type_parameter>); INSERT INTO t1(c1,c2) VALUES (<dml_values_parameter>,76),(131,120); SET @@SESSION.OPTIMIZER_SWITCH = <dml_values_parameter>; SELECT 1 FROM t1 WHERE ROW(t1.c2, t1.c1) NOT IN (SELECT 3, x.x FROM (SELECT t0.c1 FROM t0 RIGHT JOIN t1 ON <operator_parameter>) x(x)); SET @@SESSION.OPTIMIZER_SWITCH = <dml_values_parameter>; SELECT 1 FROM t1 WHERE ROW(t1.c2, t1.c1) NOT IN (SELECT 3, x.x FROM (SELECT t0.c1 FROM t0 RIGHT JOIN t1 ON <operator_parameter>) x(x));",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<dml_values_parameter>",
        "<operator_parameter>"
    ],
    "Affected Elements": "SELECT, JOIN LATERAL, GROUP BY, ROW, NOT IN",
    "Root Cause Analysis": "The optimizer behaves differently based on the 'derived_merge' setting, leading to an inconsistency in error handling for semantically incorrect queries."
}