{
    "pattern": "CREATE TABLE tab (id INT <constraint_enforce_replace> <constraint_type_parameter>); INSERT INTO tab <dml_values_parameter>; INSERT INTO tab <dml_values_parameter> SELECT <dml_values_parameter> FROM tab; INSERT INTO tab <dml_values_parameter> SELECT <dml_values_parameter> FROM tab; INSERT INTO tab <dml_values_parameter> SELECT <dml_values_parameter> FROM tab; INSERT INTO tab <dml_values_parameter> SELECT <dml_values_parameter> FROM tab; INSERT INTO tab <dml_values_parameter> SELECT <dml_values_parameter> FROM tab; INSERT INTO tab <dml_values_parameter> SELECT <dml_values_parameter> FROM tab; INSERT INTO tab <dml_values_parameter> SELECT <dml_values_parameter> FROM tab; SELECT <select_parameter>, COUNT(1) FROM (SELECT ROUND(RAND() - 0.5, 1) x FROM tab) t GROUP BY x; CREATE TABLE x (x FLOAT); INSERT INTO x(x) <dml_values_parameter> VALUES (-0.1), (0.1); SELECT ROUND(x), COUNT(1) FROM x GROUP BY ROUND(x); CREATE TABLE x (x FLOAT); INSERT INTO x <dml_values_parameter> VALUES (+0e0), (-0e0); SELECT x FROM x GROUP BY x;",
    "applied_rules": [
        "<constraint_enforce_replace>",
        "<constraint_type_parameter>",
        "<dml_values_parameter>",
        "<select_parameter>"
    ],
    "Affected Elements": "GROUP BY, ROUND() function",
    "Root Cause Analysis": "The GROUP BY clause treats +0 and -0 as distinct values due to the way floating-point numbers are represented in MySQL, which leads to unexpected results."
}