{
    "pattern": "CREATE TABLE test (<namespace_id_parameter>, <run_id_parameter>, <start_time_parameter>, <close_time_parameter>, <execution_time_parameter>, <workflow_id_parameter>, <workflow_type_name_parameter>, <status_parameter>, <data_parameter>, <key1_parameter>, <key2_parameter>, <constraint_type_parameter>); CREATE INDEX default_idx ON test (<namespace_id_parameter>, <dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>); CREATE INDEX by_execution_time ON test (<namespace_id_parameter>, <execution_time_parameter>, <dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>); CREATE INDEX by_workflow_id ON test (<namespace_id_parameter>, <workflow_id_parameter>, <dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>); CREATE INDEX by_workflow_type_name ON test (<namespace_id_parameter>, <workflow_type_name_parameter>, <dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>); CREATE INDEX by_status ON test (<namespace_id_parameter>, <status_parameter>, <dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>); CREATE INDEX by_key1 ON test (<namespace_id_parameter>, <key1_parameter>, <dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>); CREATE INDEX by_key2 ON test (<namespace_id_parameter>, <key2_parameter>, <dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>); CALL InsertRand(<dml_values_parameter>); EXPLAIN ANALYZE SELECT <select_parameter> FROM test WHERE <namespace_id_parameter> <comparison_operator_replace> <dml_values_parameter> AND <key1_parameter> <comparison_operator_replace> <dml_values_parameter> ORDER BY <dml_values_parameter> <order_by_parameter>, <dml_values_parameter> <order_by_parameter>, <dml_values_parameter>; EXPLAIN ANALYZE SELECT <select_parameter> FROM test USE INDEX (<index_parameter>) WHERE <namespace_id_parameter> <comparison_operator_replace> <dml_values_parameter> AND <key1_parameter> <comparison_operator_replace> <dml_values_parameter> ORDER BY <dml_values_parameter> <order_by_parameter>, <dml_values_parameter> <order_by_parameter>, <dml_values_parameter>; EXPLAIN ANALYZE SELECT <select_parameter> FROM test WHERE <namespace_id_parameter> <comparison_operator_replace> <dml_values_parameter> AND <key1_parameter> <is_operator_replace> <dml_values_parameter> ORDER BY <dml_values_parameter> <order_by_parameter>, <dml_values_parameter> <order_by_parameter>, <dml_values_parameter>;",
    "applied_rules": [
        "<namespace_id_parameter>",
        "<run_id_parameter>",
        "<start_time_parameter>",
        "<close_time_parameter>",
        "<execution_time_parameter>",
        "<workflow_id_parameter>",
        "<workflow_type_name_parameter>",
        "<status_parameter>",
        "<data_parameter>",
        "<key1_parameter>",
        "<key2_parameter>",
        "<constraint_type_parameter>",
        "<dml_values_parameter>",
        "<select_parameter>",
        "<comparison_operator_replace>",
        "<index_parameter>",
        "<order_by_parameter>",
        "<is_operator_replace>"
    ],
    "Affected Elements": "EXPLAIN, ORDER BY, USE INDEX, COALESCE, JSON functions",
    "Root Cause Analysis": "The optimizer is not selecting the correct index or not using it optimally due to the complexity introduced by functional indexes and JSON fields."
}