{
    "pattern": "DROP TABLE IF EXISTS <object_dependency_parameter>, <object_dependency_parameter>; DROP TRIGGER IF EXISTS <object_dependency_parameter>; DROP EVENT IF EXISTS <object_dependency_parameter>; CREATE TABLE <object_dependency_parameter> (<column_definition_parameter>); CREATE TABLE <object_dependency_parameter> (<column_definition_parameter>, <column_definition_parameter> <constraint_enforce_replace>); CREATE TRIGGER <object_dependency_parameter> <trigger_time_parameter> INSERT ON <object_dependency_parameter> FOR EACH ROW INSERT INTO <object_dependency_parameter> (<column_definition_parameter>) VALUES (<dml_values_parameter>); SET <set_parameter> = <set_value_parameter>; SET GLOBAL <set_parameter> = <set_value_parameter>; CREATE EVENT <object_dependency_parameter> ON SCHEDULE EVERY <interval_parameter> DO INSERT INTO <object_dependency_parameter> VALUES (<dml_values_parameter>); SHOW <show_parameter>; DROP TABLE <object_dependency_parameter>, <object_dependency_parameter>; SET GLOBAL <set_parameter> = <set_value_parameter>;",
    "applied_rules": [
        "<object_dependency_parameter>",
        "<column_definition_parameter>",
        "<constraint_enforce_replace>",
        "<trigger_time_parameter>",
        "<dml_values_parameter>",
        "<set_parameter>",
        "<set_value_parameter>",
        "<interval_parameter>",
        "<show_parameter>"
    ],
    "Affected Elements": "CREATE EVENT, INSERT INTO, SHOW WARNINGS",
    "Root Cause Analysis": "The warning incorrectly references the CREATE statement of the event instead of the unsafe INSERT statement triggered by the event."
}