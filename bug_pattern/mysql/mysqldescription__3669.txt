{
    "pattern": "SELECT <select_parameter> FROM T WHERE <where_parameter> GROUP BY <group_by_parameter> HAVING T.a <comparison_operator_replace> T.b; CREATE TABLE h(a DOUBLE, <constraint_type_parameter> USING BTREE (a)) ENGINE=<engine_parameter>; INSERT INTO h VALUES(<dml_values_parameter>), (<dml_values_parameter>); ALTER TABLE h DROP KEY a, ADD <constraint_type_parameter> USING HASH (a); INSERT INTO h VALUES(<dml_values_parameter>); SELECT * FROM h; CREATE TABLE t(a DOUBLE); INSERT INTO t VALUES(<dml_values_parameter>), (<dml_values_parameter>); SELECT * FROM t GROUP BY a; ALTER TABLE t ADD COLUMN b <data_type_parameter>; SELECT * FROM t GROUP BY a;",
    "applied_rules": [
        "<select_parameter>",
        "<where_parameter>",
        "<group_by_parameter>",
        "<constraint_type_parameter>",
        "<engine_parameter>",
        "<dml_values_parameter>",
        "<data_type_parameter>",
        "<comparison_operator_replace>"
    ],
    "Affected Elements": "UNIQUE KEY, HASH indexes, GROUP BY",
    "Root Cause Analysis": "HASH indexes in the MEMORY storage engine treat negative and positive zeroes as different values, leading to duplicate key errors and incorrect grouping results."
}