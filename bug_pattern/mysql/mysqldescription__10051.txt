{
    "pattern": "CREATE TABLE t1(<object_dependency_replace>); CREATE TABLE t2(<object_dependency_replace>); INSERT INTO t1 <dml_values_parameter>; INSERT INTO t2 <dml_values_parameter>; SET optimizer_switch=<dml_condition_replace>; SELECT <select_parameter>, (SELECT COUNT(t.a) FROM t2 AS t WHERE t.a <comparison_operator_parameter> t1.a) AS c FROM t1; SELECT <select_parameter>, (SELECT COUNT(t.a) FROM t2 AS t WHERE t.a <comparison_operator_parameter> t1.a) AS c FROM t1 GROUP BY <group_by_parameter>; SET optimizer_switch=<dml_condition_replace>; SELECT <select_parameter>, (SELECT COUNT(t.a) FROM t2 AS t WHERE t.a <comparison_operator_parameter> t1.a) AS c FROM t1 GROUP BY <group_by_parameter>;",
    "applied_rules": [
        "<object_dependency_replace>",
        "<dml_values_parameter>",
        "<dml_condition_replace>",
        "<select_parameter>",
        "<comparison_operator_parameter>",
        "<group_by_parameter>"
    ],
    "Affected Elements": "GROUP BY clause, subqueries, optimizer_switch setting",
    "Root Cause Analysis": "The functional dependency check is mistakenly skipped when the table is derived from a scalar query, leading to incorrect results in ONLY_FULL_GROUP_BY mode."
}