{
    "pattern": "CREATE TABLE IF NOT EXISTS t0 ( c0 DECIMAL <constraint_type_parameter> <constraint_enforce_replace> ); INSERT INTO t0 ( c0 ) <dml_values_parameter>; SELECT ra0.c0 AS ca1 FROM t0 ra0 WHERE ra0.c0 <in_operator_parameter> ( SELECT ra1.c0 AS ca0 FROM t0 ra1 WHERE CONCAT( ra0.c0 , 'x' , ra0.c0 ) <comparison_operator_parameter> ra1.c0 ); SELECT ra0.c0 AS ca1 FROM t0 ra0 WHERE ra0.c0 <in_operator_parameter> ( SELECT /*+ NO_BNL(ra1) */ ra1.c0 AS ca0 FROM t0 ra1 WHERE CONCAT( ra0.c0 , 'x' , ra0.c0 ) <comparison_operator_parameter> ra1.c0 );",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<constraint_enforce_replace>",
        "<dml_values_parameter>",
        "<in_operator_parameter>",
        "<comparison_operator_parameter>"
    ],
    "Affected Elements": "CONCAT function, IN clause, NO_BNL hint",
    "Root Cause Analysis": "The bug arises from the optimizer's handling of hash joins when switching the BNL optimization, resulting in inconsistent results due to the type mismatch and string truncation warnings."
}