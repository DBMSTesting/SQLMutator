{
    "pattern": "CREATE TABLE t (<dml_values_parameter>) ENGINE=<object_dependency_replace>; DECLARE @prepared_trx_number INT = <dml_values_parameter>; DECLARE @k INT = <dml_values_parameter>; WHILE @k < @prepared_trx_number DO XA START '<dml_values_parameter>' + CAST(@k AS <string_function_parameter>); INSERT INTO t SET a=@k; XA END '<dml_values_parameter>' + CAST(@k AS <string_function_parameter>); XA PREPARE '<dml_values_parameter>' + CAST(@k AS <string_function_parameter>); SET @k = @k + <dml_values_parameter>; END WHILE; WHILE @k < @prepared_trx_number DO XA COMMIT '<dml_values_parameter>' + CAST(@k AS <string_function_parameter>); SET @k = @k + <dml_values_parameter>; END WHILE; DROP TABLE t;",
    "applied_rules": [
        "<dml_values_parameter>",
        "<object_dependency_replace>",
        "<string_function_parameter>"
    ],
    "Affected Elements": "XA transactions, memory allocation logic in transaction recovery",
    "Root Cause Analysis": "The bug is caused by insufficient memory allocation handling in transaction recovery, leading to a situation where recovery cannot proceed due to an excessive number of external prepared transactions."
}