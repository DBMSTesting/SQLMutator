{
    "pattern": "SET @ori_val = @@innodb_ddl_buffer_size; CREATE TABLE a (a INT, b INT, <constraint_type_parameter>(a)); DELIMITER $$; CREATE PROCEDURE insert_into_tables(IN num INTEGER) BEGIN DECLARE x INT; SET x = 1; WHILE x < num DO INSERT INTO `a` (`a`, `b`) VALUES (<dml_values_parameter>); SET x = x + 1; END WHILE; END$$ DELIMITER ;$$ CALL insert_into_tables(10000); ALTER TABLE a ADD COLUMN `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, ADD <constraint_type_parameter>(`id`); SELECT MAX(a), MAX(b), MAX(id) FROM a; SET SESSION innodb_ddl_buffer_size = 104857600; ALTER TABLE a DROP COLUMN id, DROP INDEX id; ALTER TABLE a ADD COLUMN `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, ADD <constraint_type_parameter>(`id`); SELECT MAX(a), MAX(b), MAX(id) FROM a; DROP TABLE a; DROP PROCEDURE insert_into_tables; SET SESSION innodb_ddl_buffer_size = @ori_val;",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<dml_values_parameter>"
    ],
    "Affected Elements": "AUTO_INCREMENT, INSERT, ALTER TABLE, SELECT",
    "Root Cause Analysis": "The gap in auto-increment values occurs due to the way InnoDB reserves values during the insertion process, especially when the DDL buffer size affects the handling of auto-increment keys."
}