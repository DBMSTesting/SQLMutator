{
    "pattern": "SELECT <select_parameter> FROM <object_dependency_replace> WHERE <where_parameter> GROUP BY 1 HAVING <aggregation_function_parameter> <comparison_operator_replace> <aggregation_function_parameter>; CREATE TABLE <object_dependency_replace> (<object_dependency_replace> <data_type_parameter>, <object_dependency_replace> <data_type_parameter>); DELIMITER // CREATE PROCEDURE <object_dependency_replace>() BEGIN DECLARE <variable_name_parameter> <data_type_parameter>; SET <variable_name_parameter> = <numeric_value_parameter>; INSERT INTO <object_dependency_replace> VALUES (<dml_values_parameter>, <string_function_parameter>(<string_parameter>, <variable_name_parameter>)); END // DELIMITER ; CALL <object_dependency_replace>();",
    "applied_rules": [
        "<select_parameter>",
        "<object_dependency_replace>",
        "<where_parameter>",
        "<aggregation_function_parameter>",
        "<comparison_operator_replace>",
        "<data_type_parameter>",
        "<variable_name_parameter>",
        "<numeric_value_parameter>",
        "<dml_values_parameter>",
        "<string_function_parameter>",
        "<string_parameter>"
    ],
    "Affected Elements": "concat, name_const, insert, procedure declaration",
    "Root Cause Analysis": "The issue arises from an illegal mix of collations when using concatenated strings with differing character sets, particularly under certain replication settings."
}