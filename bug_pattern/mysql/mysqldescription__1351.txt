{
    "pattern": "DROP TABLE IF EXISTS test_tab; CREATE TABLE test_tab (ID int <constraint_type_parameter>, Value int, Name varchar(20), <object_dependency_replace>) ENGINE=pbxt; INSERT test_tab <dml_values_parameter>; INSERT test_tab <dml_values_parameter>; INSERT test_tab <dml_values_parameter>; INSERT test_tab <dml_values_parameter>; INSERT test_tab <dml_values_parameter>; INSERT test_tab <dml_values_parameter>; INSERT test_tab <dml_values_parameter>; INSERT test_tab <dml_values_parameter>; SELECT <select_parameter> FROM test_tab; BEGIN; SELECT <select_parameter> FROM test_tab WHERE id <comparison_operator_parameter> 5 FOR UPDATE; BEGIN; SELECT <select_parameter> FROM test_tab WHERE value <comparison_operator_parameter> 2 ORDER BY value, name FOR UPDATE; UPDATE test_tab SET value = 3 WHERE id <comparison_operator_parameter> 6; COMMIT; SELECT <select_parameter> FROM test_tab;",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<object_dependency_replace>",
        "<dml_values_parameter>",
        "<select_parameter>",
        "<comparison_operator_parameter>"
    ],
    "Affected Elements": "SELECT, ORDER BY, FOR UPDATE, COMMIT",
    "Root Cause Analysis": "The issue arises from the PBXT storage engine not properly handling the HA_READ_ORDER flag on a per-query basis, leading to inconsistent row ordering when using index scans with concurrent updates."
}