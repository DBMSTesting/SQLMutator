{
    "pattern": "CREATE TABLE `a` (<object_dependency_replace>, `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'The id', `f` char(1) NOT NULL DEFAULT 'A' COMMENT 'Flag', <constraint_type_parameter> (`id`), KEY `IDX_A_F` (`f`)) ENGINE=<engine_parameter>; CREATE TABLE `b` (<object_dependency_replace>, `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'Primary key', `a_id` int(10) unsigned DEFAULT NULL, `ts` datetime NOT NULL COMMENT 'Timestamp', `f` char(1) NOT NULL COMMENT 'Flag', <constraint_type_parameter> (`id`), KEY `B_FK` (`a_id`), KEY `IDX_B_F` (`f`), CONSTRAINT `B_FK` FOREIGN KEY (`a_id`) REFERENCES `a` (`id`)) ENGINE=<engine_parameter>; INSERT INTO a(id,f) VALUES <dml_values_parameter>; INSERT INTO b(a_id,ts,f) VALUES <dml_values_parameter>; SELECT * FROM a WHERE a.f = <dml_condition_replace> AND a.id IN (SELECT a_id FROM b WHERE b.f = <dml_condition_replace> AND DATE(ts) > (DATE(SYSDATE()) - INTERVAL <interval_parameter> DAY)); SELECT * FROM a WHERE a.f = <dml_condition_replace> AND EXISTS (SELECT a_id FROM b WHERE b.f = <dml_condition_replace> AND DATE(ts) > (DATE(SYSDATE()) - INTERVAL <interval_parameter> DAY) AND b.a_id = a.id); SELECT * FROM a USE INDEX (<index_parameter>) WHERE a.f = <dml_condition_replace> AND a.id IN (SELECT a_id FROM b WHERE b.f = <dml_condition_replace> AND DATE(ts) > (DATE(SYSDATE()) - INTERVAL <interval_parameter> DAY)); SELECT * FROM a USE INDEX (<index_parameter>) WHERE a.f = <dml_condition_replace> AND EXISTS (SELECT a_id FROM b WHERE b.f = <dml_condition_replace> AND DATE(ts) > (DATE(SYSDATE()) - INTERVAL <interval_parameter> DAY) AND b.a_id = a.id);",
    "applied_rules": [
        "<object_dependency_replace>",
        "<constraint_type_parameter>",
        "<engine_parameter>",
        "<dml_values_parameter>",
        "<dml_condition_replace>",
        "<interval_parameter>",
        "<index_parameter>"
    ],
    "Affected Elements": "IN clause, EXISTS clause, USE INDEX clause",
    "Root Cause Analysis": "The optimizer's behavior changes based on the enforced index, leading to different result sets for logically identical queries."
}