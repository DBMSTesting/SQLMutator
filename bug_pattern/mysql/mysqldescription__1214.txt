{
    "pattern": "CREATE TABLE SIZE_RULE (ID_SIZE_RULE smallint unsigned <constraint_enforce_replace>, ID_PROJECT int unsigned <constraint_enforce_replace>, SR_NAME varchar(50) <constraint_enforce_replace>, SR_TYPE enum('I', 'L') <constraint_enforce_replace>, SR_LIST varchar(50) <constraint_enforce_replace>, SR_MIN smallint unsigned <constraint_enforce_replace>, SR_MAX smallint unsigned <constraint_enforce_replace>, SR_INTERVAL smallint unsigned <constraint_enforce_replace>, SR_FORMAT smallint unsigned DEFAULT 0 <constraint_enforce_replace>, SR_UPDATE_DATE datetime <constraint_enforce_replace>, SR_STATUS enum('E', 'K') <constraint_enforce_replace>) ENGINE=InnoDB CHARACTER SET=utf8 <object_dependency_replace>; ALTER TABLE SIZE_RULE ADD CONSTRAINT PK_SIZE_RULE <constraint_type_parameter> (ID_SIZE_RULE); DROP FUNCTION IF EXISTS checkSizeRule; CREATE FUNCTION checkSizeRule(inIdRule smallint unsigned, inList varchar(50), inMin smallint unsigned, inMax smallint unsigned, inInterval smallint unsigned) RETURNS boolean DETERMINISTIC READS SQL DATA SQL SECURITY INVOKER BEGIN DECLARE result boolean; DECLARE idRuleIsNull smallint unsigned; DECLARE rType enum('I', 'L'); SET result = true; IF (IFNULL(inIdRule, 0) = 0 AND (IFNULL(inList, 0) != 0 OR IFNULL(inMin, 0) != 0 OR IFNULL(inMax, 0) != 0 OR IFNULL(inInterval, 0) != 0)) THEN SET result = false; END IF; IF result = true THEN SELECT SR_TYPE INTO rType FROM SIZE_RULE WHERE ID_SIZE_RULE = inIdRule; IF rType = 'I' AND (IFNULL(inMin, 0) = 0 OR IFNULL(inMax, 0) = 0 OR IFNULL(inInterval, 0) = 0 OR IFNULL(inList, '') != '') THEN SET result = false; ELSIF rType = 'L' AND (IFNULL(inMin,0) != 0 OR IFNULL(inMax, 0) != 0 OR IFNULL(inInterval, 0) != 0 OR IFNULL(inList, '') = '') THEN SET result = false; END IF; END IF; RETURN result; END; DROP TRIGGER IF EXISTS TG1_SIZE_RULE; CREATE TRIGGER TG1_SIZE_RULE AFTER INSERT ON SIZE_RULE FOR EACH ROW BEGIN IF NOT checkSizeRule(NEW.ID_SIZE_RULE, NEW.SR_LIST, NEW.SR_MIN, NEW.SR_MAX, NEW.SR_INTERVAL) THEN SET @error = raise_error('Rule limits are not compatible with rule type'); END IF; END; INSERT INTO SIZE_RULE <dml_values_parameter>;",
    "applied_rules": [
        "<constraint_enforce_replace>",
        "<object_dependency_replace>",
        "<constraint_type_parameter>",
        "<dml_values_parameter>"
    ],
    "Affected Elements": "now() function, UDF (User Defined Function) usage in triggers",
    "Root Cause Analysis": "The warning is triggered due to the use of a UDF in combination with statement-based replication, which can lead to discrepancies in the execution of the function across different servers."
}