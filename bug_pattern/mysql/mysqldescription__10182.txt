{
    "pattern": "CREATE TABLE t0(c0 INT <constraint_type_parameter> <constraint_enforce_replace>); CREATE INDEX i0 USING <index_type_parameter> ON t0; CREATE INDEX i1 USING <index_type_parameter> ON t0(c0 <order_parameter>); INSERT IGNORE INTO t0(c0) <dml_values_parameter>; SELECT t0.c0 AS ref0 FROM t0; SELECT ALL t0.c0 AS ref0 FROM t0 WHERE COALESCE(0.1, 0.3) <comparison_operator_parameter> t0.c0; SELECT t0.c0 AS ref0 FROM t0 WHERE <logical_operator_replace> (COALESCE(0.1, 0.3) <comparison_operator_parameter> t0.c0);",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<constraint_enforce_replace>",
        "<index_type_parameter>",
        "<dml_values_parameter>",
        "<comparison_operator_parameter>",
        "<logical_operator_replace>",
        "<order_parameter>"
    ],
    "Affected Elements": "COALESCE, WHERE clause, NOT operator",
    "Root Cause Analysis": "The use of COALESCE combined with mutually exclusive predicates leads to unexpected results due to logical evaluation inconsistencies in the WHERE clause."
}