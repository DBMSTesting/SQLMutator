{
    "pattern": "DROP DATABASE IF EXISTS <database_name_parameter>; DROP DATABASE IF EXISTS <database_name_parameter>; CREATE DATABASE <database_name_parameter>; CREATE DATABASE <database_name_parameter>; CREATE TABLE A.`A` ( `id` INT UNSIGNED NOT NULL AUTO_INCREMENT, `prospect_id` VARCHAR(50) NULL DEFAULT NULL, PRIMARY KEY (`id`), INDEX `prospect_id` (`prospect_id`)); CREATE TABLE B.`B` ( `uuid` VARCHAR(50) NOT NULL, PRIMARY KEY (`uuid`)); INSERT INTO A.A (`id`, `prospect_id`) VALUES (<dml_values_parameter>); INSERT INTO A.A (`id`, `prospect_id`) VALUES (<dml_values_parameter>); INSERT INTO B.B (`uuid`) VALUES (<dml_values_parameter>); DROP PROCEDURE IF EXISTS A.`<procedure_name_parameter>`; DELIMITER \\ CREATE PROCEDURE A.`<procedure_name_parameter>`( IN `oid_` <data_type_parameter>) BEGIN SELECT <function_category_parameter>(), oid_, GROUP_CONCAT(CONCAT('<string_parameter>')) FROM A.A <join_operator_replace> B.B ON B.uuid = A.prospect_id WHERE A.id = oid_; END\\ DELIMITER ; USE A; CALL <procedure_name_parameter>(<dml_condition_parameter>); DO SLEEP(<numeric_function_parameter>); CALL <procedure_name_parameter>(<dml_condition_parameter>);",
    "applied_rules": [
        "<database_name_parameter>",
        "<dml_values_parameter>",
        "<procedure_name_parameter>",
        "<function_category_parameter>",
        "<string_parameter>",
        "<join_operator_replace>",
        "<data_type_parameter>",
        "<dml_condition_parameter>",
        "<numeric_function_parameter>"
    ],
    "Affected Elements": "GROUP_CONCAT, INNER JOIN, procedure calls",
    "Root Cause Analysis": "The GROUP_CONCAT function is returning cached results due to improper handling of temporary results or state in stored procedures when querying across different databases."
}