{
    "pattern": "CREATE TABLE t0 (c0 TEXT <constraint_type_parameter>); INSERT INTO t0(c0) <dml_values_parameter>; SET @@SESSION.OPTIMIZER_SWITCH = <dml_condition_replace>; SELECT c0, c1 FROM (SELECT t0.c0, CASE <case_parameter> END FROM t0 <join_operator_replace> (SELECT COUNT(1) <where_parameter> FALSE) x(c0) USING (c0)) t0(c0,c1) ORDER BY c0, c1; SET @@SESSION.OPTIMIZER_SWITCH = <dml_condition_replace>; SELECT c0, c1 FROM (SELECT t0.c0, CASE <case_parameter> END FROM t0 <join_operator_replace> (SELECT COUNT(1) <where_parameter> FALSE) x(c0) USING (c0)) t0(c0,c1) ORDER BY c0, c1;",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<dml_values_parameter>",
        "<dml_condition_replace>",
        "<case_parameter>",
        "<join_operator_replace>",
        "<where_parameter>"
    ],
    "Affected Elements": "SET @@SESSION.OPTIMIZER_SWITCH; lead(5) OVER (); STRAIGHT_JOIN; ORDER BY",
    "Root Cause Analysis": "The optimizer's handling of the block_nested_loop setting is producing inconsistent results in the query output despite the same compilation parameters."
}