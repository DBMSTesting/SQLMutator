{
    "pattern": "DROP TABLE IF EXISTS `test1`; DROP TABLE IF EXISTS `test2`; CREATE TABLE `test1` ( `id` int(10) unsigned <constraint_type_parameter>, `foo` text, `test2` varchar(255) default NULL, PRIMARY KEY  (`id`) ) ENGINE=<object_dependency_replace> AUTO_INCREMENT=5 DEFAULT CHARSET=utf8; CREATE TABLE `test2` ( `id` int(10) unsigned <constraint_type_parameter>, `name` varchar(255) default NULL, PRIMARY KEY  (`id`) ) ENGINE=<object_dependency_replace> AUTO_INCREMENT=5 DEFAULT CHARSET=utf8; CREATE FUNCTION `testfunc`(the_name <string_function_parameter>) RETURNS int(10) unsigned DETERMINISTIC BEGIN DECLARE the_id <numeric_function_parameter>; SELECT `id` INTO the_id FROM test2 WHERE `name` = the_name; RETURN the_id; END; INSERT INTO test1 (foo, test2) VALUES <dml_values_parameter>; INSERT INTO test2 (name) VALUES <dml_values_parameter>; SELECT * FROM test1 <join_operator_replace> test2 ON test2.id=testfunc(test1.test2);",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<object_dependency_replace>",
        "<string_function_parameter>",
        "<numeric_function_parameter>",
        "<dml_values_parameter>",
        "<join_operator_replace>"
    ],
    "Affected Elements": "LEFT JOIN, ON clause, function call in SQL",
    "Root Cause Analysis": "The bug arises from the incorrect evaluation of the stored function in the ON clause during a JOIN operation, leading to repeated values from the last evaluated row instead of the current row."
}