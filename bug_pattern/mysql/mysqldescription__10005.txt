{
    "pattern": "DROP TABLE IF EXISTS `parent`; CREATE TABLE `parent` ( `id` bigint NOT NULL AUTO_INCREMENT <constraint_type_parameter> ) ENGINE=<object_dependency_replace>; DROP TABLE IF EXISTS `child`; CREATE TABLE `child` ( `id` bigint NOT NULL AUTO_INCREMENT <constraint_type_parameter>, `parent_id` bigint NOT NULL, `seq` int DEFAULT NULL ) ENGINE=<object_dependency_replace>; INSERT INTO `parent` VALUES (<dml_values_parameter>); INSERT INTO `child` VALUES (<dml_values_parameter>); SELECT child_top.id FROM parent <join_operator_replace> child child_top ON ( parent.id <comparison_operator_replace> child_top.parent_id AND child_top.id IN ( SELECT t.id_top FROM ( SELECT c.id AS id_top, ROW_NUMBER() OVER (PARTITION BY c.parent_id ORDER BY c.seq <arithmetic_operator_replace>) AS rn FROM child c ) t WHERE t.rn = <dml_condition_replace> );",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<object_dependency_replace>",
        "<dml_values_parameter>",
        "<join_operator_replace>",
        "<comparison_operator_replace>",
        "<arithmetic_operator_replace>",
        "<dml_condition_replace>"
    ],
    "Affected Elements": "ROW_NUMBER(), LEFT OUTER JOIN, PARTITION BY, ORDER BY",
    "Root Cause Analysis": "The use of ROW_NUMBER() in conjunction with a LEFT OUTER JOIN leads to multiple rows being returned due to the way the subquery filters child records."
}