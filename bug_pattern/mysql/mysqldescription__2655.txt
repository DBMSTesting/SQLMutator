{
    "pattern": "CREATE TABLE t1n(<id_parameter> <integer_parameter> <constraint_type_parameter>, <u_parameter> <integer_parameter> <constraint_type_parameter>, <g_parameter> <integer_parameter>, <v_parameter> <integer_parameter>, <vi_parameter> <integer_parameter>, <index_parameter>(<vi_parameter>), <s_parameter> <char_parameter>); CREATE TABLE t2n(<id_parameter> <integer_parameter> <constraint_type_parameter>, <u_parameter> <integer_parameter> <constraint_type_parameter>, <g_parameter> <integer_parameter>, <v_parameter> <integer_parameter>, <vi_parameter> <integer_parameter>, <index_parameter>(<vi_parameter>), <s_parameter> <char_parameter>); INSERT INTO t1n VALUES(<value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>); INSERT INTO t2n VALUES(<value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>); INSERT INTO t1n VALUES(<value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>); INSERT INTO t2n VALUES(<value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>); INSERT INTO t1n VALUES(<value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>); INSERT INTO t1n VALUES(<value_parameter>, <value_parameter>, <value_parameter>, <null_parameter>, <null_parameter>, <value_parameter>); INSERT INTO t1n VALUES(<value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>); INSERT INTO t1n VALUES(<value_parameter>, <value_parameter>, <value_parameter>, <null_parameter>, <null_parameter>, <value_parameter>); INSERT INTO t2n VALUES(<value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>); INSERT INTO t1n VALUES(<value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>); INSERT INTO t1n VALUES(<value_parameter>, <value_parameter>, <value_parameter>, <null_parameter>, <null_parameter>, <value_parameter>); INSERT INTO t2n VALUES(<value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>); INSERT INTO t2n VALUES(<value_parameter>, <value_parameter>, <value_parameter>, <null_parameter>, <null_parameter>, <value_parameter>); INSERT INTO t1n VALUES(<value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>); INSERT INTO t2n VALUES(<value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>); INSERT INTO t2n VALUES(<value_parameter>, <value_parameter>, <value_parameter>, <null_parameter>, <null_parameter>, <value_parameter>); INSERT INTO t2n VALUES(<value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>); INSERT INTO t2n VALUES(<value_parameter>, <value_parameter>, <value_parameter>, <null_parameter>, <null_parameter>, <value_parameter>); INSERT INTO t1n VALUES(<value_parameter>, <value_parameter>, <value_parameter>, <null_parameter>, <null_parameter>, <value_parameter>); INSERT INTO t2n VALUES(<value_parameter>, <value_parameter>, <value_parameter>, <null_parameter>, <null_parameter>, <value_parameter>); EXPLAIN SELECT t1n.* FROM t1n, t2n WHERE t1n.v=<comparison_operator_parameter> t2n.u; EXPLAIN SELECT t1n.* FROM t1n, t2n WHERE t1n.v=<comparison_operator_parameter> t2n.u <comparison_operator_replace> TRUE;",
    "applied_rules": [
        "<id_parameter>",
        "<integer_parameter>",
        "<constraint_type_parameter>",
        "<u_parameter>",
        "<g_parameter>",
        "<v_parameter>",
        "<vi_parameter>",
        "<index_parameter>",
        "<s_parameter>",
        "<char_parameter>",
        "<value_parameter>",
        "<null_parameter>",
        "<comparison_operator_parameter>",
        "<comparison_operator_replace>"
    ],
    "Affected Elements": "WHERE clause, IS TRUE",
    "Root Cause Analysis": "The optimizer treats logically equivalent SQL queries differently due to the evaluation of 'IS TRUE', leading to inconsistent execution plans."
}