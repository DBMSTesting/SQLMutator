{
    "pattern": "EXPLAIN SELECT <select_parameter> FROM (<select_parameter> o.dbx_tx, COUNT(*) AS <aggregation_function_parameter> FROM <object_dependency_replace> o JOIN <object_dependency_replace> li ON o.id = li.order_id WHERE li.type = <string_function_parameter> AND li.product_id <is_operator_parameter> NULL AND o.id >= 700000 GROUP BY o.dbx_tx) sn <join_operator_replace> (<select_parameter> o.dbx_tx, COUNT(*) AS <aggregation_function_parameter> FROM <object_dependency_replace> o JOIN <object_dependency_replace> li ON o.id = li.order_id WHERE li.type = <string_function_parameter> AND <exists_operator_parameter> (SELECT <select_parameter> FROM <object_dependency_replace> li2 WHERE li2.order_id = li.order_id AND li2.type = <string_function_parameter> AND li2.product_id <is_operator_parameter> NULL) AND o.id >= 700000 GROUP BY o.dbx_tx) snn ON sn.dbx_tx = snn.dbx_tx ORDER BY sn.dbx_tx;",
    "applied_rules": [
        "<select_parameter>",
        "<aggregation_function_parameter>",
        "<object_dependency_replace>",
        "<string_function_parameter>",
        "<is_operator_parameter>",
        "<join_operator_replace>",
        "<exists_operator_parameter>"
    ],
    "Affected Elements": "EXPLAIN, SELECT, JOIN, WHERE, EXISTS, GROUP BY, ORDER BY",
    "Root Cause Analysis": "The MySQL optimizer has a known issue with materializing derived tables during EXPLAIN, leading to significantly slower performance compared to execution."
}