{
    "pattern": "CREATE TABLE t1 (c1 INT <constraint_type_parameter>); INSERT INTO t1 <dml_values_parameter>; SET GLOBAL <set_global_parameter> = <set_global_value_parameter>; SELECT <select_parameter> FROM t1; SET TRANSACTION ISOLATION LEVEL <isolation_level_parameter>; BEGIN; SELECT <select_parameter> FROM t1; SELECT count(*) <aggregation_function_parameter> FROM information_schema.innodb_trx; SELECT count(*) <aggregation_function_parameter> FROM performance_schema.data_lock_waits; SELECT <select_parameter>; SELECT t.trx_id AS trxId, t.trx_mysql_thread_id AS trxMySqlThreadId, t.trx_state AS trxStatus, left(t.trx_query, 5000) AS trxQuery, t.trx_rows_locked AS trxRowsLocked, t.trx_rows_modified AS trxRowsModified, timestampdiff(SECOND, t.trx_wait_started, convert_tz(now(), @@time_zone, 'SYSTEM')) AS trxWaitLockTime, timestampdiff(SECOND, t.trx_started, convert_tz(now(), @@time_zone, 'SYSTEM')) AS trxDurationTime, wb.REQUESTING_ENGINE_TRANSACTION_ID AS blockedTrx, wb.REQUESTING_ENGINE_LOCK_ID AS blockedLock, w.BLOCKING_ENGINE_TRANSACTION_ID AS blockedByTrx, w.BLOCKING_ENGINE_LOCK_ID AS blockedByLock, p.id AS sessionId, p.user AS loginUser, p.host AS host, p.db AS db, p.command AS command, p.time AS sqlExecuteTime, p.state AS sessionState, left(p.info, 5000) AS sqlText FROM information_schema.innodb_trx t <join_operator_replace> performance_schema.data_lock_waits w ON t.trx_id=w.REQUESTING_ENGINE_TRANSACTION_ID <join_operator_replace> performance_schema.data_lock_waits wb ON t.trx_id= wb.BLOCKING_ENGINE_TRANSACTION_ID <join_operator_replace> information_schema.processlist p ON t.trx_mysql_thread_id = p.id WHERE timestampdiff(SECOND, t.trx_wait_started, convert_tz(now(), @@time_zone, 'SYSTEM')) <comparison_operator_replace> 100 OR wb.REQUESTING_ENGINE_TRANSACTION_ID IS NOT NULL;",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<dml_values_parameter>",
        "<set_global_parameter>",
        "<set_global_value_parameter>",
        "<select_parameter>",
        "<isolation_level_parameter>",
        "<aggregation_function_parameter>",
        "<join_operator_replace>",
        "<comparison_operator_replace>"
    ],
    "Affected Elements": "JOIN clauses, timestampdiff function, and use of indexes in the SELECT statement.",
    "Root Cause Analysis": "The presence of 'fake indexes' on performance_schema.data_lock_waits leads to inefficient query execution plans, causing unnecessary full table scans."
}