{
    "pattern": "USE <database_parameter>; DROP TABLE IF EXISTS <table_parameter>; CREATE TABLE <table_parameter> (PARENT_ID INT(10) UNSIGNED NOT NULL <constraint_enforce_replace>, PARENT_FIELD VARCHAR(10), <constraint_type_parameter> (PARENT_ID)); DROP TABLE IF EXISTS <table_parameter>; CREATE TABLE <table_parameter> (CHILD_ID INT NOT NULL <constraint_enforce_replace>, PARENT_ID INT NOT NULL, CHILD_FIELD VARCHAR(10), <constraint_type_parameter> (CHILD_ID)); INSERT INTO <table_parameter> (<dml_values_parameter>) SELECT 'AAAA'; INSERT INTO <table_parameter> (<dml_values_parameter>) SELECT 1, 'BBBB'; SELECT <select_parameter>, MIN(<select_parameter>) FROM <table_parameter> <join_operator_replace> <table_parameter> WHERE <where_parameter> AND <where_parameter> = <where_parameter> AND <where_parameter> = 'ZZZZ';",
    "applied_rules": [
        "<database_parameter>",
        "<table_parameter>",
        "<constraint_enforce_replace>",
        "<constraint_type_parameter>",
        "<dml_values_parameter>",
        "<select_parameter>",
        "<join_operator_replace>",
        "<where_parameter>"
    ],
    "Affected Elements": "straight_join, min(CHILD_FIELD), where clause with _Child.CHILD_FIELD = 'ZZZZ'",
    "Root Cause Analysis": "The bug arises due to the behavior of the aggregate function min() when there is no matching record in the _Child table for the specified condition, leading to unexpected results."
}