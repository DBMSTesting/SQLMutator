{
    "pattern": "CREATE DATABASE IF NOT EXISTS <database_name_parameter>; USE <database_name_parameter>; DROP TABLE IF EXISTS <table_name_parameter>; CREATE TABLE <table_name_parameter> (`id` int(11) NOT NULL, <constraint_type_parameter> (`id`)) ENGINE=<storage_engine_parameter> DEFAULT CHARSET=<charset_parameter>; DROP TABLE IF EXISTS <table_name_parameter>; CREATE TABLE <table_name_parameter> (`id` int(11) NOT NULL, `table_a_id` int(11) DEFAULT NULL, <constraint_type_parameter> (`id`)) ENGINE=<storage_engine_parameter> DEFAULT CHARSET=<charset_parameter>; INSERT INTO <database_name_parameter>.<table_name_parameter>(`id`) VALUES (<dml_values_parameter>); INSERT INTO <database_name_parameter>.<table_name_parameter>(`id`,`table_a_id`) VALUES (<dml_values_parameter>, <dml_values_parameter>); SELECT <aggregation_function_parameter>(table_a.id), s.source_name FROM table_a <join_operator_replace> (SELECT <string_function_parameter> AS source_name, table_a_id FROM table_b) s ON table_a.id <comparison_operator_replace> s.table_a_id GROUP BY s.source_name;",
    "applied_rules": [
        "<database_name_parameter>",
        "<table_name_parameter>",
        "<constraint_type_parameter>",
        "<storage_engine_parameter>",
        "<charset_parameter>",
        "<dml_values_parameter>",
        "<aggregation_function_parameter>",
        "<string_function_parameter>",
        "<join_operator_replace>",
        "<comparison_operator_replace>"
    ],
    "Affected Elements": "LEFT JOIN, GROUP BY, subquery",
    "Root Cause Analysis": "The use of GROUP BY with a constant value in a subquery in conjunction with LEFT JOIN causes incorrect results due to how MySQL handles grouping and null values in this context."
}