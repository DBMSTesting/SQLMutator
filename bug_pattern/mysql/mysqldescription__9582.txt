{
    "pattern": "CREATE TABLE t (<id_parameter> BIGINT <constraint_enforce_replace>, <father_id_parameter> BIGINT <constraint_enforce_replace>, <column_useless_parameter> VARCHAR(50) <constraint_enforce_replace>, <constraint_type_parameter> (id), <index_parameter> index_father_id (<father_id_parameter>, <column_useless_parameter>, <id_parameter>)); INSERT INTO t <dml_values_parameter> SELECT <numeric_function_parameter>(), 'yes, it is useless'; INSERT INTO t <dml_values_parameter> SELECT <numeric_function_parameter>(), 'yes, it is useless'; INSERT INTO t <dml_values_parameter> SELECT <numeric_function_parameter>(), 'yes, it is useless'; INSERT INTO t <dml_values_parameter> SELECT <numeric_function_parameter>(), 'yes, it is useless'; EXPLAIN SELECT * FROM t <object_dependency_replace> WHERE <father_id_parameter> = <numeric_value_parameter> AND <column_useless_parameter> = 'yes, it is useless' AND <id_parameter> >= <numeric_value_parameter> ORDER BY <id_parameter> LIMIT <numeric_value_parameter>;",
    "applied_rules": [
        "<id_parameter>",
        "<father_id_parameter>",
        "<column_useless_parameter>",
        "<constraint_enforce_replace>",
        "<constraint_type_parameter>",
        "<index_parameter>",
        "<dml_values_parameter>",
        "<numeric_function_parameter>",
        "<object_dependency_replace>",
        "<numeric_value_parameter>"
    ],
    "Affected Elements": "ORDER BY, LIMIT, USE INDEX",
    "Root Cause Analysis": "The optimizer does not correctly consider the LIMIT clause when estimating costs for different indices, leading to suboptimal index selection."
}