{
    "pattern": "CREATE TABLE `t1` ( `uid` int <constraint_type_parameter>, `col1` json DEFAULT <dml_values_parameter>, `col2` varchar(10) GENERATED ALWAYS AS (<string_function_parameter>) VIRTUAL, <constraint_type_parameter> (`uid`), KEY `index_col2` (`col2`)); INSERT INTO t1 <dml_values_parameter>; INSERT INTO t1 <dml_values_parameter>; SELECT <string_function_parameter>, count(<string_function_parameter>) FROM t1 WHERE `uid` <in_operator_replace> (SELECT `uid` FROM t1) GROUP BY 1; ALTER TABLE t1 DROP INDEX `index_col2`; SELECT <string_function_parameter>, count(<string_function_parameter>) FROM t1 WHERE `uid` <in_operator_replace> (SELECT `uid` FROM t1) GROUP BY 1;",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<dml_values_parameter>",
        "<string_function_parameter>",
        "<in_operator_replace>"
    ],
    "Affected Elements": "CREATE TABLE, INSERT INTO, SELECT, ALTER TABLE, GROUP BY",
    "Root Cause Analysis": "The optimizer's substitute_generated_columns step incorrectly handles the virtual column and leads to a duplicate key error when the index on the virtual column is present."
}