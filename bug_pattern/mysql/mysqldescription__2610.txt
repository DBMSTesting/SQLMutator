{
    "pattern": "SHOW <show_parameter> FOR 'trig_test'@'localhost'; GRANT <grant_parameter> ON *.* TO 'trig_test'@'localhost'; USE <use_parameter>; CREATE TABLE test1(<dml_values_parameter>); CREATE TABLE test2(<dml_values_parameter>); CREATE TABLE test3(<dml_values_parameter>); CREATE TABLE test4(<dml_values_parameter>); DELIMITER | CREATE TRIGGER <trigger_name_parameter> BEFORE <trigger_action_parameter> ON test1 FOR EACH ROW BEGIN INSERT INTO test2 SET a2 = NEW.a1; DELETE FROM test3 WHERE a3 <comparison_operator_replace> NEW.a1; UPDATE test4 SET b4 = b4 + 1 WHERE a4 <comparison_operator_replace> NEW.a1; END; | DELIMITER ; DROP USER 'trig_test'@'localhost'; REVOKE <revoke_parameter> ON trig.* FROM 'trig_test'@'localhost'; SHOW <show_parameter> FOR 'trig_test'@'localhost'; SELECT * FROM Information_schema.triggers; INSERT INTO test1 VALUES <dml_values_parameter>; USE <use_parameter>;",
    "applied_rules": [
        "<show_parameter>",
        "<grant_parameter>",
        "<use_parameter>",
        "<dml_values_parameter>",
        "<trigger_name_parameter>",
        "<trigger_action_parameter>",
        "<comparison_operator_replace>",
        "<revoke_parameter>"
    ],
    "Affected Elements": "DROP USER, REVOKE ALL, INSERT",
    "Root Cause Analysis": "The system does not provide warnings or errors when the permissions of a trigger definer are revoked, leading to orphaned triggers."
}