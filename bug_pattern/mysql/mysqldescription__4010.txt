{
    "pattern": "DROP TABLE IF EXISTS <table_name_parameter>; DROP TABLE IF EXISTS <table_name_parameter>; DROP TRIGGER IF EXISTS <trigger_name_parameter>; CREATE TABLE <table_name_parameter> (<column_name_parameter> BIGINT UNSIGNED NOT NULL); CREATE TABLE <table_name_parameter> (<column_name_parameter> BIGINT UNSIGNED NOT NULL); INSERT INTO <table_name_parameter> VALUES (<dml_values_parameter>); INSERT INTO <table_name_parameter> VALUES (<dml_values_parameter>); DELIMITER || CREATE TRIGGER <trigger_name_parameter> AFTER UPDATE ON <table_name_parameter> FOR EACH ROW BEGIN UPDATE <table_name_parameter> SET <column_name_parameter> = IF (<old_value_parameter> <comparison_operator_parameter> <new_value_parameter> AND (<column_name_parameter> <comparison_operator_parameter> (<old_value_parameter> - <new_value_parameter>)),<value_parameter>,<value_parameter>); END; || DELIMITER ; UPDATE <table_name_parameter> SET <column_name_parameter> = <new_value_parameter>;",
    "applied_rules": [
        "<table_name_parameter>",
        "<trigger_name_parameter>",
        "<column_name_parameter>",
        "<dml_values_parameter>",
        "<old_value_parameter>",
        "<new_value_parameter>",
        "<comparison_operator_parameter>",
        "<value_parameter>"
    ],
    "Affected Elements": "IF, AND, UPDATE, TRIGGER",
    "Root Cause Analysis": "The expression in the trigger is evaluated prematurely, causing an error when attempting to evaluate an arithmetic operation on unsigned values that leads to a negative result."
}