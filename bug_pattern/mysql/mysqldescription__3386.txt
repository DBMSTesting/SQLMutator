{
    "pattern": "CREATE TABLE tbl_1 (a INT <constraint_type_parameter>); CREATE TABLE tbl_2 (b INT <constraint_type_parameter>); INSERT INTO tbl_1 (a) <dml_values_parameter>; DELIMITER $$ DROP FUNCTION IF EXISTS fn_1 $$ CREATE FUNCTION fn_1 (p_1 INT) RETURNS INT BEGIN RETURN 1; END $$ DELIMITER ; SELECT <select_parameter> FROM tbl_1 <join_operator_replace> (SELECT b FROM tbl_2) AS tmp ON tbl_1.a <comparison_operator_replace> tmp.b WHERE fn_1(tmp.b) <comparison_operator_replace> 1;",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<dml_values_parameter>",
        "<select_parameter>",
        "<join_operator_replace>",
        "<comparison_operator_replace>"
    ],
    "Affected Elements": "LEFT JOIN, function fn_1, WHERE clause",
    "Root Cause Analysis": "The left join behaves incorrectly due to the function fn_1 returning an indeterminate value when called with NULL, causing the query to yield no results instead of the expected row."
}