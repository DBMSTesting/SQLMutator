{
    "pattern": "CREATE TABLE t (a INT, b INT <constraint_type_parameter> AS (<arithmetic_operator_parameter> AS <cast_parameter>) VIRTUAL, <index_dependency_replace>); INSERT INTO t <dml_values_parameter>; SELECT <select_parameter> FROM t WHERE <where_parameter> = 0;",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<arithmetic_operator_parameter>",
        "<cast_parameter>",
        "<index_dependency_replace>",
        "<dml_values_parameter>",
        "<select_parameter>",
        "<where_parameter>"
    ],
    "Affected Elements": "create table, index, insert, select",
    "Root Cause Analysis": "The issue arises from the handling of unsigned values in functional indexes, leading to out-of-range values being accepted without error or warning."
}