{
    "pattern": "CREATE TABLE `ttt` (`id` int(11) <constraint_type_parameter>, <constraint_enforce_replace>) ENGINE=<object_dependency_replace> INSERT INTO ttt <dml_values_parameter>; CREATE PROCEDURE test_lock1() BEGIN IF (SELECT id FROM ttt WHERE id=<where_parameter>) <is_operator_parameter> NULL THEN SELECT <select_parameter>; END IF; END; CREATE PROCEDURE test_lock2() BEGIN DECLARE lock_check INT; SELECT id INTO lock_check FROM ttt WHERE id=<where_parameter>; IF lock_check <is_operator_parameter> NULL THEN SELECT <select_parameter>; END IF; END;",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<constraint_enforce_replace>",
        "<object_dependency_replace>",
        "<dml_values_parameter>",
        "<where_parameter>",
        "<is_operator_parameter>",
        "<select_parameter>"
    ],
    "Affected Elements": "IF clause, SELECT statement, stored procedures",
    "Root Cause Analysis": "The use of IF statements with SELECT queries in stored procedures leads to unnecessary row locking, causing deadlocks or long wait times when transactions are held."
}