{
    "pattern": "CREATE SCHEMA test COLLATE <collation_parameter>; CREATE TABLE test.data(value <data_type_parameter>); INSERT INTO test.data(value) <dml_values_parameter>; SELECT <select_parameter> FROM data WHERE <where_parameter> IN (<in_parameter>);",
    "applied_rules": [
        "<collation_parameter>",
        "<data_type_parameter>",
        "<dml_values_parameter>",
        "<select_parameter>",
        "<where_parameter>",
        "<in_parameter>"
    ],
    "Affected Elements": "IN clause, JSON data type handling",
    "Root Cause Analysis": "The issue arises from the way MySQL 5.7 evaluates JSON values in IN clauses, leading to unexpected matches and returning non-matching values when including zero."
}