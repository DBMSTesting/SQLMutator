{
    "pattern": "SET NAMES <string_function_parameter>; CREATE TABLE movie(id INT <constraint_type_parameter>, name VARCHAR(128)) CHARSET=<string_function_parameter>; DELIMITER <delimiter_parameter>; CREATE PROCEDURE pinsert() BEGIN DECLARE i INT DEFAULT 1; WHILE i <= 2 DO INSERT INTO movie(id, name) <dml_values_parameter>; SET i = i + 1; END WHILE; END; <delimiter_parameter>; CALL pinsert(); CONNECTION <connection_operator_parameter>; CALL mtr.add_suppression(<string_function_parameter>); LET $slave_sql_error = QUERY_GET_VALUE(SHOW SLAVE STATUS, Last_SQL_Error, 1);",
    "applied_rules": [
        "<string_function_parameter>",
        "<constraint_type_parameter>",
        "<delimiter_parameter>",
        "<dml_values_parameter>",
        "<connection_operator_parameter>"
    ],
    "Affected Elements": "INSERT statement, CONCAT function, NAME_CONST",
    "Root Cause Analysis": "The bug is caused by an incorrect collation priority when using NAME_CONST in the INSERT statement, which leads to an 'Illegal mix of collations' error during replication."
}