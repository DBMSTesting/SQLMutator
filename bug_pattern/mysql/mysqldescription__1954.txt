{
    "pattern": "DROP TABLE IF EXISTS `test`.`updatetest`; CREATE TABLE `test`.`updatetest` ( `Id` bigint(20) <constraint_type_parameter>, `Version` smallint(5) unsigned <constraint_type_parameter>, `UDate` datetime <constraint_type_parameter>, PRIMARY KEY (`Id`), UNIQUE KEY `Id` (`Id`) ) ENGINE=<engine_parameter> DEFAULT CHARSET=<charset_parameter>; DROP PROCEDURE IF EXISTS test.insert_updatetest; CREATE PROCEDURE test.insert_updatetest (INOUT p_Id bigint, IN p_Version smallint unsigned, INOUT p_UDate datetime) BEGIN INSERT INTO test.updatetest <dml_values_parameter>; SELECT Id,UDate INTO p_Id,p_UDate FROM test.updatetest WHERE (Id=<comparison_operator_parameter>); END; CALL test.insert_updatetest(@p1, @p2, @p3);",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<engine_parameter>",
        "<charset_parameter>",
        "<dml_values_parameter>",
        "<comparison_operator_parameter>"
    ],
    "Affected Elements": "INSERT INTO, SELECT INTO, stored procedure calls",
    "Root Cause Analysis": "The stored procedure does not correctly return the number of affected rows due to the way MySQL handles OUT parameters and the nature of the INSERT operation in the context of a stored procedure."
}