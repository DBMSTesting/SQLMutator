{
    "pattern": "CREATE TABLE `t1` (`cl` <text_parameter> COLLATE <collation_parameter>, `fa` <varchar_parameter> COLLATE <collation_parameter> DEFAULT <default_value_parameter>, `ti` <text_parameter> COLLATE <collation_parameter>, `id` <varchar_parameter> COLLATE <collation_parameter> NOT NULL, PRIMARY KEY (`id`), UNIQUE KEY `key1` (`fa`), KEY `IDX_1` (`ti`(<length_parameter>)) ENGINE=<engine_parameter>; CREATE TABLE `t2` (`ID` <varchar_parameter> COLLATE <collation_parameter> NOT NULL, `ide` <varchar_parameter> COLLATE <collation_parameter> NOT NULL, `ctime` <bigint_parameter> DEFAULT <default_value_parameter>, PRIMARY KEY (`ide`), KEY `Index1` (`ctime`)) ENGINE=<engine_parameter>; CREATE TABLE `t3` (`ID` <varchar_parameter> COLLATE <collation_parameter> NOT NULL, `ide` <varchar_parameter> COLLATE <collation_parameter> NOT NULL, PRIMARY KEY (`ide`)) ENGINE=<engine_parameter>; CREATE TABLE `t4` (`ts` <text_parameter> COLLATE <collation_parameter>, `orderid` <varchar_parameter> COLLATE <collation_parameter> DEFAULT <default_value_parameter>, UNIQUE KEY `key_1` (`orderid`)) ENGINE=<engine_parameter>; SET GLOBAL <setting_parameter> = <value_parameter>; DELIMITER <delimiter_parameter> CREATE FUNCTION getByteLength(inputText <text_parameter>) RETURNS <int_parameter> BEGIN RETURN(<length_function_parameter>(inputText)); END<delimiter_parameter> ; DELIMITER ; LOAD DATA INFILE <infile_path_parameter> INTO TABLE `t1`; LOAD DATA INFILE <infile_path_parameter> INTO TABLE `t2`; LOAD DATA INFILE <infile_path_parameter> INTO TABLE `t3`; LOAD DATA INFILE <infile_path_parameter> INTO TABLE `t4`; EXPLAIN SELECT count(1) AS count FROM ( SELECT substring(`fa`, getByteLength('<string_parameter>') + <int_parameter>) AS `ide`, `ti` FROM `t1` WHERE `cl` = <value_parameter> ) AS TEMP WHERE TEMP.`ide` IN ( SELECT /*+ <hint_parameter> */ ap.`Ide` FROM `t2` AS ap <join_operator_replace> `t3` AS ex ON ap.`Ide` = ex.`Ide` WHERE ap.`ctime` > <value_parameter> ) AND TEMP.`ti` IN ( SELECT `orderid` FROM `t4` WHERE `ts` IN (<value_parameter>, <value_parameter>, <value_parameter>) );",
    "applied_rules": [
        "<text_parameter>",
        "<varchar_parameter>",
        "<collation_parameter>",
        "<bigint_parameter>",
        "<length_parameter>",
        "<engine_parameter>",
        "<setting_parameter>",
        "<value_parameter>",
        "<delimiter_parameter>",
        "<int_parameter>",
        "<length_function_parameter>",
        "<string_parameter>",
        "<hint_parameter>",
        "<join_operator_replace>"
    ],
    "Affected Elements": "EXPLAIN, SELECT, JOIN, WHERE, IN, FUNCTION, COUNT",
    "Root Cause Analysis": "The assertion failure occurs due to a possible issue with how the optimizer handles key parts in the join condition, leading to an unexpected state where keyparts is less than or equal to zero."
}