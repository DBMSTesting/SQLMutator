{
    "pattern": "CREATE TEMPORARY TABLE date_functional_index (id INT <constraint_enforce_replace>, created_at DATETIME <constraint_enforce_replace>, INDEX (<aggregation_function_parameter>)); INSERT INTO date_functional_index (<dml_values_parameter>) WITH RECURSIVE sequence (n) AS (SELECT 0 UNION ALL SELECT n + 1 FROM sequence WHERE n + 1 < 100000) SELECT <current_time_function_parameter> - INTERVAL (<numeric_function_parameter> * RAND()) DAY AS created_at FROM sequence; ANALYZE TABLE date_functional_index; EXPLAIN FORMAT=<format_parameter> WITH RECURSIVE dates_range (d) AS (SELECT <current_date_function_parameter> - INTERVAL <numeric_function_parameter> DAY UNION ALL SELECT d + INTERVAL <numeric_function_parameter> DAY FROM dates_range WHERE d + INTERVAL <numeric_function_parameter> day <= <current_date_function_parameter>) SELECT d, COUNT(id) FROM dates_range <join_operator_replace> date_functional_index ON d = <date_function_parameter> GROUP BY d; CREATE TEMPORARY TABLE date_generated_column_functional_index (id INT <constraint_enforce_replace>, created_at DATETIME <constraint_enforce_replace>, created_at_date DATE AS (<date_function_parameter>), INDEX (<aggregation_function_parameter>)); INSERT INTO date_generated_column_functional_index (created_at) WITH RECURSIVE sequence (n) AS (SELECT 0 UNION ALL SELECT n + 1 FROM sequence WHERE n + 1 < 100000) SELECT <current_time_function_parameter> - INTERVAL (<numeric_function_parameter> * RAND()) DAY AS created_at FROM sequence; ANALYZE TABLE date_generated_column_functional_index; EXPLAIN FORMAT=<format_parameter> WITH RECURSIVE dates_range (d) AS (SELECT <current_date_function_parameter> - INTERVAL <numeric_function_parameter> DAY UNION ALL SELECT d + INTERVAL <numeric_function_parameter> DAY FROM dates_range WHERE d + INTERVAL <numeric_function_parameter> day <= <current_date_function_parameter>) SELECT d, COUNT(id) FROM dates_range <join_operator_replace> date_generated_column_functional_index ON d = created_at_date GROUP BY d;",
    "applied_rules": [
        "<constraint_enforce_replace>",
        "<dml_values_parameter>",
        "<current_time_function_parameter>",
        "<numeric_function_parameter>",
        "<format_parameter>",
        "<current_date_function_parameter>",
        "<date_function_parameter>",
        "<join_operator_replace>",
        "<aggregation_function_parameter>"
    ],
    "Affected Elements": "JOIN clause, functional key parts, indexed generated columns",
    "Root Cause Analysis": "Functional indexes do not allow the underlying generated column to be visible, preventing the optimizer from utilizing the index in JOIN operations."
}