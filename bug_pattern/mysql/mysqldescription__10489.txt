{
    "pattern": "CREATE TABLE t1 (s1 INT, id INT, <constraint_type_parameter>); CREATE TABLE t2 (id INT, a INT, <constraint_type_parameter>); CREATE TABLE t0 (c0 INT); EXPLAIN FORMAT=tree SELECT /*+JOIN_ORDER(t2,t1)*/ * FROM (SELECT t1.s1 FROM t1 <join_operator_replace> t2 ON (t2.id = t1.id) WHERE t2.a = <where_parameter> AND t1.id IN (SELECT c0 FROM t0 GROUP BY c0 HAVING COUNT(1) <aggregation_function_parameter> 0)) AS t; EXPLAIN FORMAT=tree SELECT /*+JOIN_ORDER(t2,t1)*/ t1.s1 FROM t1 <join_operator_replace> t2 ON (t2.id = t1.id) WHERE t2.a = <where_parameter> AND t1.id IN (SELECT c0 FROM t0 GROUP BY c0 HAVING COUNT(1) <aggregation_function_parameter> 0);",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<join_operator_replace>",
        "<where_parameter>",
        "<aggregation_function_parameter>"
    ],
    "Affected Elements": "EXISTS subselect, derived table",
    "Root Cause Analysis": "The optimizer incorrectly handles the EXISTS subselect condition pushdown when a derived table is present, causing it to be pushed to the wrong table."
}