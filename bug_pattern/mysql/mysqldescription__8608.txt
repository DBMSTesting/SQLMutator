{
    "pattern": "CREATE TABLE tableA (id INTEGER <constraint_type_parameter>, name VARCHAR(10)); CREATE TABLE tableB (id INTEGER <constraint_type_parameter>, tableAId INTEGER <constraint_type_parameter>, name VARCHAR(10), CONSTRAINT tableBFKtableAId <constraint_type_parameter> (tableAId) REFERENCES tableA (id)); INSERT INTO tableA (name) <dml_values_parameter>; INSERT INTO tableB (tableAId, name) <dml_values_parameter>; SELECT COALESCE(b.id, -1) AS tableBId, a.id AS tableAId FROM tableA a <join_operator_replace> tableB b ON (b.tableAId = a.id AND <comparison_operator_replace> > RAND());",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<dml_values_parameter>",
        "<join_operator_replace>",
        "<comparison_operator_replace>"
    ],
    "Affected Elements": "LEFT JOIN, ON clause with non-deterministic expressions (e.g., AND 0.5 > RAND())",
    "Root Cause Analysis": "The non-deterministic behavior of expressions in the ON clause is treated as a filtering condition, which leads to unexpected results in the left join."
}