{
    "pattern": "SELECT <aggregation_function_parameter>('<date_function_parameter>', <interval_parameter> <interval_type_parameter>); SELECT <cast_function_parameter>('<date_parameter>' <cast_operator_parameter> <data_type_parameter>); SELECT <cast_function_parameter>(<date_function_parameter>('<date_parameter>', <interval_parameter> <interval_type_parameter>) <cast_operator_parameter> <data_type_parameter>); SELECT <create_table_parameter> t(<column_name_parameter> <data_type_parameter>); INSERT INTO t SELECT <date_function_parameter>('<date_parameter>', <interval_parameter> <interval_type_parameter>); SELECT <cast_function_parameter>(<column_name_parameter> <cast_operator_parameter> <data_type_parameter>) FROM t; SELECT <cast_function_parameter>(<date_function_parameter>('<date_parameter>', <interval_parameter> <interval_type_parameter>) <cast_operator_parameter> <data_type_parameter>); SHOW <keyword_parameter>;",
    "applied_rules": [
        "<aggregation_function_parameter>",
        "<date_function_parameter>",
        "<interval_parameter>",
        "<interval_type_parameter>",
        "<cast_function_parameter>",
        "<cast_operator_parameter>",
        "<data_type_parameter>",
        "<create_table_parameter>",
        "<column_name_parameter>",
        "<keyword_parameter>"
    ],
    "Affected Elements": "DATE_SUB, CAST, INTERVAL",
    "Root Cause Analysis": "The inconsistency in return types when casting the result of DATE_SUB is due to the type inference behavior of MySQL, which sometimes resolves the output as a string based on the context."
}