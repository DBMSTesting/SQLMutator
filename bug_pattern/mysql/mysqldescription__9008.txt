{
    "pattern": "CREATE SCHEMA `bug_test`; CREATE TABLE `bug_test`.`companies` (`id` INT(10) UNSIGNED <constraint_enforce_replace>, `is_active` TINYINT(1) <constraint_enforce_replace>, PRIMARY KEY (`id`), INDEX `is_active_idx` (`is_active` <dml_values_parameter>)); CREATE TABLE `bug_test`.`company_phrases` (`id` INT(10) UNSIGNED <constraint_enforce_replace>, `value` LONGTEXT NULL, `company_id` INT(10) <constraint_enforce_replace>, PRIMARY KEY (`id`), INDEX `company_id_idx` (`company_id` <dml_values_parameter>), FULLTEXT INDEX `value_ft_idx` (`value`) <dml_values_parameter>); INSERT INTO `bug_test`.`companies` (`id`, `is_active`) VALUES <dml_values_parameter>; INSERT INTO `bug_test`.`company_phrases` (`id`, `value`, `company_id`) VALUES <dml_values_parameter>; USE bug_test; SELECT companies.id FROM companies WHERE companies.is_active <comparison_operator_parameter> <dml_values_parameter> AND EXISTS (SELECT * FROM company_phrases WHERE company_phrases.company_id = companies.id AND MATCH(company_phrases.value) AGAINST (<dml_values_parameter> IN BOOLEAN MODE)); SELECT companies.id FROM companies WHERE companies.is_active <comparison_operator_parameter> <dml_values_parameter> AND EXISTS (SELECT * FROM company_phrases WHERE company_phrases.company_id = companies.id AND MATCH(company_phrases.value) AGAINST (<dml_values_parameter> IN BOOLEAN MODE)) ORDER BY companies.id <order_by_parameter>; SELECT DISTINCT companies.id FROM companies <join_operator_replace> company_phrases ON company_phrases.company_id = companies.id WHERE companies.is_active <comparison_operator_parameter> <dml_values_parameter> AND MATCH(company_phrases.value) AGAINST (<dml_values_parameter> IN BOOLEAN MODE) ORDER BY companies.id <order_by_parameter>; SELECT DISTINCT companies.id FROM companies <join_operator_replace> company_phrases ON company_phrases.company_id = companies.id WHERE companies.is_active <comparison_operator_parameter> <dml_values_parameter> AND MATCH(company_phrases.value) AGAINST (<dml_values_parameter> IN BOOLEAN MODE) ORDER BY companies.id <order_by_parameter>;",
    "applied_rules": [
        "<constraint_enforce_replace>",
        "<dml_values_parameter>",
        "<comparison_operator_parameter>",
        "<order_by_parameter>",
        "<join_operator_replace>"
    ],
    "Affected Elements": "MATCH, AGAINST, EXISTS, ORDER BY, INNER JOIN, STRAIGHT_JOIN",
    "Root Cause Analysis": "The execution plan's choice between different indexing strategies leads to discrepancies in the results of the fulltext search queries."
}