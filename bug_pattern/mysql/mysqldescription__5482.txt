{
    "pattern": "DROP TABLE IF EXISTS account; CREATE TABLE account AS SELECT <dml_values_parameter> UNION SELECT <dml_values_parameter> UNION SELECT <dml_values_parameter>; DROP TABLE IF EXISTS account_item; CREATE TABLE account_item AS SELECT <dml_values_parameter>, <dml_values_parameter> UNION SELECT <dml_values_parameter>, <dml_values_parameter> UNION SELECT <dml_values_parameter>, <dml_values_parameter> UNION SELECT <dml_values_parameter>, <dml_values_parameter> UNION SELECT <dml_values_parameter>, <dml_values_parameter>; DROP VIEW IF EXISTS account_view; CREATE VIEW account_view AS SELECT <string_function_parameter> AS id FROM account; SELECT <select_parameter> FROM account_item item WHERE <string_function_parameter>(item.account_id) <in_operator_replace> (SELECT id FROM account_view);",
    "applied_rules": [
        "<dml_values_parameter>",
        "<string_function_parameter>",
        "<select_parameter>",
        "<in_operator_replace>"
    ],
    "Affected Elements": "md5, WHERE IN subquery, view",
    "Root Cause Analysis": "The issue arises due to the way the query optimizer handles the semi-join with function calls in the view, resulting in duplicated rows."
}