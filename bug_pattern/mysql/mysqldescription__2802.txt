{
    "pattern": "CREATE TABLE t1 (<id_parameter> <int_parameter> <not_null_parameter> <auto_increment_parameter> <constraint_type_parameter>, <c1_parameter> <varbinary_parameter> <not_null_parameter> <default_parameter>, <key_parameter> <c1_parameter> (<c1_parameter>)) ENGINE=<engine_parameter>; INSERT INTO t1 <dml_values_parameter>; INSERT INTO t1 <dml_values_parameter> FROM t1; SELECT * FROM t1 WHERE c1 <like_operator_replace> '123%'; SELECT * FROM t1 WHERE c1 <between_operator_replace> '123000000' AND '123999999';",
    "applied_rules": [
        "<id_parameter>",
        "<int_parameter>",
        "<not_null_parameter>",
        "<auto_increment_parameter>",
        "<constraint_type_parameter>",
        "<c1_parameter>",
        "<varbinary_parameter>",
        "<default_parameter>",
        "<key_parameter>",
        "<engine_parameter>",
        "<dml_values_parameter>",
        "<like_operator_replace>",
        "<between_operator_replace>"
    ],
    "Affected Elements": "LIKE, BETWEEN, VARBINARY",
    "Root Cause Analysis": "The LIKE operator with VARBINARY columns results in slower performance compared to VARCHAR columns due to differences in how queries are pushed down to the NDB storage engine."
}