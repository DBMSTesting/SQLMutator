{
    "pattern": "CREATE TABLE t1(a INT <constraint_type_parameter>) ENGINE = <object_dependency_replace>; CREATE TABLE t2(a INT <constraint_type_parameter>, b INT) ENGINE = <object_dependency_replace>; ALTER TABLE t2 ADD <constraint_enforce_replace> FOREIGN KEY (b) REFERENCES t1 (a); SET @@session.foreign_key_checks = <dml_values_parameter>; INSERT INTO t1 <dml_values_parameter>; INSERT INTO t2 <dml_values_parameter>; SET @@session.foreign_key_checks = <dml_values_parameter>; UPDATE t2 SET b=<dml_values_parameter> WHERE a=<dml_condition_replace>;",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<object_dependency_replace>",
        "<constraint_enforce_replace>",
        "<dml_values_parameter>",
        "<dml_condition_replace>"
    ],
    "Affected Elements": "UPDATE, SET, FOREIGN KEY constraints",
    "Root Cause Analysis": "MySQL does not check foreign key constraints when updating a column to the same value, which leads to incorrect behavior when foreign key checks are re-enabled."
}