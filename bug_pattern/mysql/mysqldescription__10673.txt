{
    "pattern": "CREATE TABLE `ecattdat1` ( `sd_key` char(3) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin <constraint_enforce_replace>, `ecatt_key` char(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin <constraint_enforce_replace>, `ec_cer_no` varchar(60) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin <constraint_enforce_replace>, `ec_full_name` char(120) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin <constraint_enforce_replace>, <constraint_type_parameter> (`ecatt_key`), KEY `idx_becdaty5` (`ec_full_name`,`ecatt_key`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin; INSERT INTO ecattdat1 <dml_values_parameter>; SELECT <select_parameter> FROM ecattdat1 WHERE ec_full_name <comparison_operator_parameter> '控制%'; SELECT <select_parameter> FROM ecattdat1 <keyword_replace> INDEX (PRIMARY) WHERE ec_full_name <comparison_operator_parameter> '控制%';",
    "applied_rules": [
        "<constraint_enforce_replace>",
        "<constraint_type_parameter>",
        "<dml_values_parameter>",
        "<select_parameter>",
        "<comparison_operator_parameter>",
        "<keyword_replace>"
    ],
    "Affected Elements": "LIKE operator, FORCE INDEX clause",
    "Root Cause Analysis": "The issue arises due to improper handling of space padding in string comparisons for specific collations, leading to unexpected query results when using the LIKE operator with certain indexed conditions."
}