{
    "pattern": "CREATE TABLE t ( a INT <constraint_type_parameter> , b INT <constraint_type_parameter> ) ENGINE = <object_dependency_replace>; INSERT INTO t <dml_values_parameter>; CREATE TABLE s ( a INT <constraint_enforce_replace> , b INT <constraint_type_parameter> ) ENGINE = <object_dependency_replace>; INSERT INTO s <dml_values_parameter>; SELECT ( NOT <logical_operator_replace> ( SELECT ra0.b FROM s AS ra0 WHERE <logical_operator_replace> ( SELECT ra1.b FROM t ra1 GROUP BY ra1.b, ra1.a, ra1.a ) AND <logical_operator_replace> ( SELECT ra3.b FROM t ra2 <join_operator_replace> t ra3 ON ra0.b + ra0.b = ( SELECT COUNT(*) ca0 FROM t ra5 ) <join_operator_replace> t ra4 ON ra4.b + ( SELECT MIN(ra4.a) ca1 FROM s ra6 ) = ra3.b ) AND <logical_operator_replace> ( SELECT ra0.b FROM s ra7 ) AND <logical_operator_replace> ( SELECT ra0.b AS ca2 FROM t ra8 ) AND <logical_operator_replace> ( SELECT ra9.b FROM s ra9 ) AND <logical_operator_replace> ( SELECT ra0.a, ra0.b FROM s ra10, LATERAL ( SELECT COUNT(*) AS ca3 FROM t ra11 <join_operator_replace> t ra12 ON ra0.a <comparison_operator_replace> ra10.a - ra10.a ) AS dt ) ) ) + <numeric_function_parameter> ca4 LIMIT <limit_parameter>;",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<object_dependency_replace>",
        "<dml_values_parameter>",
        "<logical_operator_replace>",
        "<join_operator_replace>",
        "<numeric_function_parameter>",
        "<limit_parameter>",
        "<constraint_enforce_replace>",
        "<comparison_operator_replace>"
    ],
    "Affected Elements": "NOT EXISTS, GROUP BY, LATERAL, JOIN",
    "Root Cause Analysis": "An assertion failure in the optimizer when processing complex nested queries involving lateral references, which might be triggered by specific query patterns."
}