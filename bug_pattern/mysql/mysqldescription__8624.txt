{
    "pattern": "DROP TABLE IF EXISTS <object_dependency_replace>; CREATE TABLE <object_dependency_replace> (id INT UNSIGNED NOT NULL <constraint_type_parameter> AUTO_INCREMENT, date DATE, KEY (date)); CREATE TABLE <object_dependency_replace> (id INT UNSIGNED NOT NULL <constraint_type_parameter> AUTO_INCREMENT, document_id INT UNSIGNED NOT NULL, quantity INT, KEY document_id_abs_quantity (document_id, <function_parameter>)); INSERT INTO <object_dependency_replace> WITH RECURSIVE <object_dependency_replace>(n) AS (SELECT 0 n UNION ALL SELECT n + 1 FROM <object_dependency_replace> WHERE n + 1 <= 100) SELECT NULL, DATE(NOW() - INTERVAL <function_parameter> DAY) FROM <object_dependency_replace>; INSERT INTO <object_dependency_replace> (document_id, quantity) WITH RECURSIVE <object_dependency_replace>(n) AS (SELECT 1 n UNION ALL SELECT n + 1 FROM <object_dependency_replace> WHERE n + 1 <= 100) SELECT <object_dependency_replace>.id, n FROM <object_dependency_replace>, <object_dependency_replace>; EXPLAIN ANALYZE SELECT * FROM <object_dependency_replace> <join_operator_replace> <object_dependency_replace> ON (<object_dependency_replace>, <function_parameter>) = (<object_dependency_replace>, <numeric_function_parameter>) WHERE <where_parameter> = DATE(NOW());",
    "applied_rules": [
        "<object_dependency_replace>",
        "<constraint_type_parameter>",
        "<function_parameter>",
        "<numeric_function_parameter>",
        "<where_parameter>",
        "<join_operator_replace>"
    ],
    "Affected Elements": "LEFT JOIN, ABS function, index usage",
    "Root Cause Analysis": "The optimizer does not push down the ABS function for LEFT JOIN conditions, resulting in suboptimal index usage."
}