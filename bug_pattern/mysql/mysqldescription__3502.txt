{
    "pattern": "CREATE TABLE clusterdb.test_table (key1 INT <constraint_type_parameter>, key2 INT <constraint_type_parameter>, val VARCHAR(64) <constraint_type_parameter>, cas_v BIGINT UNSIGNED, <constraint_enforce_replace>) ENGINE=<object_dependency_replace>; SELECT <select_parameter> FROM clusterdb.test_table; SELECT <select_parameter> FROM containers WHERE <where_parameter>; SELECT <select_parameter> FROM key_prefixes WHERE <where_parameter>;",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<constraint_enforce_replace>",
        "<object_dependency_replace>",
        "<select_parameter>",
        "<where_parameter>"
    ],
    "Affected Elements": "CREATE TABLE, SELECT, and MEMCACHED commands (set/get with 2-part keys)",
    "Root Cause Analysis": "The issue arises from the inability of the memcached integration with NDB to handle multi-part keys correctly, leading to cache misses and errors when attempting to set or get values."
}