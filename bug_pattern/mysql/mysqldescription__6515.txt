{
    "pattern": "SELECT <select_parameter> FROM dp_organisation_member t82 WHERE (<where_parameter> OR <string_function_parameter>(t82.`OrganisationId`, (SELECT <aggregation_function_parameter> FROM (SELECT @Level := @Level + '1' `Level`, @Ids := (SELECT <aggregation_function_parameter> FROM dp_organisation WHERE <comparison_operator_parameter>(`ParentId`, @Ids)) `Ids` FROM (SELECT @Ids := '1', @Level := '0') temp1 INNER JOIN dp_organisation ON NOT(<is_operator_parameter>(@Ids))) temp2))) AND (<where_parameter> OR <string_function_parameter>(t82.`OrganisationId`, (SELECT <aggregation_function_parameter> FROM (SELECT @Level := @Level + '1' `Level`, @Ids := (SELECT <aggregation_function_parameter> FROM dp_organisation WHERE <comparison_operator_parameter>(`ParentId`, @Ids)) `Ids` FROM (SELECT @Ids := '1', @Level := '0') temp1 INNER JOIN dp_organisation ON NOT(<is_operator_parameter_parameter>(@Ids))) temp2)))",
    "applied_rules": [
        "<select_parameter>",
        "<where_parameter>",
        "<string_function_parameter>",
        "<aggregation_function_parameter>",
        "<comparison_operator_parameter>",
        "<is_operator_parameter>"
    ],
    "Affected Elements": "FIND_IN_SET, GROUP_CONCAT, nested SELECT statements, use of user-defined variables (@Level, @Ids)",
    "Root Cause Analysis": "The optimizer in MySQL 5.7 and 8.0 handles duplicated conditions differently, leading to inconsistent results when both conditions are present."
}