{
    "pattern": "DROP TABLE IF EXISTS tags; DROP TABLE IF EXISTS cpu; CREATE TABLE tags (hostname varchar(256), id int <constraint_type_parameter>); CREATE TABLE cpu (tags_id int <not_null_parameter>, ts int <not_null_parameter>); INSERT INTO tags(hostname, id) VALUES (<dml_values_parameter>); INSERT INTO cpu(tags_id, ts) VALUES (<dml_values_parameter>); INSERT INTO cpu(tags_id, ts) VALUES (<dml_values_parameter>); INSERT INTO cpu(tags_id, ts) VALUES (<dml_values_parameter>); INSERT INTO cpu(tags_id, ts) VALUES (<dml_values_parameter>); CREATE INDEX x ON tags(hostname); ANALYZE TABLE tags; CREATE INDEX id_ts ON cpu(tags_id, ts); ANALYZE TABLE cpu; EXPLAIN SELECT * FROM cpu WHERE ts <comparison_operator_parameter> 1 AND ts <comparison_operator_parameter> 4 AND tags_id <in_operator_parameter> (SELECT id FROM tags WHERE hostname = <string_parameter>)\\G; SET optimizer_trace=<string_parameter>; SELECT * FROM cpu WHERE ts <comparison_operator_parameter> 1 AND ts <comparison_operator_parameter> 4 AND tags_id <in_operator_parameter> (SELECT id FROM tags WHERE hostname = <string_parameter>); SELECT * FROM information_schema.optimizer_trace\\G; SET optimizer_trace=<string_parameter>; ",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<not_null_parameter>",
        "<dml_values_parameter>",
        "<comparison_operator_parameter>",
        "<in_operator_parameter>",
        "<string_parameter>"
    ],
    "Affected Elements": "SELECT, WHERE, IN, EXPLAIN, optimizer_trace",
    "Root Cause Analysis": "The optimizer is not utilizing the index effectively for subqueries unless a unique index is present, leading to suboptimal query performance."
}