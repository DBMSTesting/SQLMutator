{
    "pattern": "CREATE TABLE type1(c1 <bit_type_parameter>, c2 <json_type_parameter>, c3 <int_type_parameter>, c4 <json_type_parameter>); INSERT INTO type1 VALUES(<bit_value_parameter>, <json_value_parameter>, <int_value_parameter>, <json_value_parameter>); INSERT INTO type1 VALUES(<bit_value_parameter>, <json_value_parameter>, <int_value_parameter>, <json_value_parameter>); INSERT INTO type1 VALUES(<bit_value_parameter>, <json_value_parameter>, <int_value_parameter>, <json_value_parameter>); INSERT INTO type1 VALUES(<null_parameter>, <null_parameter>, <null_parameter>, <json_value_parameter>); CREATE TABLE type2(c1 <bit_type_parameter>, c2 <json_type_parameter>, c3 <int_type_parameter>, c4 <varchar_type_parameter>); INSERT INTO type2 VALUES(<bit_value_parameter>, <json_value_parameter>, <int_value_parameter>, <varchar_value_parameter>); INSERT INTO type2 VALUES(<bit_value_parameter>, <json_value_parameter>, <int_value_parameter>, <varchar_value_parameter>); INSERT INTO type2 VALUES(<bit_value_parameter>, <json_value_parameter>, <int_value_parameter>, <varchar_value_parameter>); INSERT INTO type2 VALUES(<bit_value_parameter>, <json_value_parameter>, <int_value_parameter>, <varchar_value_parameter>); INSERT INTO type2 VALUES(<null_parameter>, <null_parameter>, <null_parameter>, <varchar_value_parameter>); SELECT BIN(c1), c3 FROM type1 WHERE c2 = (SELECT <aggregation_function_parameter>(c2) FROM type2 WHERE type2.c1 = type1.c1); SET @@optimizer_switch=<optimizer_switch_parameter>; SELECT BIN(c1), c3 FROM type1 WHERE c2 = (SELECT <aggregation_function_parameter>(c2) FROM type2 WHERE type2.c1 = type1.c1);",
    "applied_rules": [
        "<bit_type_parameter>",
        "<json_type_parameter>",
        "<int_type_parameter>",
        "<varchar_type_parameter>",
        "<bit_value_parameter>",
        "<json_value_parameter>",
        "<int_value_parameter>",
        "<null_parameter>",
        "<varchar_value_parameter>",
        "<aggregation_function_parameter>",
        "<optimizer_switch_parameter>"
    ],
    "Affected Elements": "Subquery, JOIN, var_pop function, optimizer switch for subquery_to_derived",
    "Root Cause Analysis": "The issue arises from the difference in execution plans and result sets when using the 'subquery_to_derived' optimizer switch, leading to mismatched results."
}