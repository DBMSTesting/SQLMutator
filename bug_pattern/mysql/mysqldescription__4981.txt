{
    "pattern": "DROP TABLE IF EXISTS <object_dependency_replace>; DROP TABLE IF EXISTS <object_dependency_replace>; CREATE TABLE <object_dependency_replace> (`id` INT <constraint_type_parameter> AUTO_INCREMENT, `mysql_version` VARCHAR(50) <constraint_type_parameter>, PRIMARY KEY (`id`)); CREATE TABLE <object_dependency_replace> (`value_new_id` INT <constraint_type_parameter>, `value_last_insert_id` INT <constraint_type_parameter>); DELIMITER // CREATE TRIGGER <object_dependency_replace> AFTER INSERT ON <object_dependency_replace> FOR EACH ROW BEGIN INSERT INTO <object_dependency_replace> (`value_new_id`, `value_last_insert_id`) VALUES (NEW.`id`, <function_category_parameter>()); END// DELIMITER ; INSERT INTO <object_dependency_replace> (`mysql_version`) VALUES (<dml_values_parameter>); SELECT `value_new_id`, `value_last_insert_id` FROM <object_dependency_replace>;",
    "applied_rules": [
        "<object_dependency_replace>",
        "<constraint_type_parameter>",
        "<function_category_parameter>",
        "<dml_values_parameter>"
    ],
    "Affected Elements": "LAST_INSERT_ID() function within triggers, AFTER INSERT trigger syntax",
    "Root Cause Analysis": "The change in behavior of LAST_INSERT_ID() from MySQL version 5.0 to 5.1+ causes it to return unexpected results within trigger contexts."
}