{
    "pattern": "CREATE TABLE label ( id INT <constraint_type_parameter> ); INSERT INTO label <dml_values_parameter>; CREATE TABLE record ( label_id INT, amount BIGINT, deleted BOOLEAN <constraint_type_parameter> ); INSERT INTO record <dml_values_parameter>; SELECT L.id AS label_id, AMOUNTS.type, AMOUNTS.amount FROM label AS L <join_operator_replace> LATERAL ( SELECT CASE <case_parameter> WHEN R.deleted <comparison_operator_parameter> TRUE THEN NULL WHEN R.amount < 0 <comparison_operator_parameter> 'NEGATIVE' WHEN R.amount <comparison_operator_parameter> 0 THEN 'POSITIVE' END AS type, SUM(R.amount) AS amount FROM record AS R WHERE R.label_id <comparison_operator_parameter> L.id GROUP BY type HAVING type <is_operator_replace> NOT NULL) AS AMOUNTS ORDER BY label_id <order_by_parameter>; ",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<dml_values_parameter>",
        "<join_operator_replace>",
        "<case_parameter>",
        "<comparison_operator_parameter>",
        "<is_operator_replace>",
        "<order_by_parameter>"
    ],
    "Affected Elements": "LATERAL, aggregated functions, SUM, GROUP BY, HAVING",
    "Root Cause Analysis": "Incorrect handling of reference slices in the aggregation process during LATERAL joins, leading to erroneous results."
}