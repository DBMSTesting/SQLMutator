{
    "pattern": "DROP TABLE IF EXISTS <object_dependency_replace>; CREATE TABLE <object_dependency_replace> ( id INT <constraint_type_parameter>, username VARCHAR(100) <constraint_enforce_replace>, created_at TIMESTAMP <constraint_enforce_replace> DEFAULT CURRENT_TIMESTAMP ); INSERT INTO <object_dependency_replace> SELECT <dml_values_parameter> FROM dual; INSERT INTO <object_dependency_replace> SELECT <dml_values_parameter> FROM <object_dependency_replace>; ...; DROP TABLE IF EXISTS <object_dependency_replace>; CREATE TABLE <object_dependency_replace> ( id INT <constraint_type_parameter>, user_id INT <constraint_enforce_replace>, created_at TIMESTAMP <constraint_enforce_replace> DEFAULT CURRENT_TIMESTAMP, INDEX (user_id) ); INSERT INTO <object_dependency_replace> SELECT <dml_values_parameter> FROM <object_dependency_replace> WHERE <where_parameter>; ...; ANALYZE TABLE <object_dependency_replace>; ANALYZE TABLE <object_dependency_replace>; SELECT SQL_CALC_FOUND_ROWS <select_parameter>, (SELECT <select_parameter> FROM <object_dependency_replace> WHERE user_id = <select_parameter> <comparison_operator_replace> <select_parameter> ORDER BY <order_parameter> <order_parameter> LIMIT <limit_parameter>) AS activity_at FROM <object_dependency_replace> AS <alias_parameter> ORDER BY activity_at <order_parameter> LIMIT <limit_parameter>; SELECT SQL_CALC_FOUND_ROWS <select_parameter>, (SELECT <select_parameter> FROM <object_dependency_replace> <join_operator_replace> (user_id) WHERE user_id = <select_parameter> <comparison_operator_replace> <select_parameter> ORDER BY <order_parameter> <order_parameter> LIMIT <limit_parameter>) AS activity_at FROM <object_dependency_replace> AS <alias_parameter> ORDER BY activity_at <order_parameter> LIMIT <limit_parameter>;",
    "applied_rules": [
        "<object_dependency_replace>",
        "<constraint_type_parameter>",
        "<constraint_enforce_replace>",
        "<dml_values_parameter>",
        "<where_parameter>",
        "<select_parameter>",
        "<comparison_operator_replace>",
        "<order_parameter>",
        "<limit_parameter>",
        "<alias_parameter>",
        "<join_operator_replace>"
    ],
    "Affected Elements": "SQL_CALC_FOUND_ROWS, FORCE INDEX, ORDER BY, LIMIT",
    "Root Cause Analysis": "The optimizer is incorrectly selecting an index scan over a reference on a secondary key, leading to suboptimal execution plans."
}