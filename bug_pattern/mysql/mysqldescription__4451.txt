{
    "pattern": "EXPLAIN PARTITIONS SELECT <select_parameter> AS Count FROM <table_name_parameter> <object_dependency_replace> <join_operator_replace> <table_name_parameter> ON (<table_name_parameter>.<column_name_parameter> = <table_name_parameter>.<column_name_parameter> AND <table_name_parameter>.<column_name_parameter> = <string_value_parameter>) WHERE CASE <case_parameter> WHEN <date_format_function_parameter> <= 8 THEN <table_name_parameter>.<column_name_parameter> <between_operator_parameter> <date_sub_function_parameter> AND <date_sub_function_parameter> ELSE <table_name_parameter>.<column_name_parameter> <between_operator_parameter> <date_format_function_parameter> AND <date_sub_function_parameter> END;",
    "applied_rules": [
        "<select_parameter>",
        "<table_name_parameter>",
        "<object_dependency_replace>",
        "<join_operator_replace>",
        "<column_name_parameter>",
        "<string_value_parameter>",
        "<date_format_function_parameter>",
        "<case_parameter>",
        "<between_operator_parameter>",
        "<date_sub_function_parameter>"
    ],
    "Affected Elements": "CASE, WHEN, THEN, ELSE, END, BETWEEN",
    "Root Cause Analysis": "The use of CASE in the WHERE clause causes MySQL to ignore partitioning and scan all partitions instead of limiting the search to relevant ones."
}