{
    "pattern": "CREATE DATABASE <database_name_parameter>; CREATE TABLE <database_name_parameter>.parents (id INT <constraint_type_parameter> AUTO_INCREMENT, name VARCHAR(255) <constraint_type_parameter>, PRIMARY KEY (id)); INSERT INTO <database_name_parameter>.parents (name) VALUES (<dml_values_parameter>); INSERT INTO <database_name_parameter>.parents (name) VALUES (<dml_values_parameter>); INSERT INTO <database_name_parameter>.parents (name) VALUES (<dml_values_parameter>); CREATE TABLE <database_name_parameter>.children (id INT <constraint_type_parameter> AUTO_INCREMENT, name VARCHAR(255) <constraint_type_parameter>, parentId INT <constraint_type_parameter>, PRIMARY KEY (id), FOREIGN KEY (parentId) REFERENCES <database_name_parameter>.parents(id)); INSERT INTO <database_name_parameter>.children (parentId, name) VALUES (<dml_values_parameter>, <dml_values_parameter>); INSERT INTO <database_name_parameter>.children (parentId, name) VALUES (<dml_values_parameter>, <dml_values_parameter>); INSERT INTO <database_name_parameter>.children (parentId, name) VALUES (<dml_values_parameter>, <dml_values_parameter>); INSERT INTO <database_name_parameter>.children (parentId, name) VALUES (<dml_values_parameter>, <dml_values_parameter>); INSERT INTO <database_name_parameter>.children (parentId, name) VALUES (<dml_values_parameter>, <dml_values_parameter>); INSERT INTO <database_name_parameter>.children (parentId, name) VALUES (<dml_values_parameter>, <dml_values_parameter>); DELIMITER $$ DROP FUNCTION IF EXISTS <function_name_parameter>$$ CREATE FUNCTION <function_name_parameter>(<function_parameter> INT) RETURNS INT DETERMINISTIC BEGIN DO SLEEP(1); RETURN 0; END$$ DELIMITER ; SET @<function_parameter> = <value_parameter>; WITH cte AS (SELECT id, <database_name_parameter>.<function_name_parameter>(id) AS result FROM <database_name_parameter>.parents WHERE id = @<function_parameter>) SELECT p.*, c.*, cte.result FROM <database_name_parameter>.parents p <join_operator_replace> <database_name_parameter>.children c ON c.parentId = p.id JOIN cte ON cte.id = p.id WHERE p.id = @<function_parameter>;",
    "applied_rules": [
        "<database_name_parameter>",
        "<constraint_type_parameter>",
        "<dml_values_parameter>",
        "<function_name_parameter>",
        "<function_parameter>",
        "<value_parameter>",
        "<join_operator_replace>"
    ],
    "Affected Elements": "CTE, function calls, JOIN clauses",
    "Root Cause Analysis": "The function is being called multiple times instead of once due to the way MySQL handles CTEs and user-defined functions, leading to performance issues."
}