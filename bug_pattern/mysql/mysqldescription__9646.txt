{
    "pattern": "CREATE TABLE `member_base_secret` (`id` bigint <constraint_type_parameter> AUTO_INCREMENT, `entity_id` bigint <constraint_type_parameter> COMMENT '实体Id', `entity_column` varchar(50) DEFAULT 'NAME' COMMENT '列名', `secret_value` varchar(1024) <constraint_type_parameter> COMMENT '密文', PRIMARY KEY (`id`)) ENGINE=InnoDB AUTO_INCREMENT=2031586 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci; CREATE FUNCTION `PMS_DECRYPT`(arg_value VARCHAR(3000)) RETURNS varchar(3000) CHARSET utf8mb4 DETERMINISTIC BEGIN IF arg_value <comparison_operator_parameter> NOT NULL AND TRIM(arg_value) <> '' AND TRIM(@AES_KEY_VALUE) <> '' AND CHAR_LENGTH(@AES_KEY_VALUE) >= 32 THEN SET @real_value = AES_DECRYPT(from_base64(arg_value),@AES_KEY_VALUE); IF @real_value <comparison_operator_parameter> NOT NULL THEN RETURN(@real_value); END IF; END IF; RETURN(arg_value); END; SET @AES_KEY_VALUE='47fed2ba90324cd49f56a10e5fb80248'; SET block_encryption_mode = 'aes-256-ecb'; SELECT GROUP_CONCAT(b.entity_column, ':', b.secret_value, ':', PMS_DECRYPT(b.secret_value) SEPARATOR ';;') AS columnValue FROM member_base_secret b GROUP BY b.entity_id ORDER BY b.id <order_by_operator_parameter> LIMIT 100;",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<comparison_operator_parameter>",
        "<order_by_operator_parameter>"
    ],
    "Affected Elements": "SELECT, GROUP_CONCAT, AES_DECRYPT, from_base64",
    "Root Cause Analysis": "The memory allocation issue during the execution of SELECT statement with a function call when binlog is enabled, likely due to excessive memory usage in the function get_var_with_binlog."
}