{
    "pattern": "CREATE TABLE t1 (id int <constraint_type_parameter>); INSERT INTO t1 <dml_values_parameter>; CREATE TABLE t2 (id int <constraint_type_parameter>, id2 int <constraint_type_parameter>); INSERT INTO t2 <dml_values_parameter>; CREATE TABLE t3 (id3 int <constraint_type_parameter>, id4 int <constraint_type_parameter>, val int <constraint_type_parameter>); INSERT INTO t3 <dml_values_parameter>; ANALYZE TABLE t1, t2, t3; SELECT /*+ join_prefix(t1,t2) */ t1.id, t2.id <select_parameter> FROM t1 <join_operator_replace> t2 ON t1.id <comparison_operator_replace> t2.id2 AND t2.id <in_operator_parameter> (SELECT /*+ semijoin(materialization) */ id3 FROM t3 WHERE id4 <comparison_operator_replace> 100 AND val <comparison_operator_replace> 2);",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<dml_values_parameter>",
        "<select_parameter>",
        "<join_operator_replace>",
        "<comparison_operator_replace>",
        "<in_operator_parameter>"
    ],
    "Affected Elements": "LEFT JOIN, SEMIJOIN, join conditions",
    "Root Cause Analysis": "The optimizer incorrectly assumes that the condition 'COND' can be pushed down into the derived table 'mat-tmp', leading to false matches in the join results."
}