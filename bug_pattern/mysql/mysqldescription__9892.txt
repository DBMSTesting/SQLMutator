{
    "pattern": "CREATE TABLE t0 ( c7 VARCHAR ( 150 ) <constraint_enforce_replace> ); INSERT INTO t0 <dml_values_parameter>; CREATE INDEX i0 ON t0 ( c7 ); INSERT INTO t0 <dml_values_parameter>; SELECT <numeric_function_parameter> AS c7 FROM ( SELECT t0.c7 AS c34 FROM t0 AS t1 <join_operator_replace> t0 ON IFNULL(t0.c7, 61) <arithmetic_operator_replace> REPEAT(t1.c7, EXISTS ( ( SELECT '+LQl8{r\\;*X[z5' = ALL ( SELECT t0.c7 AS c1 FROM ( SELECT LPAD(c7, <string_function_parameter>, <dml_values_parameter>) AS c40 FROM t0 ) AS t2 <join_operator_replace> t0 ON t2.c40 = t2.c40 UNION SELECT c7 <arithmetic_operator_parameter> 75 AS c60 FROM t0 WHERE c7 < <comparison_operator_parameter> ) IS NULL AS c47, <numeric_function_parameter> AS c54 ) ) ) <between_operator_parameter> <numeric_literal_parameter> AND <numeric_literal_parameter> IS <logical_operator_parameter> ) AS t3 <join_operator_replace> t0 ON RAND() <bitwise_operator_parameter> <numeric_literal_parameter> & RAND(<numeric_literal_parameter>) <bitwise_operator_parameter> RAND() GROUP BY c34, c7 WITH ROLLUP HAVING <aggregation_function_parameter>(c34) WINDOW w0 AS ( PARTITION BY TRUE <arithmetic_operator_replace> RAND() <arithmetic_operator_replace> ATAN(c34, DEGREES(t0.c7) <regexp_operator_parameter> CASE <numeric_literal_parameter> WHEN <numeric_literal_parameter> THEN <numeric_literal_parameter> ELSE <numeric_literal_parameter> END) ROWS <window_frame_parameter> AND <window_frame_parameter> );",
    "applied_rules": [
        "<constraint_enforce_replace>",
        "<dml_values_parameter>",
        "<numeric_function_parameter>",
        "<join_operator_replace>",
        "<arithmetic_operator_replace>",
        "<arithmetic_operator_parameter>",
        "<comparison_operator_parameter>",
        "<between_operator_parameter>",
        "<numeric_literal_parameter>",
        "<logical_operator_parameter>",
        "<bitwise_operator_parameter>",
        "<aggregation_function_parameter>",
        "<regexp_operator_parameter>",
        "<window_frame_parameter>"
    ],
    "Affected Elements": "JOIN, IFNULL, REPEAT, EXISTS, LPAD, RAND, GROUP BY, HAVING, WINDOW",
    "Root Cause Analysis": "The assertion failure in the optimizer indicates a problem with the query structure or the handling of joins in the SQL optimizer."
}