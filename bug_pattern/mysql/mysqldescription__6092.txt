{
    "pattern": "CREATE TABLE t1 (i INT <constraint_type_parameter>, j INT, <constraint_enforce_replace>) ENGINE=innodb; CREATE TABLE t2 (i INT <constraint_type_parameter>, j INT) ENGINE=innodb; CREATE TABLE t3 (i INT, j INT, <constraint_enforce_replace>) ENGINE=innodb; INSERT INTO t1 VALUES (<dml_values_parameter>); INSERT INTO t1 SELECT <dml_values_parameter> FROM t1; INSERT INTO t1 SELECT <dml_values_parameter> FROM t1; INSERT INTO t1 SELECT <dml_values_parameter> FROM t1; INSERT INTO t1 SELECT <dml_values_parameter> FROM t1; INSERT INTO t1 SELECT <dml_values_parameter> FROM t1; INSERT INTO t1 SELECT <dml_values_parameter> FROM t1; INSERT INTO t1 SELECT <dml_values_parameter> FROM t1; INSERT INTO t1 SELECT <dml_values_parameter> FROM t1; INSERT INTO t1 SELECT <dml_values_parameter> FROM t1; INSERT INTO t1 SELECT <dml_values_parameter> FROM t1; INSERT INTO t1 SELECT <dml_values_parameter> FROM t1; INSERT INTO t2 SELECT * FROM t1; INSERT INTO t3 VALUES (<dml_values_parameter>); ANALYZE TABLE t1, t2, t3; EXPLAIN SELECT t3.j FROM (t1 <join_operator_replace> t2 ON t1.i <comparison_operator_replace> t2.i) <join_operator_replace> t3 ON t1.i <comparison_operator_replace> t3.i WHERE t1.j <comparison_operator_replace> 0 AND t1.j <comparison_operator_replace> 5000;",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<constraint_enforce_replace>",
        "<dml_values_parameter>",
        "<join_operator_replace>",
        "<comparison_operator_replace>"
    ],
    "Affected Elements": "covering_keys, table scan, primary_key_is_clustered",
    "Root Cause Analysis": "The optimizer incorrectly assesses whether to use a table scan or index look-up for clustered primary keys."
}