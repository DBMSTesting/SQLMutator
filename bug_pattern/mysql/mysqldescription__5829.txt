{
    "pattern": "CREATE TABLE `t1` ( `id` INT(11) <constraint_enforce_replace>, PRIMARY KEY (`id`)); INSERT INTO t1 (`id`) <dml_values_parameter>; CREATE TABLE `t2` ( `id` INT(11) <constraint_enforce_replace>, `t1_id` INT(11) <constraint_enforce_replace>, `ext_id` INT(11) <constraint_enforce_replace>, `code` VARCHAR(255) COLLATE utf8_unicode_ci <constraint_enforce_replace>, PRIMARY KEY (`id`)); INSERT INTO t2 (`id`, `t1_id`, `ext_id`, `code`) <dml_values_parameter>; INSERT INTO t2 (`id`, `t1_id`, `ext_id`, `code`) <dml_values_parameter>; SELECT t1.id FROM t1 <join_operator_replace> t2 AS code1tmp ON t1.id = code1tmp.t1_id AND code1tmp.code = <string_function_parameter> <join_operator_replace> t2 AS code2tmp ON t1.id = code2tmp.t1_id AND code2tmp.code = <string_function_parameter> GROUP BY code2tmp.ext_id, code1tmp.ext_id HAVING code2tmp.ext_id <comparison_operator_replace> MIN(<numeric_function_parameter>); DROP TABLE IF EXISTS t1; DROP TABLE IF EXISTS t2;",
    "applied_rules": [
        "<constraint_enforce_replace>",
        "<dml_values_parameter>",
        "<join_operator_replace>",
        "<string_function_parameter>",
        "<comparison_operator_replace>",
        "<numeric_function_parameter>"
    ],
    "Affected Elements": "HAVING clause, GROUP BY clause",
    "Root Cause Analysis": "The error occurs because the HAVING clause is referencing a column 'code2tmp.ext_id' that is not recognized in the context of the query, which is due to the way MySQL handles scope and visibility of columns in the HAVING clause."
}