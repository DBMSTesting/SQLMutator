{
    "pattern": "DROP FUNCTION IF EXISTS f1; DROP TABLE IF EXISTS t1, t2; CREATE FUNCTION f1(<dml_values_parameter>) RETURNS <dml_values_parameter> NO SQL RETURN <dml_values_parameter>; CREATE TABLE t1 (id INT <constraint_enforce_replace>); INSERT INTO t1 <dml_values_parameter>; CREATE TABLE t2 (id INT <constraint_enforce_replace>); INSERT INTO t2 <dml_values_parameter>; SELECT IF(COUNT(t1.id) <aggregation_function_parameter> 0, <string_function_parameter>, <string_function_parameter>) AS Result FROM t1 WHERE 1 <in_operator_parameter> (SELECT t1_inner.id FROM t1 t1_inner <join_operator_replace> t2 ON <boolean_operator_parameter> WHERE f1(t2.id) <comparison_operator_parameter> 0); SELECT IF(COUNT(t1.id) <aggregation_function_parameter> 0, <string_function_parameter>, <string_function_parameter>) AS Result FROM t1 WHERE 1 <in_operator_parameter> (SELECT t1_inner.id FROM t1 t1_inner <join_operator_replace> t2 ON <boolean_operator_parameter> WHERE t2.id <comparison_operator_parameter> 0); DROP FUNCTION f1; DROP TABLE t1, t2;",
    "applied_rules": [
        "<dml_values_parameter>",
        "<constraint_enforce_replace>",
        "<aggregation_function_parameter>",
        "<string_function_parameter>",
        "<in_operator_parameter>",
        "<join_operator_replace>",
        "<boolean_operator_parameter>",
        "<comparison_operator_parameter>"
    ],
    "Affected Elements": "nondeterministic function f1; subquery logic; INNER JOIN usage",
    "Root Cause Analysis": "The stored function f1 is nondeterministic, leading to inconsistent results when used in a subquery."
}