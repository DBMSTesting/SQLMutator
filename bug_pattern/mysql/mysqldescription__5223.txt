{
    "pattern": "DROP DATABASE IF EXISTS <database_parameter>; CREATE DATABASE <database_parameter>; DELIMITER $$ CREATE FUNCTION <function_name_parameter>() RETURNS <data_type_parameter> BEGIN RETURN <numeric_value_parameter>; END$$ CREATE PROCEDURE <procedure_name_parameter>() BEGIN DROP TABLE IF EXISTS <table_name_parameter>; DROP TABLE IF EXISTS <table_name_parameter>; CREATE TEMPORARY TABLE <table_name_parameter> (<column_name_parameter> <data_type_parameter>); SET @sql = 'CREATE TEMPORARY TABLE <table_name_parameter> AS SELECT * FROM (SELECT * FROM <table_name_parameter> WHERE <column_name_parameter> <comparison_operator_replace> <function_name_replace>()) <alias_parameter>'; PREPARE <statement_name_parameter> FROM @sql; EXECUTE <statement_name_parameter>; DEALLOCATE PREPARE <statement_name_parameter>; END$$ CALL <procedure_name_parameter>();",
    "applied_rules": [
        "<database_parameter>",
        "<function_name_parameter>",
        "<data_type_parameter>",
        "<numeric_value_parameter>",
        "<procedure_name_parameter>",
        "<table_name_parameter>",
        "<column_name_parameter>",
        "<comparison_operator_replace>",
        "<function_name_replace>",
        "<alias_parameter>",
        "<statement_name_parameter>"
    ],
    "Affected Elements": "CREATE TEMPORARY TABLE, SELECT, PREPARE, EXECUTE",
    "Root Cause Analysis": "The temporary table 'src' cannot be accessed within the context of a subquery due to scope limitations in MySQL when using prepared statements."
}