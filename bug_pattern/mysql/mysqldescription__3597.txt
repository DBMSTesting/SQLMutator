{
    "pattern": "CREATE TABLE IF NOT EXISTS `my_installs` (`id` char(36), `user_id` char(36), `script_id` char(36), `script_version_id` char(36), `script_version_package_id` char(36), `name` varchar(35), `version` varchar(25), `path` varchar(255), `url` varchar(255), `admin_url` varchar(128), `icon` varchar(128), `created` datetime); CREATE TABLE IF NOT EXISTS `scripts` (`id` char(36) <constraint_type_parameter>, `category_id` char(36) <constraint_type_parameter>, `name` varchar(35) <constraint_type_parameter>, `icon` varchar(128) <constraint_type_parameter>, `created` datetime <constraint_type_parameter>, PRIMARY KEY (`id`)); CREATE TABLE IF NOT EXISTS `script_installs` (`id` char(36) <constraint_type_parameter>, `user_id` char(36) <constraint_type_parameter>, `script_version_package_id` char(36) <constraint_type_parameter>, `path` varchar(255) <constraint_type_parameter>, `url` varchar(255) <constraint_type_parameter>, `created` datetime <constraint_type_parameter>, PRIMARY KEY (`id`)); CREATE TABLE IF NOT EXISTS `script_versions` (`id` char(36) CHARACTER SET utf8 <constraint_type_parameter>, `script_id` char(36) CHARACTER SET utf8 <constraint_type_parameter>, `version` varchar(25) CHARACTER SET utf8 <constraint_type_parameter>, `admin_url` varchar(128) CHARACTER SET utf8 DEFAULT NULL <constraint_type_parameter>, `created` datetime <constraint_type_parameter>, PRIMARY KEY (`id`)); CREATE TABLE IF NOT EXISTS `script_version_packages` (`id` char(36) <constraint_type_parameter>, `script_version_id` char(36) <constraint_type_parameter>, `process` enum('install','upgrade','import') CHARACTER SET utf8 <constraint_type_parameter>, `created` datetime <constraint_type_parameter>, PRIMARY KEY (`id`), UNIQUE KEY `script_version_id` (`script_version_id`,`process`)); DROP TABLE IF EXISTS `my_installs`; CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `my_installs` AS SELECT `ScriptInstall`.`id` AS `id`, `ScriptInstall`.`user_id` AS `user_id`, `Script`.`id` AS `script_id`, `ScriptVersion`.`id` AS `script_version_id`, `ScriptVersionPackage`.`id` AS `script_version_package_id`, `Script`.`name` AS `name`, `ScriptVersion`.`version` AS `version`, `ScriptInstall`.`path` AS `path`, `ScriptInstall`.`url` AS `url`, `ScriptVersion`.`admin_url` AS `admin_url`, `Script`.`icon` AS `icon`, `ScriptInstall`.`created` AS `created` FROM (((`script_installs` `ScriptInstall` <join_operator_replace> `script_version_packages` `ScriptVersionPackage` ON((convert(`ScriptVersionPackage`.`id` using utf8) = `ScriptInstall`.`script_version_package_id`))) <join_operator_replace> `script_versions` `ScriptVersion` ON((`ScriptVersion`.`id` = convert(`ScriptVersionPackage`.`script_version_id` using utf8)))) <join_operator_replace> `scripts` `Script` ON((`Script`.`id` = `ScriptVersion`.`script_id`))); SELECT `MyInstall`.`id`, `MyInstall`.`user_id`, `MyInstall`.`script_id`, `MyInstall`.`path`, `MyInstall`.`url`, `MyInstall`.`created`, `MyInstall`.`version`, `MyInstall`.`admin_url`, `MyInstall`.`name`, `MyInstall`.`icon` FROM `my_installs` AS `MyInstall` WHERE user_id = <dml_values_parameter> ORDER BY `url` <order_by_parameter>;",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<join_operator_replace>",
        "<dml_values_parameter>",
        "<order_by_parameter>"
    ],
    "Affected Elements": "SELECT statement, view aliasing, metadata retrieval",
    "Root Cause Analysis": "The issue arises from the incorrect metadata being returned for columns in a view due to aliasing in the SELECT statement and how MySQL constructs metadata for views."
}