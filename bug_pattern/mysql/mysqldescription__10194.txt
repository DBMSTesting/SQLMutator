{
    "pattern": "CREATE TABLE t0(<dml_values_parameter>); INSERT INTO t0(<dml_values_parameter>) VALUES(<dml_values_parameter>); SELECT COALESCE(t0.c0, <numeric_function_parameter>) AS f1 FROM t0 GROUP BY c0 HAVING (f1) <arithmetic_operator_replace> (<numeric_function_parameter>); SELECT f1 FROM (SELECT COALESCE(t0.c0, <numeric_function_parameter>) AS f1, (COALESCE(t0.c0, <numeric_function_parameter>) <arithmetic_operator_replace> (<numeric_function_parameter>)) IS <comparison_operator_replace> AS flag FROM t0 GROUP BY c0 HAVING flag=<dml_condition_replace>) as t;",
    "applied_rules": [
        "<dml_values_parameter>",
        "<numeric_function_parameter>",
        "<arithmetic_operator_replace>",
        "<comparison_operator_replace>",
        "<dml_condition_replace>"
    ],
    "Affected Elements": "GROUP BY, HAVING, COALESCE",
    "Root Cause Analysis": "The behavior of GROUP BY with NULL values may lead to inconsistent results when combined with HAVING clauses that rely on computed fields."
}