{
    "pattern": "CREATE TABLE `sbtest1` ( `id` int <constraint_enforce_replace>, `k` int <constraint_enforce_replace> DEFAULT <dml_values_parameter>, `c` char(120) <constraint_enforce_replace> DEFAULT <dml_values_parameter>, `pad` char(60) <constraint_enforce_replace> DEFAULT <dml_values_parameter>, PRIMARY KEY (`id`), KEY `k_1` (`k`) ) ENGINE=<object_dependency_replace> PARTITION BY RANGE (`id`) (PARTITION p0 VALUES LESS THAN (<dml_values_parameter>) ENGINE = <object_dependency_replace>, PARTITION p1 VALUES LESS THAN (<dml_values_parameter>) ENGINE = <object_dependency_replace>, PARTITION p2 VALUES LESS THAN (<dml_values_parameter>) ENGINE = <object_dependency_replace>, PARTITION p3 VALUES LESS THAN (<dml_values_parameter>) ENGINE = <object_dependency_replace>, PARTITION p4 VALUES LESS THAN (<dml_values_parameter>) ENGINE = <object_dependency_replace>); INSERT INTO sbtest1 <dml_values_parameter>; EXPLAIN INSERT INTO sbtest1 <dml_values_parameter>;",
    "applied_rules": [
        "<constraint_enforce_replace>",
        "<dml_values_parameter>",
        "<object_dependency_replace>"
    ],
    "Affected Elements": "INSERT, EXPLAIN, PARTITION BY RANGE, AUTO_INCREMENT",
    "Root Cause Analysis": "The optimizer fails to apply partition pruning when inserting non-null, non-zero values into an auto-increment field that is part of the partition expression."
}