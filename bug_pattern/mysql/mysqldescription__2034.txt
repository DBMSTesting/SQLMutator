{
    "pattern": "DROP TABLE IF EXISTS <object_dependency_replace>; CREATE TABLE <object_dependency_replace>(id INT, <constraint_type_parameter> id (id)) ENGINE=<engine_parameter>; INSERT INTO <dml_values_parameter> VALUES (1),(2); SELECT id FROM <object_dependency_replace> IGNORE INDEX(<index_parameter>) WHERE id=<string_value_parameter>; SELECT id FROM <object_dependency_replace> FORCE INDEX(<index_parameter>) WHERE id=<string_value_parameter>; DROP TABLE IF EXISTS <object_dependency_replace>; CREATE TABLE <object_dependency_replace> (`col0` <time_type_parameter>, `col1` <double_type_parameter>, `id` INT NOT NULL <constraint_enforce_replace>, <constraint_type_parameter> (`col1`), <constraint_type_parameter> (`col0`)) ENGINE=<engine_parameter>; INSERT INTO <object_dependency_replace> VALUES ('00:00:00',<numeric_value_parameter>,1); INSERT INTO <object_dependency_replace> VALUES ('43:30:23',<numeric_value_parameter>,2); SELECT SQL_NO_CACHE `id` FROM <object_dependency_replace> FORCE INDEX(<index_parameter>) WHERE `col0` <= <numeric_value_parameter> AND `col1` >= <numeric_value_parameter>; SELECT SQL_NO_CACHE `id` FROM <object_dependency_replace> IGNORE INDEX(<index_parameter>) WHERE `col0` <= <numeric_value_parameter> AND `col1` >= <numeric_value_parameter>; ",
    "applied_rules": [
        "<object_dependency_replace>",
        "<constraint_type_parameter>",
        "<engine_parameter>",
        "<dml_values_parameter>",
        "<string_value_parameter>",
        "<time_type_parameter>",
        "<double_type_parameter>",
        "<constraint_enforce_replace>",
        "<numeric_value_parameter>",
        "<index_parameter>",
        "<comparison_operator_replace>"
    ],
    "Affected Elements": "force index, ignore index, string comparison with number",
    "Root Cause Analysis": "Implicit casting of values (e.g., comparing strings to integers) leading to different results when using indexes."
}