{
    "pattern": "CREATE TABLE lignes ( vente int <dml_values_parameter>, CodeMag char(10) CHARACTER SET latin1 COLLATE latin1_bin <dml_values_parameter>, famille char(20) CHARACTER SET latin1 COLLATE latin1_bin <dml_values_parameter>, stockID int <dml_values_parameter>, quantite decimal(10,3) <dml_values_parameter>, barcode char(20) CHARACTER SET latin1 COLLATE latin1_bin <dml_values_parameter>, KEY ParStockID (stockID), KEY ParVente (vente), KEY ParCodeMag (CodeMag), KEY Parfamille (famille)) ENGINE=<object_dependency_replace> DEFAULT CHARSET=latin1 COLLATE=latin1_bin; CREATE TABLE ventes ( vente int <dml_values_parameter> DEFAULT <dml_values_parameter>, nature char(20) CHARACTER SET latin1 COLLATE latin1_bin <dml_values_parameter>, KEY ParNature (nature), KEY ParVente (vente)) ENGINE=<object_dependency_replace> DEFAULT CHARSET=latin1 COLLATE=latin1_bin; CREATE TEMPORARY TABLE query1 AS SELECT lignes.stockID, SUM(lignes.quantite) AS SumQte, lignes.barcode FROM lignes <join_operator_replace> ventes ON (lignes.vente <comparison_operator_replace> ventes.vente) WHERE (lignes.famille <comparison_operator_replace> '~%') AND (ventes.nature <comparison_operator_replace> ('VENTE', 'AVOIR', 'REGUL', 'RESA', 'MOUVEMENT') <logical_operator_replace> ventes.nature <comparison_operator_replace> '-> %') AND (lignes.CodeMag <comparison_operator_replace> 'MERCI111') GROUP BY lignes.stockID; SELECT * FROM query1 WHERE barcode <comparison_operator_replace> 'H19127003';",
    "applied_rules": [
        "<dml_values_parameter>",
        "<object_dependency_replace>",
        "<join_operator_replace>",
        "<comparison_operator_replace>",
        "<logical_operator_replace>"
    ],
    "Affected Elements": "SUM, GROUP BY, JOIN",
    "Root Cause Analysis": "The bug may be related to the handling of aggregate functions with GROUP BY in MySQL 5.7.29, leading to incorrect aggregation results."
}