{
    "pattern": "DROP VIEW IF EXISTS <object_dependency_replace>, <object_dependency_replace>; DROP TABLE IF EXISTS <object_dependency_replace>, <object_dependency_replace>; CREATE TABLE <object_dependency_replace> (a INT); INSERT INTO <object_dependency_replace> (a) VALUES (<dml_values_parameter>), (<dml_values_parameter>), (<dml_values_parameter>); CREATE TABLE <object_dependency_replace> LIKE <object_dependency_replace>; INSERT INTO <object_dependency_replace> (a) VALUES (<dml_values_parameter>), (<dml_values_parameter>), (<dml_values_parameter>); CREATE VIEW <object_dependency_replace> AS SELECT <aggregation_function_parameter> FROM <object_dependency_replace>; CREATE VIEW <object_dependency_replace> AS SELECT * FROM <object_dependency_replace>; DROP VIEW <object_dependency_replace>; CREATE TABLE <object_dependency_replace> AS SELECT * FROM <object_dependency_replace>; SELECT * FROM <object_dependency_replace>;",
    "applied_rules": [
        "<object_dependency_replace>",
        "<dml_values_parameter>",
        "<aggregation_function_parameter>"
    ],
    "Affected Elements": "CREATE VIEW, SELECT, DROP VIEW",
    "Root Cause Analysis": "The bug arises from the fact that the view definition becomes invalid when the underlying aggregate view is replaced with a table, leading to a reference error."
}