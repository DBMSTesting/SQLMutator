{
    "pattern": "CREATE TABLE group_info (id int <constraint_type_parameter>, group_id bigint <constraint_enforce_replace>, group_type varchar(10) <constraint_enforce_replace>, source varchar(255) <constraint_enforce_replace>); INSERT INTO group_info <dml_values_parameter>; INSERT INTO group_info <dml_values_parameter>; INSERT INTO group_info <dml_values_parameter>; CREATE TABLE asset_info (id int <constraint_type_parameter>, group_id bigint <constraint_enforce_replace>, asset_name varchar(64) <constraint_enforce_replace>); INSERT INTO asset_info <dml_values_parameter>; INSERT INTO asset_info <dml_values_parameter>; INSERT INTO asset_info <dml_values_parameter>; CREATE TABLE key_word (id int <constraint_type_parameter>, group_id bigint <constraint_enforce_replace>, key_word varchar(32) <constraint_enforce_replace>); INSERT INTO key_word <dml_values_parameter>; INSERT INTO key_word <dml_values_parameter>; CREATE TABLE dictionary (id int <constraint_type_parameter>, group_code varchar(10) <constraint_enforce_replace>, vc_code varchar(10) <constraint_enforce_replace>, vc_value varchar(64) <constraint_enforce_replace>); INSERT INTO dictionary <dml_values_parameter>; INSERT INTO dictionary <dml_values_parameter>; INSERT INTO dictionary <dml_values_parameter>; SELECT DISTINCT gigt.* FROM (SELECT DISTINCT group_id, group_type FROM group_info) AS gigt <join_operator_replace> dictionary d ON gigt.group_type <comparison_operator_parameter> d.vc_code AND d.group_code = <string_parameter> WHERE EXISTS (SELECT 1 FROM asset_info ai WHERE ai.group_id = gigt.group_id AND ai.asset_name <string_function_parameter> concat(<string_parameter>, <string_parameter>, <string_parameter>)) AND EXISTS (SELECT 1 FROM group_info gi WHERE gi.group_id = gigt.group_id AND gi.source <string_function_parameter> concat(<string_parameter>, <string_parameter>, <string_parameter>)) AND EXISTS (SELECT 1 FROM key_word kw WHERE kw.group_id = gigt.group_id AND kw.key_word <string_function_parameter> concat(<string_parameter>, <string_parameter>, <string_parameter>));",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<constraint_enforce_replace>",
        "<dml_values_parameter>",
        "<join_operator_replace>",
        "<comparison_operator_parameter>",
        "<string_parameter>",
        "<string_function_parameter>"
    ],
    "Affected Elements": "EXISTS keyword, LEFT JOIN clause, SELECT DISTINCT clause",
    "Root Cause Analysis": "The use of EXISTS without proper handling of distinct results leads to unexpected duplicate rows in the result set."
}