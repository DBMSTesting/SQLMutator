{
    "pattern": "CREATE TABLE IF NOT EXISTS customers(id BIGINT <constraint_enforce_replace> <constraint_type_parameter>, name VARCHAR(64), zips JSON); ALTER TABLE customers ADD INDEX ix_zips1((CAST(zips AS <numeric_function_parameter> ARRAY))); ALTER TABLE customers ADD INDEX ix_zips2((CAST(zips->'$' AS <numeric_function_parameter> ARRAY))); ALTER TABLE customers ADD INDEX ix_zips3((CAST(zips->'$[*]' AS <numeric_function_parameter> ARRAY))); EXPLAIN SELECT <select_parameter> FROM customers WHERE 12345 <comparison_operator_replace> (zips); EXPLAIN SELECT <select_parameter> FROM customers WHERE <numeric_function_parameter> MEMBER OF (zips); EXPLAIN SELECT customers.*, c2.zips FROM customers <join_operator_replace> customers c2 ON customers.id <comparison_operator_replace> (c2.zips);",
    "applied_rules": [
        "<constraint_enforce_replace>",
        "<constraint_type_parameter>",
        "<numeric_function_parameter>",
        "<select_parameter>",
        "<comparison_operator_replace>",
        "<join_operator_replace>"
    ],
    "Affected Elements": "MEMBER OF, JSON_CONTAINS, INDEX usage",
    "Root Cause Analysis": "The multi-valued index on JSON is not utilized for dynamic values derived from queries, which limits its effectiveness in real-world scenarios."
}