{
    "pattern": "CREATE TABLE test (<id_parameter> <int_parameter> <auto_increment_parameter> <constraint_type_parameter>, <name_parameter> <varchar_parameter>) ENGINE=<engine_parameter>; CREATE TABLE test_log (<id_parameter> <int_parameter> <auto_increment_parameter> <constraint_type_parameter>, <name_parameter> <varchar_parameter>) ENGINE=<engine_parameter>; INSERT INTO test <dml_values_parameter>; INSERT INTO test <dml_values_parameter>; DROP TRIGGER IF EXISTS <trigger_parameter>; DELIMITER // CREATE TRIGGER <trigger_parameter> <before_operator_replace> UPDATE ON test FOR EACH ROW BEGIN IF EXISTS(SELECT <select_parameter> FROM test_log WHERE <where_parameter>) THEN SIGNAL SQLSTATE VALUE <sqlstate_value_parameter>; END IF; INSERT INTO test_log <dml_values_parameter>; END; // DELIMITER ; BEGIN; UPDATE test SET <name_parameter> = <dml_value_parameter> WHERE <id_parameter> = <dml_condition_parameter>; SHOW ENGINE <engine_parameter> STATUS;",
    "applied_rules": [
        "<id_parameter>",
        "<int_parameter>",
        "<auto_increment_parameter>",
        "<constraint_type_parameter>",
        "<name_parameter>",
        "<varchar_parameter>",
        "<engine_parameter>",
        "<dml_values_parameter>",
        "<trigger_parameter>",
        "<before_operator_replace>",
        "<select_parameter>",
        "<where_parameter>",
        "<sqlstate_value_parameter>",
        "<dml_value_parameter>",
        "<dml_condition_parameter>"
    ],
    "Affected Elements": "SELECT, INSERT, TRIGGER, SIGNAL, IF EXISTS",
    "Root Cause Analysis": "The trigger's behavior causes a gap lock due to the nature of the BEFORE UPDATE operation, which is not documented."
}