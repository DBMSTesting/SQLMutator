{
    "pattern": "DROP PROCEDURE IF EXISTS `p1`; DROP PROCEDURE IF EXISTS `p2`; DROP TABLE IF EXISTS `t1`; CREATE TABLE `t1` (`id` <dml_values_parameter>, `a` <dml_values_parameter>) ENGINE=<engine_parameter> PARTITION BY RANGE (`id`) (PARTITION `p0` VALUES LESS THAN (<dml_values_parameter>), PARTITION `p1` VALUES LESS THAN (<dml_values_parameter>), PARTITION `p2` VALUES LESS THAN (<dml_values_parameter>), PARTITION `p3` VALUES LESS THAN (<dml_values_parameter>), PARTITION `p4` VALUES LESS THAN (<dml_values_parameter>), PARTITION `pn` VALUES LESS THAN (<dml_values_parameter>)); DELIMITER $ CREATE PROCEDURE `p2`() BEGIN DECLARE cnt <data_type_parameter> DEFAULT <dml_values_parameter>; REPEAT SET cnt:=cnt+<dml_values_parameter>; INSERT INTO `t1`(`a`) VALUES (<dml_values_parameter>), (<dml_values_parameter>), (<dml_values_parameter>), (<dml_values_parameter>), (<dml_values_parameter>), (<dml_values_parameter>), (<dml_values_parameter>), (<dml_values_parameter>); IF cnt <comparison_operator_replace> <dml_values_parameter> THEN SELECT cnt; END IF; UNTIL 1=<comparison_operator_replace> 2 END REPEAT; END $ CREATE PROCEDURE `p1`() BEGIN DECLARE v_num <data_type_parameter> DEFAULT <dml_values_parameter>; DECLARE v_range <data_type_parameter> DEFAULT <dml_values_parameter>; REPEAT SET v_num:=v_num+<dml_values_parameter>; SET v_range:=v_range+<dml_values_parameter>; SET @sql:=CONCAT('ALTER TABLE `t1` REORGANIZE PARTITION pn INTO (PARTITION `p', v_num, '` VALUES LESS THAN (<dml_values_parameter>), PARTITION `pn` VALUES LESS THAN (<dml_values_parameter>));'); PREPARE stmt FROM @sql; EXECUTE stmt; SELECT SLEEP(<dml_values_parameter>), v_range, v_num; UNTIL v_num <comparison_operator_replace> <dml_values_parameter> END REPEAT; END $ DELIMITER ; CALL p1(); CALL p2();",
    "applied_rules": [
        "<dml_values_parameter>",
        "<engine_parameter>",
        "<data_type_parameter>",
        "<comparison_operator_replace>"
    ],
    "Affected Elements": "insert into, alter table, partition, auto_increment",
    "Root Cause Analysis": "The bug is caused by incorrect handling of the auto_increment value during partition reorganizations which leads to duplicate entries."
}