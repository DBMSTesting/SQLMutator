{
    "pattern": "CREATE TABLE filler (id INT <constraint_enforce_replace> <constraint_type_parameter>) ENGINE=<engine_parameter>; CREATE PROCEDURE prc_filler(cnt INT) BEGIN DECLARE _cnt INT; SET _cnt = 1; WHILE _cnt <= cnt DO INSERT INTO filler SELECT _cnt; SET _cnt = _cnt + 1; END WHILE; END; CALL prc_filler(<dml_values_parameter>); CREATE TABLE t_latest (id INT <constraint_enforce_replace>, ip INT <constraint_enforce_replace>, ts DATETIME <constraint_enforce_replace>, value VARCHAR(50) <constraint_enforce_replace>, KEY ix_latest_ip_ts (ip, ts)) ENGINE=<engine_parameter> DEFAULT CHARSET=<charset_parameter>; INSERT INTO t_latest (id, ip, ts, value) SELECT id, INET_ATON(<string_parameter>) + FLOOR(RAND() * <numeric_parameter>), CAST(<string_parameter> AS DATETIME) - INTERVAL id <interval_parameter>, CONCAT(<string_parameter>, id) FROM filler; ANALYZE TABLE t_latest; EXPLAIN SELECT INET_NTOA(ip) AS textip, MAX(ts) AS maxts FROM t_latest FORCE INDEX FOR GROUP BY (ix_latest_ip_ts) GROUP BY ip ORDER BY maxts <order_parameter> LIMIT <limit_parameter>;",
    "applied_rules": [
        "<constraint_enforce_replace>",
        "<constraint_type_parameter>",
        "<engine_parameter>",
        "<charset_parameter>",
        "<string_parameter>",
        "<numeric_parameter>",
        "<interval_parameter>",
        "<order_parameter>",
        "<limit_parameter>",
        "<dml_values_parameter>"
    ],
    "Affected Elements": "LIMIT clause, GROUP BY, FORCE INDEX",
    "Root Cause Analysis": "The optimizer does not utilize the INDEX FOR GROUP BY when a LIMIT clause is present, contrary to expected behavior."
}