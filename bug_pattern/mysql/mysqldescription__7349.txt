{
    "pattern": "DROP TABLE IF EXISTS `posts_translations_copy2`; CREATE TABLE `posts_translations_copy2` ( `id` int(11) unsigned NOT NULL, `content` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin, <constraint_type_parameter> (`id`), <constraint_type_parameter> KEY `searchablepc` (`content`) ) ENGINE=<engine_parameter> DEFAULT CHARSET=utf8mb4; INSERT INTO `posts_translations_copy2` (`id`, `content`) VALUES (<dml_values_parameter>; SELECT count(*) FROM `test`.`posts_translations_copy2` `PostsTranslations` USE INDEX (searchablepc) WHERE ((MATCH(PostsTranslations.content) AGAINST(<string_function_parameter> in boolean mode))) ORDER BY `PostsTranslations`.`id` <order_operator_replace> LIMIT <numeric_function_parameter> OFFSET <numeric_function_parameter>; DROP TABLE IF EXISTS `posts_translations_copy2`; CREATE TABLE `posts_translations_copy2` ( `id` int(11) unsigned NOT NULL, `content` mediumtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin, <constraint_type_parameter> (`id`) ) ENGINE=<engine_parameter> DEFAULT CHARSET=utf8mb4; INSERT INTO `posts_translations_copy2` (`id`, `content`) VALUES (<dml_values_parameter>; CREATE FULLTEXT INDEX searchablepc ON posts_translations_copy2(`content`); SELECT count(*) FROM `test`.`posts_translations_copy2` `PostsTranslations` USE INDEX (searchablepc) WHERE ((MATCH(PostsTranslations.content) AGAINST(<string_function_parameter> in boolean mode))) ORDER BY `PostsTranslations`.`id` <order_operator_replace> LIMIT <numeric_function_parameter> OFFSET <numeric_function_parameter>; ",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<engine_parameter>",
        "<dml_values_parameter>",
        "<string_function_parameter>",
        "<order_operator_replace>",
        "<numeric_function_parameter>"
    ],
    "Affected Elements": "FULLTEXT, MATCH, AGAINST, USE INDEX",
    "Root Cause Analysis": "The regression in behavior when using FULLTEXT index with binary collation caused discrepancies in query results, specifically affecting case sensitivity in search results."
}