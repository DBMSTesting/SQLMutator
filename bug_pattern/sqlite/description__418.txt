{
    "pattern": "CREATE TABLE t1(x, y, <constraint_type_parameter>) WITHOUT ROWID; INSERT INTO t1(x,y) <dml_values_parameter>; INSERT INTO t1(x,y) <dml_values_parameter>; ANALYZE; DROP TABLE IF EXISTS sqlite_stat4; DELETE FROM sqlite_stat1; INSERT INTO sqlite_stat1(tbl,idx,stat) <dml_values_parameter>; ANALYZE sqlite_master; SELECT <select_parameter> FROM t1 WHERE (<where_parameter> <logical_operator_replace> <where_parameter>) <logical_operator_replace> (<where_parameter> <comparison_operator_replace> <where_parameter>);",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<dml_values_parameter>",
        "<select_parameter>",
        "<where_parameter>",
        "<logical_operator_replace>",
        "<comparison_operator_replace>"
    ],
    "Affected Elements": "SELECT statement with OR clause in the WHERE condition",
    "Root Cause Analysis": "The issue arises from the improper handling of OR optimization in WITHOUT ROWID tables, specifically affecting skip-scan optimizations in specific SQLite versions."
}