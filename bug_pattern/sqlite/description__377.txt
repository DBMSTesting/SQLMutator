{
    "pattern": "CREATE TABLE <object_name_parameter>(<column_definitions_parameter>); INSERT INTO <object_name_parameter> VALUES(<dml_values_parameter>); CREATE TABLE <object_name_parameter>(<column_definitions_parameter>); SELECT <aggregation_function_parameter> FROM <object_name_parameter> <join_operator_replace> <object_name_parameter> ON <join_condition_parameter> GROUP BY <group_by_parameter>; SELECT <aggregation_function_parameter> FROM (<select_parameter>) <join_operator_replace> <object_name_parameter> ON <join_condition_parameter> GROUP BY <group_by_parameter>; CREATE TABLE <object_name_parameter>(<column_definitions_parameter>); INSERT INTO <object_name_parameter> VALUES(<dml_values_parameter>); CREATE TABLE <object_name_parameter>(<column_definitions_parameter>); SELECT <select_parameter> FROM (<select_parameter>) <join_operator_replace> <object_name_parameter> ON <join_condition_parameter>;",
    "applied_rules": [
        "<object_name_parameter>",
        "<column_definitions_parameter>",
        "<dml_values_parameter>",
        "<aggregation_function_parameter>",
        "<join_operator_replace>",
        "<join_condition_parameter>",
        "<group_by_parameter>",
        "<select_parameter>"
    ],
    "Affected Elements": "LEFT JOIN, Subquery in FROM clause, GROUP BY",
    "Root Cause Analysis": "The query planner in SQLite fails to correctly handle LEFT JOINs when the left-hand side is a subquery, resulting in no rows being returned."
}