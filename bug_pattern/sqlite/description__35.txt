{
    "pattern": "CREATE TABLE a (<id_parameter> <integer_parameter> <not_null_parameter> <constraint_type_parameter>); UPDATE a SET <id_parameter> = a.<id_parameter> + 1 RETURNING a.*; CREATE TABLE x(<a_parameter>,<b_parameter>); CREATE TABLE y(<c_parameter>,<d_parameter>); UPDATE x SET <a_parameter> = <c_parameter> WHERE <b_parameter> = <d_parameter> RETURNING x.*; UPDATE x SET <a_parameter> = <c_parameter> WHERE <b_parameter> = <d_parameter> RETURNING y.*; UPDATE x SET <a_parameter> = <c_parameter> WHERE <b_parameter> = <d_parameter> RETURNING <x_parameter>.<a_parameter>, <y_parameter>.<d_parameter>; CREATE TABLE t1(<x_parameter>); INSERT INTO t1 VALUES(<dml_values_parameter>) RETURNING t1.*;",
    "applied_rules": [
        "<id_parameter>",
        "<integer_parameter>",
        "<not_null_parameter>",
        "<constraint_type_parameter>",
        "<a_parameter>",
        "<b_parameter>",
        "<c_parameter>",
        "<d_parameter>",
        "<x_parameter>",
        "<y_parameter>",
        "<dml_values_parameter>"
    ],
    "Affected Elements": "RETURNING clause with 'table.*'",
    "Root Cause Analysis": "The segfault occurs when using the RETURNING clause with a wildcard that references the entire table, indicating a potential issue in handling memory or result set processing in SQLite."
}