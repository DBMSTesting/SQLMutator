{
    "pattern": "CREATE TABLE t0(c0 COLLATE <collation_parameter>); INSERT INTO t0(c0) VALUES (<dml_values_parameter>); CREATE VIEW v0(c0, c1) AS SELECT DISTINCT t0.c0, <string_value_parameter> FROM t0; SELECT v0.c1 <comparison_operator_replace> v0.c0 FROM v0; SELECT * FROM v0 WHERE v0.c1 <comparison_operator_replace> v0.c0; CREATE TABLE t0(c0 COLLATE <collation_parameter>); INSERT INTO t0(c0) VALUES (<dml_values_parameter>); CREATE VIEW v0(c0, c1) AS SELECT DISTINCT t0.c0, <string_value_parameter> FROM t0; SELECT count(*) FROM v0 WHERE <where_condition_parameter>; .testctrl <optimization_parameter>; SELECT count(*) FROM v0 WHERE <where_condition_parameter>;",
    "applied_rules": [
        "<collation_parameter>",
        "<dml_values_parameter>",
        "<string_value_parameter>",
        "<comparison_operator_replace>",
        "<where_condition_parameter>",
        "<optimization_parameter>"
    ],
    "Affected Elements": "COLLATE, SELECT, WHERE",
    "Root Cause Analysis": "The issue arises due to the push-down optimization not considering collating functions, leading to unexpected results in the query evaluation."
}