{
    "pattern": "CREATE TABLE t0(c0 REAL <constraint_type_parameter>, c1 INT); INSERT INTO t0 <dml_values_parameter>; SELECT * FROM t0 WHERE (1 <comparison_operator_replace> CAST(t0.c0 AS TEXT) AND t0.c0); CREATE TABLE t1(a TEXT <constraint_enforce_replace>, b TEXT, c INT, d DEFAULT 1); INSERT INTO t1(b,c) <dml_values_parameter>; CREATE INDEX t1bca ON t1(b,c,a); SELECT a FROM t1 WHERE b=<dml_condition_replace> AND a=<dml_condition_replace>;",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<dml_values_parameter>",
        "<comparison_operator_replace>",
        "<constraint_enforce_replace>",
        "<dml_condition_replace>"
    ],
    "Affected Elements": "BETWEEN, CAST, COLLATE, CREATE INDEX",
    "Root Cause Analysis": "The issue arises from an incorrect handling of collating sequences for generated columns when accessed through an index, leading to unexpected query results."
}