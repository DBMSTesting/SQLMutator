{
    "pattern": "CREATE TABLE a(<object_dependency_replace>); CREATE VIEW c(<object_dependency_replace>) AS SELECT <select_parameter> FROM a ORDER BY <order_by_parameter>; SELECT <aggregation_function_parameter> OVER( PARTITION BY(<select_parameter> FROM c <join_operator_replace> a WHERE <where_parameter> =(<select_parameter> INTERSECT SELECT <select_parameter> FROM c) AND <where_parameter> = <numeric_function_parameter>)) FROM c; CREATE TABLE t1(<object_dependency_replace>); INSERT INTO t1 <dml_values_parameter>; CREATE TABLE t2(<object_dependency_replace>); INSERT INTO t2 <dml_values_parameter>; CREATE TABLE t3(<object_dependency_replace>,<object_dependency_replace>); INSERT INTO t3 <dml_values_parameter>; CREATE VIEW t5 AS SELECT <select_parameter> FROM t3 ORDER BY <order_by_parameter>; SELECT * FROM t1, t2 WHERE <where_parameter>=(SELECT <numeric_function_parameter> INTERSECT SELECT <select_parameter> FROM t5) AND <where_parameter>=<numeric_function_parameter>;",
    "applied_rules": [
        "<object_dependency_replace>",
        "<select_parameter>",
        "<order_by_parameter>",
        "<aggregation_function_parameter>",
        "<where_parameter>",
        "<dml_values_parameter>",
        "<numeric_function_parameter>",
        "<join_operator_replace>"
    ],
    "Affected Elements": "SELECT, INTERSECT, ORDER BY, WINDOW FUNCTIONS",
    "Root Cause Analysis": "The issue appears to stem from the optimization introduced in version 3.25.0, specifically related to the use of transitive properties for constant propagation, which leads to a heap buffer overflow in certain queries."
}