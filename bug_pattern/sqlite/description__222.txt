{
    "pattern": "CREATE TABLE t0(<constraint_type_parameter>, c1); INSERT INTO t0(c1) VALUES (<dml_values_parameter>); INSERT INTO t0(c0) VALUES (<dml_values_parameter>); CREATE VIEW v0(c0, c1) AS SELECT t0.c1, t0.c0 FROM t0 WHERE CAST(t0.rowid AS <numeric_function_parameter>) = <numeric_function_parameter>; SELECT v0.c0, MIN(v0.c1) FROM v0; CREATE TABLE t1(a, b, c); INSERT INTO t1 VALUES(<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>); CREATE INDEX i1 ON t1(a); SELECT MIN(a), b, c FROM t1 WHERE c = <dml_values_parameter>; INSERT INTO t1 VALUES(<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>); SELECT MIN(a), b, c FROM t1 WHERE c = <dml_values_parameter>; ",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<dml_values_parameter>",
        "<numeric_function_parameter>"
    ],
    "Affected Elements": "MIN(), CAST(), SELECT, VIEW",
    "Root Cause Analysis": "The issue arises from the incorrect handling of NULL values in conjunction with aggregate functions and type casting, leading to unexpected results."
}