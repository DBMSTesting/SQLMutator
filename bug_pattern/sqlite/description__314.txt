{
    "pattern": "CREATE TABLE t1(aa VARCHAR <constraint_type_parameter>, bb VARCHAR <constraint_type_parameter>, cc VARCHAR <constraint_type_parameter>, x VARCHAR(400)); INSERT INTO t1(aa, bb, cc) <dml_values_parameter>; INSERT INTO t1(aa, bb, cc) <dml_values_parameter>; CREATE TABLE t2(aa VARCHAR <constraint_type_parameter>, dd INT DEFAULT 1 <constraint_enforce_replace>, ee VARCHAR <constraint_type_parameter>, x VARCHAR(100)); INSERT INTO t2(aa, dd, ee) <dml_values_parameter>; CREATE INDEX t2x1 ON t2(dd, ee); ANALYZE; DROP TABLE IF EXISTS sqlite_stat4; DELETE FROM sqlite_stat1; INSERT INTO sqlite_stat1 VALUES <dml_values_parameter>; ANALYZE sqlite_master; PRAGMA vdbe_trace=on; SELECT * FROM t1 <join_operator_replace> t2 ON t1.aa <comparison_operator_replace> t2.aa WHERE t1.bb = <where_parameter> ORDER BY t2.dd <order_parameter> LIMIT <limit_parameter>; CREATE TABLE t1(aa, bb); INSERT INTO t1 <dml_values_parameter>; CREATE TABLE t2(cc, dd, ee, x VARCHAR(100)); INSERT INTO t2(cc, dd, ee) <dml_values_parameter>; INSERT INTO t2(cc, dd, ee) <dml_values_parameter>; INSERT INTO t2(cc, dd, ee) <dml_values_parameter>; CREATE INDEX t2ddee ON t2(dd, ee); CREATE INDEX t2cc ON t2(cc); ANALYZE; SELECT t2.cc, t2.dd, t2.ee FROM t1 <join_operator_replace> t2 ON t1.aa <comparison_operator_replace> t2.cc ORDER BY t2.dd <order_parameter> LIMIT <limit_parameter>; SELECT t2.cc, t2.dd, t2.ee FROM t1 <join_operator_replace> t2 ON t1.aa <comparison_operator_replace> t2.cc WHERE t1.bb = <where_parameter> ORDER BY t2.dd <order_parameter> LIMIT <limit_parameter>; ",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<dml_values_parameter>",
        "<constraint_enforce_replace>",
        "<join_operator_replace>",
        "<comparison_operator_replace>",
        "<where_parameter>",
        "<order_parameter>",
        "<limit_parameter>"
    ],
    "Affected Elements": "ORDER BY, LIMIT, JOIN",
    "Root Cause Analysis": "The bug is caused by an infinite loop in the code generator related to the ORDER BY LIMIT optimization, which is exacerbated by specific compile-time options not being set."
}