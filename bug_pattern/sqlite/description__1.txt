{
    "pattern": "CREATE TABLE t1(<key_parameter> <text_type_parameter>, <value_parameter> <text_type_parameter>); CREATE TABLE t2(<id_parameter> <integer_type_parameter> <primary_key_parameter>, <key_parameter> <text_type_parameter> <unique_parameter>); INSERT INTO t1 <dml_values_parameter>; INSERT INTO t2 <dml_values_parameter>; WITH t4(<key_parameter>, <value_parameter>) AS (SELECT <key_parameter>, <value_parameter> FROM t1 ORDER BY <key_parameter> LIMIT <limit_parameter>) SELECT <id_parameter>, <key_parameter>, <value_parameter> FROM t2 <join_operator_replace> t4 ORDER BY <key_parameter>; WITH t4(<key_parameter>, <value_parameter>) AS (SELECT <key_parameter>, <value_parameter> FROM t1 ORDER BY <key_parameter> LIMIT <limit_parameter>) SELECT <id_parameter>, <key_parameter>, <value_parameter> FROM t4 <join_operator_replace> t2 ORDER BY <key_parameter>;",
    "applied_rules": [
        "<key_parameter>",
        "<value_parameter>",
        "<text_type_parameter>",
        "<integer_type_parameter>",
        "<primary_key_parameter>",
        "<unique_parameter>",
        "<dml_values_parameter>",
        "<limit_parameter>",
        "<join_operator_replace>"
    ],
    "Affected Elements": "NATURAL JOIN, ORDER BY, Common Table Expressions (CTEs)",
    "Root Cause Analysis": "The order-by-subquery optimization fails to recognize the equivalence between 't2.key' and 't4.key' due to the order of the tables in the JOIN clause."
}