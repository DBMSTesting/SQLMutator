{
    "pattern": "CREATE TABLE AAA (aaa_id INTEGER <constraint_type_parameter>); CREATE TABLE RRR (rrr_id INTEGER <constraint_type_parameter>, rrr_date INTEGER <dml_values_parameter>, rrr_aaa INTEGER <dml_values_parameter>); CREATE TABLE TTT (ttt_id INTEGER <constraint_type_parameter>, target_aaa INTEGER <dml_values_parameter>, source_aaa INTEGER <dml_values_parameter>); INSERT INTO AAA (aaa_id) VALUES (<dml_values_parameter>); INSERT INTO TTT (ttt_id, target_aaa, source_aaa) VALUES (<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>); INSERT INTO TTT (ttt_id, target_aaa, source_aaa) VALUES (<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>); INSERT INTO RRR (rrr_id, rrr_date, rrr_aaa) VALUES (<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>); INSERT INTO RRR (rrr_id, rrr_date, rrr_aaa) VALUES (<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>); SELECT i.aaa_id, (SELECT SUM(CASE <case_parameter> END) FROM TTT t) AS segfault FROM (SELECT curr.rrr_aaa AS aaa_id FROM RRR curr <join_operator_replace> AAA a ON (curr.rrr_aaa = a.aaa_id) <join_operator_replace> RRR r ON (r.rrr_id <comparison_operator_replace> 0 AND r.rrr_date < curr.rrr_date) GROUP BY curr.rrr_id HAVING r.rrr_date <is_operator_replace> NULL) i;",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<dml_values_parameter>",
        "<case_parameter>",
        "<join_operator_replace>",
        "<comparison_operator_replace>",
        "<is_operator_replace>"
    ],
    "Affected Elements": "SELECT, SUM, INNER JOIN, LEFT JOIN, GROUP BY, HAVING",
    "Root Cause Analysis": "The query planner encounters a segmentation fault due to improper handling of joins and aggregate functions in the context of the specific SQL engine version."
}