{
    "pattern": "PRAGMA <pragma_parameter>; PRAGMA <pragma_parameter>; CREATE TABLE t1(<dml_values_parameter>); CREATE INDEX t1b ON t1(<dml_values_parameter>); CREATE TABLE t2(<dml_values_parameter> UNIQUE); INSERT INTO t2 VALUES(<dml_values_parameter>); BEGIN; INSERT INTO t1(<dml_values_parameter>) VALUES(<dml_values_parameter>); SELECT <select_parameter>, * FROM t2 WHERE <where_parameter>; SELECT <select_parameter>, * FROM t1; COMMIT; SELECT <select_parameter>, * FROM t1;",
    "applied_rules": [
        "<pragma_parameter>",
        "<dml_values_parameter>",
        "<select_parameter>",
        "<where_parameter>"
    ],
    "Affected Elements": "PRAGMA, COMMIT, INSERT, SELECT",
    "Root Cause Analysis": "The issue arises from a multi-statement transaction ending with SELECT statements that cause a cache spill, preventing dirty pages from being written to the WAL during COMMIT, leading to unexpected transaction rollback."
}