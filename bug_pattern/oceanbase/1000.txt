{
    "pattern": "CREATE TABLE <object_name_parameter> ( <column_definition_parameter> ); INSERT INTO <object_name_parameter> <dml_values_parameter>; INSERT INTO <object_name_parameter> <dml_values_parameter>; SELECT ( WITH <object_name_parameter> AS ( SELECT <column_name_parameter> FROM <object_name_parameter> WHERE <column_name_parameter> IN ( <numeric_expression_parameter> = ( <column_name_parameter> = <value_parameter> OR <column_name_parameter> = <value_parameter> OR <column_name_parameter> = - ( <numeric_expression_parameter> >= <numeric_expression_parameter> ) >= <column_name_parameter> + <column_name_parameter> ) , <value_parameter> ) ) SELECT ( <column_name_parameter> FROM <object_name_parameter> ) FROM <object_name_parameter> WHERE ( SELECT <column_name_parameter> FROM <object_name_parameter> AS <object_name_parameter> LIMIT <numeric_expression_parameter> OFFSET <numeric_expression_parameter> ) IN ( SELECT <column_name_parameter> FROM ( SELECT <column_name_parameter> FROM ( SELECT ( <column_name_parameter> NOT IN ( <column_name_parameter> , <numeric_expression_parameter> NOT BETWEEN <value_parameter> AND <value_parameter> ) AND <column_name_parameter> NOT IN ( <numeric_expression_parameter> % <column_name_parameter> ) ) , <numeric_expression_parameter> >= <column_name_parameter> FROM <object_name_parameter> UNION SELECT <column_name_parameter> , <column_name_parameter> FROM <object_name_parameter> ) AS <object_name_parameter> ) AS <object_name_parameter> <join_operator_replace> <object_name_parameter> AS <object_name_parameter> <join_operator_replace> ( SELECT DISTINCT <column_name_parameter> , ( <column_name_parameter> = <value_parameter> OR <column_name_parameter> = <value_parameter> OR <column_name_parameter> + CASE <boolean_parameter> > <numeric_expression_parameter> AND <column_name_parameter> < ( SELECT <column_name_parameter> FROM <object_name_parameter> AS <object_name_parameter> GROUP BY <numeric_expression_parameter> + <numeric_expression_parameter> , <column_name_parameter> ) WHEN <boolean_parameter> THEN <numeric_expression_parameter> ELSE <numeric_expression_parameter> END + <numeric_expression_parameter> OR <column_name_parameter> = - ( <value_parameter> <= <numeric_expression_parameter> ) >= <column_name_parameter> + <column_name_parameter> ) FROM <object_name_parameter> ) AS <object_name_parameter> <join_operator_replace> <object_name_parameter> <join_operator_replace> <object_name_parameter> WHERE <column_name_parameter> != <value_parameter> GROUP BY <column_name_parameter> ) ) = <numeric_expression_parameter> , <function_name_parameter> ( <column_name_parameter> ) OVER <object_name_parameter> FROM <object_name_parameter> WINDOW <object_name_parameter> AS ( PARTITION BY <column_name_parameter> ORDER BY <column_name_parameter> DESC );",
    "applied_rules": [
        "<object_name_parameter>",
        "<column_definition_parameter>",
        "<dml_values_parameter>",
        "<column_name_parameter>",
        "<numeric_expression_parameter>",
        "<value_parameter>",
        "<boolean_parameter>",
        "<function_name_parameter>",
        "<join_operator_replace>"
    ],
    "Affected Elements": "SELECT, WITH, IN, NOT IN, UNION, LAST_VALUE, WINDOW, NATURAL JOIN",
    "Root Cause Analysis": "The complexity and nested structure of the SQL query may lead to inefficiencies in execution, resulting in an observer crash due to resource exhaustion or mismanagement."
}