{
    "pattern": "CREATE TABLE <object_dependency_replace>; INSERT INTO <dml_values_parameter>; INSERT INTO <dml_values_parameter>; CREATE TABLE <object_dependency_replace>; INSERT INTO <dml_values_parameter>; INSERT INTO <dml_values_parameter>; SELECT <select_parameter> FROM <select_parameter> WHERE <where_parameter> IN (SELECT <select_parameter> FROM (WITH <object_dependency_replace> AS (SELECT <select_parameter> FROM <select_parameter>) SELECT <select_parameter> FROM (SELECT <select_parameter>, (<comparison_operator_replace> OR <comparison_operator_replace>) FROM <select_parameter> WHERE <comparison_operator_replace> OR <comparison_operator_replace> AND <comparison_operator_replace> (<select_parameter> FROM <select_parameter> AS <object_dependency_replace> GROUP BY <select_parameter> + <numeric_function_parameter>, <select_parameter>)) AS <object_dependency_replace> <join_operator_replace> <select_parameter>) AS <select_parameter> GROUP BY <select_parameter> HAVING <select_parameter> = (SELECT <select_parameter> FROM <select_parameter> WHERE <string_function_parameter> / <select_parameter> = <select_parameter> + CASE <select_parameter> WHEN <boolean_parameter> THEN (((<exists_operator_parameter> (SELECT <numeric_function_parameter>) AND ((<select_parameter> % (SELECT <select_parameter> FROM <select_parameter> UNION SELECT <select_parameter> FROM (SELECT <select_parameter> FROM (WITH <object_dependency_replace> AS (SELECT <select_parameter> FROM (SELECT <select_parameter> FROM <select_parameter> WHERE <boolean_parameter> WINDOW <object_dependency_replace> AS (PARTITION BY <select_parameter>) AS <select_parameter>) SELECT DISTINCT <select_parameter>, (<comparison_operator_replace> OR <comparison_operator_replace>) FROM <object_dependency_replace>) AS <object_dependency_replace> <join_operator_replace> <select_parameter> WHERE <select_parameter> WINDOW <object_dependency_replace> AS (PARTITION BY <select_parameter>) AS <select_parameter> ORDER BY <select_parameter> IN (<numeric_function_parameter>, (<select_parameter> % (SELECT <select_parameter> FROM <select_parameter> UNION SELECT <boolean_parameter> FROM <select_parameter> AS <object_dependency_replace> ORDER BY <select_parameter> LIMIT <numeric_function_parameter>) AND <numeric_function_parameter>) ASC LIMIT <numeric_function_parameter>) <= <select_parameter> OR NOT <select_parameter>) BETWEEN <numeric_function_parameter> AND <numeric_function_parameter>) ELSE <numeric_function_parameter> END OR <select_parameter> = <select_parameter>) * <numeric_function_parameter>);",
    "applied_rules": [
        "<object_dependency_replace>",
        "<dml_values_parameter>",
        "<select_parameter>",
        "<where_parameter>",
        "<comparison_operator_replace>",
        "<numeric_function_parameter>",
        "<string_function_parameter>",
        "<exists_operator_parameter>",
        "<boolean_parameter>",
        "<join_operator_replace>"
    ],
    "Affected Elements": "SELECT, INSERT, CREATE TABLE, WITH, NATURAL JOIN, GROUP BY, HAVING, CASE, EXISTS, ORDER BY, UNION, LIMIT",
    "Root Cause Analysis": "The SQL query structure is overly complex and may lead to crashes due to excessive nesting, inappropriate data type comparisons, or resource exhaustion."
}