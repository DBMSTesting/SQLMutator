{
    "pattern": "DROP TABLE IF EXISTS t0; DROP TABLE IF EXISTS t1; CREATE TABLE IF NOT EXISTS t0 ( c0 FLOAT <constraint_type_parameter> <constraint_enforce_replace>, c1 INT, c2 VARCHAR(500) ) WITH COLUMN GROUP (<object_dependency_replace>); CREATE TABLE IF NOT EXISTS t1 LIKE t0; INSERT INTO t0 (c2, c1, c0) <dml_values_parameter>; INSERT INTO t0 (c2, c1, c0) <dml_values_parameter>; INSERT INTO t0 (c2, c1, c0) <dml_values_parameter>; INSERT INTO t0 (c2, c1, c0) <dml_values_parameter>; INSERT INTO t1 (c0, c1, c2) <dml_values_parameter>; INSERT INTO t1 (c0, c1, c2) <dml_values_parameter>; INSERT INTO t1 (c0, c1, c2) <dml_values_parameter>; INSERT INTO t1 (c0, c1, c2) <dml_values_parameter>; INSERT INTO t1 (c0, c1, c2) <dml_values_parameter>; SELECT /*+ USE_COLUMN_TABLE(t0) */ t0.c0, t0.c1, t0.c2 FROM t0 WHERE EXISTS ( SELECT /*+ USE_COLUMN_TABLE(t1) */ 1 FROM t1 WHERE t0.c1 <comparison_operator_replace> t1.c1 AND (ROUND(t1.c2 <arithmetic_operator_replace> 0.5, 0)) = ((t0.c0 || '') <logical_operator_replace> t0.c2) ) GROUP BY t0.c0, t0.c1, t0.c2 HAVING t0.c1 <comparison_operator_replace> 0 ORDER BY t0.c1 <order_by_replace> LIMIT <limit_parameter>;",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<constraint_enforce_replace>",
        "<dml_values_parameter>",
        "<comparison_operator_replace>",
        "<arithmetic_operator_replace>",
        "<logical_operator_replace>",
        "<order_by_replace>",
        "<limit_parameter>"
    ],
    "Affected Elements": "ROUND function, EXISTS clause, GROUP BY, HAVING, ORDER BY",
    "Root Cause Analysis": "The use of the ROUND function in combination with the AND operator and the concatenation operator (||) leads to unexpected behavior and results, which are not consistent with the expected output from MySQL and TiDB."
}