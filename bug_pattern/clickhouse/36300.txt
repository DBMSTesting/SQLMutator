{
    "pattern": "CREATE <object_type_parameter> IF NOT EXISTS test ON cluster <cluster_parameter>; CREATE TABLE test.user_local ON cluster <cluster_parameter> (id <int_type_parameter>, name <string_type_parameter>, age <int_type_parameter>) ENGINE = <engine_parameter> ORDER BY name SETTINGS <settings_parameter>; CREATE TABLE test.user_all ON cluster <cluster_parameter> AS test.user_local ENGINE = <engine_parameter> ('<cluster_parameter>', 'test', 'user_local', <rand_parameter>); CREATE TABLE test.event ON cluster <cluster_parameter> (id <int_type_parameter>, user_id <int_type_parameter>, content <string_type_parameter>, created_time <datetime_type_parameter>) ENGINE = <engine_parameter> ORDER BY user_id SETTINGS <settings_parameter>; INSERT INTO test.user_local (id, name, age) VALUES (<id_parameter>, '<name_parameter>', <age_parameter>); INSERT INTO test.event (id, user_id, content, created_time) VALUES(<id_parameter>, <user_id_parameter>, '<content_parameter>', '<datetime_parameter>'); SELECT u.name <alias_parameter>, <age_group_parameter> AS age_group FROM test.user_all u <join_operator_replace> test.event e ON u.id <comparison_operator_replace> e.user_id WHERE (u.age <comparison_operator_parameter> <age_min_parameter> AND u.age <comparison_operator_parameter> <age_max_parameter>) AND e.created_time <comparison_operator_parameter> '<date_parameter>';",
    "applied_rules": [
        "<object_type_parameter>",
        "<cluster_parameter>",
        "<int_type_parameter>",
        "<string_type_parameter>",
        "<engine_parameter>",
        "<settings_parameter>",
        "<rand_parameter>",
        "<id_parameter>",
        "<name_parameter>",
        "<age_parameter>",
        "<user_id_parameter>",
        "<content_parameter>",
        "<datetime_parameter>",
        "<alias_parameter>",
        "<age_group_parameter>",
        "<join_operator_replace>",
        "<comparison_operator_replace>",
        "<age_min_parameter>",
        "<age_max_parameter>",
        "<date_parameter>",
        "<comparison_operator_parameter>"
    ],
    "Affected Elements": "SELECT clause with non-constant column; LEFT JOIN; WHERE clause with conditions on joined tables",
    "Root Cause Analysis": "The query attempts to select a constant value (age_group) from a distributed table while also applying conditions that require that the value be constant in the result, leading to a conversion error."
}