{
    "pattern": "CREATE TABLE test1 (id <data_type_parameter>, code <data_type_parameter>) engine = <engine_parameter> ORDER BY <order_by_parameter>; CREATE TABLE test2 (id <data_type_parameter>, code <data_type_parameter>, test1_id <data_type_parameter>, test3_id <data_type_parameter>) engine = <engine_parameter> ORDER BY <order_by_parameter>; CREATE TABLE test3 (id <data_type_parameter>, code <data_type_parameter>) engine = <engine_parameter> ORDER BY <order_by_parameter>; INSERT INTO test1 (id, code) SELECT <top_parameter> <number_parameter>, <toString_function_parameter> FROM <system_parameter>; INSERT INTO test2 (id, code, test1_id, test3_id) SELECT <top_parameter> <number_parameter>, <toString_function_parameter>, <number_parameter>, <number_parameter> FROM <system_parameter>; INSERT INTO test3 (id, code) SELECT <top_parameter> <number_parameter>, <toString_function_parameter> FROM <system_parameter>; SELECT <count_function_parameter>(test2.id) FROM test1, test2, test3 WHERE test1.code IN (<in_values_parameter>) AND test2.test1_id = test1.id AND test2.test3_id = test3.id;",
    "applied_rules": [
        "<data_type_parameter>",
        "<engine_parameter>",
        "<order_by_parameter>",
        "<top_parameter>",
        "<number_parameter>",
        "<toString_function_parameter>",
        "<system_parameter>",
        "<count_function_parameter>",
        "<in_values_parameter>"
    ],
    "Affected Elements": "COMMA JOIN, IN operator",
    "Root Cause Analysis": "The use of COMMA JOIN with the IN operator leads to excessive memory usage due to the way the query is executed and how joins are processed."
}