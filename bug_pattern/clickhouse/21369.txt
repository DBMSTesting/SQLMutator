{
    "pattern": "CREATE TABLE summing_table (<some_name_parameter> <string_parameter>, <user_id_parameter> <uint64_parameter>, <amount_parameter> <int64_parameter>, <currency_parameter> <string_parameter>) ENGINE = <engine_parameter> ORDER BY (<some_name_parameter>); CREATE VIEW rates AS SELECT <from_currency_parameter> as <from_currency_alias>, <to_currency_parameter> as <to_currency_alias>, <rate_parameter> as <rate_alias>; CREATE VIEW agg_view AS SELECT summing_table.<some_name_parameter> as <some_name_alias>, dictGet(<dict_parameter>, <field1_parameter>, tuple(summing_table.<some_name_parameter>)) as <field1_alias>, dictGet(<dict_parameter>, <field2_parameter>, tuple(summing_table.<some_name_parameter>)) as <field2_alias>, rates.<rate_parameter> as <rate_alias> FROM summing_table <join_operator_replace> rates ON rates.<from_currency_parameter> = summing_table.<currency_parameter>; INSERT INTO summing_table VALUES (<value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>); INSERT INTO summing_table VALUES (<value_parameter>, <value_parameter>, <value_parameter>, <value_parameter>); SELECT * FROM agg_view; SELECT <field2_parameter> FROM agg_view WHERE <field1_parameter> = <value_parameter>;",
    "applied_rules": [
        "<some_name_parameter>",
        "<string_parameter>",
        "<user_id_parameter>",
        "<uint64_parameter>",
        "<amount_parameter>",
        "<int64_parameter>",
        "<currency_parameter>",
        "<engine_parameter>",
        "<from_currency_parameter>",
        "<to_currency_parameter>",
        "<rate_parameter>",
        "<dict_parameter>",
        "<field1_parameter>",
        "<field2_parameter>",
        "<value_parameter>",
        "<join_operator_replace>",
        "<some_name_alias>",
        "<field1_alias>",
        "<field2_alias>",
        "<rate_alias>",
        "<from_currency_alias>",
        "<to_currency_alias>",
        "<field2_parameter>",
        "<field1_parameter>"
    ],
    "Affected Elements": "dictGet function usage with incorrect argument type",
    "Root Cause Analysis": "The function dictGet is being called with a non-constant string type as the first argument instead of a constant value, leading to an exception."
}