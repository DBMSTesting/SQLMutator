{
    "pattern": "CREATE TABLE t1 (f1 Int32, f2 Map(LowCardinality(String),LowCardinality(String)), f3 Map(String,String), f4 Map(Int32,Int32)) ENGINE=<object_dependency_replace> AS SELECT <select_parameter> as f1, map(<numeric_function_parameter>,<numeric_function_parameter>) as f2, f2 as f3, f2 as f4 FROM <object_dependency_replace>; SET <set_parameter>=10; SELECT <select_parameter>, f2['<string_parameter>'] AS LowCardinality, count() FROM t1 GROUP BY 1, 2 ORDER BY 1, 2 FORMAT <format_parameter>; SELECT <select_parameter>, f3['<string_parameter>'] AS String, count() FROM t1 GROUP BY 1, 2 ORDER BY 1, 2 FORMAT <format_parameter>; SELECT <select_parameter>, f4[<numeric_parameter>] AS Int32, count() FROM t1 GROUP BY 1, 2 ORDER BY 1, 2 FORMAT <format_parameter>;",
    "applied_rules": [
        "<object_dependency_replace>",
        "<select_parameter>",
        "<numeric_function_parameter>",
        "<set_parameter>",
        "<string_parameter>",
        "<numeric_parameter>",
        "<format_parameter>"
    ],
    "Affected Elements": "SELECT, GROUP BY, count()",
    "Root Cause Analysis": "The issue arises from the grouping behavior when extracting values from a Map column, leading to unexpected duplicate rows for empty values."
}