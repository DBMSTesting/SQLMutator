{
    "pattern": "CREATE TABLE default.bug_repro_local ( `id` String <dml_values_parameter>, `attributes` Map(LowCardinality(String), String) <dml_values_parameter> ) ENGINE = <object_dependency_replace> ORDER BY (id); CREATE TABLE default.bug_repro ( `id` String <dml_values_parameter>, `attributes` Map(LowCardinality(String), String) <dml_values_parameter> ) ENGINE = <object_dependency_replace>('all-shards', 'default', 'bug_repro_local', <dml_values_parameter>()); SELECT if(<numeric_function_parameter>, attributes, <map_parameter>) FROM default.bug_repro LIMIT <numeric_function_parameter> SETTINGS <setting_parameter>; SELECT if(<numeric_function_parameter>, attributes, <map_parameter>) FROM default.bug_repro LIMIT <numeric_function_parameter> SETTINGS <setting_parameter>; SELECT if(<numeric_function_parameter>, attributes, <map_parameter>) FROM default.bug_repro_local LIMIT <numeric_function_parameter> SETTINGS <setting_parameter>;",
    "applied_rules": [
        "<dml_values_parameter>",
        "<object_dependency_replace>",
        "<numeric_function_parameter>",
        "<map_parameter>",
        "<setting_parameter>"
    ],
    "Affected Elements": "if, Map, Distributed table, allow_experimental_analyzer",
    "Root Cause Analysis": "The issue arises when using the 'if' function with a Map type in a distributed context when the experimental analyzer is enabled, leading to a column not found error."
}