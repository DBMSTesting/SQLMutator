{
    "pattern": "CREATE TABLE test1 (pt <string_parameter>, brand_name <string_parameter>, total_indirect_order_cnt <float_parameter>, total_indirect_gmv <float_parameter>) ENGINE = <engine_parameter>; CREATE TABLE test2 (pt <string_parameter>, brand_name <string_parameter>, exposure_uv <float_parameter>, click_uv <float_parameter>) ENGINE = <engine_parameter>; INSERT INTO test1 (pt, brand_name, total_indirect_order_cnt, total_indirect_gmv) VALUES (<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>), (<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>), (<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>), (<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>), (<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>), (<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>), (<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>), (<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>), (<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>); INSERT INTO test2 (pt, brand_name, exposure_uv, click_uv) VALUES (<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>), (<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>), (<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>), (<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>), (<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>), (<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>), (<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>), (<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>), (<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>); SELECT * FROM (SELECT m0.pt AS pt, m0.uvctr AS uvctr, ROUND(m1.uvctr, 4) AS uvctr_hb_last_value, ROUND(m2.uvctr, 4) AS uvctr_tb_last_value FROM (SELECT m0.pt AS pt, COALESCE(m0.brand_name, m1.brand_name) AS brand_name, IF(ISNaN(<numeric_function_parameter> / <numeric_function_parameter>) OR ISINFINITE(<numeric_function_parameter> / <numeric_function_parameter>), NULL, <numeric_function_parameter> / <numeric_function_parameter>) AS uvctr FROM (SELECT pt AS pt, brand_name AS brand_name, exposure_uv AS exposure_uv, click_uv AS click_uv FROM test2 WHERE pt = <where_parameter>) m0 FULL JOIN (SELECT pt AS pt, brand_name AS brand_name, total_indirect_order_cnt AS total_indirect_order_cnt, total_indirect_gmv AS total_indirect_gmv FROM test1 WHERE pt = <where_parameter>) m1 ON m0.brand_name = m1.brand_name AND m0.pt = m1.pt) m0 LEFT JOIN (SELECT m0.pt AS pt, IF(ISNaN(<numeric_function_parameter> / <numeric_function_parameter>) OR ISINFINITE(<numeric_function_parameter> / <numeric_function_parameter>), NULL, <numeric_function_parameter> / <numeric_function_parameter>) AS uvctr, COALESCE(m0.brand_name, m1.brand_name) AS brand_name, exposure_uv AS exposure_uv, click_uv FROM (SELECT pt AS pt, brand_name AS brand_name, exposure_uv AS exposure_uv, click_uv AS click_uv FROM test2 WHERE pt = <where_parameter>) m0 FULL JOIN (SELECT pt AS pt, brand_name AS brand_name, total_indirect_order_cnt AS total_indirect_order_cnt, total_indirect_gmv AS total_indirect_gmv FROM test1 WHERE pt = <where_parameter>) m1 ON m0.brand_name = m1.brand_name AND m0.pt = m1.pt) m1 ON m0.brand_name = m1.brand_name AND m0.pt = m1.pt LEFT JOIN (SELECT m0.pt AS pt, IF(ISNaN(<numeric_function_parameter> / <numeric_function_parameter>) OR ISINFINITE(<numeric_function_parameter> / <numeric_function_parameter>), NULL, <numeric_function_parameter> / <numeric_function_parameter>) AS uvctr, COALESCE(m0.brand_name, m1.brand_name) AS brand_name, exposure_uv AS exposure_uv, click_uv FROM (SELECT pt AS pt, brand_name AS brand_name, exposure_uv AS exposure_uv, click_uv AS click_uv FROM test2 WHERE pt = <where_parameter>) m0 FULL JOIN (SELECT pt AS pt, brand_name AS brand_name, total_indirect_order_cnt AS total_indirect_order_cnt, total_indirect_gmv AS total_indirect_gmv FROM test1 WHERE pt = <where_parameter>) m1 ON m0.brand_name = m1.brand_name AND m0.pt = m1.pt) m2 ON m0.brand_name = m2.brand_name AND m0.pt = m2.pt) c0 ORDER BY pt <order_by_replace>, uvctr <order_by_replace>;",
    "applied_rules": [
        "<string_parameter>",
        "<float_parameter>",
        "<dml_values_parameter>",
        "<where_parameter>",
        "<numeric_function_parameter>",
        "<order_by_replace>"
    ],
    "Affected Elements": "FULL JOIN, LEFT JOIN, COALESCE, ISNaN, ISINFINITE",
    "Root Cause Analysis": "The incorrect sorting result is likely due to the ordering of NULL values and the handling of calculations involving NULLs and infinite values in the JOINs."
}