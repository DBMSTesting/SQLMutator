{
    "pattern": "SELECT <select_parameter> FROM (SELECT <select_parameter> FROM cdp.recommendation_metadata_prod <join_operator_replace> (SELECT recommend_id AS uuid, sum(sends) AS sends, sum(opens) AS opens, sum(clicks) AS clicks, sum(unique_clicks) AS unique_clicks, sum(unique_opens) AS unique_opens, sum(orders) AS orders, sum(revenue) AS revenue, sum(activations) AS activations, sum(revenue_gmv) AS revenue_gmv, sum(revenue_cmv) AS revenue_cmv, sum(revenue_nmv) AS revenue_nmv, sum(orders_nmv) AS orders_nmv, sum(orders_cmv) AS orders_cmv FROM (SELECT date_key, recommend_id, sends, opens, clicks, unique_clicks, unique_opens, orders, transaction_revenue AS revenue, activations, transaction_gmv AS revenue_gmv, cmv AS revenue_cmv, nmv AS revenue_nmv, net_orders AS orders_nmv, confirmed_orders AS orders_cmv FROM cdp.view_campaign_performance WHERE date_key <between_parameter> AND isNotNull(recommend_id) AND notEmpty(recommend_id) UNION ALL SELECT date_key, recommend_id, sends, opens, clicks, unique_clicks, unique_opens, total_orders AS orders, total_revenue AS revenue, activations, 0.0 AS revenue_gmv, 0.0 AS revenue_cmv, 0.0 AS revenue_nmv, 0 AS orders_nmv, 0 AS orders_cmv FROM cdp.realtime_campaign_performance WHERE date_key <between_parameter> AND isNotNull(recommend_id) AND notEmpty(recommend_id)) GROUP BY uuid) USING (uuid) ORDER BY event_time <order_operator_replace> LIMIT <limit_parameter> BY uuid) ORDER BY created_at <order_operator_replace> LIMIT <limit_parameter> OFFSET <offset_parameter>;",
    "applied_rules": [
        "<select_parameter>",
        "<join_operator_replace>",
        "<between_parameter>",
        "<order_operator_replace>",
        "<limit_parameter>",
        "<offset_parameter>"
    ],
    "Affected Elements": "WHERE clause, GLOBAL JOIN",
    "Root Cause Analysis": "The inclusion of WHERE 1=1 may unintentionally modify the join condition or filtering logic, leading to no results when combined with the left join."
}