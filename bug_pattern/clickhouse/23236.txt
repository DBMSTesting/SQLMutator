{
    "pattern": "DROP TABLE IF EXISTS <object_dependency_replace>; DROP DICTIONARY IF EXISTS <object_dependency_replace>; CREATE TABLE <object_dependency_replace> ENGINE = <table_engine_parameter> ORDER BY <order_parameter> AS SELECT <function_category_parameter> AS <alias_parameter>, <function_category_parameter> AS <alias_parameter> FROM <table_parameter>; CREATE DICTIONARY <object_dependency_replace> (<k_parameter> <data_type_parameter>, <v_parameter> <data_type_parameter>) PRIMARY KEY <k_parameter> SOURCE(<source_parameter>) LIFETIME(<lifetime_parameter>) LAYOUT(<layout_parameter>); CREATE DICTIONARY <object_dependency_replace> (<k_parameter> <data_type_parameter>, <v_parameter> <data_type_parameter>) PRIMARY KEY <v_parameter> SOURCE(<source_parameter>) LIFETIME(<lifetime_parameter>) LAYOUT(<layout_parameter>); SELECT <select_parameter> FROM <table_parameter>; SELECT <select_parameter> FROM <table_parameter>; SELECT <v_parameter>, <k_parameter> FROM <table_parameter>;",
    "applied_rules": [
        "<object_dependency_replace>",
        "<table_engine_parameter>",
        "<order_parameter>",
        "<function_category_parameter>",
        "<alias_parameter>",
        "<table_parameter>",
        "<k_parameter>",
        "<data_type_parameter>",
        "<v_parameter>",
        "<source_parameter>",
        "<lifetime_parameter>",
        "<layout_parameter>",
        "<select_parameter>"
    ],
    "Affected Elements": "CREATE DICTIONARY, PRIMARY KEY, SELECT",
    "Root Cause Analysis": "The issue arises from the change in handling key columns order in the dictionary definitions after the upgrade, leading to failures in querying non-first key columns."
}