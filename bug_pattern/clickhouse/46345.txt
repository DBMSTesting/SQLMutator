{
    "pattern": "DROP TABLE IF EXISTS test; CREATE TABLE test(`id` UInt32, `nested.data` Array(UInt32)) ENGINE = <engine_type_parameter> ORDER BY <order_by_parameter>; INSERT INTO test (<dml_values_parameter>) SELECT <select_parameter> FROM <source_parameter> WHERE <where_parameter>; ALTER TABLE test ADD COLUMN `nested.data_dict` Array(UInt32); ALTER TABLE test UPDATE `nested.data_dict` = `nested.data` WHERE <dml_condition_replace>; SELECT <select_parameter> FROM test LIMIT <limit_parameter>;",
    "applied_rules": [
        "<engine_type_parameter>",
        "<order_by_parameter>",
        "<dml_values_parameter>",
        "<select_parameter>",
        "<source_parameter>",
        "<where_parameter>",
        "<dml_condition_replace>",
        "<limit_parameter>"
    ],
    "Affected Elements": "`nested.data`, `nested.data_dict`, ALTER TABLE, SELECT",
    "Root Cause Analysis": "The bug is likely due to the handling of nested data structures in the database engine, resulting in corrupted data during the update operation."
}