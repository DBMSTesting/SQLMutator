{
    "pattern": "CREATE TABLE foo (server_date <date_type_parameter>, dimension_1 <string_type_parameter>, metric_1 <uint32_type_parameter>) ENGINE = <engine_type_parameter> PARTITION BY <partition_function_parameter>(server_date) ORDER BY (server_date); CREATE TABLE bar (server_date <date_type_parameter>, dimension_1 <string_type_parameter>, metric_2 <uint32_type_parameter>) ENGINE = <engine_type_parameter> PARTITION BY <partition_function_parameter>(server_date) ORDER BY (server_date); INSERT INTO foo <dml_values_parameter>; INSERT INTO bar <dml_values_parameter>; SELECT dimension_1, sum_metric_1, sum_metric_2 FROM ( SELECT dimension_1, sum(<aggregation_function_parameter>) AS sum_metric_1 FROM foo GROUP BY dimension_1 <group_by_parameter> ) AS subquery_1 <join_operator_replace> ( SELECT dimension_1, sum(<aggregation_function_parameter>) AS sum_metric_2 FROM bar GROUP BY dimension_1 <group_by_parameter> ) AS subquery_2 USING (dimension_1) WHERE sum_metric_2 < <comparison_operator_replace> 20 ORDER BY dimension_1 <order_by_parameter>;",
    "applied_rules": [
        "<date_type_parameter>",
        "<string_type_parameter>",
        "<uint32_type_parameter>",
        "<engine_type_parameter>",
        "<partition_function_parameter>",
        "<dml_values_parameter>",
        "<aggregation_function_parameter>",
        "<group_by_parameter>",
        "<join_operator_replace>",
        "<comparison_operator_replace>",
        "<order_by_parameter>"
    ],
    "Affected Elements": "WITH TOTALS, ALL FULL OUTER JOIN, WHERE clause",
    "Root Cause Analysis": "The issue seems to stem from the interaction of the WHERE clause with the WITH TOTALS clause, resulting in the TOTALS row not being included when certain conditions are applied."
}