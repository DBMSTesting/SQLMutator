{
    "pattern": "CREATE TABLE test1 (id <data_type_parameter>, date <data_type_parameter>) ENGINE = <engine_parameter>(date, (id, date), <number_parameter>); CREATE TABLE test2 (id <data_type_parameter>, date <data_type_parameter>) ENGINE = <engine_parameter>(date, (id, date), <number_parameter>); CREATE VIEW test_stats AS SELECT <column_parameter>, <column_parameter>, <column_parameter>, <function_parameter>(<column_parameter>, <column_parameter>) AS <alias_parameter> FROM (SELECT * FROM (SELECT 'test1' AS <alias_parameter>, <number_parameter> AS <column_parameter>, <function_parameter>() AS <column_parameter> FROM <schema_parameter>.test1 UNION ALL SELECT 'test2' AS <alias_parameter>, <number_parameter> AS <column_parameter>, <function_parameter>() AS <column_parameter> FROM <schema_parameter>.test2)); INSERT INTO test1 <dml_values_parameter>; INSERT INTO test1 <dml_conditions_parameter>; CREATE VIEW test_stats AS SELECT <column_parameter> FROM (SELECT <column_parameter> FROM (SELECT <function_parameter>() AS <column_parameter> FROM <schema_parameter>.test1 UNION ALL SELECT <function_parameter>() AS <column_parameter> FROM <schema_parameter>.test2)); INSERT INTO test1 <dml_conditions_parameter>;",
    "applied_rules": [
        "<data_type_parameter>",
        "<engine_parameter>",
        "<number_parameter>",
        "<column_parameter>",
        "<function_parameter>",
        "<alias_parameter>",
        "<schema_parameter>",
        "<dml_values_parameter>",
        "<dml_conditions_parameter>"
    ],
    "Affected Elements": "CREATE VIEW, UNION ALL, INSERT INTO",
    "Root Cause Analysis": "The view definition includes renamed columns that cause conflicts when inserting into the base table, leading to exceptions about missing columns."
}