{
    "pattern": "CREATE TABLE test (key <data_type_parameter>, value <data_type_parameter>) ENGINE=<engine_parameter> ORDER BY key; INSERT INTO test <dml_values_parameter>; CREATE DICTIONARY test_dict (key <data_type_parameter>, value <data_type_parameter>) PRIMARY KEY key SOURCE(<source_parameter>) LIFETIME(<lifetime_parameter>) LAYOUT(<layout_parameter>); SELECT test.key FROM test <join_operator_replace> test_dict ON test.key <comparison_operator_replace> test_dict.key GROUP BY test.key LIMIT <limit_parameter>; SELECT test.key FROM test <join_operator_replace> test_dict ON test.key = toUInt64(test_dict.key) GROUP BY test.key LIMIT <limit_parameter>;",
    "applied_rules": [
        "<data_type_parameter>",
        "<engine_parameter>",
        "<dml_values_parameter>",
        "<source_parameter>",
        "<lifetime_parameter>",
        "<layout_parameter>",
        "<join_operator_replace>",
        "<comparison_operator_replace>",
        "<limit_parameter>"
    ],
    "Affected Elements": "JOIN clause, GROUP BY clause, CAST function",
    "Root Cause Analysis": "The performance degradation when not using an explicit cast is likely due to type mismatches causing inefficient join operations."
}