{
    "pattern": "CREATE TABLE bloom_filter_idx_good ( `u64` <type_parameter>, `i32` <type_parameter>, `f64` <type_parameter>, `d` <type_parameter>, `s` <type_parameter>, `e` <type_parameter>, `dt` <type_parameter>, INDEX bloom_filter_a <type_parameter> TYPE bloom_filter(<dml_values_parameter>) GRANULARITY <dml_values_parameter> ) ENGINE = <engine_parameter> ORDER BY `u64` SETTINGS index_granularity = <dml_values_parameter>; CREATE TABLE bloom_filter_idx_bad ( `u64` <type_parameter>, `i32` <type_parameter>, `f64` <type_parameter>, `d` <type_parameter>, `s` <type_parameter>, `e` <type_parameter>, `dt` <type_parameter>, INDEX bloom_filter_a <type_parameter> TYPE bloom_filter(<dml_values_parameter>) GRANULARITY <dml_values_parameter> ) ENGINE = <engine_parameter> ORDER BY `u64` SETTINGS index_granularity = <dml_values_parameter>;",
    "applied_rules": [
        "<type_parameter>",
        "<dml_values_parameter>",
        "<engine_parameter>"
    ],
    "Affected Elements": "bloom_filter(0., 1.)",
    "Root Cause Analysis": "The use of floating-point literals (0.0, 1.0) in the bloom filter index definition is causing an assertion failure due to expected integer types."
}