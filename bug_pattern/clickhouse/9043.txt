{
    "pattern": "CREATE TABLE local_table_1(id <dml_values_parameter>) ENGINE = <engine_parameter>('clickhouse/tables/{shard}/default/local_table_1', '{replica}') ORDER BY (id); CREATE TABLE local_table_2(id <dml_values_parameter>) ENGINE = <engine_parameter>('clickhouse/tables/{shard}/default/local_table_2', '{replica}') ORDER BY (id); CREATE TABLE local_table_merged (id <dml_values_parameter>) ENGINE = <engine_parameter>('default', 'local_table_1|local_table_2'); CREATE TABLE distributed_table_1 (id <dml_values_parameter>) ENGINE = <engine_parameter>('{cluster}', default, local_table_1); CREATE TABLE distributed_table_2 (id <dml_values_parameter>) ENGINE = <engine_parameter>('{cluster}', default, local_table_2); CREATE TABLE distributed_table_merged (id <dml_values_parameter>) ENGINE = <engine_parameter>('default', 'distributed_table_1|distributed_table_2'); SELECT <select_parameter> FROM distributed_table_merged;",
    "applied_rules": [
        "<dml_values_parameter>",
        "<engine_parameter>",
        "<select_parameter>"
    ],
    "Affected Elements": "SELECT clause with constant values, Distributed table merging",
    "Root Cause Analysis": "The issue arises from the non-constant nature of the SELECT statement when executed against the merged distributed table, which is a change in behavior in the newer version."
}