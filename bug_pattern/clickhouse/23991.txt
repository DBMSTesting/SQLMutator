{
    "pattern": "CREATE TABLE ex_h_member_tags (member_code <string_parameter>, member_tags <array_parameter> DEFAULT <default_value_parameter>, create_date <nullable_parameter>, create_time <nullable_parameter>, update_date <nullable_parameter>, update_time <nullable_parameter>, insert_date <date_parameter> DEFAULT <function_parameter>(<function_parameter>)) ENGINE = <engine_parameter> PARTITION BY <function_parameter>(partition_date) ORDER BY member_code SETTINGS <setting_parameter> = <numeric_parameter>; INSERT INTO <dml_values_parameter> SELECT <select_parameter> FROM <object_dependency_replace> WHERE member_code <comparison_operator_replace> (SELECT member_code FROM <object_dependency_replace>);",
    "applied_rules": [
        "<string_parameter>",
        "<array_parameter>",
        "<default_value_parameter>",
        "<nullable_parameter>",
        "<date_parameter>",
        "<function_parameter>",
        "<engine_parameter>",
        "<setting_parameter>",
        "<numeric_parameter>",
        "<dml_values_parameter>",
        "<select_parameter>",
        "<object_dependency_replace>",
        "<comparison_operator_replace>"
    ],
    "Affected Elements": "INSERT INTO, SELECT, WHERE, NOT IN",
    "Root Cause Analysis": "The issue may arise from the use of the NOT IN clause, which can lead to unexpected results if the subquery returns NULL values, potentially causing data to be omitted during the insert operation."
}