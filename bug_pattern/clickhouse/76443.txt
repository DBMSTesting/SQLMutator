{
    "pattern": "DROP TABLE IF EXISTS <table_name_parameter>; DROP TABLE IF EXISTS <table_name_parameter>; DROP TABLE IF EXISTS <table_name_parameter>; CREATE TABLE <table_name_parameter> ( `account_id` <type_parameter>, `event_type` <type_parameter>, `subscriber_id` <type_parameter>, `properties` <type_parameter>, `created` <type_parameter> ) ENGINE = <engine_parameter>('localhost:19092', 'topic', 'custom_events_cg11', 'JSONEachRow') SETTINGS <setting_parameter> = <value_parameter>; CREATE TABLE <table_name_parameter> ( `account_id` <type_parameter> CODEC(<codec_parameter>, <codec_parameter>(1)), `event_type` <type_parameter> CODEC(<codec_parameter>(1)), `subscriber_id` <type_parameter> CODEC(<codec_parameter>, <codec_parameter>(1)), `properties` <type_parameter>, `properties_map` <map_type_parameter> CODEC(<codec_parameter>(1)), `created` <type_parameter> CODEC(<codec_parameter>, <codec_parameter>(1)) ) ENGINE = <engine_parameter> PRIMARY KEY (<key_parameter>) ORDER BY (<order_parameter>) SETTINGS <setting_parameter> = <value_parameter>; CREATE MATERIALIZED VIEW <view_name_parameter> TO <table_name_parameter> ( `account_id` <type_parameter>, `event_type` <type_parameter>, `subscriber_id` <type_parameter>, `properties` <type_parameter>, `properties_map` <map_type_parameter>, `created` <type_parameter> ) AS SELECT <select_parameter>, <select_parameter>, <select_parameter>, <select_parameter>, JSONExtract(<select_parameter>, <string_parameter>), <select_parameter> FROM <table_name_parameter>; SELECT DISTINCT <select_parameter>, <select_parameter>, JSONExtract(<select_parameter>, <string_parameter>) FROM <table_name_parameter>;",
    "applied_rules": [
        "<table_name_parameter>",
        "<type_parameter>",
        "<engine_parameter>",
        "<setting_parameter>",
        "<value_parameter>",
        "<codec_parameter>",
        "<key_parameter>",
        "<order_parameter>",
        "<view_name_parameter>",
        "<select_parameter>",
        "<string_parameter>",
        "<map_type_parameter>"
    ],
    "Affected Elements": "JSONExtract function, Map data type, Kafka engine, Materialized view",
    "Root Cause Analysis": "The issue arises from the incorrect handling of JSON data types in the Kafka engine, leading to the extraction function returning an empty Map instead of the expected values."
}