{
    "pattern": "SELECT <aggregation_function_parameter> AS c, <group_by_parameter>, <function_parameter>(r, <key_parameter> = 0) AS x0, <function_parameter>(r, <key_parameter> = 1) AS x1, <function_parameter>(r, <key_parameter> = 2) AS x2 FROM (SELECT <function_parameter>(toString(number)) % <numeric_parameter> AS group_key, number % <numeric_parameter> AS key, number AS r FROM numbers(<numeric_parameter>)) GROUP BY <group_by_parameter> HAVING (c = <numeric_parameter>) AND (x0 <comparison_operator_replace> 0) AND (x1 <comparison_operator_replace> 0) AND (x2 <comparison_operator_replace> 0) ORDER BY <group_by_parameter> <order_by_parameter> LIMIT <numeric_parameter> SETTINGS <setting_parameter> = <numeric_parameter>",
    "applied_rules": [
        "<aggregation_function_parameter>",
        "<function_parameter>",
        "<group_by_parameter>",
        "<key_parameter>",
        "<numeric_parameter>",
        "<comparison_operator_replace>",
        "<order_by_parameter>",
        "<setting_parameter>"
    ],
    "Affected Elements": "COUNT(), anyIf(), HAVING clause",
    "Root Cause Analysis": "The issue seems to be related to the interaction of the external aggregation and JIT compilation, causing inconsistent results upon multiple executions."
}