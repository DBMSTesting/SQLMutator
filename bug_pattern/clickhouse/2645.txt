{
    "pattern": "CREATE TABLE vme4 ( date <date_parameter>, datetime <datetime_parameter>, request_method <enum_parameter>, request_host <string_parameter>, server <string_parameter>, user_agent <string_parameter>, clientipv4 <nullable_parameter>, clientipv6 <nullable_parameter>, backend <string_parameter>, response_code <uint16_parameter>, mime <string_parameter>, response_time <uint32_parameter>, response_size <uint32_parameter>, request_type <nullable_parameter>, request_asset <nullable_parameter>, request_file <nullable_parameter>, request_uri <nullable_parameter>, stream_protocol <nullable_parameter>, video_bitrate <nullable_parameter>, is_hit <nullable_parameter>, geoip_geoname_id <nullable_parameter>, hub <string_parameter> ) ENGINE = <engine_parameter> PARTITION BY date ORDER BY (date, user_agent) SETTINGS index_granularity = <index_granularity_parameter>; DROP TABLE vmeagg; CREATE TABLE vmeagg ( date <date_parameter>, datetime <datetime_parameter>, request_method <enum_parameter>, request_host <string_parameter>, server <string_parameter>, user_agent <string_parameter>, clientipv4_state <aggregate_function_parameter>, clientipv6_state <aggregate_function_parameter>, backend <string_parameter>, response_code <uint16_parameter>, mime <string_parameter>, response_time_td <aggregate_function_parameter>, response_size_td <aggregate_function_parameter>, response_time_tot <uint64_parameter>, response_size_tot <uint64_parameter>, request_type <enum_parameter>, request_asset <string_parameter>, stream_protocol <enum_parameter>, video_bitrate <uint32_parameter>, is_hit <uint8_parameter>, geoip_geoname_id <uint32_parameter>, count <uint32_parameter> ) ENGINE = <engine_parameter> PARTITION BY date ORDER BY (date, datetime, request_method, response_code, backend, user_agent, server, request_host, mime, request_type, request_asset, stream_protocol, video_bitrate, is_hit, geoip_geoname_id) SETTINGS index_granularity = <index_granularity_parameter>; INSERT INTO vmeagg SELECT date, toStartOfMinute(datetime), request_method, request_host, server, user_agent, uniqCombinedState(clientipv4), uniqCombinedState(clientipv6), backend, response_code, mime, quantilesTDigestState(0.5,0.9,0.99)(response_time), quantilesTDigestState(0.5,0.9,0.99)(response_size), sum(response_time), sum(response_size), request_type, request_asset, stream_protocol, video_bitrate, is_hit, geoip_geoname_id, count(*) FROM vme4 WHERE toStartOfMinute(datetime) = <where_parameter> AND geoip_geoname_id IS NOT NULL AND video_bitrate IS NOT NULL GROUP BY date, toStartOfMinute(datetime), request_method, request_host, server, user_agent, backend, response_code, mime, request_type, request_asset, stream_protocol, video_bitrate, is_hit, geoip_geoname_id;",
    "applied_rules": [
        "<date_parameter>",
        "<datetime_parameter>",
        "<enum_parameter>",
        "<string_parameter>",
        "<nullable_parameter>",
        "<uint16_parameter>",
        "<uint32_parameter>",
        "<uint64_parameter>",
        "<aggregate_function_parameter>",
        "<engine_parameter>",
        "<index_granularity_parameter>",
        "<where_parameter>",
        "<comparison_operator_replace>"
    ],
    "Affected Elements": "SummingMergeTree, AggregateFunction, INSERT, GROUP BY",
    "Root Cause Analysis": "The error is caused by a mismatch in the number of rows for the columns being merged, which often indicates an issue with the aggregation functions or the structure of the tables involved."
}