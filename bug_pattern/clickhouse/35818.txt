{
    "pattern": "CREATE TABLE IF NOT EXISTS default.test (<object_dependency_replace>) ENGINE = <engine_parameter> PARTITION BY (<partition_parameter>) ORDER BY (<order_parameter>); CREATE TABLE IF NOT EXISTS default.test2 (<object_dependency_replace>) ENGINE = <engine_parameter> PARTITION BY <tuple_parameter> ORDER BY (<order_parameter>); INSERT INTO default.test(<dml_values_parameter>) VALUES (<dml_values_parameter>), (<dml_values_parameter>); INSERT INTO default.test2(<dml_values_parameter>) VALUES (<dml_values_parameter>), (<dml_values_parameter>); CREATE ROW POLICY OR REPLACE policy_test_default ON default.test, default.test2 USING <row_policy_condition_parameter> TO ALL EXCEPT usr_test; CREATE ROW POLICY OR REPLACE policy_test ON default.test, default.test2 USING <row_policy_condition_parameter> TO usr_test; SELECT <select_parameter> FROM default.test; SELECT <select_parameter> FROM default.test GROUP BY <group_by_parameter>; SELECT <select_parameter> FROM default.test WHERE <where_parameter> GROUP BY <group_by_parameter>;",
    "applied_rules": [
        "<object_dependency_replace>",
        "<engine_parameter>",
        "<partition_parameter>",
        "<order_parameter>",
        "<dml_values_parameter>",
        "<row_policy_condition_parameter>",
        "<select_parameter>",
        "<where_parameter>",
        "<group_by_parameter>"
    ],
    "Affected Elements": "GROUP BY clause",
    "Root Cause Analysis": "The row policy is not being applied correctly due to the use of GROUP BY on a partitioned column, leading to unexpected visibility of records."
}