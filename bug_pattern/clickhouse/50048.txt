{
    "pattern": "SET <set_parameter>; CREATE TABLE t0 (c2 <string_type_parameter>, PRIMARY KEY(c2)) ENGINE = <engine_parameter>; CREATE TABLE t1 (vkey <uint32_type_parameter>, c8 <string_type_parameter>, PRIMARY KEY(vkey)) ENGINE = <engine_parameter>; CREATE VIEW t4 AS SELECT ref_1.vkey AS c_2_c48_2 FROM t0 AS ref_0 <join_operator_replace> t1 AS ref_1 ON (ref_0.c2 <comparison_operator_replace> ref_1.c8); CREATE TABLE t5 (pkey <uint32_type_parameter>, c52 <uint32_type_parameter>, c56 <string_type_parameter>, PRIMARY KEY(pkey)) ENGINE = <engine_parameter>; INSERT INTO t0 VALUES (<dml_values_parameter>); SELECT COUNT(*) FROM t5 AS ref_2 <join_operator_replace> (SELECT ref_3.c_2_c48_2 AS c_6_c185_6 FROM t4 AS ref_3) AS subq_1 ON (ref_2.c52 <comparison_operator_replace> subq_1.c_6_c185_6) WHERE intExp2(ref_2.pkey) <= (CASE <case_parameter>); SELECT COUNT(*) FROM t5 AS ref_2 <join_operator_replace> (SELECT ref_3.c_2_c48_2 AS c_6_c185_6 FROM t4 AS ref_3) AS subq_1 ON (ref_2.c52 <comparison_operator_replace> subq_1.c_6_c185_6) WHERE intExp2(ref_2.pkey) <= hiveHash(ref_2.c56);",
    "applied_rules": [
        "<set_parameter>",
        "<string_type_parameter>",
        "<engine_parameter>",
        "<uint32_type_parameter>",
        "<join_operator_replace>",
        "<comparison_operator_replace>",
        "<dml_values_parameter>",
        "<case_parameter>"
    ],
    "Affected Elements": "LEFT OUTER JOIN, CASE WHEN, AND, NOT",
    "Root Cause Analysis": "The use of contradictory conditions in a CASE statement leads to different outcomes between semantically equivalent SELECT queries."
}