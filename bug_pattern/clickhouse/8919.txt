{
    "pattern": "CREATE TABLE test.test_joinGet(id Int32 <constraint_type_parameter>, user_id Nullable(Int32) <constraint_type_parameter>) Engine = Memory(); CREATE TABLE test.test_join_joinGet(user_id Int32 <constraint_type_parameter>, name String <constraint_type_parameter>) Engine = Join(<join_operator_parameter>, <join_operator_parameter>, user_id); INSERT INTO test.test_join_joinGet VALUES (<dml_values_parameter>, <dml_values_parameter>), (<dml_values_parameter>, <dml_values_parameter>), (<dml_values_parameter>, <dml_values_parameter>); INSERT INTO test.test_joinGet SELECT <dml_values_parameter>, user_id FROM (<select_parameter> <select_parameter> <select_parameter> UNION ALL <select_parameter> <select_parameter> user_id) WHERE joinGet(<object_dependency_replace>, <select_parameter>, user_id) <comparison_operator_replace> '';",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<join_operator_parameter>",
        "<dml_values_parameter>",
        "<select_parameter>",
        "<object_dependency_replace>",
        "<comparison_operator_replace>"
    ],
    "Affected Elements": "joinGet function, Nullable type handling, INSERT statement",
    "Root Cause Analysis": "The use of a nullable join key in conjunction with the joinGet function leads to memory allocation issues, causing a segmentation fault during query execution."
}