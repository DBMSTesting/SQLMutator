{
    "pattern": "WITH vals AS (SELECT <dml_values_parameter> FROM <object_dependency_replace>) SELECT arrayJoin(if((number <comparison_operator_replace> 0) OR (number <comparison_operator_replace> 10, [1, 2, 3], [(number % 3) + 1])) AS ts_id, number + <numeric_function_parameter> AS timestamp, vals[ts_id] AS value FROM <object_dependency_replace>; SET <variable_parameter> = <numeric_function_parameter>; SET <variable_parameter> = <numeric_function_parameter>; SELECT timeSeriesGroupSum(toUInt64(ts_id), toInt64(timestamp), value) FROM (WITH vals AS (SELECT <dml_values_parameter> FROM <object_dependency_replace>) SELECT arrayJoin(if((number <comparison_operator_replace> 0) OR (number <comparison_operator_replace> 10, [1, 2, 3], [(number % 3) + 1])) AS ts_id, number + <numeric_function_parameter> AS timestamp, vals[ts_id] AS value FROM <object_dependency_replace>); SELECT timeSeriesGroupSum(id, ts, val) FROM values(<dml_values_parameter>, (1, 1, 1)); SELECT timeSeriesGroupSum(id, ts, val) FROM values(<dml_values_parameter>, (1, 1, 0));",
    "applied_rules": [
        "<dml_values_parameter>",
        "<object_dependency_replace>",
        "<comparison_operator_replace>",
        "<numeric_function_parameter>",
        "<variable_parameter>"
    ],
    "Affected Elements": "timeSeriesGroupSum, numbers, numbers_mt, arrayJoin, values",
    "Root Cause Analysis": "The timeSeriesGroupSum function produces incorrect results when data is processed in parallel due to state merging issues."
}