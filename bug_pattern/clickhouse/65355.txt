{
    "pattern": "CREATE TABLE test (<id_parameter> <UInt64_parameter>, <value_parameter> <String_parameter>) ENGINE=<engine_parameter> ORDER BY <order_parameter>; INSERT INTO test SELECT <number_parameter>, <string_parameter> || <toString_function_parameter>(<number_parameter>) FROM <numbers_function_parameter>(<number_parameter>); CREATE DICTIONARY test_dict (<id_parameter> <UInt64_parameter>, <value_parameter> <String_parameter>) PRIMARY KEY <id_parameter> SOURCE(<clickhouse_source_parameter>(<query_parameter> 'SELECT * FROM test')) LAYOUT(<flat_layout_parameter>()) LIFETIME(<min_parameter> 0 <max_parameter> 1000); CREATE TABLE view_source (<id_parameter> <UInt64_parameter>) ENGINE=<engine_parameter> ORDER BY <order_parameter>; INSERT INTO view_source SELECT * FROM <numbers_function_parameter>(<number_parameter>); CREATE VIEW view AS SELECT <id_parameter>, <dictGet_function_parameter>('test_dict', <value_parameter>, <id_parameter>) FROM <view_source_parameter>; CREATE OR REPLACE DICTIONARY test_dict (<id_parameter> <UInt64_parameter>, <value_parameter> <String_parameter>) PRIMARY KEY <id_parameter> SOURCE(<clickhouse_source_parameter>(<query_parameter> 'SELECT * FROM view')) LAYOUT(<flat_layout_parameter>()) LIFETIME(<min_parameter> 0 <max_parameter> 1000);",
    "applied_rules": [
        "<id_parameter>",
        "<value_parameter>",
        "<UInt64_parameter>",
        "<String_parameter>",
        "<engine_parameter>",
        "<order_parameter>",
        "<number_parameter>",
        "<string_parameter>",
        "<toString_function_parameter>",
        "<numbers_function_parameter>",
        "<clickhouse_source_parameter>",
        "<query_parameter>",
        "<flat_layout_parameter>",
        "<min_parameter>",
        "<max_parameter>",
        "<dictGet_function_parameter>",
        "<view_source_parameter>"
    ],
    "Affected Elements": "CREATE DICTIONARY, CREATE VIEW, dictGet function",
    "Root Cause Analysis": "The bug arises from the cyclic dependency created between the dictionary and the view, which leads to a deadlock during server startup when both try to load simultaneously."
}