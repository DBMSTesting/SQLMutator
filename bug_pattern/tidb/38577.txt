{
    "pattern": "CREATE TABLE tbl_1 ( col_1 set ( 'Alice','Bob','Charlie','David' ) <constraint_enforce_replace> <dml_values_parameter> , col_2 tinyint unsigned , col_3 decimal ( 34 , 3 ) <constraint_enforce_replace> <dml_values_parameter> , col_4 bigint unsigned <constraint_enforce_replace> , col_5 bit ( 12 ) <constraint_enforce_replace> , unique key idx_1 ( col_2 ) , unique key idx_2 ( col_2 ) ) charset utf8mb4 collate utf8mb4_bin; CREATE TABLE tbl_4 ( col_16 set ( 'Alice','Bob','Charlie','David' ) <constraint_enforce_replace> , col_17 tinyint unsigned , col_18 int unsigned <constraint_enforce_replace> <dml_values_parameter> , col_19 varbinary ( 210 ) <constraint_enforce_replace> , col_20 timestamp , primary key ( col_18 ) /*T![clustered_index] <constraint_type_parameter> */ , key idx_8 ( col_19 ) ) charset utf8mb4 collate utf8mb4_unicode_ci; UPDATE tbl_4 SET tbl_4.col_20 = '2006-01-24' WHERE tbl_4.col_18 <in_operator_replace> ( SELECT col_11 FROM tbl_3 WHERE IsNull( tbl_4.col_16 ) OR NOT( tbl_4.col_19 <in_operator_replace> ( SELECT col_3 FROM tbl_1 WHERE tbl_4.col_16 <between_operator_replace> 'Alice' AND 'David' AND tbl_4.col_19 <= <comparison_operator_parameter> ) ) );",
    "applied_rules": [
        "<constraint_enforce_replace>",
        "<dml_values_parameter>",
        "<in_operator_replace>",
        "<between_operator_replace>",
        "<comparison_operator_parameter>",
        "<constraint_type_parameter>"
    ],
    "Affected Elements": "set, not null, default, update, select, where, in",
    "Root Cause Analysis": "The error occurs due to an attempt to compare a varbinary column with a string that is not convertible to a DOUBLE, leading to a truncation issue."
}