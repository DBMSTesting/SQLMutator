{
    "pattern": "DROP TABLE IF EXISTS users; CREATE TABLE users (id INTEGER <constraint_type_parameter>, name VARCHAR(30) <constraint_type_parameter>, some_update VARCHAR(30), PRIMARY KEY (id)); DROP TABLE IF EXISTS addresses; CREATE TABLE addresses (id INTEGER <constraint_type_parameter>, user_id INTEGER, email_address VARCHAR(50) <constraint_type_parameter>, PRIMARY KEY (id)); INSERT INTO users (id, name, some_update) VALUES (<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>), (<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>); INSERT INTO addresses (id, user_id, email_address) VALUES (<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>), (<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>), (<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>); UPDATE addresses, users SET users.name=<dml_values_parameter>, users.some_update=<dml_values_parameter>, addresses.email_address=users.name WHERE users.id = addresses.user_id AND users.name = <dml_values_parameter>; SELECT addresses.id, addresses.user_id, addresses.email_address FROM addresses ORDER BY addresses.id; ",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<dml_values_parameter>"
    ],
    "Affected Elements": "UPDATE statement with multiple table joins",
    "Root Cause Analysis": "TiDB's handling of updates in multi-table joins differs from MySQL, leading to unexpected results."
}