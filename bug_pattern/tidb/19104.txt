{
    "pattern": "DROP TABLE IF EXISTS t; CREATE TABLE t ( c_int INT <constraint_type_parameter>, c_str VARCHAR(40), c_datetime DATETIME, c_timestamp TIMESTAMP, c_double DOUBLE, c_decimal DECIMAL(12, 6), <constraint_enforce_replace> ); INSERT INTO t <dml_values_parameter>; INSERT INTO t <dml_values_parameter>; INSERT INTO t <dml_values_parameter>; INSERT INTO t <dml_values_parameter>; INSERT INTO t <dml_values_parameter>; BEGIN; INSERT INTO t <dml_values_parameter> ON DUPLICATE KEY UPDATE c_int = VALUES(c_int), c_str = VALUES(c_str), c_double = VALUES(c_double), c_timestamp = VALUES(c_timestamp); SELECT SUM((SELECT t1.c_str FROM t t1 WHERE t1.c_int = 11 AND t1.c_str <comparison_operator_replace> t.c_str ORDER BY t1.c_decimal LIMIT 1) IS NULL) nulls FROM t ORDER BY c_str; COMMIT; SELECT SUM((SELECT t1.c_str FROM t t1 WHERE t1.c_int = 11 AND t1.c_str <comparison_operator_replace> t.c_str ORDER BY t1.c_decimal LIMIT 1) IS NULL) nulls FROM t ORDER BY c_str;",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<constraint_enforce_replace>",
        "<dml_values_parameter>",
        "<comparison_operator_replace>"
    ],
    "Affected Elements": "INSERT ON DUPLICATE KEY UPDATE, SELECT with subquery, SUM function",
    "Root Cause Analysis": "The issue appears to stem from the handling of duplicate key updates and the subsequent select queries, leading to inconsistent results across different versions."
}