{
    "pattern": "DROP TABLE IF EXISTS <object_dependency_replace>; CREATE TABLE <object_dependency_replace> (a INT, b INT); ALTER TABLE <object_dependency_replace> SET <constraint_enforce_replace>; INSERT INTO <object_dependency_replace> VALUES(<dml_values_parameter>); INSERT INTO <object_dependency_replace> SELECT <dml_values_parameter> FROM <object_dependency_replace>; USE <database_parameter>; SET <variable_parameter>; SET <variable_parameter>; SELECT <select_parameter> FROM <table_parameter> WHERE <where_parameter> > (SELECT <select_parameter> FROM <table_parameter> <table_alias> WHERE <where_parameter> > <table_alias>.a LIMIT <limit_parameter>);",
    "applied_rules": [
        "<object_dependency_replace>",
        "<constraint_enforce_replace>",
        "<dml_values_parameter>",
        "<database_parameter>",
        "<variable_parameter>",
        "<select_parameter>",
        "<table_parameter>",
        "<where_parameter>",
        "<table_alias>",
        "<limit_parameter>"
    ],
    "Affected Elements": "set @@tidb_enable_parallel_apply; set @@tidb_isolation_read_engines; set @@tidb_enforce_mpp; select count(*) from t where a > (select a from t t1 where t.a > t1.a limit 1)",
    "Root Cause Analysis": "The performance regression is likely due to the combination of settings and the nested query structure, which may not be optimized for the current data volume."
}