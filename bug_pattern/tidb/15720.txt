{
    "pattern": "CREATE TABLE `sbtest1` ( `id` int(11) <constraint_enforce_replace>, `k` int(11) <constraint_enforce_replace>, `c` char(120) <constraint_enforce_replace>, `pad` char(60) <constraint_enforce_replace>, PRIMARY KEY (`id`) ) ENGINE=<object_dependency_replace> DEFAULT CHARSET=<object_dependency_replace> COLLATE=<object_dependency_replace> AUTO_INCREMENT=<dml_values_parameter> PARTITION BY RANGE ( `id` ) ( PARTITION p0 VALUES LESS THAN (<dml_values_parameter>), PARTITION p1 VALUES LESS THAN (<dml_values_parameter>), PARTITION p2 VALUES LESS THAN (<dml_values_parameter>), PARTITION p3 VALUES LESS THAN (<dml_values_parameter>), PARTITION p4 VALUES LESS THAN (<dml_values_parameter>) ); INSERT INTO sbtest1 (id, k) VALUES (<dml_values_parameter>, <dml_values_parameter>), (<dml_values_parameter>, <dml_values_parameter>), (<dml_values_parameter>, <dml_values_parameter>), (<dml_values_parameter>, <dml_values_parameter>); SELECT count(1) FROM sbtest1 WHERE id = <dml_condition_replace>; SELECT count(1) FROM sbtest1 WHERE id = <dml_condition_replace>; SELECT count(1) FROM sbtest1 WHERE id = <dml_condition_replace>; SELECT count(1) FROM sbtest1 WHERE id = <dml_condition_replace>; ",
    "applied_rules": [
        "<constraint_enforce_replace>",
        "<object_dependency_replace>",
        "<dml_values_parameter>",
        "<dml_condition_replace>"
    ],
    "Affected Elements": "Prepared Statements, COUNT function, WHERE clause",
    "Root Cause Analysis": "Prepared statement caching may lead to incorrect partition pruning, causing unexpected results."
}