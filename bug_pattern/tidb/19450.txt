{
    "pattern": "DROP TABLE IF EXISTS <object_dependency_replace>; CREATE TABLE t1 (c_int INT <constraint_type_parameter>, c_str VARCHAR(40), c_decimal DECIMAL(12, 6), <constraint_enforce_replace>); CREATE TABLE t2 (c_int INT <constraint_type_parameter>, c_str VARCHAR(40), c_decimal DECIMAL(12, 6), <constraint_enforce_replace>); INSERT INTO t1 VALUES <dml_values_parameter>; INSERT INTO t2 SELECT * FROM t1; SELECT * FROM t1 WHERE c_decimal IN (SELECT c_decimal FROM t2 WHERE t1.c_int <comparison_operator_replace> t2.c_int OR (t1.c_int <comparison_operator_replace> t2.c_int AND t1.c_str <comparison_operator_replace> t2.c_str));",
    "applied_rules": [
        "<object_dependency_replace>",
        "<constraint_type_parameter>",
        "<constraint_enforce_replace>",
        "<dml_values_parameter>",
        "<comparison_operator_replace>"
    ],
    "Affected Elements": "HashJoin, partitioned tables, subquery with OR and AND conditions",
    "Root Cause Analysis": "The incorrect result is likely due to the way the HashJoin is handling the partitioned tables, leading to unexpected filtering in the subquery."
}