{
    "pattern": "DROP TABLE IF EXISTS t0; DROP TABLE IF EXISTS t1; CREATE TABLE t0(c0 TEXT(<text_length_parameter>) <constraint_enforce_replace>); CREATE TABLE t1 LIKE t0; INSERT INTO t0(c0) VALUES (<dml_values_parameter>); INSERT INTO t1(c0) VALUES (<dml_values_parameter>); ALTER TABLE t0 SET TIFLASH REPLICA <replica_parameter>; ALTER TABLE t1 SET TIFLASH REPLICA <replica_parameter>; SELECT /*+ read_from_storage(<storage_parameter>) */ t0.c0, t1.c0 FROM t1, t0 WHERE (<logical_operator_replace> ((CASE <case_parameter> WHEN <case_value_parameter> THEN t0.c0 ELSE (<logical_operator_replace> (t1.c0)) END))); SELECT /*+ read_from_storage(<storage_parameter>) */ t0.c0, t1.c0 FROM t1, t0 WHERE (<logical_operator_replace> ((CASE <case_parameter> WHEN <case_value_parameter> THEN t0.c0 ELSE (<logical_operator_replace> (t1.c0)) END));",
    "applied_rules": [
        "<text_length_parameter>",
        "<constraint_enforce_replace>",
        "<dml_values_parameter>",
        "<replica_parameter>",
        "<storage_parameter>",
        "<logical_operator_replace>",
        "<case_parameter>",
        "<case_value_parameter>"
    ],
    "Affected Elements": "CASE statement, NULL handling, bitwise NOT operator (~)",
    "Root Cause Analysis": "The inconsistency in results between TiKV and TiFlash may stem from differences in how NULL values and bitwise operations are handled in the two storage engines."
}