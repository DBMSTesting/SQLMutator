{
    "pattern": "CREATE TABLE `tbl_27` ( `col_180` <enum_type_parameter> NOT NULL, <constraint_type_parameter> (`col_180`), KEY `idx_66` (`col_180`), <constraint_type_parameter> `idx_67` (`col_180`), <constraint_type_parameter> `idx_68` (`col_180`) ) ENGINE=<engine_parameter> DEFAULT CHARSET=<charset_parameter> COLLATE=<collate_parameter>; INSERT IGNORE INTO tbl_27 <dml_values_parameter> ON DUPLICATE KEY UPDATE col_180 = <dml_condition_replace>; SELECT col_180 FROM tbl_27 WHERE tbl_27.col_180 <comparison_operator_replace> ('David'); SELECT col_180 FROM tbl_27 WHERE tbl_27.col_180 <comparison_operator_replace> ('David') FOR UPDATE;",
    "applied_rules": [
        "<enum_type_parameter>",
        "<constraint_type_parameter>",
        "<engine_parameter>",
        "<charset_parameter>",
        "<collate_parameter>",
        "<dml_values_parameter>",
        "<dml_condition_replace>",
        "<comparison_operator_replace>"
    ],
    "Affected Elements": "INSERT IGNORE, ON DUPLICATE KEY UPDATE, SELECT with NOT IN",
    "Root Cause Analysis": "The primary key 'col_180' is allowed to be NULL due to the update operation, causing unexpected behavior when querying with NOT IN."
}