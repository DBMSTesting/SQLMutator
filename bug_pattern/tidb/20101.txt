{
    "pattern": "DROP TABLE IF EXISTS <object_dependency_replace>; CREATE TABLE <object_dependency_replace> ( `pk` int(11) <constraint_enforce_replace> ) ENGINE=<engine_parameter> DEFAULT CHARSET=<charset_parameter> COLLATE=<collate_parameter>; INSERT INTO <dml_values_parameter> VALUES (<dml_values_parameter>); DROP TABLE IF EXISTS <object_dependency_replace>; CREATE TABLE <object_dependency_replace> ( `pk` int(11) <constraint_enforce_replace>, `col_int_key_unsigned` int(10) unsigned DEFAULT NULL, `col_year_key_signed` year(4) DEFAULT NULL, PRIMARY KEY (`pk`), KEY `col_int_key_unsigned` (`col_int_key_unsigned`), KEY `col_year_key_signed` (`col_year_key_signed`) ) ENGINE=<engine_parameter> DEFAULT CHARSET=<charset_parameter> COLLATE=<collate_parameter>; INSERT INTO <dml_values_parameter> VALUES (<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>); SELECT sum(tmp.val) AS val FROM (SELECT count(1) AS val FROM <object_dependency_replace> <join_operator_replace> <object_dependency_replace> WHERE <where_parameter> <comparison_operator_replace> <comparison_operator_replace> AND <object_parameter> <comparison_operator_replace> <dml_values_parameter>) AS tmp;",
    "applied_rules": [
        "<object_dependency_replace>",
        "<constraint_enforce_replace>",
        "<engine_parameter>",
        "<charset_parameter>",
        "<dml_values_parameter>",
        "<join_operator_replace>",
        "<where_parameter>",
        "<comparison_operator_replace>",
        "<dml_values_parameter>"
    ],
    "Affected Elements": "col_year_key_signed, col_int_key_unsigned",
    "Root Cause Analysis": "The error occurs due to an implicit conversion issue between unsigned bigint and year type during the comparison in the WHERE clause."
}