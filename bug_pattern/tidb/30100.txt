{
    "pattern": "SET SESSION <session_parameter_replace> = true; USE <database_parameter>; DROP TABLE IF EXISTS <table_parameter>; CREATE TABLE <table_parameter>(<column_parameter>, <column_parameter>, <index_parameter>); INSERT INTO <table_parameter> <dml_values_parameter>; PREPARE <statement_parameter> FROM 'SELECT <select_parameter> FROM <table_parameter> <table_alias_parameter> JOIN <table_parameter> <table_alias_parameter> ON <table_alias_parameter>.<column_parameter> = <table_alias_parameter>.<column_parameter> WHERE <table_alias_parameter>.<column_parameter> <is_operator_replace> NULL'; EXECUTE <statement_parameter>; EXECUTE <statement_parameter>;",
    "applied_rules": [
        "<session_parameter_replace>",
        "<database_parameter>",
        "<table_parameter>",
        "<column_parameter>",
        "<index_parameter>",
        "<dml_values_parameter>",
        "<statement_parameter>",
        "<select_parameter>",
        "<table_alias_parameter>",
        "<is_operator_replace>"
    ],
    "Affected Elements": "PREPARE, EXECUTE, JOIN, ON, <=>",
    "Root Cause Analysis": "The bug arises from incorrect handling of NULL comparisons in prepared statements when using the <=> operator within the query execution context, leading to unexpected results instead of the anticipated empty set."
}