{
    "pattern": "CREATE TABLE `compose_record` (<id_parameter> bigint(20) unsigned NOT NULL, <rel_namespace_parameter> bigint(20) unsigned NOT NULL, <module_id_parameter> bigint(20) unsigned NOT NULL, <owned_by_parameter> bigint(20) unsigned NOT NULL, <created_at_parameter> datetime NOT NULL, <updated_at_parameter> datetime DEFAULT NULL, <deleted_at_parameter> datetime DEFAULT NULL, <created_by_parameter> bigint(20) unsigned NOT NULL, <updated_by_parameter> bigint(20) unsigned NOT NULL DEFAULT '0', <deleted_by_parameter> bigint(20) unsigned NOT NULL DEFAULT '0', PRIMARY KEY (`id`), KEY `compose_record_namespace` (`rel_namespace`), KEY `compose_record_module` (`module_id`), KEY `compose_record_owner` (`owned_by`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin; INSERT INTO `compose_record` VALUES (<dml_values_parameter>); CREATE TABLE `compose_record_value` (<record_id_parameter> bigint(20) unsigned NOT NULL, <name_parameter> varchar(64) NOT NULL, <value_parameter> longtext NOT NULL, <ref_parameter> bigint(20) unsigned NOT NULL, <place_parameter> int(11) NOT NULL, <deleted_at_parameter> datetime DEFAULT NULL, PRIMARY KEY (`record_id`,`name`,`place`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin; INSERT INTO `compose_record_value` VALUES (<dml_values_parameter>); SELECT id, module_id, rel_namespace, owned_by, created_by, updated_by, deleted_by, created_at, updated_at, deleted_at FROM (SELECT crd.id, crd.module_id, crd.rel_namespace, crd.owned_by, crd.created_by, crd.updated_by, crd.deleted_by, crd.created_at, crd.updated_at, crd.deleted_at, row_number() over (partition by <id_parameter>) as pp_rn FROM compose_record AS crd <join_operator_replace> compose_record_value AS rv_datetime1 ON (rv_datetime1.record_id = crd.id AND rv_datetime1.name = <string_function_parameter> AND rv_datetime1.deleted_at IS NULL) <join_operator_replace> compose_record_value AS rv_datetime2 ON (rv_datetime2.record_id = crd.id AND rv_datetime2.name = <string_function_parameter> AND rv_datetime2.deleted_at IS NULL) <join_operator_replace> compose_record_value AS rv_datetime3 ON (rv_datetime3.record_id = crd.id AND rv_datetime3.name = <string_function_parameter> AND rv_datetime3.deleted_at IS NULL) WHERE crd.module_id = <numeric_function_parameter> AND crd.rel_namespace = <numeric_function_parameter> AND crd.deleted_at IS NULL AND (((rv_datetime1.value IS NOT NULL AND <logical_operator_replace>) OR (CAST(rv_datetime1.value AS <cast_parameter>) > CAST(<string_function_parameter> AS <cast_parameter>))) OR (((rv_datetime1.value IS NULL AND <logical_operator_replace>) OR CAST(rv_datetime1.value AS <cast_parameter>) = CAST(<string_function_parameter> AS <cast_parameter>)) AND (((rv_datetime2.value IS NOT NULL AND <logical_operator_replace>) OR (CAST(rv_datetime2.value AS <cast_parameter>) > CAST(<string_function_parameter> AS <cast_parameter>))) OR (((rv_datetime2.value IS NULL AND <logical_operator_replace>) OR CAST(rv_datetime2.value AS <cast_parameter>) = CAST(<string_function_parameter> AS <cast_parameter>)) AND (((rv_datetime3.value IS NOT NULL AND <logical_operator_replace>) OR (CAST(rv_datetime3.value AS <cast_parameter>) > CAST(<string_function_parameter> AS <cast_parameter>))) OR (((rv_datetime3.value IS NULL AND <logical_operator_replace>) OR CAST(rv_datetime3.value AS <cast_parameter>) = CAST(<string_function_parameter> AS <cast_parameter>)) AND ((crd.id IS NOT NULL AND <logical_operator_replace>) OR (crd.id > <numeric_function_parameter>)))))))) ORDER BY CAST(rv_datetime1.value AS <cast_parameter>) ASC, CAST(rv_datetime2.value AS <cast_parameter>) ASC, CAST(rv_datetime3.value AS <cast_parameter>) ASC, id ASC) AS base WHERE pp_rn = <numeric_function_parameter> LIMIT <numeric_function_parameter>;",
    "applied_rules": [
        "<id_parameter>",
        "<rel_namespace_parameter>",
        "<module_id_parameter>",
        "<owned_by_parameter>",
        "<created_at_parameter>",
        "<updated_at_parameter>",
        "<deleted_at_parameter>",
        "<created_by_parameter>",
        "<updated_by_parameter>",
        "<deleted_by_parameter>",
        "<dml_values_parameter>",
        "<record_id_parameter>",
        "<name_parameter>",
        "<value_parameter>",
        "<ref_parameter>",
        "<place_parameter>",
        "<join_operator_replace>",
        "<string_function_parameter>",
        "<numeric_function_parameter>",
        "<logical_operator_replace>",
        "<cast_parameter>"
    ],
    "Affected Elements": "row_number(), CAST(), LEFT JOIN, WHERE clause conditions",
    "Root Cause Analysis": "在TiDB中，某些SQL语法或函数的实现与MySQL存在差异，导致查询结果为空。"
}