{
    "pattern": "CREATE TABLE `item` (<id_parameter> <int_parameter>, <vid_parameter> <varbinary_parameter>, <sid_parameter> <int_parameter>); CREATE TABLE `lv` (<item_id_parameter> <int_parameter>, <sid_parameter> <int_parameter>, KEY (<sid_parameter>, <item_id_parameter>)); EXPLAIN SELECT /*+ <hint_parameter> */ <select_parameter> FROM <lv_parameter> <join_operator_replace> <item_parameter> ON <lv_parameter>.<sid_parameter> <comparison_operator_replace> <item_parameter>.<sid_parameter> AND <lv_parameter>.<item_id_parameter> <comparison_operator_replace> <item_parameter>.<id_parameter> WHERE <item_parameter>.<sid_parameter> = <where_parameter> AND <item_parameter>.<vid_parameter> <in_operator_replace> ('<in_value_parameter>', '<in_value_parameter>'); PREPARE stmt FROM '<prepare_statement_parameter>'; SET <set_parameter> = <value_parameter>, <set_parameter> = '<value_parameter>', <set_parameter> = '<value_parameter>'; EXECUTE stmt USING <execute_parameter>, <execute_parameter>, <execute_parameter>; SHOW WARNINGS;",
    "applied_rules": [
        "<id_parameter>",
        "<int_parameter>",
        "<varbinary_parameter>",
        "<sid_parameter>",
        "<item_id_parameter>",
        "<hint_parameter>",
        "<select_parameter>",
        "<lv_parameter>",
        "<item_parameter>",
        "<where_parameter>",
        "<in_operator_replace>",
        "<in_value_parameter>",
        "<prepare_statement_parameter>",
        "<set_parameter>",
        "<value_parameter>",
        "<execute_parameter>"
    ],
    "Affected Elements": "Optimizer Hint /*+ TIDB_INLJ(lv, item) */, LEFT JOIN, prepared statements",
    "Root Cause Analysis": "The validation check for prepared statements is too strict, preventing the optimizer from converting outer-join to inner-join, making the INLJ hint inapplicable."
}