{
    "pattern": "DROP TABLE IF EXISTS t; CREATE TABLE t(e <enum_parameter>, <index_dependency_replace>); INSERT IGNORE INTO t <dml_values_parameter>; SELECT * FROM t WHERE e <comparison_operator_parameter> ''; SELECT * FROM t WHERE e <comparison_operator_replace> 'a'; DROP TABLE IF EXISTS t; CREATE TABLE t(e <enum_parameter>, <index_dependency_replace>); INSERT IGNORE INTO t <dml_values_parameter>; SELECT * FROM t WHERE e <comparison_operator_parameter> '';",
    "applied_rules": [
        "<enum_parameter>",
        "<index_dependency_replace>",
        "<dml_values_parameter>",
        "<comparison_operator_parameter>",
        "<comparison_operator_replace>"
    ],
    "Affected Elements": "ENUM type handling, INSERT IGNORE syntax, SELECT statements with WHERE clauses",
    "Root Cause Analysis": "The bug arises from incorrect handling of zero-value and empty-string for ENUM types in TiDB, leading to unexpected results in SELECT queries."
}