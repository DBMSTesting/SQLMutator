{
    "pattern": "CREATE TABLE `t1` ( `c_int` int(11) <constraint_enforce_replace>, `c_str` varbinary(40) <constraint_enforce_replace>, `c_datetime` datetime DEFAULT <dml_values_parameter>, `c_timestamp` timestamp NULL DEFAULT <dml_values_parameter>, `c_double` double DEFAULT <dml_values_parameter>, `c_decimal` decimal(12,6) DEFAULT <dml_values_parameter>, PRIMARY KEY (`c_int`,`c_str`) /*T![clustered_index] <constraint_type_parameter> */, KEY `c_int_2` (`c_int`), KEY `c_decimal` (`c_decimal`), KEY `c_datetime` (`c_datetime`) ) ENGINE=<object_dependency_replace> DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin PARTITION BY HASH( `c_int` ) PARTITIONS <dml_values_parameter>; CREATE TABLE `t2` ( `c_int` int(11) <constraint_enforce_replace>, `c_str` varchar(40) <constraint_enforce_replace>, `c_datetime` datetime DEFAULT <dml_values_parameter>, `c_timestamp` timestamp NULL DEFAULT <dml_values_parameter>, `c_double` double DEFAULT <dml_values_parameter>, `c_decimal` decimal(12,6) DEFAULT <dml_values_parameter>, PRIMARY KEY (`c_int`,`c_str`) /*T![clustered_index] <constraint_type_parameter> */, KEY `c_str` (`c_str`(2)), KEY `c_datetime` (`c_datetime`), KEY `c_timestamp` (`c_timestamp`) ) ENGINE=<object_dependency_replace> DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin PARTITION BY RANGE ( `c_int` ) ( PARTITION `p0` VALUES LESS THAN (<dml_values_parameter>), PARTITION `p1` VALUES LESS THAN (<dml_values_parameter>), PARTITION `p2` VALUES LESS THAN (<dml_values_parameter>), PARTITION `p3` VALUES LESS THAN (MAXVALUE) ); INSERT INTO `t1` VALUES(<dml_values_parameter>); SELECT * FROM `t1` PARTITION (`p3`), `t2` PARTITION (`p3`) WHERE `t1`.`c_int` <comparison_operator_replace> `t2`.`c_int` AND `t1`.`c_str` <comparison_operator_replace> `t2`.`c_str`;",
    "applied_rules": [
        "<constraint_enforce_replace>",
        "<dml_values_parameter>",
        "<constraint_type_parameter>",
        "<object_dependency_replace>",
        "<comparison_operator_replace>"
    ],
    "Affected Elements": "PARTITION BY, SELECT with PARTITION",
    "Root Cause Analysis": "在执行带有分区的查询时，索引超出范围，可能是由于分区设置或数据分布不当导致的。"
}