{
    "pattern": "CREATE TABLE `t1` ( `row_id` bigint(20) <constraint_enforce_replace>, `ast_id` varchar(20) <dml_values_parameter>, `col1` varchar(20) <dml_values_parameter>, <constraint_type_parameter> (`row_id`) <constraint_enforce_replace>); create index t1_ast_id on t1(`ast_id`); insert into t1 <dml_values_parameter>; insert into t1 <dml_values_parameter>; set <set_parameter> = 100000; insert into t1 with RECURSIVE cte as (select 1 as level, FLOOR(1 + (RAND() * 1000000)) <dml_values_parameter>, substr(md5(rand()),1,10) <dml_values_parameter>, substr(md5(rand()),1,10) <dml_values_parameter>, substr(md5(rand()),1,10) <dml_values_parameter> union all select level + 1 <dml_values_parameter>, FLOOR(1 + (RAND() * 1000000)) <dml_values_parameter>, substr(md5(rand()),1,10) <dml_values_parameter>, substr(md5(rand()),1,10) <dml_values_parameter>, substr(md5(rand()),1,10) <dml_values_parameter> from cte where level < 10000) select null, <dml_values_parameter>, <dml_values_parameter> from cte; analyze table <object_dependency_replace>; prepare stmt from \"select <column_parameter>, <column_parameter> from (select <column_parameter>, <column_parameter>, row_number() over(partition by <column_parameter> order by <column_parameter>) <dml_condition_replace> from t1 where <column_parameter> in ('ID_1')) t where <dml_condition_replace>; execute stmt; prepare stmt from \"select <column_parameter>, <column_parameter> from (select <column_parameter>, <column_parameter>, row_number() over(partition by <column_parameter> order by <column_parameter>) <dml_condition_replace> from t1 where <column_parameter> in ('ID_2')) t where <dml_condition_replace>; execute stmt;",
    "applied_rules": [
        "<constraint_enforce_replace>",
        "<dml_values_parameter>",
        "<constraint_type_parameter>",
        "<set_parameter>",
        "<column_parameter>",
        "<dml_condition_replace>",
        "<object_dependency_replace>"
    ],
    "Affected Elements": "row_number(), partition by, prepare, execute",
    "Root Cause Analysis": "The issue arises from the use of prepared statements with window functions, leading to unexpected results when the plan cache is utilized."
}