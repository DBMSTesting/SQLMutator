{
    "pattern": "DROP TABLE IF EXISTS t1; CREATE TABLE t1 (c0 <timestamp_parameter>, c1 <double_parameter>, c2 <timestamp_parameter> AS (c0) <virtual_parameter> NOT NULL, c3 <int_unsigned_parameter> NOT NULL, c4 <varchar_parameter>, c5 <json_parameter>, <constraint_type_parameter> (c3), <constraint_type_parameter> idx1 (c2, c0), <constraint_type_parameter> idx2 (c4)); ALTER TABLE t1 SET <tiflash_parameter> <replica_parameter>; INSERT IGNORE INTO t1(c1, c3, c4, c5) VALUES (<dml_values_parameter>), (<dml_values_parameter>), (<dml_values_parameter>); SELECT /*+ <hint_parameter> */ c0 FROM t1 WHERE c1 <comparison_operator_parameter> -10 AND c2 <is_operator_parameter> NOT NULL OR JSON_UNQUOTE(JSON_EXTRACT(c5, '$.key')) <comparison_operator_parameter> 'value'; SELECT /*+ <hint_parameter> */ c0 FROM t1 WHERE c1 <comparison_operator_parameter> -10 AND c2 <is_operator_parameter> NOT NULL OR JSON_UNQUOTE(JSON_EXTRACT(c5, '$.key')) <comparison_operator_parameter> 'value';",
    "applied_rules": [
        "<timestamp_parameter>",
        "<double_parameter>",
        "<virtual_parameter>",
        "<int_unsigned_parameter>",
        "<varchar_parameter>",
        "<json_parameter>",
        "<constraint_type_parameter>",
        "<tiflash_parameter>",
        "<replica_parameter>",
        "<dml_values_parameter>",
        "<hint_parameter>",
        "<comparison_operator_parameter>",
        "<is_operator_parameter>"
    ],
    "Affected Elements": "SELECT, WHERE, JSON_UNQUOTE, JSON_EXTRACT",
    "Root Cause Analysis": "The discrepancy in results between TiKV and TiFlash likely arises from differences in how they handle virtual columns and JSON functions."
}