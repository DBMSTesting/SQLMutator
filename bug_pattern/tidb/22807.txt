{
    "pattern": "CREATE TABLE index_testing (id INT <constraint_type_parameter>, c1 VARCHAR(255), c2 VARCHAR(255), c3 VARCHAR(255), c4 VARCHAR(255), aid BIGINT, created_at TIMESTAMP, <constraint_enforce_replace> (id)); CREATE INDEX aid_c1 ON index_testing (aid, c1); CREATE INDEX aid_c2 ON index_testing (aid, c2); CREATE INDEX aid_c3 ON index_testing (aid, c3); CREATE INDEX aid_c4 ON index_testing (aid, c4); CREATE INDEX testing_created ON index_testing (created_at); SET @@tidb_enable_index_merge = <dml_values_parameter>; DESC SELECT /*+ USE_INDEX_MERGE(index_testing, aid_c1, aid_c2) */ * FROM index_testing WHERE (<where_parameter>) OR (<where_parameter>);",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<constraint_enforce_replace>",
        "<dml_values_parameter>",
        "<where_parameter>"
    ],
    "Affected Elements": "USE_INDEX_MERGE hint, IndexLookUp operator, IndexRangeScan operator",
    "Root Cause Analysis": "The index merge optimization is not being applied as expected, potentially due to configuration settings or query structure."
}