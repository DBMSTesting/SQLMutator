{
    "pattern": "CREATE TABLE t1 (id <varchar_parameter> NOT NULL <constraint_type_parameter>, org_id <varchar_parameter> NOT NULL, status <tinyint_parameter> DEFAULT <numeric_function_parameter> NOT NULL, ns <varchar_parameter> DEFAULT <string_function_parameter> NOT NULL); CREATE TABLE t2 (id <varchar_parameter> NOT NULL <constraint_type_parameter>, order_id <varchar_parameter> NOT NULL, begin_time <timestamp_parameter> DEFAULT <current_timestamp_function_parameter> NOT NULL); CREATE INDEX idx_oid ON t2 (order_id); INSERT INTO t1 VALUES (<dml_values_parameter>); INSERT INTO t1 VALUES (<dml_values_parameter>); INSERT INTO t1 VALUES (<dml_values_parameter>); INSERT INTO t2 VALUES (<dml_values_parameter>); SELECT <aggregation_function_parameter> FROM t1 <join_operator_replace> t2 ON t1.id = t2.order_id WHERE t1.ns = <string_parameter> AND t1.org_id <in_operator_parameter> (<string_parameter>) AND t1.status <in_operator_parameter> (<numeric_parameter>) AND MONTH(t2.begin_time) = MONTH(<timestamp_parameter>);",
    "applied_rules": [
        "<varchar_parameter>",
        "<constraint_type_parameter>",
        "<tinyint_parameter>",
        "<numeric_function_parameter>",
        "<string_function_parameter>",
        "<timestamp_parameter>",
        "<current_timestamp_function_parameter>",
        "<dml_values_parameter>",
        "<aggregation_function_parameter>",
        "<join_operator_replace>",
        "<string_parameter>",
        "<in_operator_parameter>",
        "<numeric_parameter>",
        "<timestamp_parameter>"
    ],
    "Affected Elements": "LEFT JOIN, MONTH function, IN clause, data type mismatch",
    "Root Cause Analysis": "The issue arises due to a data type mismatch in the JOIN condition and WHERE clause, which leads to an incorrect execution plan in version 3.1.1."
}