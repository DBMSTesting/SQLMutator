{
    "pattern": "USE test; DROP TABLE IF EXISTS IDT_MC21780; CREATE TABLE IDT_MC21780 (COL1 TIMESTAMP NULL DEFAULT NULL, COL2 TIMESTAMP NULL DEFAULT NULL, COL3 TIMESTAMP NULL DEFAULT NULL, KEY U_M_COL (COL1,COL2) /*!80000 INVISIBLE */) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin; INSERT INTO IDT_MC21780 VALUES(<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>); PREPARE stmt FROM 'SELECT/*+ HASH_JOIN(t1) */ * FROM IDT_MC21780 t1 <join_operator_replace> IDT_MC21780 t2 ON t1.col1 <comparison_operator_parameter> t2.col1 WHERE t1.col1 < <where_parameter> AND t2.col1 <in_operator_parameter>;'; SET @a=<variable_parameter>, @b=<variable_parameter>, @c=<variable_parameter>, @d=<variable_parameter>; EXECUTE stmt USING @a,@b,@c,@d; SET @a=<variable_parameter>, @b=<variable_parameter>, @c=<variable_parameter>, @d=<variable_parameter>; EXECUTE stmt USING @a,@b,@c,@d; SELECT/*+ HASH_JOIN(t1) */ * FROM IDT_MC21780 t1 <join_operator_replace> IDT_MC21780 t2 ON t1.col1 <comparison_operator_parameter> t2.col1 WHERE t1.col1 < <where_parameter> AND t2.col1 <in_operator_parameter;",
    "applied_rules": [
        "<dml_values_parameter>",
        "<join_operator_replace>",
        "<comparison_operator_parameter>",
        "<where_parameter>",
        "<in_operator_parameter>",
        "<variable_parameter>"
    ],
    "Affected Elements": "PREPARE, EXECUTE, JOIN, WHERE, IN",
    "Root Cause Analysis": "The issue arises from the plan cache behavior when joining on the timestamp column, causing unexpected empty result sets."
}