{
    "pattern": "CREATE TABLE `t1` (`id` varchar(100) <constraint_type_parameter>); CREATE TABLE `t2` (`id` varchar(100) <constraint_type_parameter>, `cdate` varchar(25) <constraint_type_parameter>, <constraint_type_parameter> (`id`,`cdate`)) PARTITION BY RANGE COLUMNS(cdate) (PARTITION `p201905` VALUES LESS THAN (<dml_values_parameter>), PARTITION `p201906` VALUES LESS THAN (<dml_values_parameter>)); ALTER TABLE t1 SET <constraint_enforce_replace>; ALTER TABLE t2 SET <constraint_enforce_replace>; SET <dml_values_parameter>; SET @@session.tidb_allow_mpp=<dml_values_parameter>; SET @@session.tidb_enforce_mpp=<dml_values_parameter>; SET @@session.tidb_partition_prune_mode = <dml_values_parameter>; EXPLAIN SELECT t2.id FROM t1 <join_operator_replace> t2 ON t1.id <comparison_operator_replace> t2.id;",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<dml_values_parameter>",
        "<constraint_enforce_replace>",
        "<join_operator_replace>",
        "<comparison_operator_replace>"
    ],
    "Affected Elements": "EXPLAIN, JOIN, PARTITION BY RANGE COLUMNS",
    "Root Cause Analysis": "The bug appears to be a runtime error in the partition pruning logic when executing a join on partitioned tables in TiFlash."
}