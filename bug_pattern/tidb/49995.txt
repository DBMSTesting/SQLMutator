{
    "pattern": "SET <dml_condition_replace>; CREATE TABLE pt ( a INT <constraint_type_parameter>, b INT <constraint_type_parameter>, c INT <constraint_type_parameter>, d INT DEFAULT 0, <constraint_enforce_replace>, <constraint_enforce_replace> ) PARTITION BY RANGE(a) ( PARTITION p0 VALUES LESS THAN (<dml_values_parameter>), PARTITION p1 VALUES LESS THAN (<dml_values_parameter>), PARTITION p2 VALUES LESS THAN (<dml_values_parameter>), PARTITION p3 VALUES LESS THAN (<dml_values_parameter>) ); INSERT INTO pt(a,b,c) <dml_values_parameter>; ANALYZE TABLE pt; SELECT <select_parameter> FROM pt WHERE <where_parameter>; SELECT * FROM pt WHERE c <in_operator_replace> (<dml_values_parameter>);",
    "applied_rules": [
        "<dml_condition_replace>",
        "<constraint_type_parameter>",
        "<constraint_enforce_replace>",
        "<dml_values_parameter>",
        "<select_parameter>",
        "<where_parameter>",
        "<in_operator_replace>"
    ],
    "Affected Elements": "set tidb_enable_global_index=true; create table; insert into; analyze table; select; where; in",
    "Root Cause Analysis": "The issue arises when executing point get queries on a clustered index table with global index enabled, leading to unexpected errors."
}