{
    "pattern": "CREATE TABLE `PK_S_MULTI_30_tmp` ( `COL1` <dml_values_parameter>, `COL2` <dml_values_parameter>, `COL3` <dml_values_parameter>, <constraint_type_parameter> (`COL1`,`COL2`)) ENGINE=<object_dependency_replace> DEFAULT CHARSET=<object_dependency_replace> COLLATE=<object_dependency_replace>; INSERT INTO `PK_S_MULTI_30_tmp` VALUES(<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>); ALTER TABLE `PK_S_MULTI_30_tmp` ADD <object_dependency_replace> ((<function_category_parameter>(col1))); INSERT INTO `PK_S_MULTI_30_tmp` VALUES(<dml_values_parameter>, <dml_values_parameter>, <dml_values_parameter>); SELECT * FROM `PK_S_MULTI_30_tmp` USE <object_dependency_replace> ((<function_category_parameter>(col1))) WHERE <function_category_parameter>(col1) <comparison_operator_parameter> <function_category_parameter>(-1.7976931348623157e+308); SELECT * FROM `PK_S_MULTI_30_tmp` IGNORE <object_dependency_replace> ((<function_category_parameter>(col1))) WHERE <function_category_parameter>(col1) <comparison_operator_parameter> <function_category_parameter>(-1.7976931348623157e+308);",
    "applied_rules": [
        "<dml_values_parameter>",
        "<constraint_type_parameter>",
        "<object_dependency_replace>",
        "<function_category_parameter>",
        "<comparison_operator_parameter>"
    ],
    "Affected Elements": "ceil() function, use index, ignore index",
    "Root Cause Analysis": "The use of the ceil() function with a value that exceeds the DOUBLE range causes the second insert to fail, leading to inconsistent results when querying with and without the expression index."
}