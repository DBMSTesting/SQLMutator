{
    "pattern": "DROP TABLE IF EXISTS `C`; CREATE TABLE `C` ( `pk` int(11) NOT NULL AUTO_INCREMENT, `col_int_nokey` int(11) DEFAULT NULL, `col_int_key` int(11) DEFAULT NULL, `col_date_key` date DEFAULT NULL, `col_date_nokey` date DEFAULT NULL, `col_time_key` time DEFAULT NULL, `col_time_nokey` time DEFAULT NULL, `col_datetime_key` datetime DEFAULT NULL, `col_datetime_nokey` datetime DEFAULT NULL, `col_varchar_key` varchar(1) DEFAULT NULL, `col_varchar_nokey` varchar(1) DEFAULT NULL, PRIMARY KEY (`pk`), KEY `col_int_key` (`col_int_key`), KEY `col_date_key` (`col_date_key`), KEY `col_time_key` (`col_time_key`), KEY `col_datetime_key` (`col_datetime_key`), KEY `col_varchar_key` (`col_varchar_key`,`col_int_key`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin; INSERT INTO `C` VALUES (<dml_values_parameter>), (<dml_values_parameter>); DROP TABLE IF EXISTS `CC`; CREATE TABLE `CC` ( `pk` int(11) NOT NULL AUTO_INCREMENT, `col_int_nokey` int(11) DEFAULT NULL, `col_int_key` int(11) DEFAULT NULL, `col_date_key` date DEFAULT NULL, `col_date_nokey` date DEFAULT NULL, `col_time_key` time DEFAULT NULL, `col_time_nokey` time DEFAULT NULL, `col_datetime_key` datetime DEFAULT NULL, `col_datetime_nokey` datetime DEFAULT NULL, `col_varchar_key` varchar(1) DEFAULT NULL, `col_varchar_nokey` varchar(1) DEFAULT NULL, PRIMARY KEY (`pk`), KEY `col_int_key` (`col_int_key`), KEY `col_date_key` (`col_date_key`), KEY `col_time_key` (`col_time_key`), KEY `col_datetime_key` (`col_datetime_key`), KEY `col_varchar_key` (`col_varchar_key`,`col_int_key`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin AUTO_INCREMENT=<dml_values_parameter>; INSERT INTO `CC` VALUES (<dml_values_parameter>), (<dml_values_parameter>); SELECT table1.`col_date_key` FROM (C AS table1 <join_operator_replace> (CC AS table2 <join_operator_replace> CC AS table3 ON (table3.`col_int_key` <comparison_operator_replace> table2.`col_int_key`)) <join_operator_replace> (table3.`col_varchar_key` <comparison_operator_replace> table2.`col_varchar_nokey`)) WHERE (table3.`col_varchar_nokey` <comparison_operator_replace> (SELECT SUBQUERY1_t1.`col_varchar_key` AS SUBQUERY1_field1 FROM (C AS SUBQUERY1_t1 <join_operator_replace> (C AS SUBQUERY1_t2 <join_operator_replace> C AS SUBQUERY1_t3 ON (SUBQUERY1_t3.`col_int_key` <comparison_operator_replace> SUBQUERY1_t2.`col_int_key`)) <join_operator_replace> (SUBQUERY1_t3.`col_int_key` <comparison_operator_replace> SUBQUERY1_t2.`col_int_key`))) OR table1.`col_varchar_key` <comparison_operator_replace> table2.`col_varchar_key`;",
    "applied_rules": [
        "<dml_values_parameter>",
        "<join_operator_replace>",
        "<comparison_operator_replace>"
    ],
    "Affected Elements": "interface conversion, types.Time",
    "Root Cause Analysis": "在处理时间类型数据时，存在空值导致的类型转换错误。"
}