{
    "pattern": "CREATE TABLE t1 (id INT <constraint_type_parameter>); CREATE TABLE t2 (id INT <constraint_type_parameter>); INSERT INTO t1 VALUES (<dml_values_parameter>); INSERT INTO t2 VALUES (<dml_values_parameter>); BEGIN; SELECT <select_parameter> FROM t1; RENAME TABLE t1 TO t11, t2 TO t22; SELECT <select_parameter>, json_extract(cast(cast(job_meta AS CHAR) AS JSON), '$.schema_name') AS db_name, json_extract(cast(cast(job_meta AS CHAR) AS JSON), '$.table_name') AS table_name, json_extract(cast(cast(job_meta AS CHAR) AS JSON), '$.query') AS query, session_id, txnstart, tidb_decode_sql_digests(all_sql_digests, 4096) AS SQL_DIGESTS FROM mysql.tidb_ddl_job, information_schema.cluster_tidb_trx, information_schema.cluster_processlist WHERE tidb_ddl_job.processing = <where_parameter> AND FIND_IN_SET(<value_parameter>, tidb_ddl_job.table_ids) AND FIND_IN_SET(<value_parameter>, cluster_tidb_trx.related_table_ids) AND cluster_tidb_trx.session_id = cluster_processlist.id;",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<dml_values_parameter>",
        "<select_parameter>",
        "<where_parameter>",
        "<value_parameter>"
    ],
    "Affected Elements": "RENAME TABLE, FIND_IN_SET, JSON_EXTRACT",
    "Root Cause Analysis": "The issue arises due to the missing table IDs in the `ddl_jobs` view when multiple tables are involved in a DDL operation, which leads to the blocking behavior and an empty result from the `tidb_mdl_view`."
}