{
    "pattern": "CREATE DATABASE <database_name_parameter>; CREATE TABLE other.cross_schema_get_relations_rel_table(id integer <auto_increment_parameter>, <constraint_type_parameter> (id)); CREATE TABLE test.cross_schema_get_relations_main_table(id integer <auto_increment_parameter>, cross_schema_get_relations_rel_table_id integer <not_null_parameter>, <constraint_type_parameter> (id), <constraint_enforce_replace> (cross_schema_get_relations_rel_table_id) REFERENCES other.cross_schema_get_relations_rel_table(id); SELECT <select_parameter> FROM information_schema.key_column_usage WHERE <where_parameter> AND table_schema = <database_function_parameter>() AND referenced_table_name <is_operator_replace> NULL AND referenced_column_name <is_operator_replace> NULL;",
    "applied_rules": [
        "<database_name_parameter>",
        "<auto_increment_parameter>",
        "<constraint_type_parameter>",
        "<not_null_parameter>",
        "<constraint_enforce_replace>",
        "<select_parameter>",
        "<where_parameter>",
        "<database_function_parameter>",
        "<is_operator_replace>"
    ],
    "Affected Elements": "SELECT statement from information_schema.key_column_usage, specifically referencing referenced_table_schema",
    "Root Cause Analysis": "The bug is caused by an incorrect retrieval of the referenced_table_schema from the information_schema, which should reflect the actual schema of the referenced table but incorrectly returns the current schema instead."
}