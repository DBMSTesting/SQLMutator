{
    "pattern": "CREATE TABLE `A` ( `col_int` int(11) <dml_values_parameter>, `col_int_key` int(11) <dml_values_parameter>, <constraint_type_parameter> (`pk`) ); INSERT INTO `A` <dml_values_parameter>; CREATE TABLE `DD` ( `pk` int(11) <dml_values_parameter> AUTO_INCREMENT, `col_int` int(11) <dml_values_parameter>, <constraint_type_parameter> (`pk`), KEY `col_int_key` (`col_int_key`) ); INSERT INTO `DD` <dml_values_parameter>; SELECT /*+ignore_index(table2,col_varchar_10_utf8,col_int_key)*/ table2 . `col_int_key` AS field1 FROM DD AS table1 <join_operator_replace> A AS table2 ON table1 . `col_int` <comparison_operator_replace> table2 . `col_int_key` WHERE ( table2 . `col_int` <is_operator_replace> NULL OR table1 . `col_int` <comparison_operator_replace> 8 ) GROUP BY field1 HAVING field1 <comparison_operator_replace> 4;",
    "applied_rules": [
        "<dml_values_parameter>",
        "<constraint_type_parameter>",
        "<join_operator_replace>",
        "<comparison_operator_replace>",
        "<is_operator_replace>"
    ],
    "Affected Elements": "HAVING clause",
    "Root Cause Analysis": "The issue arises due to incorrect handling of the HAVING clause when indexes are involved, leading to unexpected results."
}