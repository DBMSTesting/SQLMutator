{
    "pattern": "SET @@tidb_isolation_read_engines=<dml_values_parameter>; SET @@tidb_allow_mpp=<dml_values_parameter>; SELECT (table1.col_char_64, table1.col_char_64_not_null) <in_operator_parameter> (SELECT SUBQUERY1_t1.col_char_64_not_null AS SUBQUERY1_field1, COUNT(SUBQUERY1_t1.col_varchar_64_not_null) AS SUBQUERY1_field2 FROM A AS SUBQUERY1_t1 <join_operator_replace> (M AS SUBQUERY1_t2 <join_operator_replace> DD AS SUBQUERY1_t3 ON (SUBQUERY1_t3.col_decimal_30_10_key = SUBQUERY1_t2.col_decimal_40)) ON (SUBQUERY1_t3.col_char_64_not_null = SUBQUERY1_t2.col_varchar_key) GROUP BY SUBQUERY1_field1) AS field1, (table1.col_decimal_40_key, table1.col_bigint_not_null) <not_in_operator_parameter> (SELECT 3, 2 UNION SELECT 9, 2) AS field2, (4, 8) <in_operator_parameter> (SELECT SUBQUERY3_t1.col_tinyint_not_null AS SUBQUERY3_field1, SUBQUERY3_t1.col_tinyint_not_null AS SUBQUERY3_field2 FROM L AS SUBQUERY3_t1 <join_operator_replace> (L AS SUBQUERY3_t2 <join_operator_replace> CC AS SUBQUERY3_t3 ON (SUBQUERY3_t3.col_decimal_key = SUBQUERY3_t2.col_int_key)) ON (SUBQUERY3_t3.col_tinyint_not_null = SUBQUERY3_t2.pk) GROUP BY SUBQUERY3_field1, SUBQUERY3_field2) AS field3, table1.col_bigint_not_null = SOME (SELECT 0 UNION SELECT 2) AS field4 FROM (SELECT SUBQUERY5_t1.* FROM X AS SUBQUERY5_t1 <join_operator_replace> (T AS SUBQUERY5_t2 <join_operator_replace> DD AS SUBQUERY5_t3 ON (SUBQUERY5_t3.col_varchar_64 = SUBQUERY5_t2.col_varchar_key)) ON (SUBQUERY5_t3.col_varchar_64 = SUBQUERY5_t2.col_varchar_key) WHERE (SUBQUERY5_t2.col_int_key >= SUBQUERY5_t2.col_decimal_key AND SUBQUERY5_t3.col_char_64_not_null <> SUBQUERY5_t2.col_varchar_64_not_null)) AS table1 <join_operator_replace> O AS table2 ON (table2.col_decimal_40_not_null_key = table1.col_int_key) WHERE table2.col_decimal_30_10_not_null = SOME (SELECT 8 FROM DUAL) OR table2.col_tinyint_not_null <in_operator_parameter> (SELECT 0 FROM DUAL) GROUP BY field1, field2, field3, field4;",
    "applied_rules": [
        "<dml_values_parameter>",
        "<in_operator_parameter>",
        "<not_in_operator_parameter>",
        "<join_operator_replace>",
        "<comparison_operator_replace>"
    ],
    "Affected Elements": "IN, NOT IN, SOME, GROUP BY",
    "Root Cause Analysis": "The panic due to 'index out of range' likely stems from a mismanagement of internal buffers or limits when processing large datasets or complex queries involving multiple subqueries."
}