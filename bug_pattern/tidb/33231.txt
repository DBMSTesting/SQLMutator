{
    "pattern": "SET @@session.tidb_partition_prune_mode = <string_parameter>; DROP TABLE IF EXISTS <object_dependency_replace>; CREATE TABLE <object_dependency_replace> (c_int INT, c_str VARCHAR(40), <constraint_type_parameter>, <key_parameter>) PARTITION BY HASH (c_int) PARTITIONS <numeric_parameter>; CREATE TABLE <object_dependency_replace> LIKE <object_dependency_replace>; INSERT INTO <object_dependency_replace> VALUES(<numeric_parameter>, <string_parameter>); INSERT INTO <object_dependency_replace> VALUES(<numeric_parameter>, <string_parameter>); INSERT INTO <object_dependency_replace> VALUES(<numeric_parameter>, <string_parameter>); INSERT INTO <object_dependency_replace> VALUES(<numeric_parameter>, <string_parameter>); INSERT INTO <object_dependency_replace> VALUES(<numeric_parameter>, <string_parameter>); SELECT <select_parameter> FROM <object_dependency_replace>, <object_dependency_replace> WHERE <where_parameter> AND <where_parameter> AND <comparison_operator_replace> (<numeric_parameter>, <numeric_parameter>, <numeric_parameter>);",
    "applied_rules": [
        "<string_parameter>",
        "<object_dependency_replace>",
        "<constraint_type_parameter>",
        "<key_parameter>",
        "<numeric_parameter>",
        "<select_parameter>",
        "<where_parameter>",
        "<comparison_operator_replace>"
    ],
    "Affected Elements": "SELECT statement, INNER JOIN, WHERE clause, partition pruning",
    "Root Cause Analysis": "The root cause of the bug appears to be an incorrect implementation of the index join, leading to duplicate results when the partition prune mode is set to dynamic."
}