{
    "pattern": "SELECT <select_parameter> FROM t; DROP TABLE IF EXISTS t; CREATE TABLE t (pk BIGINT <constraint_type_parameter>, val INT <constraint_enforce_replace>); INSERT INTO t <dml_values_parameter>; BACKUP TABLE t TO 'local:///tmp/tidb_54426_full_backup'; ADMIN CHECK TABLE t; SELECT <select_parameter> FROM t; CREATE INDEX <object_dependency_replace> ON t (val); UPDATE t SET val = <numeric_function_parameter> - val; BACKUP TABLE t TO 'local:///tmp/tidb_54426_incr_backup' <dml_condition_replace>; ADMIN CHECK TABLE t; SELECT <select_parameter> FROM t USE INDEX (<join_operator_replace>); RESTORE SCHEMA <object_dependency_replace> FROM 'local:///tmp/tidb_54426_full_backup'; ADMIN CHECK TABLE t; SELECT <select_parameter> FROM t; RESTORE SCHEMA <object_dependency_replace> FROM 'local:///tmp/tidb_54426_incr_backup'; ADMIN CHECK TABLE t; SELECT <select_parameter> FROM t USE INDEX (<join_operator_replace>);",
    "applied_rules": [
        "<select_parameter>",
        "<constraint_type_parameter>",
        "<constraint_enforce_replace>",
        "<dml_values_parameter>",
        "<object_dependency_replace>",
        "<numeric_function_parameter>",
        "<dml_condition_replace>",
        "<join_operator_replace>"
    ],
    "Affected Elements": "CREATE INDEX, UPDATE, RESTORE SCHEMA",
    "Root Cause Analysis": "Incremental restore does not correctly handle the index, leading to data inconsistency between the table and its index."
}