{
    "pattern": "USE <database_parameter>; DROP DATABASE IF EXISTS <database_parameter>; CREATE DATABASE <database_parameter>; USE <database_parameter>; CREATE TABLE <table_name_parameter>(<column_name_parameter> FLOAT <constraint_enforce_replace> DEFAULT <dml_values_parameter> UNIQUE , PRIMARY KEY(<column_name_parameter>)); CREATE TABLE <table_name_parameter> LIKE <table_name_parameter>; INSERT IGNORE INTO <table_name_parameter>(<column_name_parameter>) VALUES (<dml_values_parameter>); INSERT IGNORE INTO <table_name_parameter> VALUES (<dml_values_parameter>) ON DUPLICATE KEY UPDATE <column_name_parameter>=<dml_values_parameter>; REPLACE INTO <table_name_parameter> VALUES (<dml_values_parameter>); INSERT INTO <table_name_parameter> VALUES (<dml_values_parameter>) ON DUPLICATE KEY UPDATE <column_name_parameter>=<table_name_parameter>.<column_name_parameter>; INSERT IGNORE INTO <table_name_parameter> VALUES (<dml_values_parameter>), (<dml_values_parameter>); CREATE UNIQUE INDEX <index_name_parameter> ON <table_name_parameter>(<column_name_parameter>); REPLACE INTO <table_name_parameter>(<column_name_parameter>) VALUES (<dml_values_parameter>); ALTER TABLE <table_name_parameter> ORDER BY <column_name_parameter>; INSERT INTO <table_name_parameter>(<column_name_parameter>) VALUES (<dml_values_parameter>); TRUNCATE <table_name_parameter>; ADMIN CHECKSUM TABLE <table_name_parameter>; REPLACE INTO <table_name_parameter> VALUES (<dml_values_parameter>); REPLACE INTO <table_name_parameter> VALUES (<dml_values_parameter>), (<dml_values_parameter>), (<dml_values_parameter>); ALTER TABLE <table_name_parameter> CHANGE <column_name_parameter> <column_name_parameter> FLOAT NOT NULL; INSERT IGNORE INTO <table_name_parameter> VALUES (<dml_values_parameter>); REPLACE INTO <table_name_parameter>(<column_name_parameter>) VALUES (<dml_values_parameter>), (<dml_values_parameter>); INSERT IGNORE INTO <table_name_parameter>(<column_name_parameter>) VALUES (<dml_values_parameter>); REPLACE INTO <table_name_parameter> VALUES (<dml_values_parameter>); REPLACE INTO <table_name_parameter> VALUES (<dml_values_parameter>), (<dml_values_parameter>), (<dml_values_parameter>); ANALYZE TABLE <table_name_parameter>; INSERT IGNORE INTO <table_name_parameter> VALUES (<dml_values_parameter>), (<dml_values_parameter>), (<dml_values_parameter>); INSERT INTO <table_name_parameter> VALUES (<dml_values_parameter>); REPLACE INTO <table_name_parameter>(<column_name_parameter>) VALUES (<dml_values_parameter>); REPLACE INTO <table_name_parameter> VALUES (<dml_values_parameter>); REPLACE INTO <table_name_parameter> VALUES (<dml_values_parameter>), (<dml_values_parameter>); REPLACE INTO <table_name_parameter>(<column_name_parameter>) VALUES (<dml_values_parameter>); INSERT IGNORE INTO <table_name_parameter> VALUES (<dml_values_parameter>); REPLACE INTO <table_name_parameter> VALUES (<dml_values_parameter>), (<dml_values_parameter>), (<dml_values_parameter>); SET @@sql_mode=<sql_mode_parameter>; ANALYZE TABLE <table_name_parameter>; ANALYZE TABLE <table_name_parameter>; EXPLAIN SELECT <table_name_parameter>.<column_name_parameter>, <table_name_parameter>.<column_name_parameter> FROM <table_name_parameter> <join_operator_replace> <table_name_parameter> ON CAST(<numeric_value_parameter> AS DECIMAL) WHERE ((((((<table_name_parameter>.<column_name_parameter>)REGEXP(<table_name_parameter>.<column_name_parameter>)))NOT REGEXP(<boolean_parameter>)))^((((CASE <table_name_parameter>.<column_name_parameter> WHEN <table_name_parameter>.<column_name_parameter> THEN <table_name_parameter>.<column_name_parameter> WHEN <table_name_parameter>.<column_name_parameter> THEN <table_name_parameter>.<column_name_parameter> ELSE NULL END ))REGEXP((('0')<<(<table_name_parameter>.<column_name_parameter>)))))) GROUP BY <table_name_parameter>.<column_name_parameter>, <table_name_parameter>.<column_name_parameter>; EXPLAIN SELECT <table_name_parameter>.<column_name_parameter>, <table_name_parameter>.<column_name_parameter> FROM <table_name_parameter> <join_operator_replace> <table_name_parameter> ON CAST(<numeric_value_parameter> AS DECIMAL) WHERE ((((((<table_name_parameter>.<column_name_parameter>)REGEXP(<table_name_parameter>.<column_name_parameter>)))NOT REGEXP(<boolean_parameter>)))^((((CASE <table_name_parameter>.<column_name_parameter> WHEN <table_name_parameter>.<column_name_parameter> THEN <table_name_parameter>.<column_name_parameter> WHEN <table_name_parameter>.<column_name_parameter> THEN <table_name_parameter>.<column_name_parameter> ELSE NULL END ))REGEXP((('0')<<(<table_name_parameter>.<column_name_parameter>)))))) GROUP BY <table_name_parameter>.<column_name_parameter>, <table_name_parameter>.<column_name_parameter>;",
    "applied_rules": [
        "<database_parameter>",
        "<table_name_parameter>",
        "<column_name_parameter>",
        "<constraint_enforce_replace>",
        "<dml_values_parameter>",
        "<index_name_parameter>",
        "<numeric_value_parameter>",
        "<boolean_parameter>",
        "<sql_mode_parameter>",
        "<join_operator_replace>"
    ],
    "Affected Elements": "RIGHT JOIN, INNER JOIN, REGEXP, GROUP BY",
    "Root Cause Analysis": "The discrepancy in estimated rows between INNER JOIN and RIGHT JOIN may stem from the handling of NULL values or the specific implementation of the join logic in TiDB."
}