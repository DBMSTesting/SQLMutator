{
    "pattern": "SELECT <select_parameter> FROM ( SELECT crd.id, crd.module_id, crd.rel_namespace, crd.owned_by, crd.created_by, crd.updated_by, crd.deleted_by, crd.created_at, crd.updated_at, crd.deleted_at, ROW_NUMBER() OVER (PARTITION BY id) AS pp_rn FROM compose_record AS crd <join_operator_replace> compose_record_value AS rv_Status ON (rv_Status.record_id = crd.id AND rv_Status.name = 'Status' AND rv_Status.deleted_at IS NULL) WHERE crd.module_id = <where_parameter> AND crd.rel_namespace = <where_parameter> AND crd.deleted_at IS NULL AND (rv_Status.value = 'New' <logical_operator_replace> rv_Status.value = 'Assigned') AND ((crd.created_at IS NULL AND TRUE) <logical_operator_replace> (crd.created_at < CAST(<dml_values_parameter> AS DATETIME)) <logical_operator_replace> ((crd.created_at IS NULL AND FALSE) <logical_operator_replace> crd.created_at = CAST(<dml_values_parameter> AS DATETIME)) <logical_operator_replace> ((crd.id IS NULL AND TRUE) <logical_operator_replace> (crd.id < <where_parameter>))) ) ORDER BY created_at DESC, id DESC LIMIT <dml_values_parameter> ) AS base WHERE pp_rn = <where_parameter>;",
    "applied_rules": [
        "<select_parameter>",
        "<where_parameter>",
        "<join_operator_replace>",
        "<logical_operator_replace>",
        "<dml_values_parameter>"
    ],
    "Affected Elements": "ROW_NUMBER(), LEFT JOIN, WHERE clause conditions",
    "Root Cause Analysis": "The execution plan is not optimal due to complex conditions in the WHERE clause and the use of ROW_NUMBER(), leading to increased latency."
}