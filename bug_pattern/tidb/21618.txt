{
    "pattern": "CREATE TABLE t (c_int INT, d_int INT, <constraint_type_parameter> (c_int), <constraint_type_parameter>(d_int)) <object_dependency_replace>; INSERT INTO t <dml_values_parameter>; (session 1) BEGIN <transaction_type_parameter>; SELECT * FROM t WHERE d_int <in_operator_parameter> (SELECT d_int FROM t WHERE c_int <comparison_operator_parameter> 1) FOR UPDATE; (session 2) BEGIN <transaction_type_parameter>; SELECT * FROM t WHERE d_int <comparison_operator_parameter> 2 FOR UPDATE;",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<object_dependency_replace>",
        "<dml_values_parameter>",
        "<transaction_type_parameter>",
        "<in_operator_parameter>",
        "<comparison_operator_parameter>"
    ],
    "Affected Elements": "select ... for update; pessimistic locking; subquery in where clause",
    "Root Cause Analysis": "Pessimistic locks are not being respected across partitions in a subquery scenario, leading to a failure in blocking sessions that should be waiting for locks."
}