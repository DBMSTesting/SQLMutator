{
    "pattern": "CREATE DATABASE IF NOT EXISTS <database_parameter>; USE <database_parameter>; CREATE TABLE <table_parameter> ( <column_parameter> SMALLINT(6) DEFAULT <default_value_parameter>, <column_parameter> TIMESTAMP DEFAULT <default_value_parameter>, <column_parameter> TINYTEXT DEFAULT NULL, <column_parameter> MEDIUMINT(9) NOT NULL DEFAULT <default_value_parameter>, <column_parameter> BIGINT(20) DEFAULT <default_value_parameter>, PRIMARY KEY (<column_parameter>), KEY <key_parameter> (<column_parameter>) ) ENGINE=<engine_parameter> DEFAULT CHARSET=<charset_parameter> COLLATE=<collate_parameter>; CREATE TABLE <table_parameter> ( <column_parameter> BIGINT(20) DEFAULT <default_value_parameter>, <column_parameter> BIGINT(20) NOT NULL DEFAULT <default_value_parameter>, <column_parameter> TEXT DEFAULT NULL, PRIMARY KEY (<column_parameter>), KEY <key_parameter> (<column_parameter>), UNIQUE KEY <key_parameter> (<column_parameter>), KEY <key_parameter> (<column_parameter>), UNIQUE KEY <key_parameter> (<column_parameter>), KEY <key_parameter> (<column_parameter>) ) ENGINE=<engine_parameter> DEFAULT CHARSET=<charset_parameter> COLLATE=<collate_parameter>; CREATE TABLE <table_parameter> ( <column_parameter> INT(11) DEFAULT <default_value_parameter>, <column_parameter> SET(<set_values_parameter>) NOT NULL DEFAULT <default_value_parameter>, <column_parameter> FLOAT NOT NULL DEFAULT <default_value_parameter>, <column_parameter> SMALLINT(6) DEFAULT <default_value_parameter>, <column_parameter> BIGINT(20) DEFAULT <default_value_parameter>, PRIMARY KEY (<column_parameter>,<column_parameter>) ) ENGINE=<engine_parameter> DEFAULT CHARSET=<charset_parameter> COLLATE=<collate_parameter>; SELECT FORMAT(<table_parameter>.<column_parameter>, <number_parameter>) AS r0, <table_parameter>.<column_parameter> AS r1, <table_parameter>.<column_parameter> AS r2 FROM <table_parameter>, <table_parameter> WHERE <table_parameter>.<column_parameter> IN (SELECT <column_parameter> FROM <table_parameter> WHERE NOT(<table_parameter>.<column_parameter> IN (SELECT <column_parameter> FROM <table_parameter> WHERE NOT(<is_null_function_parameter>(<table_parameter>.<column_parameter>)) OR <table_parameter>.<column_parameter> IN (SELECT <column_parameter> FROM <table_parameter> WHERE <table_parameter>.<column_parameter> IN (SELECT <column_parameter> FROM <table_parameter> WHERE NOT(<table_parameter>.<column_parameter> IN (<value_parameter>))) AND <table_parameter>.<column_parameter> IN (<value_parameter>))) OR <table_parameter>.<column_parameter> BETWEEN <value_parameter> AND <value_parameter>) OR NOT(<table_parameter>.<column_parameter> != <date_parameter>) FOR UPDATE;",
    "applied_rules": [
        "<database_parameter>",
        "<table_parameter>",
        "<column_parameter>",
        "<default_value_parameter>",
        "<key_parameter>",
        "<engine_parameter>",
        "<charset_parameter>",
        "<collate_parameter>",
        "<set_values_parameter>",
        "<number_parameter>",
        "<is_null_function_parameter>",
        "<value_parameter>",
        "<date_parameter>"
    ],
    "Affected Elements": "SELECT, WHERE, IN, NOT, ISNULL, BETWEEN",
    "Root Cause Analysis": "查询中可能存在空结果集，导致在访问结果时出现索引越界错误。"
}