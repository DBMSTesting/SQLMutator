{
    "pattern": "CREATE TABLE tp (id INT <constraint_type_parameter>) PARTITION BY RANGE (id) (PARTITION p0 VALUES LESS THAN (<dml_values_parameter>)); CREATE TABLE tn (id INT <constraint_type_parameter>); INSERT INTO tp <dml_values_parameter>; INSERT INTO tn <dml_values_parameter>; SELECT <select_parameter> FROM tp, tn WHERE tp.id <comparison_operator_replace> tn.id AND tn.id = <dml_condition_replace> FOR UPDATE;",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<dml_values_parameter>",
        "<select_parameter>",
        "<comparison_operator_replace>",
        "<dml_condition_replace>"
    ],
    "Affected Elements": "SELECT statement with JOIN on partitioned table and normal table",
    "Root Cause Analysis": "The bug is likely due to a handling issue in the query execution engine when joining a partitioned table with a non-partitioned table, leading to a nil pointer dereference."
}