{
    "pattern": "SET SESSION <session_parameter> = <session_value>; DROP TABLE IF EXISTS <table_name>; CREATE TABLE <table_name> (id INT, c INT, d INT) PARTITION BY RANGE (c) (PARTITION <partition_name> VALUES LESS THAN (<partition_value_1>), PARTITION <partition_name> VALUES LESS THAN (<partition_value_2>), PARTITION <partition_name> VALUES LESS THAN (<partition_value_3>)); ALTER TABLE <table_name> ADD UNIQUE <index_name>(id); ALTER TABLE <table_name> ADD UNIQUE <index_name>(c); INSERT INTO <table_name> VALUES <dml_values_parameter>; SELECT /*+ USE_INDEX_MERGE(<table_name>)*/ <select_parameter> FROM <table_name> WHERE <where_parameter>;",
    "applied_rules": [
        "<session_parameter>",
        "<session_value>",
        "<table_name>",
        "<partition_name>",
        "<partition_value_1>",
        "<partition_value_2>",
        "<partition_value_3>",
        "<index_name>",
        "<dml_values_parameter>",
        "<select_parameter>",
        "<where_parameter>"
    ],
    "Affected Elements": "SET SESSION, DROP TABLE, CREATE TABLE, ALTER TABLE, INSERT INTO, SELECT",
    "Root Cause Analysis": "The bug appears to be related to the incorrect handling of index merging when executing the SELECT statement with multiple conditions."
}