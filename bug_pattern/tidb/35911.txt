{
    "pattern": "CREATE TABLE t1(<dml_values_parameter>); CREATE TABLE t2(<dml_values_parameter>, <object_dependency_replace>); INSERT INTO t1 <dml_values_parameter>; INSERT INTO t2 <dml_values_parameter>; SET @@tidb_executor_concurrency = <set_parameter>; SET @@tidb_enable_parallel_apply = <set_parameter>; EXPLAIN ANALYZE SELECT <select_parameter> FROM t1 WHERE <where_parameter> EXISTS (SELECT tt1.* FROM (SELECT <select_parameter> FROM t2 WHERE <comparison_operator_parameter> = t1.b) AS tt1 <join_operator_replace> (SELECT <select_parameter> FROM t2 WHERE <comparison_operator_parameter> = t1.b) AS tt2 ON tt1.b <comparison_operator_parameter> tt2.b); SET @@tidb_enable_parallel_apply = <set_parameter>; EXPLAIN ANALYZE SELECT <select_parameter> FROM t1 WHERE <where_parameter> EXISTS (SELECT tt1.* FROM (SELECT <select_parameter> FROM t2 WHERE <comparison_operator_parameter> = t1.b) AS tt1 <join_operator_replace> (SELECT <select_parameter> FROM t2 WHERE <comparison_operator_parameter> = t1.b) AS tt2 ON tt1.b <comparison_operator_parameter> tt2.b);",
    "applied_rules": [
        "<dml_values_parameter>",
        "<object_dependency_replace>",
        "<set_parameter>",
        "<select_parameter>",
        "<where_parameter>",
        "<comparison_operator_parameter>",
        "<join_operator_replace>"
    ],
    "Affected Elements": "set, explain analyze, join, exists",
    "Root Cause Analysis": "The issue arises from incorrect handling of concurrency in the execution plan when using `apply` operators, leading to erroneous runtime statistics."
}