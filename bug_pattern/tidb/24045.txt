{
    "pattern": "USE <use_parameter>; DROP TABLE IF EXISTS <table_parameter>; CREATE TABLE <table_parameter>(id INT <constraint_type_parameter>, `name` VARCHAR(128) <constraint_type_parameter>, age INTEGER <constraint_type_parameter>, sex TINYINT <constraint_type_parameter>, PRIMARY KEY (id)); DROP TABLE IF EXISTS <table_parameter>; CREATE TABLE <table_parameter>(id INT <constraint_type_parameter>, student_id INT <constraint_type_parameter>, course_id INT <constraint_type_parameter>, score INT <constraint_type_parameter>, PRIMARY KEY (id)); INSERT INTO <table_parameter> (`name`, `age`, `sex`) VALUES <dml_values_parameter>; INSERT INTO <table_parameter> (`student_id`, `course_id`, `score`) VALUES <dml_values_parameter>; SELECT `a`.`id`, `a`.`name`, AVG(`b`.`score`) AS avg_failed_score FROM <table_parameter> `a` <join_operator_replace> <table_parameter> `b` ON `a`.`id` = `b`.`student_id` WHERE `b`.`score` < <comparison_operator_replace> 60 GROUP BY `a`.`id` HAVING COUNT(DISTINCT `b`.`course_id`) >= <comparison_operator_replace> 2;",
    "applied_rules": [
        "<use_parameter>",
        "<table_parameter>",
        "<constraint_type_parameter>",
        "<dml_values_parameter>",
        "<join_operator_replace>",
        "<comparison_operator_replace>"
    ],
    "Affected Elements": "avg, having, join, group by",
    "Root Cause Analysis": "The query causes a runtime error due to an index being accessed out of range, likely related to how the aggregation and groupings are being processed."
}