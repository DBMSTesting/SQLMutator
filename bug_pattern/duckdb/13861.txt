{
    "pattern": "CREATE TABLE tbl2 (id1 BIGINT <constraint_type_parameter>, somelist BIGINT[]); INSERT INTO tbl2 <dml_values_parameter> SELECT i, <dml_values_parameter> FROM generate_series(1, 10000000) s(i); EXPLAIN SELECT id1, UNNEST(somelist) AS element FROM tbl2 WHERE id1 <comparison_operator_parameter> <where_parameter>; EXPLAIN SELECT id1, element FROM ( SELECT id1, UNNEST(somelist) AS element FROM tbl2 ) tmp WHERE id1 <comparison_operator_parameter> <where_parameter>; EXPLAIN WITH tmp AS ( SELECT id1, generate_subscripts(somelist, 1) AS index, UNNEST(somelist) AS element FROM tbl2 ) SELECT id1, index, element FROM tmp WHERE id1 <comparison_operator_parameter> <where_parameter>; ",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<dml_values_parameter>",
        "<comparison_operator_parameter>",
        "<where_parameter>"
    ],
    "Affected Elements": "UNNEST, subquery, CTE, WHERE clause",
    "Root Cause Analysis": "The filter is not being pushed down to the source table scan when using UNNEST in a subquery or CTE, indicating a potential issue with query optimization in DuckDB."
}