{
    "pattern": "CREATE OR REPLACE FUNCTION list_update(<dml_values_parameter>) AS (<dml_values_parameter>); CREATE OR REPLACE FUNCTION set_union(<dml_values_parameter>) AS (<dml_values_parameter>); CREATE OR REPLACE FUNCTION merge(<dml_values_parameter>) AS (CASE <case_parameter> WHEN <dml_values_parameter> THEN <dml_values_parameter> ELSE <dml_values_parameter> END); CREATE OR REPLACE FUNCTION merge_i(<dml_values_parameter>) AS TABLE (<with_parameter>); WITH RECURSIVE <with_parameter> AS (<select_parameter> AS <select_parameter>, <dml_values_parameter> UNION ALL SELECT <dml_values_parameter>, <dml_values_parameter> FROM <with_parameter> WHERE <where_parameter>) SELECT <select_parameter> FROM <with_parameter>;",
    "applied_rules": [
        "<dml_values_parameter>",
        "<case_parameter>",
        "<with_parameter>",
        "<select_parameter>",
        "<where_parameter>"
    ],
    "Affected Elements": "with recursive, CTE name scoping",
    "Root Cause Analysis": "The issue arises from the improper scoping of CTE names within nested function definitions, causing conflicts and unexpected results."
}