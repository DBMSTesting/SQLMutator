{
    "pattern": "CREATE OR REPLACE TABLE patients AS SELECT <dml_values_parameter> FROM <range_parameter> patients(id); CREATE OR REPLACE TABLE claims AS SELECT <dml_values_parameter> FROM <range_parameter>; EXPLAIN ANALYZE SELECT patients.id, COUNT(*) FROM patients <join_operator_replace> claims ON patients.id = claims.id AND <comparison_operator_replace> <date_diff_parameter> BETWEEN <number_parameter> AND <number_parameter> GROUP BY patients.id; EXPLAIN ANALYZE WITH cte AS (SELECT claims.id FROM patients <join_operator_replace> claims ON patients.id = claims.id AND <comparison_operator_replace> <date_diff_parameter> BETWEEN <number_parameter> AND <number_parameter>) SELECT patients.id, COUNT(*) FROM patients <join_operator_replace> cte ON patients.id = cte.id GROUP BY patients.id;",
    "applied_rules": [
        "<dml_values_parameter>",
        "<range_parameter>",
        "<join_operator_replace>",
        "<comparison_operator_replace>",
        "<date_diff_parameter>",
        "<number_parameter>"
    ],
    "Affected Elements": "LEFT JOIN, CTE, DATEDIFF, COUNT",
    "Root Cause Analysis": "Dynamic filter pushdowns are not being applied optimally in the LEFT JOIN operation, leading to significant performance degradation compared to pre-filtering with a CTE."
}