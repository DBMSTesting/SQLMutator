{
    "pattern": "CREATE OR REPLACE TABLE big_table AS SELECT i.range AS col1, CAST(random() * 1000000 AS <numeric_function_parameter>) AS col2 FROM range(1_000_000) i; CREATE OR REPLACE TABLE single_col_table AS SELECT i.range AS col1 FROM range(500_000) i; COPY big_table TO '<dml_values_parameter>' (<dml_values_parameter> '<dml_values_parameter>'); COPY single_col_table TO '<dml_values_parameter>' (<dml_values_parameter> '<dml_values_parameter>'); SELECT * FROM big_table.parquet c <join_operator_replace> single_col_table.parquet hd ON hd.col1=c.col1 AND (<comparison_operator_replace>); SELECT * FROM big_table.parquet c <join_operator_replace> single_col_table.parquet hd ON hd.col1=c.col1 AND (<comparison_operator_replace>);",
    "applied_rules": [
        "<numeric_function_parameter>",
        "<dml_values_parameter>",
        "<join_operator_replace>",
        "<comparison_operator_replace>"
    ],
    "Affected Elements": "JOIN condition, FALSE literal",
    "Root Cause Analysis": "The query optimizer fails to apply predicate pushdown when a literal 'FALSE' is used, leading to performance issues."
}