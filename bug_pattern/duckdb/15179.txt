{
    "pattern": "CREATE TABLE temp_embedded (parent_class varchar(64) <constraint_enforce_replace>, parent_id varchar(64) <constraint_enforce_replace>, parent_version varchar(64) <constraint_enforce_replace>, class varchar(64) <constraint_enforce_replace>, id varchar(64) <constraint_enforce_replace>, version varchar(64) <constraint_enforce_replace>, ordr integer, path TEXT); CREATE TABLE IF NOT EXISTS embedded (parent_class varchar(64) <constraint_enforce_replace>, parent_id varchar(64) <constraint_enforce_replace>, parent_version varchar(64) <constraint_enforce_replace>, class varchar(64) <constraint_enforce_replace>, id varchar(64) <constraint_enforce_replace>, version varchar(64) <constraint_enforce_replace>, ordr integer, path TEXT <constraint_enforce_replace>, <constraint_type_parameter> (parent_class, parent_id, parent_version, class, id, version, ordr)); CREATE TABLE IF NOT EXISTS referencing (parent_class varchar(64) <constraint_enforce_replace>, parent_id varchar(64) <constraint_enforce_replace>, parent_version varchar(64) <constraint_enforce_replace>, class varchar(64) <constraint_enforce_replace>, ref varchar(64) <constraint_enforce_replace>, version varchar(64) <constraint_enforce_replace>, ordr integer, <constraint_type_parameter> (parent_class, parent_id, parent_version, class, ref, version, ordr)); INSERT OR REPLACE INTO embedded SELECT DISTINCT * FROM temp_embedded WHERE path <is_operator_replace> <null_parameter>; INSERT OR REPLACE INTO referencing SELECT DISTINCT parent_class, parent_id, parent_version, class, id, version, ordr FROM temp_embedded WHERE path <is_operator_replace> <null_parameter>; DROP TABLE temp_embedded;",
    "applied_rules": [
        "<constraint_enforce_replace>",
        "<constraint_type_parameter>",
        "<is_operator_replace>",
        "<null_parameter>"
    ],
    "Affected Elements": "DROP TABLE, INSERT OR REPLACE",
    "Root Cause Analysis": "The error occurs because the DROP TABLE statement is executed, which removes the temp_embedded table before subsequent INSERT OR REPLACE statements can reference it, leading to a Catalog Error indicating that the table does not exist."
}