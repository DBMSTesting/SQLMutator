{
    "pattern": "CREATE TABLE t1(c0 VARCHAR <constraint_type_parameter> DEFAULT(<numeric_function_parameter>)); CREATE TABLE t2(c0 VARCHAR, <constraint_type_parameter>(c0)); INSERT INTO t1(c0) VALUES (<default_parameter>); INSERT INTO t2(c0) VALUES (<dml_values_parameter>), (<dml_values_parameter>), (<dml_values_parameter>); SELECT t1.c0,t1.rowid,t2.c0 FROM t1 <join_operator_replace> t2 ON t1.c0 <comparison_operator_replace> t2.c0; SELECT t1.c0,t1.rowid,t2.c0 FROM t1 <join_operator_replace> t2 ON t1.c0 <comparison_operator_replace> t2.c0; SELECT t1.c0,t1.rowid,t2.c0 FROM t1 <join_operator_replace> t2 ON t1.c0 <comparison_operator_replace> t2.c0; INSERT INTO t1(c0) VALUES (<default_parameter>); INSERT INTO t2(c0) VALUES (<dml_values_parameter>); SELECT t1.c0,t1.rowid,t2.c0 FROM t1 <join_operator_replace> t2 ON t1.c0 <comparison_operator_replace> t2.c0; SELECT t1.c0,t1.rowid,t2.c0 FROM t1 <join_operator_replace> t2 ON t1.c0 <comparison_operator_replace> t2.c0; SELECT t1.c0,t1.rowid,t2.c0 FROM t1 <join_operator_replace> t2 ON t1.c0 <comparison_operator_replace> t2.c0;",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<numeric_function_parameter>",
        "<default_parameter>",
        "<dml_values_parameter>",
        "<join_operator_replace>",
        "<comparison_operator_replace>"
    ],
    "Affected Elements": "JOIN, LEFT JOIN, RIGHT JOIN, FULL JOIN, ON clause",
    "Root Cause Analysis": "The JOIN conditions used (t1.c0 >= t2.c0) lead to unexpected results due to the nature of how string and numeric comparisons are handled in DuckDB, especially with the default value and various inserted data types."
}