{
    "pattern": "CREATE TABLE foo (id INT <constraint_type_parameter>, bar TEXT); INSERT INTO foo <dml_values_parameter>; INSERT INTO foo <dml_values_parameter> RETURNING *; INSERT INTO foo <dml_values_parameter> ON CONFLICT (<dml_condition_replace>) DO UPDATE SET bar = excluded.bar WHERE excluded.bar <comparison_operator_replace> 'zoom' RETURNING *; INSERT INTO foo <dml_values_parameter> ON CONFLICT (<dml_condition_replace>) DO UPDATE SET bar = excluded.bar WHERE id <comparison_operator_replace> 1 RETURNING *; SELECT <select_parameter> FROM foo;",
    "applied_rules": [
        "<constraint_type_parameter>",
        "<dml_values_parameter>",
        "<dml_condition_replace>",
        "<comparison_operator_replace>",
        "<select_parameter>"
    ],
    "Affected Elements": "RETURNING clause, ON CONFLICT clause, WHERE clause",
    "Root Cause Analysis": "The RETURNING clause is returning rows even when the update condition is not met, which contradicts the expected behavior that it should only return modified rows."
}